Blogue do Caloni (Rascunhos) (Wanderley Caloni)
- Highlight Loc. 12  | Added on Monday, 3 April 23 00:40:17 GMT-03:00

existe a visão clara de que existe 
==========
Blogue do Caloni (Rascunhos) (Wanderley Caloni)
- Highlight Loc. 14  | Added on Monday, 3 April 23 00:40:58 GMT-03:00

become free of societal rewards 
==========
Blogue do Caloni (Rascunhos) (Wanderley Caloni)
- Highlight Loc. 16-17  | Added on Monday, 3 April 23 00:42:05 GMT-03:00

learns to set goals and to recognize and gauge feedback 
==========
Blogue do Caloni (Rascunhos) (Wanderley Caloni)
- Highlight Loc. 23-24  | Added on Monday, 3 April 23 00:44:00 GMT-03:00

center my attention increasingly upon external objects: 
==========
Blogue do Caloni (Rascunhos) (Wanderley Caloni)
- Highlight Loc. 25  | Added on Monday, 3 April 23 00:44:14 GMT-03:00

learning to control the body and its senses. 
==========
Blogue do Caloni (Rascunhos) (Wanderley Caloni)
- Highlight Loc. 25-26  | Added on Monday, 3 April 23 00:45:02 GMT-03:00

set an overall goal, and as many subgoals 
==========
Blogue do Caloni (Rascunhos) (Wanderley Caloni)
- Highlight Loc. 26  | Added on Monday, 3 April 23 00:45:09 GMT-03:00

find ways of measuring progress 
==========
Blogue do Caloni (Rascunhos) (Wanderley Caloni)
- Highlight Loc. 26-27  | Added on Monday, 3 April 23 00:45:27 GMT-03:00

keep concentrating on what one is doing, 
==========
Blogue do Caloni (Rascunhos) (Wanderley Caloni)
- Highlight Loc. 27  | Added on Monday, 3 April 23 00:45:42 GMT-03:00

keep making finer and finer distinctions in the challenges involved in the activity; 
==========
Blogue do Caloni (Rascunhos) (Wanderley Caloni)
- Highlight Loc. 27-28  | Added on Monday, 3 April 23 00:45:56 GMT-03:00

develop the skills necessary to interact with the opportunities available; 
==========
Blogue do Caloni (Rascunhos) (Wanderley Caloni)
- Highlight Loc. 28  | Added on Monday, 3 April 23 00:46:04 GMT-03:00

keep raising the stakes 
==========
Blogue do Caloni (Rascunhos) (Wanderley Caloni)
- Highlight Loc. 30  | Added on Monday, 3 April 23 00:46:48 GMT-03:00

taking control of the direction of learning from the very first steps 
==========
Blogue do Caloni (Rascunhos) (Wanderley Caloni)
- Highlight Loc. 35-36  | Added on Monday, 3 April 23 00:47:40 GMT-03:00

when external input is lacking, attention begins to wander, and thoughts become chaotic 
==========
Blogue do Caloni (Rascunhos) (Wanderley Caloni)
- Highlight Loc. 44  | Added on Monday, 3 April 23 00:49:18 GMT-03:00

adjust personal goals when starting a relationship, 
==========
CodeMachine - Article - X64 Deep Dive (CodeMachine Inc.)
- Highlight Loc. 424  | Added on Tuesday, 4 April 23 06:26:25 GMT-03:00

Determine if the parameters are loaded into the registers from memory. 
==========
CodeMachine - Article - X64 Deep Dive (CodeMachine Inc.)
- Highlight Loc. 425-26  | Added on Tuesday, 4 April 23 06:26:39 GMT-03:00

Determine if the parameters are loaded from non-volatile registers and if those registers are saved by the callee. 
==========
CodeMachine - Article - X64 Deep Dive (CodeMachine Inc.)
- Highlight Loc. 427  | Added on Tuesday, 4 April 23 06:26:50 GMT-03:00

Determine if the parameters are saved from the registers into memory. 
==========
CodeMachine - Article - X64 Deep Dive (CodeMachine Inc.)
- Highlight Loc. 428  | Added on Tuesday, 4 April 23 06:27:02 GMT-03:00

Determine if the parameters are saved into non-volatile registers and if those registers are saved by the callee. 
==========
CodeMachine - Article - X64 Deep Dive (CodeMachine Inc.)
- Highlight Loc. 430-31  | Added on Tuesday, 4 April 23 06:28:30 GMT-03:00

Each one of the techniques requires disassembling the caller and the callee functions involved in the parameter passing. 
==========
CodeMachine - Article - X64 Deep Dive (CodeMachine Inc.)
- Highlight Loc. 484-85  | Added on Tuesday, 4 April 23 06:49:54 GMT-03:00

The debugger's ".frame /r" command displays the values of non-volatile registers when a particular function was executing. 
==========
CodeMachine - Article - X64 Deep Dive (CodeMachine Inc.)
- Highlight Loc. 507  | Added on Tuesday, 4 April 23 06:55:17 GMT-03:00

it is important to always verify parameter register overwrites 
==========
CodeMachine - Article - X64 Deep Dive (CodeMachine Inc.)
- Highlight Loc. 535-36  | Added on Tuesday, 4 April 23 07:08:38 GMT-03:00

It is important to examine the instructions up to the call to the next function i.e. CreateFileW() to ascertain that these non-volatile registers are not being overwritten. 
==========
CRACKING the · CODING INTERVIEW ( PDFDrive ) (Unknown)
- Highlight Loc. 1313-18  | Added on Tuesday, 4 April 23 07:33:35 GMT-03:00

Which one is faster?The first one does one for loop and the other one does two for loops. But then, the first solution has two lines of code per for loop rather than one. If you're going to count the number of instructions, then you'd have to go to the assembly level and take into account that multiplication requires more instructions than addition, how the compiler would optimize something, and all sorts of other details. This would be horrendously complicated, so don't even start going down this road. Big O allows us to express how the runtime scales. We just need to accept that it doesn't mean that O(N) is always better than O(N2).
==========
CRACKING the · CODING INTERVIEW ( PDFDrive ) (Unknown)
- Highlight Loc. 1323-25  | Added on Tuesday, 4 April 23 07:34:43 GMT-03:00

We already said that we drop constants. Therefore, 0( N2 + N2) would be O ( N2 ). If we don't care about that latter N2 term, why would we care about N? We don't. You should drop the non-dominant terms.
==========
CRACKING the · CODING INTERVIEW ( PDFDrive ) (Unknown)
- Highlight Loc. 1344-45  | Added on Tuesday, 4 April 23 07:37:51 GMT-03:00

If your algorithm is in the form "do this, then, when you're all done, do that"then you add the runtimes. If your algorithm is in the form "do this for each time you do that"then you multiply the runtimes.
==========
CRACKING the · CODING INTERVIEW ( PDFDrive ) (Unknown)
- Highlight Loc. 1385-86  | Added on Tuesday, 4 April 23 07:44:11 GMT-03:00

This is a good takeaway for you to have. When you see a problem where the number of elements in the problem space gets halved each time, that will likely be a 0( log N) runtime.
==========
CRACKING the · CODING INTERVIEW ( PDFDrive ) (Unknown)
- Highlight Loc. 1397-98  | Added on Tuesday, 4 April 23 07:45:28 GMT-03:00

Rather than making assumptions, let's derive the runtime by walking through the code.
==========
