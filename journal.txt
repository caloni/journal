= 2003-10-20
:date: 2003-10-20

Liberar nova versão do HDCript que verifica, através da nova interface do SMMC, se o usuário atualmente em sessão é administrador do SCUA. O Serginho deu a idéia de, caso algum erro ocorra devido ao usuário não possuir direitos de administrador na máquina trocar a mensagem de erro para algo mais descritivo: Inserir na mensagem com o ID ERROR_COMMUNICATION_HDCRIPT_COMPONENT ("Erro ao se comunicar com o dispositivo de criptografia.") uma "dica" que faça o usuário verificar se ele é administrador local da máquina. 11:03 Revi minhas pendências e, na ausência do Silverado, decidi mexer na folhinha do Kaue (1582) que voltou sexta, dado a necessidade disso funcionar. A folhinha diz respeito ao backup do MBR nos setores iniciais do disco pelo HDCript. Espero que minha próxima seja a da cópia dos arquivos de backup da proteção de boot em modo automático. 16:21 Corrigi a folhinha do Kaue (se tratava da LIB do ScuaHdsk desatualizada) e a liberei novamente. Agora estou mexendo no MS Project para ordenar as minhas tarefas corretamente. 16:42 O Kaue testou a folhinha e descobriu que no modo automático o backup do setor modificado (para o setor 10) não é efetuado. Estou mexendo nisso agora. 18:25 Terminados os testes. De fato o backup não era feito no modo automático, nem no setor 11, quanto menos no 10. Após muitos testes, fechei a folhinha e o Serginho liberou para o instalador.

= 2003-10-21
:date: 2003-10-21

Cá Estou :). Vou ler e-mails e organizar meu Pert. 16:19 Estou mexendo na implementação de copiar os arquivos de backup da proteção de boot no modo automático. Encontrei alguns problemas com relação ao funcionamento completo da execução de parâmetros. Me parece que as funções estão sabendo demais. Talvez precise reorganizar o modo de execução de parâmtetros antes de atacar o problema do backup. Muito confuso :P. 21:01 Alô, alô. Estou tentando registrar o Vss ConneXis mas tá difícil!! Ehehehehehe ele não se baseia em verificar a senha no momento do registro, apenas quando inicia o ambiente. Estou utilizando grampo nas funções de registro, porque já encontrei onde ele guarda a chave, em texto puro: HKEY_CURRENT_USER\Software\EPocalipse\VssConneXion\3.0\C++Builder. 21:25 POis é, consegui grampear a chamada de função que lê do registro. Já é um avanço :). Agora vou para casa.

= 2003-10-22
:date: 2003-10-22

É isso aí. Vamos começar o dia :D. 10:41 Acabei de testar com o taz a desinstalação no Windows XP. Parece que não estava colocando o path correto no valor UserInit da chave WinLogon, mas isso já fora consertado. 14:54 Mexendo no backup da proteção automática. Muitas mudanças no tratamento dos parâmetros, e igualmente na hora de salvar no registro. Uma abordagem mais inteligente é o que está sendo feito agora. 16:53 O impasse agora é bolar uma maneira de acumular os parâmetros recebidos para que estes possam ser regravados no registro, de maneira que as ações sejam executadas passo a passo.

= 2003-10-23
:date: 2003-10-23

O dia começa. Agora com vários desktops :D. 11:44 Na longa reunião de hoje foi discutido o problema do DirLock não criptografar certas partes do arquivo. E eu acabei de criar uma classe que separa toda a funcionalidade do modo silencioso do HDCript, usado nas operações automáticas dele. Só assim pra implementar a cópia dos arquivos junto com os parâmetros já existentes :). 18:29 A tarde fiquei mexendo com o Silverado os problemas da LIB do ID TAG. E parei de implementar a minha classe de modo silencioso :(.

= 2003-10-24
:date: 2003-10-24

Fiquei hoje até agora terminando a classe de modo silencioso do HDCript. Ainda faltam alguns detalhes, a seguir: - Decidir como será a chamada da rotina de cópia no NT, uma vez que é o SMMC responsável por reiniciar ou não o sistema; - Implementar a rotina que ficará tentando copiar os arquivos de backup da proteção de boot. - Implementar a função que irá concatenar o parâmetro na string de linha de comando. - Implementar as rotinas que irão colocar todos os parâmetros restantes, exceto o já executado.

= 2003-10-28
:date: 2003-10-28

Testando a implementação da cópia dos arquivos de backup da proteção de boot no modo automático do HDCript. 10:20 Problemas pendentes: ver se a função que verifica se usuário tem direitos continua funcionando (parece que não), e logar no Windows sem as chaves do RunServices parece travar algo durante o processo. 10:45 Quando tenta fazer a cópia, o HDCript trava o processo de logon. Após a cópia, ou seja, a saída do aplicativo, o sistema volta a responder e loga normalmente. 12:07 Tirando todos os módulos do projeto, um a um, para verificar qual que está travando o logon. Testei com uma aplicação console simples e funcionou. O HDCript sem nenhum unit também funciona. 20:21 Descobri que, travando a thread principal do aplicativo, a manipulação de eventos da VCL trava também, o que impede que o logon seja completado. Para consertar esse problema, criei uma classe derivada de TThread que utiliza a minha classe de manipulação de parâmetros na linha de comando, a CSilentMode. O problema foi resolvido. Achei o bug com relação à listagem de partições no NT quando o administrador do SCUA não é admin local. Enquanto nenhum administrador local logar na máquina, de fato as partições não são listadas no HDCript. Depois do primeiro admin efetuar logon, as partições começam a ser listadas para todos os usuários, admins ou não. Temos um grande problema na implementação do backup em modo silencioso na plataforma NT. Como o processo é iniciado pelo serviço SMMC, ele roda na conta do sistema. Além de não conseguir copiar os arquivos antes do logon, não conseguirá depois, pois estará rodando em System Account. É necessário pensar numa solução para ambos os problemas, lembrando ainda que a linha de execução do HDCript não pode ser colocada na chave Run, pois um usuário não teria direito de acessar a pasta onde está localizado o aplicativo.

= 2003-10-29
:date: 2003-10-29

Descobri que existem alguns erros novos que devem ser tratados (se não eram antigamente), como por exemplo a falta da partição que estamos tentando criptografar ou decriptografar. 03:33 Outro bug: a rotina que copia os arquivos de backup não está removendo a linha de execução do registro. 04:14 Esse bug ocorria porque o construtor da classe da janela principal e a thread de manipulação de parâmetros independente de janela conflitavam entre si. 04:48 Bug estabilizado. Agora parece que só ocorre sem estar sendo depurado e iniciando a execução antes do logon. Verificando isso... 04:57 Problema resolvido. Se tratava de um path mal digitado >.<... 05:06 Colocado o tratamento de erro nas operações de criptografia automática (simplesmente saindo do aplicativo, não permitindo interação com usuário). 05:22 Incluí no histórico da folhinha a conclusão de hoje e criei uma folhinha para implementar a nova opção de cópia de arquivo de backup no instalador (setup.ini). 13:36 Fomos dormir às 06:00 e acabamos de chegar, o Rafael e eu. Devemos ainda ficar um pouco por aqui por causa das pendências do DirLock. Ainda existe um bug no HDCript (nova cópia dos arquivos de backup) que pretendo ver. 18:15 Fechei a implementação do HDCript (por enquanto rs). A versão Release funciona perfeitamente. O detalhe é que ela demora 5 minutos para fazer a segunda tentativa de cópia :|. Embora isso esteja especificado, demora a se aperceber que não é um bug.

= 2003-10-30
:date: 2003-10-30

Depois de terminada a implementação para 9x, a cópia dos arquivos de backup da proteção de boot em modo automático possui alguns problemas: - O aplicativo não pode continuar após o logon, pois é seu retorno que avisa ao serviço SMMC para continuar o logon. Se ele não retorna, não existe logon. - Se pudesse continuar de alguma forma após o logon, O HDCript estaria sendo executado na conta do sistema, o que impede acesso à rede. Conclusão: ele NUNCA conseguirá copiar os arquivos para um path da rede. - Ainda assim, se pudesse ser executado após o logon, na conta do usuário, ele NÃO seria executado, pois o local onde o executável HDCript.exe está é protegido pelo SCUA. 16:20 Uma possibilidade: fazer com que o SMMC execute, após o logon, rodar o HDCript na conta do usuário que efetuou o logon.

= 2003-10-31
:date: 2003-10-31

Terminei um conjunto bem básico de rotinas de log. 14:44 Terminei a implementação da criação de arquivo intermediário nas cópias do CopyFile para Scua 9x e agora estou testando :).

= 2003-11-03
:date: 2003-11-03

Cheguei :D. 09:57 Chegou-se a um consenso sobre o problema da cópia dos arquivos de backup no modo automático do HDCript durante a reunião. Será criado um novo parâmetro que indicará ao SMMC para executar o HDCript após o logon na conta do usuário em sessão. Também estou traduzindo o artigo de Simonyi sobre Notação Húngara para entender melhor, e estamos vendo quando iremos ver a estréia de Matrix 3 :D. 14:49 Testes feitos da implementação do novo parâmetro/diretiva (o /L) que permite avisar ao SMMC quando é que deve ser executado o HDCript. No momento, um pequeno erro ao tentar chamar o método Hide de alguma classe do aplicativo. corrigido o erro trocando a chamada de Close por Application::Terminate. 17:52 Testes já feitos no Windows 2000. Agora falta implementar no SMMC para testar mais concretamente. Documentação e folhinha já atualizadas. O Diogo e o Kaue me mostraram um erro de importação na máquina do Diogo. Tudo indica que o bug tem relação com aquele lance do ID do usuário ser encontrado, apesar dele já ter sido apagado do banco de dados. Fiquei de ver isso amanhã. 17:53 É isso aí :P.

= 2003-11-04
:date: 2003-11-04

Opa, cheguei :). 11:55 Ajudei o Taz a implementar a leitura do novo parâmetro da proteção de boot automática no instalador e agora vou fechar as folhinhas referenciando a folhinha dele. 15:03 Próximo bug é o do componente SMgrCtrl, que o suporte não consegue redirecionar a porta que ele utiliza através das configurações de componente COM. Vou mexer nisso agora :D. 16:42 Criei um novo componente a partir do VC 7 e fiz um aplicativo de teste que se conecta com o SMgrCtrl e esse componente de teste. O de teste funciona perfeitamente (como os outros componentes do Scua). Apenas o SMgrCtrl parece não funcionar. 18:02 Meus testes foram interrompidos com o surgimento de um vírus na rede. Agora tenho que pegar cada VM compactada, atualizá-la e verificar se elas estão infectadas.

= 2003-11-05
:date: 2003-11-05

Cheguei no trampo, e vai ser um dos dias mais longos do ano. Hoje estréia Matrix 3 :). 13:18 Atualmente estou mexendo no bug do SMgrCtrl (não consegue redirecionar porta utilizada na comunicação DCOM) e no CopyFile (não está mais copiando no reboot).

= 2003-11-07
:date: 2003-11-07

É isso aí. Caí da cama :P Ontem mexi com o CopyFile (não estava copiando arquivos em uso) e quase ao mesmo tempo com o SMgrCtrl (o lance de definir uma porta para o DCOM). 11:15 Depois de passadas as classes, a definição específica de segurança para o componente não funciona mais, nem a definição de porta a ser utilizada para a comunicação DCOM. Agora vou começar tudo do zero, testando cada pequeno passo. Até encontrar o bug :). 16:01 Fiquei atualizando a VM 2000 pra poder testar com direito a reboot. Estou quase acabando :P.

= 2003-11-10
:date: 2003-11-10

Eita nóis. Vou pesquisar no google pq o maldito componente não utiliza os seus parâmetros específicos de segurança e conexão. 15:54 Descobri porque diabos as configurações de segurança não funcionavam. O novo Wizard do visual Studio deixa um item TODO em seu código para uma chamada a CoInitializeSecurity. Chamada que, se não feita, não permite acesso ao componente. Eis o pedaço de código necessário pra fazer as coisas funcionarem: media\2003-11-10-initialize-security.txt Agora voltamos à estaca zero. Que bom, hein :P. 17:32 A coisa mais besta no problema da conexão em porta específica. Simplesmente o nome do executável deve ser idêntico ao nome do serviço. Do contrário, nada funciona. Se existe algum motivo específico e documentado para isso ocorrer, desconheço. Enfim, o problem parece ser facilmente corrigido, sem alteração de uma linha de código. Pelo menos do componente :). Ops, é capaz que seja feito realmente alguma modificação no projeto. Trocar o nome do executável gerado ou o nome do serviço. Esse segundo ainda não faço idéia de como :P.

= 2003-11-11
:date: 2003-11-11

Cheguei já faz algum tempo :p. 09:50 Na reunião foi explicado o problema do SMgrctrl, mas ainda nada foi resolvido definitivamente. As opções básicas são renomear o serviço ou o executável. Enquanto isso, vou mexer no bug do Terminal Services, onde o Manager não funciona :). 12:39 Descoberto que, quando um processo é executado na conta de sistema em Terminal Service, sua interface aparece no desktop do servidor, e não no desktop do usuário em sessão que iniciou o processo. A solução para o SCUA Manager será criar um parâmetro para que este seja executado na conta de usuário (idéia do Zé). 14:42 Foi criado o parâmetro "/ts" (Terminal Service) para fazer o Manager rodar na conta do usuário. Esperando aprovação do gerente agora :P. Também foi decidido por ele que para o problema do SMgrCtrl o serviço é que irá mudar de nome, e não o executável. 18:08 O Silverado fez alterações na LIB do sensor do FingerTrue (o novo sensor japonês) e pediu para que eu compilasse todos os projeto. Deu um puta trampo e perdi um monte de tempo :).

= 2003-11-12
:date: 2003-11-12

Estou implementando a renomeação do serviço SMgrCtrl para MgrCtrl e testando na VM 2000. Não posso me esquecer de anotar na folhinha que o SCUA agora irá precisar da DLL de runtime do VC 7.1 (MSVCR71.DLL), do contrário o novo serviço não irá funcionar. Ops, a MSVCP71.DLL também é necessária :x. Liberada a folhinha e agora a missão de colocar o novo projeto no Source Safe. Zoou tudo, e agora tenho que portar novamente o código. Ainda bem que estou prático nisso :D. 12:32 Criado projeto e colocado sob Source Control. Também criado um projeto de teste do componente. 17:41 Estou montando uma nova VM, um Windows 2000 em português, já que a atualizada ficou gigante por causa do suporte a snapshot. Além do mais, fiz um programa de teste para o Zé que efetua logoff depois de um determinado período de tempo. 08:43 13/11/2003 Eu cheguei! 8).

= 2003-11-13
:date: 2003-11-13

Criei um novo 2000 VM (Português) sem snapshot, mas parece que o tamanho continuou o mesmo. Pelo menos agora em cima desse vou atualizar pelo Windows Update e rodar o Fixer do Blaster. Criei novamente uma 2000 mas agora com o disco definido como permanente. Ficou a mesma coisa, mas compactado até que ficou pequeno (cerca de 800 MB). Também já criei um 98 SE atualizado (sem snapshot) e estou colocando-o na rede. O próximo passo (o que estou fazendo agora) é um NT Workstation.

= 2003-11-14
:date: 2003-11-14

Cheguei agora. 11:29 Terminei uma tarefa do RegSetRight. O pessoal pediu pra ativar uma restrição que impede o usuário de efetuar logoff. Disso me valeu o conhecimento que a função RegCreateKey cria sub-chaves se estas não existirem, e abre em caso contrário. Muito útil saber isso :). Agora vou começar novamente a subir umas VMs. O esquema vai ser existirem duas versões pra download do servidor: uma totalmente crua, e uma totalmente atualizada. Daí quem precisar de uma versão enxuta ter, e muito mais facilmente (o tamanho é bem menor).

= 2003-11-19
:date: 2003-11-19

Estou começando agora a dividir a implementação do Magic Number para SCUA 2000. Já li o documento e parece que vai ser uma coisa bem legal :D. Hoje de manhã fiz a divisão dos passos necessárias para a implementação do Magic Number. Não ficou excessivamente grande, e acredito que um mês é um prazo razoável :).

= 2003-11-21
:date: 2003-11-21

Cheguei. Quer dizer, já tinha chegado, mas fiquei de papo com a mulher da limpeza :P. Hoje tenho que ler o documento do IT Manager modificado pelo Kabloc, e talvez já começar alguma coisa do Magic Number, pois já dividi os passos necessários para realizar essa implementação. O Silvestri disse que não será necessário nenhuma modificação no aplicativo, uma vez que a ordem é minimizar ao máximo. Então, só me resta cuidar da GINA, coisa que devo começar segunda-feira.

= 2003-11-24
:date: 2003-11-24

Depois da reunião, pretendo fazer aplicativos de teste do DirLock e ajudar um pouco o taz :P.

= 2003-11-28
:date: 2003-11-28

Acabei de chegar. Novas folhinhas do FingerTrue: - Instalação: espelhamento definido por preferência. - FingerAdmin: abas de configuração global. - FingerAdmin: melhorar filtro de usuários. - Todos: mudar significado dos ícones de status na captura de digitais. - FingerAdmin: bug ao mostrar janela de about. - Wizard: Habilitar cadastramento remoto de digitais por preferência. 14:08 Compilados todos os projetos do FingerTrue. Já avisei o taz que deve colocá-los no instalador, pois ele está testando o novo sensor (BioI).

= 2003-12-02
:date: 2003-12-02

Após trocar o sensor que utilizava pelo do Fábio, milagrosamente ele começou a funcionar. Agora, depois de testar algumas vezes no FingerAdmin o cadastro e reconhecimento das digitais, vou começar a implementação da mudança nos significados dos ícones de status que aparecem quando se cadastra uma digital (OK, Exclamação e Erro).

= 2003-12-03
:date: 2003-12-03

Cabei de chegar. Preciso ver o que ocorre com a versão Professional do Builder que não instala os controles de tradução de forms. Provavelmente só tem no Enterprise. Aguardo o Taz para comparar as versões. Se for isso, vou sofrer pra instalar a outra versão :P. Realmente o Prof. não tem essa opção. Vou ter que instalar a versão Enterprise. Do contrário, não conseguirei mais gerenciar os projetos de tradução dos aplicativos. Mexendo na mudança dos significados dos ícones.

= 2003-12-04
:date: 2003-12-04

Mexendo ainda no significado dos ícones no FingerAdmin. Provavelmente depois de terminado nele, bastará recompilar o FngrBP para que este já esteja atualizado também (os dois usam a mesma janela).

= 2003-12-05
:date: 2003-12-05

Olha só. Cheguei já :P. Estava mexendo na GINA do SCUA NT ontem (arrumando um lance de variável de ambiente) e hoje pretendo terminar. 17:59 Depois de implementado isso pela manhã, voltei para o FingerAdmin tratar da mudança dos significados dos ícones durante a captura de digitais. Ainda estou mexendo nisso.

= 2003-12-08
:date: 2003-12-08

Acabei de chegar. Nem sei o que fazer. Acho melhor tomar café :P. Parece que o sensor ID-TAG, em um determinado momento, pára de funcionar, como se estivesse com defeito. NO entanto, após o reinício da máquina, ele volta ao normal. Não é o sensor. É o FingerAdmin que tá maluco mesmo :P. 09:28 Terminadas as modificações para a tela de autenticação. Agora a tela de captura/cadastro de digitais. 15:29 Terminadas as modificações na janela de captura/cadastro também. Próxima pendência é permitir que a captura no Wizard possa ser cancelada. (Folhinha 1911). 18:10 Estava no Wizard quando fui interrompido pelo Silverado e o Fernando da Rainbow. Modificamos o FingerAdmin para retornar erros mais descritivos.

= 2003-12-09
:date: 2003-12-09

Cheguei às 08:30, mas estava cagando :). 17:59 Terminei a implementação de permitir que o usuário cancele a captura de digitais no Wizard, e agora, depois de uma reunião sobre o FingerTrue, ganhei 10 ou mais folhinhas de presente para terminar até a sexta-feira. 18:41 Começando a implementação da retiradas das configurações globais do Wizard. To aki. Com sono, mas tô :).

= 2003-12-10
:date: 2003-12-10

Finalmente terminei a folhinha dos novos erros para o Wizard. :D 18:36 Terminei implementação que define cadastro automático se tratar-se de instalação com banco de dados local. Agora mexerei com uma implementação 100% trivial. Mudar o significado dos ícones de captura no FngrBP :P. 19:09 Cabei :D. Aqui está a lista das folhinhas que agora restam até sexta-feira: - 1858: Fazer com que a animação verdinha apareça no Wizard também. - 1860: Forma de verificar a validade da impressão capturada antes de colocar a GINA. - 1885: Melhorar o design das configurações globais. - 1888: Configuração de bloqueio para ID-TAG. - 1921: Bug de exibição de imagem na primeira autenticação do Admin. Ainda não sei qual delas começarei agora. O pikachu logo chega :P. 19:46 Irra! A 1921 já era. Pode vir mais! Agora restam: - 1858: Fazer com que a animação verdinha apareça no Wizard também. - 1860: Forma de verificar a validade da impressão capturada antes de colocar a GINA. - 1885: Melhorar o design das configurações globais. - 1888: Configuração de bloqueio para ID-TAG. Vou pegar a 1888, já que os bugs acabaram-se.

= 2003-12-11
:date: 2003-12-11

É isso aí. Continuando o trabalho... 11:04 Boas idéias de design (by Kabloc): - Colocar atalhos Ctrl + Tab pra mudar entre Finger e Conf. Globais e Page Up/Page Down para trocar entre as abas da Conf. Global. 14:04 Terminei a implementação da nova configuração para o ID-TAG. E as folhinhas restantes são: - 1858: Fazer com que a animação verdinha apareça no Wizard também. - 1860: Forma de verificar a validade da impressão capturada antes de colocar a GINA. - 1885: Melhorar o design das configurações globais. E a próxima folhinha escolhida é... 1860! 15:25 Para essa implementação, o Wizard terá que descarregar suas configurações no banco de dados antes de autenticar o usuário. O detalhe é que, a partir desse momento, se ele for parado, não irá mais executar, uma vez que já existirá o FingerAdmin no BD com uma digital cadastrada. A solução pode ser verificar no início do Wizard. Pode ser que o FingerAdmin já exista e tenha uma digital, mas se for executado com o parâmetro /AUT e não existir autenticação ainda instalada (GINA/DLL de Logon), o Wizard deverá executar nova captura seguida de autenticação.

= 2003-12-12
:date: 2003-12-12

Cheguei. É isso aí. De volta ao trabalho :P. 17:06 Terminei a autenticação no Wizard. Realmente existem situações onde, apesar de cadastrado corretamente, a autenticação falha. 19:24 Fechamos a versão para testes na segunda. Terça-feira irá para o cliente :).

= 2003-12-16
:date: 2003-12-16

Coisas que fiz ONTEM: Ajudei o taz a começar a ver o lance do SafeLogon pra ShFingerTrue, mexi numa folhinha que havia esquecido (espelhamento por default quando for local) e também corrigi um bug no aplicativo do Sincronia (OverLogon). 08:45 Cheguei :P. Mas foi às 08 eheehehehehehe. 10:23 O bug do aplicativo do ShareControl NÃO havia sido corrigido. Na verdade, o bug ocorria por falta de direito do usuário de abrir a chave de instalação dos dispositivos. Por isso foi alterada a rotina para capturar a existência dos dispositivos no ar, e não no registro. Funcionou :). 14:07 Agora estou mexendo no bug do rename do ShareControl (apenas testando). Aguardando Fernando para depurar.

= 2003-12-17
:date: 2003-12-17

Cheguei. Cedo, não? Faltam dois dias para o último :D. Coisas a fazer: ver o SafeMode com o taz, depurar o bug do rename com o Fernando, provavelmente terminar/consertar as folhinhas do FingerTrue. 17:25 Tentativa de compilar o serviço SaveModeSrv do FingerTrue falhou, porque na transição do projeto de VC 7.0 -> VC 7.1, é necessária a criação de uma função chamada InitializeSecurity na classe principal. Achei isso no google.

= 2003-12-18
:date: 2003-12-18

O bug do FngrMirr de conflitar com os KeyNos do banco de dados local quando a instalação do FingerTrue é cliente ocorria porque a chamada ao ClObject::ConnectServer era feita para o banco de dados local (não era passado servidor e a variável bCache, por default, FALSE). Foi corrigido chamando-se essa função dentro da thread de sincronização dos usuários, chamando ClObject::DisconnectServer pouco antes do final desta. O bug de não possibilitar mais criação de usuários na plataforma 9x foi causada quando o Wizard foi modificado para definir espelhamento por padrão. Esqueci que na plataforma 9x isso não deve ser definido.

= 2003-12-19
:date: 2003-12-19

Bug no Admin: quando não existe o domínio atual no arquivo secserv.ini, o FingerAdmin não está utilizando o valor default. Passos para reproduzir o bug: 1. Instale o FingerTrue autenticado no domínio local da estação. 2. Escolha um servidor diferente do nome da estação. 3. Autentique-se no domínio da rede. 4. Abra o FingerAdmin. BUG: O nome que vemos no combo de servidor é o nome da estação, ao invés do nome do servidor digitado durante a instalação. Ou seja, o FingerAdmin não capturou o valor default. RESULTADO ESPERADO: Que, na seguinte situação do SecServ.ini: DOMINIO_LOCAL=\\Servidor Default=\\Servidor Ao autenticar-se no DOMINIO_DA_REDE, fosse selecionado o servidor \\Servidor, ao invés de \\Dominio_local.

= 2004-01-05
:date: 2004-01-05

Feliz ano novo!! Vendo bug de tela azul no Wizard do FingerTrue em Windows 98. Assim que é pressionado o botão "Autenticar" ou o sistema trava ou ocorre uma tela azul. O mesmo comportamento foi verificado no FingerAdmin durante a captura da digital para autenticação. Foi descoberto que a função que é chamada da DLL de captura da Proteq (ID-TAG) trava em alguma situação ainda não reconhecível. No entanto, sabe-se que quando trava, trava o sistema inteiro.

= 2004-01-06
:date: 2004-01-06

Ontem também vi um problema em um cliente do Rio que o Leandro estava. O Wizard aparentemente cadastrava normalmente o usuário FingerAdmin, mas não instalava a DLL de Logon! Terminada a implementação da luzinha verde e provado que o travamento do sistema está relacionado com o sensor ID-TAG.

= 2004-01-07
:date: 2004-01-07

Ontem fora feito um último teste em máquina real (a do Serginho). O mesmo problema ocorreu (travamento da máquina) com ambas as DL nova e velha).

= 2004-01-08
:date: 2004-01-08

Ontem o Fernando da Proteq veio aqui e fizemos diversos testes alterando a DLL do ID-TAG. No entanto, por mais que se mascarasse o erro, o sistema sofria algum efeito colateral, pois em algum momento ele travava (ontem especificamente houveram diversas ocasiões em que esse travamento ocorria quando era pressionada a tecla Alt, mesmo DEPOIS de ter fechado o aplicativo - tanto o de teste da DLL como o Wizard do FingerTrue). Também foi verificado que o Wizard não conseguia mais cadastrar além da primeira digital. Depurei a SFingerDll remotamente e descobri que, se é feita a chamada à DLL da Proteq indo passo a passo na depuração, são capturadas as amostras normalmente. Contudo, se roda-se direto essa parte do código, o mesmo problema da versão Release também ocorre, e apenas a primeira captura é efetuada com sucesso. Estranho. Após instalar o FingerTrue em uma VM 98 (Cliente, autenticação local) e antes de ser executado o Wizard (após o primeiro reboot) a DLL de Logon já apareceu! E isso com uma imagem saída da rede, zerada. Aliás, nessa versão zerada, testei a DLL da Proteq que havia na pasta E:\Temp da minha máquina com seu aplicativo de teste sem instalar o FingerTrue e esta funcionou. Porém, ao testar a instalação, vejo que continua travando. Agora pretendo testar com a DLL mais nova (da outra VM). Não travou. Agora o teste final é instalar o FingerTrue e testar com essa DLL. Engano quanto à instalação da DLL de Logon pelo instalador. O caso é que eu estava renomeando a máquina após instalar. Portanto, o instalador supunha que a autenticação fosse remota, e não local como eu havia imaginado. Com o último FingerTrue e a última DLL da Proteq o sistema continua congelando. Agora usarei o aplicativo de teste com o FingerTrue instalado. O aplicativo de teste também trava. Agora irei trocar o .sys do sistema pelo que existe na minha pasta temporária. Funcionou! Agora ambos, aplicativo de teste e Wizard, funcionam. A diferença é unicamente o .sys que está na minha máquina (10-11KB) em detrimento do arquivo utilizado pelo instalador (15KB). Agora travou, instalando o FingerTrue e, na hora de reconhecer o dispositivo, trocando exatamente esse arquivo. Agora testarei novamente como fiz, depois da instalação reinstalando o dispositivo trocando o .sys e o .inf. Apenas trocando o .inf, NÃO FUNCIONA. Agora trocarei os dois. Adivinha só? Travou! Com o mesmo .inf e o mesmo .sys que, trocando na mão, funciona. O taz disse que os caras já haviam testado o FingerTrue no Windows 98 antes das férias, com a mesma versão que hoje dá crash. Segundo ele, nada foi mudado. Instalando manualmente, o dispositivo parece ser instalado duas vezes. Antes e depois do próximo reboot. Agora tentei reinstalar o dispositivo com os mesmos arquivos. Mas não funcionou. Duocentésimo teste: instalar o FingerTrue, desinstalar o dispositivo e reinstalá-lo apenas trocando o .sys (mantendo o .inf original da instalação). Funcionou! Agora só falta descobrir a lógica disso ehehehehhehe. Pasmem. Instalando normalmente o FingerTrue e trocando o .sys funciona. Não é necessário reinstalar. MAS quando você copia o .sys ANTES da detecção do dispositivo não funciona. Apenas para ter certeza, vou testar novamente essa última condição. Aha!! Olha a bosta: o instalador volta a copiar o arquivo depois da instalação do dispositivo. Por isso não adianta nada sobrepor o arquivo durante a instalação. Liberada folhinha do bug de tela azul no 98 com id-tag com o .sys do 2000 que, segundo meus testes, funciona perfeitamente. Agora, voltando ao redesenho das telas de cadastro do usuário FingerAdmin e finalização do Wizard.

= 2004-01-09
:date: 2004-01-09

Alterada no Wizard a tela de configuração do FingerAdmin e a tela final para que expliquem a funcionalidade do usuário FingerAdmin e o orientem a criação de digitais para os verdadeiros usuários. Algumas mudanças deixaram o visual das telas mais agradável e fácil de entender, como a inclusão de um "pedaço" da lista de usuários do aplicativo de administração e o uso de negrito nos textos de avisos importantes (os que tem sinal de exclamação do lado). Agora partirei para a mudança no design dos filtros de exibição de usuários no FingerAdmin.

= 2004-01-12
:date: 2004-01-12

Sexta terminei a implementação dos filtros. Revendo prioridades agora para decidir o que vou fazer :).

= 2004-01-13
:date: 2004-01-13

Ontem comecei mexendo com ActiveX para o projeto da LIB de acesso ao FingerTrue. Já consegui colocar o form de autenticação para rodar no browser, embora tenha ficado tosco.

= 2004-01-14
:date: 2004-01-14

Ontem continuei mexendo com ActiveX. O form deixou de ser tosco, mas tive alguns problemas em transpor o código da janela de autenticação para o ActiveForm: - Alguns typedefs/declarações de um header da VCL conflitaram com um header do COM (IFactory, etc). Tive que comentar no header, depois de perder considerável tempo com ele. - A chamada a SetServer para a SFingerDLL trava o componente. Comentei essa parte também. Portanto, ainda faltam essas duas pendências e também ler o nome dos servidores do secserv.ini. Fora isso, a captura de digitais/autenticação funcionou! Só que no final do dia foi cogitada a possibilidade de não se usar o ActiveX que fiz, mas sim um componente COM que chamasse uma janela, para que a tela de autenticação não ficasse "grudada" em uma janela do browser, mas fosse uma janela à parte. Obs: Devido à urgência do pedido, dupliquei várias partes do código da janela do Admin nesse novo componente. Não iria perder tempo pensando em uma maneira modular de compartilhar esse código.

= 2004-01-15
:date: 2004-01-15

Ontem a tarefa foi fazer um componente COM que fosse instanciado no browser e abrisse uma janela. E foi feito :). O primeiro problema surgiu porque o objeto não conseguia ser instanciado. O segundo problema surgiu porque o componente já não conseguia mais ser registrado. Depois o Strauss sentou na minha mesa e nós dois fizemos testes com o VC e o Builder pra ver o que estava ocorrendo. Foi descoberto que não deve ser utilizado um COM Object para criação desse componente, mas um Automation Object, que vem com a interface Dispatch. Também foi revelado pelo Strauss que, para o objeto rodar sem warnings do browser, a classe do componente deve implementar a classe IObjectSafety. Felizmente o ATL já faz isso por nós :D. No final do dia então conseguimos instanciar e rodar um método de um objeto criado no Builder. Daí simplesmente criei uma janela e exibi-a nesse método, e funcionou! Pode ser criada modal e não-modal. Agora esse código deve ser portado para o já-criado-e-colocado-no-source-safe componente FngrAuth. Feito. Mas achei um bug de travar o Internet Explorer quando se utiliza a função de autenticação. Então, as pendências atuais para isso são: - BUG: O Internet Explorer trava se é utilizada a captura de digital. - IMPL: Ler lista de servidores do FingerTrue no arquivo secserv.ini. - BUG: Conflito de tipos e declarações em dois headers diferentes do Builder (utilcls.h e comdef.h). - BUG: A chamada a SetServer para a SFingerDLL trava o componente e o browser. Chamada a SetServer não trava mais como componente COM.

= 2004-01-16
:date: 2004-01-16

O problema que vi ontem e continuarei vendo hoje é esse: - BUG: O Internet Explorer trava se é utilizada a captura de digital. E agora tive a idéia de que o motivo disso pode ser isso: - BUG: A chamada a SetServer para a SFingerDLL trava o componente e o browser. E vou checar :). Não, não é :(. Fazendo teste comentando/descomentando código, achei um outro bug relacionado com não chamar o ClObject::DisconnectServer() depois de fazer autenticação. Apesar de ser outro bug, o motivo do ie ficar "pendurado" ainda está relacionado com a chamada a ClObject::ConnectServer().

= 2004-01-19
:date: 2004-01-19

Ainda pesquisando a respeito. A coisa tá feia :P. Observação interessante: depois de um certo tempo com o Internet Explorer aberto (após fechar a janela de autenticação, inclusive depois de utilizar captura de digital) as threads criadas pelo CTree são fechadas, e assim o aplicativo pode ser finalizado sem ficar pendurado. No entanto, se antes desse momento, for fechada a janela principal, as threads NÃO SÃO FINALIZADAS. Na reunião foi levantada a idéia do bug ser o mesmo que sofre a GINA do FingerTrue, que fica travada no shutdown da máquina. Isso leva a uma observação interessante: ambas as rotinas que utilizam CTree estão em DLLs, enquanto os aplicativos executáveis não costumam travar por conta do CTree. Teste feito com Admin e descoberto ponto de travamento: logo depois da chamada a FreeLibrary do módulo de autenticação. Os fatos (no aplicativo console de teste): - Antes de ConnectServer, existe apenas uma thread. - Logo após ConnectServer, mais três threads são criadas. - Após a conexão, a janela deve permanecer aberta. - Após duas dessas threads fecharem, pode-se fechar a janela. - Os recursos são liberados corretamente. Depois que UMA das DUAS thread criadas no CreateInstance do CTree sai E depois da thread criada na chamada da função Open dessa interface o aplicativo pode ser finalizado sem problemas.

= 2004-01-20
:date: 2004-01-20

Analisando PooledObject::DeferredRelease. Situação 1: Espero o tempo determinado na espera dos eventos da função. Após o timeout, libero a DLL. Após liberar a DLL, a função é executada até o final (detalhe: o handle da thread é fechado) e o aplicativo finaliza normalmente. Situação 2: Não espero coisa nenhuma e libero a DLL. A função acusa a sinalização do segundo evento (m_hRequestStop), e a função volta a "fluir" até o final (detalhe: o handle da thread NÃO é fechado). Resultado: o aplicativo NÃO é finalizado corretamente, ficando pendurado eternamente.

= 2004-01-21
:date: 2004-01-21

Um teste a ser feito: instanciar o componente na DLL, no entanto, sem a tranqueirada da tela de autenticação. Isso verificará se o problema está EXATAMENTE localizado na instanciação do componente. Independente de estar louco, agora quando NÃO é chamada a função de captura de digital. Mesmo conectando com o componente CTree, o aplicativo não trava. Depois de trocentos testes, confirmado: falta de CTreeFile::Terminate() na SFingerDLL.dll. Fiz novo tipo de controle para isso, e agora tudo está funcionando, MENOS meu aplicativo console de teste, quando eu chamo CoUninitialize() no final, apesar do próprio componente já chamar CTreeFile::Terminate() tanto para a DLL quanto para ele próprio. Tirando a chamada a CoUninitialize, o aplicativo também funciona. O Internet Explorer já funcionou.

= 2004-01-26
:date: 2004-01-26

Continuando o que fazia na sexta, que era passar a conectar no cache no componente de autenticação do FingerTrue. É necessário colocar essa operação na barra de status, já que pode demorar. Vai ter que implementar no esquema de timeout mínimo e máximo que existe no SMMC do Scua 2000 e na GINA do FingerTrue, que é o seguinte: No evento de logon: media\2004-01-26-fluxograma-evento-logon.txt (Reformular fluxograma acima).

= 2004-01-27
:date: 2004-01-27

Mexemos no bug do FingerTrue no cliente em que o Diogo estava que não conectava no servidor 9x nem a pau. Com isso perdi grande parte do dia e só no fim da tarde voltei ao código de logon em cache do FngrAuth.

= 2004-01-28
:date: 2004-01-28

Terminei o lance do cache, mas ficou demasiado lento em certas condições (quando o usuário ainda não existe no banco local, por exemplo). Para tanto, subi o fonte no Source Safe e estou mexendo em uma implementação que não deixará mais travada a janela de conexão.

= 2004-01-29
:date: 2004-01-29

Ao que parece, depois da implementação da thread de autenticação/sincronismo, e depois de vários testes sem sucesso, existe um (ou mais) bugs na versão que ainda não tinha threads. Mas essa nova versão faz coisa pior: trava de vez em quando. Ainda estou mexendo, apesar da implementação ter acabado.

= 2004-01-30
:date: 2004-01-30

Mais um bug de interação com o CTree. Dessa vez parece relacionado com chamadas a ClObject::ConnectServer e ClObject::DisconnectServer (ConnectServer em outra thread, pode ser uma dica). Se DisconnectServer não é chamado, não trava, e se ConnectServer é chamado mais de uma vez, trava igualmente porque a mesma rotina "travadora" é executada em ambas as condições.

= 2004-02-03
:date: 2004-02-03

Ontem restou o problema de não bater as amostras com as capturas cadastradas antes de ir para o cliente. Compilamos a versão antes do cache e tudo voltou a funcionar. Aqui. Lá, o mesmo erro ocorreu com o componente antigo. O componente também travou ao tentar integrá-lo com um aplicativo em Delphi.

= 2004-02-05
:date: 2004-02-05

Descrição rápida dos problemas enfrentados nos últimos dias: - Travamento da DLL da Proteq de vez em quando no componente; - Bug de não autenticar usuários, exceto FingerAdmin (erro no código).

= 2004-02-06
:date: 2004-02-06

Criação de funções de início/término nas bibliotecas do FingerTrue. Criação das folhinhas e descrição dos problemas enfrentados essa semana.

= 2004-02-09
:date: 2004-02-09

Bug atual: ClObject::DisconnectServer trava de vez em quando no componente do FingerTrue. Resolvido. Tudo estava relacionado com a maneira com que o COM é inicializado. Arrumada uma thread para que a janela fizesse suas traquinagens, tudo começou a funcionar. Compilados os módulos cujo responsável sou eu do FingerTrue com a nova LIB.

= 2004-02-10
:date: 2004-02-10

Problemas no cadastramento da primeira digital do FingerAdmin no Wizard. Erro na hora de apagar digital para recadastramento (não pode ser apagada a última digital do usuário reservado FingerAdmin - proteção da LIB). Ao passar pela segunda vez no avançar da captura o erro retornado por SaveInfo da ClObject é NOT_FOUND ao invés dos já verificados SUCCESS e DUPLICATED_INDEX, PORQUE o ObjectID da estrutura não era preenchido! Desabilitado último botão de voltar do Wizard pra impedir que zoe todo o barraco. Atualizei a tabela de prefixos do documento de padronização do Desenv e imprimi uma cópia para o mais novo recém-chegado integrante :D. Ae, corrigido bug do SCUA Manager que travava ao clicar em qualquer botão que abria janela de seleção de arquivos. Um exemplo da ingênua formatação: sprintf(szFilter, "%s\0%s\0%s\0", szStr1, szStr2, szStr3); Percebeu porque dava pau? >.<.

= 2004-02-11
:date: 2004-02-11

Hoje talvez mexamos no lance de macros no cadastro de aplicações do SCUA Manager, embora ainda eu não saiba porque, já que ele permite o cadastro de qualquer coisa como path. Talvez meu gerente diga aonde mexer (talvez algum comentário, daí nem precisa compilar). Não, devo testar a última versão do Finger pra ver se está tudo legal porque quinta terá visita ao Pão de Açúcar e eu tenho que ir como gente.

= 2004-02-12
:date: 2004-02-12

Hoje é dia de ir no cliente, mas antes, de manhã, testar a última versão do FingerTrue pra achar os bugs de última hora que irão foder a visita ao cliente :). (Muito embora isso seja normal pra uma empresa que lança uma versão nova no mesmo dia que testa no cliente :P).

= 2004-02-15
:date: 2004-02-15

Vendo problemas de proteção de boot e conexão com o banco de dados remota no FngrAuth para 98 (não funciona por haver conflito de keynos).

= 2004-02-16
:date: 2004-02-16

Hoje é dia de consertar HDCript/Hdsk pra funcionarem com mais de um HD. Analisarei o que os dois fazem juntos. Dado 1: a rotina ID_BACKUP_FIRST_SECTORS pede o número do disco em um de seus parâmetro, LOGO são lidos realmente os setores de cada HD. Dado 2: a rotina de escrita também se utiliza do parâmetro NumeroDoDisco. A única que parece carecer disso é a de proteção de boot. Dado 3: apesar de apenas passar dados válidos do vírus no "primeiro buffer" para a instalação, na hora de ler para gerar backup o vírus aparece em ambos os HDs, ou seja, o dispositivo se utilizou do primeiro buffer para instalar em todos os HDs. A rotina do dispositivo é capturar as MBRs e trocar o código pelo passado como parâmetro, tanto na instalação como na desinstalação, para cada partição nomeada (?¿). Existem verificações para evitar cagadas, mas fora isso, em síntese é o que ele faz. Ou seja, a LIB do Hdsk deve evitar o loop de 4 vezes para a desinstalação, se limitando à uma vez apenas.

= 2004-02-19
:date: 2004-02-19

Mexendo no dispositivo de criptografia. Fiz os novos métodos para instalar e desinstalar a proteção de boot. Contudo o device está apresentando problemas em uma chamada a ID_BACKUPFIRSTSECTORS. Existiam alguns bugs no HDCript, seja na nova implementação quanto na velha, onde não foi testada a proteção de boot com mais de um HD. Um bug gritante era que, se fosse desinstalado pelo arquivo de backup, a retirada da proteção do 2o. HD nunca funcionaria.

= 2004-02-20
:date: 2004-02-20

Recompilei o Manager com a LIB nova que implementou uma nova macro (que também foi recompilada), e testei os novos ScuaHdsk.sys e HDCript.exe. E lembrei também que esse bug deve existir com certeza no Scua9x, e o novo HDCript não vai funcionar com o dispositivo antigo.

= 2004-02-29
:date: 2004-02-29

Novo problema com HDCript: existem ocasiões que, com anti-vírus, a desinstalação não é feita, apesar de retornar sucesso para o dispositivo. Implementar verificação após a escrita da MBR original pelo HDCript e mensagem de aviso ao usuário para este desabilitar o anti-vírus caso falhe. Emulado problema de instalação da proteção de boot com DirLock no lab, com um XP (como na máquina do Serginho). Deu tela azul após fechar o HDCript (não mexer nisso agora). Leitura da diretiva de log parece não estar funcionando. Verificar isso quando for fazer os testes com a implementação citada anteriormente. REUNIÃO EXTRAORDINÁRIA FINGERTRUE (Tã tã tã tã tã...) Foram definidas algumas folhinhas para serem fechadas até semana que vem (de preferência quarta-feira). Eis a lista: 1993 - Tela azul no cadastro do Wizard (liberada) 2081 - Cache do componente de autenticação (2 dias) 2146 - Apagar digitais anteriores ao cadastro do Wizard (liberada) 2161 - Burla no sistema com utilização do FngrBP e FngrAdm (1 dia) 2165 - Digitais nunca batem no componente de autenticação (liberada) 2173 e 2174 - Mensagens não aparecem na barra de status do Manager e FngrBP 2175 - Botões somem e não aparece nenhuma mensagem de erro no componente (1 dia com 2173 e 2174) 2231 - Wizard não é deletado depois do cadastro (1 dia) Mas, antes de começar a mexer com alguma delas, testar minha última implementação do HDCript que já ficou pronta.

= 2004-03-01
:date: 2004-03-01

Já foi testado o HDCript e liberado para testes. Também foi criada folhinha com respeito ao bug com 3 HDs ou mais. Agora é a depuração dessa folhinha: 2081 - Cache do componente de autenticação (2 dias). O bug tinha a ver com o fato do nome do servidor começar com duas barras. A LIB estava concatenando direto no path do cache, ao invés de fazer verificação antes. Outro bug curioso foi o da barra de status no 98. Atualizando o Internet Explorer (no caso, para a versão 6) o bug sumiu :P.

= 2004-03-04
:date: 2004-03-04

Existia o bug no componente de não inicar processo após timeout mínimo (não era chamado ClObject::Connect antes de GetUserID). O Ctreent trava às vezes no cliente. (Muito esporádico).

= 2004-03-08
:date: 2004-03-08

Os bugs/problemas dessa semana (provavelmente não os únicos) são: - Desabilitar "Voltar" do Wizard (FingerTrue); - GPF no FingerAdmin durante instalação (Emulado para sempre em uma máquina no lab); - Testes com conexão Internet (problemas para criar a pasta do cache); - Componente (prioridade, embora todos os bugs exceto o citado terem sido corrigidos). Também preciso: - Liberar folhinha número 1819 (obs: a Intranet estava fodida semana passada); - Ver se folhinha para teste de 2HDs no 9x foi criada. GPF no FingerAdmin: tudo indica que a DLL de mensagens novamente ficou zoada. Por isso apaguei tudo e vamos ver no que dá :).

= 2004-03-09
:date: 2004-03-09

Ontem fiquei o dia inteiro mexendo no bug do GPF do FingerAdmin. Descobri que o projeto como estava gerava exceções a todo momento (só detectado pelo depurador). Tudo bem, criei um novo projeto a partir do existente e isso parou. Agora apenas o GPF ocorre (ao finalizar o aplicativo, depois do WinMain). Ah, o Voltar do Wizard continua desabilitado e eu não estou louco :). Trocados os bitmaps do FingerTrue para v. 4. Foi trocado no Admin e consertado "temporariamente" o GPF caso não seja possível encontrar o bug antes do fim do dia. (comentado o CoUnitialize()).

= 2004-03-10
:date: 2004-03-10

O bug de GPF do FingerAdmin estava relacionado com uma chamada a mais da função CTreeFile::Initialize(), o que impedia o CTree finalizar quando deveria (antes da chamada a CoUninitialize() ).

= 2004-03-13
:date: 2004-03-13

Cá estamos no sabadão para resolver os problemas do FingerTrue e entregar uma versão alfa-beta-ômega pro cliente segunda-feira :).

= 2004-03-14
:date: 2004-03-14

Fechamos uma versão nova do FingerTrue.

= 2004-03-15
:date: 2004-03-15

Fazendo folhinhas de pequenos bugs que ainda ficaram no produto.

= 2004-03-22
:date: 2004-03-22

Depois de todo o tormento da semana passada, quem sabe não teremos uma semana de trabalho normal, até sexta. Cabei as foínha. Agora aguardo o "mestre" me indicar o que fazer do HDCript.

= 2004-03-23
:date: 2004-03-23

Começam os testes da proteção de boot/criptografia. Na versão 7.13, está desinstalando dos dois HDs, mas continua a exibir aquele texto de SafetyDisk (não mais Debug).

= 2004-03-24
:date: 2004-03-24

O teste do dia anterior havia sido feito com a versão antiga do HDCript. Na versão mais nova tudo ocorre como planejado. Já no s_tools realmente as coisas não funcionam direito quando existem 2 HDs no sistema. Aparentemente quando é lido o backup do segundo HD, existe um desalinhamento de -1 byte.

= 2004-03-25
:date: 2004-03-25

Cheguei hoje, liguei a máquina, foi aparecer a parte gráfica e... tela azul. E assim ficou por boa parte do dia. Fiz de tudo que podia fazer: renomeei arquivos sys, reinstalei por cima. Daí o Serginho deu uma aula de como restaurar o sistema. Copiou os arquivos do registro da pasta repair em cima dos atuais, até que descobriu que a parte system que impedia o boot.

= 2004-03-29
:date: 2004-03-29

Bug de hoje: usuários locais não listam partição no HDCript. Eis a descrição. Usuários locais não listam partições no HDCript. 1. Efetue o primeiro logon da máquina como usuário local, mas administrador do SCUA. 2. Abra o HDCript. BUG: Observe que as partições não são listadas. RESULTADO ESPERADO: Listar as partições da máquina.

= 2004-04-01
:date: 2004-04-01

Expressões do dia: - or so: aproximately; thereabout; more or less; give or take. ex: two or so. - argue: dispute; claim; give reasons. arguing. - bodily function: an organic process that takes place in the body; "respiratory activity". - mean to: intend to; be destined to. - staring: act of gazing fixedly at someone or something. staring at: gazint at; watching constantly. - orange juice: juice extracted from squeezed oranges; (obs: suco). E a folhinha do momento é... Após criptografar uma partição de 15 gb, FAT no segundo HD, aparece uma mensagem de "E:\ não está acessivel. O arquivo ou pasta está corrompido e ilegível". As outras partições são acessadas normalmente.

= 2004-04-08
:date: 2004-04-08

Estou trabalhando nesse últimos dias nesse grande problema da criptografia em partições no segundo HD. O mais difícil no momento é encontrar a causa desse problema.

= 2004-04-12
:date: 2004-04-12

Achei o ponto onde os dados são criptografados.

= 2004-04-13
:date: 2004-04-13

Ontem descobri pelo menos um bug: no momento da busca pela partição que contém o setor a ser criptografado, não é levado em conta em qual disco procurar. Isso faz com que quse sempre sejam retornados os status para as partições do primeiro disco, mesmo que o setor pertença à alguma partição do segundo HD. Consertado bug (FINALMENTE). Agora, posso liberar a folhinha. Poderia, porque parece que existe um bug em outra modificação feita no dispositivo que tem que ser vista (problema de listar partições como usuário).

= 2004-04-14
:date: 2004-04-14

Olha, não sei qual a próxima pendência :P.

= 2004-04-16
:date: 2004-04-16

Ontem foi resolvido aquele problema de não listar a partição de boot. Na verdade este problema já havia sido corrigido em partes, quando foi feita aquela mudança da variável USHORT/SHORT, mas agora foi corrigida plenamente (faltava capturar quando a proteção de boot não estivesse instalada). Daí levantei as folhinhas restantes para o projeto 7.13, e são essas (por enquanto): 2384: SCUA desinstala proteção de boot feita pelo FingerTrue; 2400: <USERNAME> não é interpretado corretamente ao cadastrar rotas no SCUA Manager; 483: Atualizar regras globais após sua importação; 2202: Suporte a macros no Cadastro de Aplicações; 225: Bug que exibe um ícone de aplicação com nome vazio quando não existem aplicativos cadastrados.

= 2004-04-19
:date: 2004-04-19

Fechei as seguintes folhinhas na sexta: 2400, 2202, 225. E agora resta a 483 (ver tb a 2384). Consertado bug de tabela (a opção Objeto, Exportar dava erro de "Mar."). Ooops, peraí. Buffer temporário: Versão mais atual já está fazendo isso. Testar para verificar se não é alguma condição especial que faz com que as diretivas não sejam atualizadas.

= 2004-04-20
:date: 2004-04-20

Ontem fiquei mexendo na folhinha de verificação da partição de boot do ScuaHdsk.sys que o Kauê voltou porque não estava funcionando no Windows NT. De fato, o dispositivo nem subia, porque existiam funções que ele necessitava que não existiam nessa versão do Windows. Recompilei-o com a LIB do NT e os Includes do 2003, e a dependência sumiu. Mas continua não listando a partição de boot como deveria. Agora só depurando mesmo :).

= 2004-04-23
:date: 2004-04-23

Hoje de manhã resolvemos eu e o Fernando um pequeno bug na minha correção da listagem de partições de boot do ScuaHdsk (o laço que preenchia essa informação estava sendo executado de 1 a 8, quando deveria ser de 1 a 4). E agora tenho 3 folhinhas que voltaram. Uma já liberei. Restaram: 2386: Listar partições de boot no NT não funciona (mas na VM sim). 1872: Proteção de boot em dois sistemas operacionais de uma vez não funciona (tenho que ver).

= 2004-04-26
:date: 2004-04-26

Sexta testei a 2386 no lab e tudo OK. Daí tirei uns screenshots pro pessoal do suporte entender sobre o que a folhinha está falando, e retornei para testes. Agora preciso testar a 1872, ou seja, vou ter que montar um ambiente com dois sistemas operacionais. No momento baixando o w2k em uma máquina no lab.

= 2004-04-27
:date: 2004-04-27

Mais um problema resolvido. Dessa vez no ScuaBP.sys. Aquele lance do attachment falhar em um HD IDE por falta da antiga rotina que foi feita pra SCSI mas funciona mesmo é com IDE.

= 2004-04-30
:date: 2004-04-30

Resolvendo problemas (ontem e hoje) por meio de um Dump de memória do DirLock.

= 2004-05-04
:date: 2004-05-04

Ontem comecei a tocar o projeto Scua 9x ISAM.

= 2004-05-11
:date: 2004-05-11

Fizeram uma folhinha (2489) me pedindo pra tirar o módulo da ScuaWeb do Manager. Fiz conforme pedido. O referido módulo, no entanto, pode tornar-se ativo nessa versão se passado como parâmetro a string "/SCUAWEBRETURNS".

= 2004-05-26
:date: 2004-05-26

Atualmente estou mexendo em uma modificação do vírus de proteção de boot. Os primeiros 2 bytes de cada entrada de partição no MBR NÃO serão criptografados, uma vez que uma BIOS de alguns notebooks da Dixie Toga procuram pelo byte 0x80 em cada entrada e, caso não encontre, nem chega a transferir o controle para o vírus. Isso vai demandar mudanças no vírus, no scuahdsk e no hdcript.

= 2004-05-27
:date: 2004-05-27

As modificações da proteção de boot devem estar prontas para segunda/terça-feira, incluindo compatibilidade retroativa dos aplicativos.

= 2004-05-31
:date: 2004-05-31

Hoje começa a nova administração (Ferdinando). E eu tenho que acabar as modificações da proteção de boot até amanhã (pelo menos era o prazo). Implementado em: ScuaHdsk.sys, ScuaBP.sys (obs: nem sabia, mas ele decriptografa a tabela tb), HDCript.exe e S_Tools.exe. Sem contar nosso vírus, o s_ctrl.dat.

= 2004-06-01
:date: 2004-06-01

Terminadas as modificações para a nova proteção de boot. Agora os testes serão feitos, possivelmente alguns bugs encontrados. Ainda resta a implementação da instalação de partições NÃO-Microsoft, e devo fazer uma folhinha para isso.

= 2004-06-02
:date: 2004-06-02

Folhinha feita, e os testes já encontraram um bug no HDCript (bug que já existia na versão antiga). O caso era que não era retornado erro se não fosse encontrado o backup no primeiros setores do disco.

= 2004-06-04
:date: 2004-06-04

Novo bug no s_tools (já corrigido). Com a opção /REMOVE, em alguma condição a criptografia da tabela de partições era feita da maneira antiga. Imagino que a LIB estivesse desatualizada. Nova folhinha: 2536. Fazer as modificações da proteção de boot para o Scua 9x tb.

= 2004-06-08
:date: 2004-06-08

Dixie Toga: a nova Proteção de Boot funcionou no notebook onde ocorreu o problema. Já a versão Debug do VXD de boot do 9x que eu compilei em minha máquina não está subindo na minha VM de teste (a Release compilada aqui e as Debug e Release compiladas na máquina do Fernando sobem normalmente).

= 2004-06-09
:date: 2004-06-09

No problema da Proteção de Boot em Joinville, foram feitas inúmeras tentativas de boot com MBRs distintos. No entanto, faltou a seguinte condição: setor de boot do backup gerado pela instalação + tabela de partições original (quando foi testado o boot com o backup, havíamos adulterado a tabela trocando o ID 0x80 por 0x00 e vice-versa.

= 2004-06-11
:date: 2004-06-11

Voltando pro projeto ISAM :P.

= 2004-07-08
:date: 2004-07-08

Após várias semanas, foi lançada uma versão inicial do SCUA 9x com o CTree funcionando na forma ISAM. Ainda existem módulos a serem portados: media\2004-07-08-modulos-isam.txt

= 2004-08-09
:date: 2004-08-09

Mexendo na folhinha 2632 (deleção do banco quando trocamos de servidor). 11:23 Implementei rotina para apagar os arquivos do banco de dados no reboot através do arquivo wininit.ini. 11:36 Um pequeno bug (não era incluído o diretório "Files" no path dos arquivos a serem deletados, além de faltarem 3 arquivos. 14:17 Começando a fazer a folhinha 2641 (DLL de Mensagens). 14:37 Os aplicativos que irão mudar para a DLL de Mensagens: ScuaSet e Uninstall. 14:58 Finalizada folhinha da DLL de Mensagens. 15:29 Começando folhinha de perfumaria número 2633. Colocar mensagem do tooltip do MLogon na DLL de Mensagens. 15:43 Fechada a folhinha 2633. 16:06 Folhinha 2619: Problemas entre DLL de Recursos e o Manager.

= 2004-08-10
:date: 2004-08-10

SCUA Manager e sua DLL de Mensagens =). 13:43 Mudando prioridade para ISAM (problemas no logon com DLL de Logon da M$ como primária e servidor do Zé. 14:51 Um problema relacionado com a verificação do usuário Guest. Como o guest tem precedência sobre o template, era feita uma verificação (errada) antes da criação do usuário. 15:35 As folhinhas que voltaram decorrente desse problema: 251, 2613, 2620 e 2586. 16:53 Fechada a folhinha 2619. 17:13 Mexer na implementação de perguntar para o usuário se ele deseja apagar as rotas no SCUA Manager. Primeiro vamos organizar a DLL de Mensagens :p.

= 2004-08-11
:date: 2004-08-11

Mexendo em problemas de sincronismo de senha que o Zé pegou. 11:02 O problema da senha era que as configurações eram lidas para o ID do usuário criado a partir do template. Ou seja, não existia no cache (e coisas ruins como "senha expirada" poderiam vir à tona). Agora irei mexer nas diferenças da antiga DLL de Logon e a nova. 11:04 Primeira diferença: No arquivo ExpLog.cpp foi criada uma função chamada VerifyLimitSize(), que parece limitar o tamanho do arquivo de log. 11:06 Na função NPLogon() era chamada a rotina ExecuteVerifyProteq(). Ela está comentada na versão mais nova da DLL. Ah, o arquivo da última diferença é Logon.cpp. 11:08 Logon.cpp: na função NPLogon(), foram comentadas as mensagens de aviso quando a senha era sincronizada durante o logon. 11:10 A chamada ao ExecuteVerifyProteq() foi comentada em mais de um lugar no fonte. 11:11 Descomentada chamada à CloseForceAllFiles() (ainda Logon.cpp). 11:12 Em mais de um lugar. SetDefaultPath() foi descomentado (mas não deve, portanto verificar se no fonte mais novo ele NÃO está comentado. 11:15 LogonAdmin.cpp: Uma verificação da variável NoMask era feita para chamar as rotinas DeleteObject() e DeleteDC() em uma das funções de janela. Isso não existe mais na versão do VSS. 11:43 Comentada verificação da variável NOTPROTEQ em LogonDlg.cpp. 11:45 Para o Bradesco, foi feita uma modificação que espera um tempo para abrir conexao com servidor e exportar os arquivos de log. 11:46 Main.cpp: comentada chamada a VerifyProtectionEx(). 11:49 Comentário do Silverado em Task.cpp: "Alterado para não ficar o tempo todo tentando inserir o icone. Modificado pois causava problema quando executado em terminais do bradesco, pois os mesmos tinham o shell diferente de explorer e não tinha TaskBar para inser 11:50 E novamente a rotina VerifyProtectionEx() é comentada. A chamada a Shell_NotifyIcon() foi modificada em diversos pontos no fonte. 11:51 E isso é no task.cpp. 11:54 Tem uma chamada também à uma tal de GetKey() que parece fazer alguma coisa importante :). 14:03 Chamada a Group.CloseFiles() em Upgrade.cpp. 14:10 Folhinhas que voltaram: 251 (por conta do cadastro automático com problemas) e 2586 (idem :p). 15:16 Problemas. Quando o usuário X é apagado do banco mas existe em cache, o sincronismo dele não é feito, PORQUE o SyncDB captura o ID do usuário no servidor. O SyncDB terá que ser modificado para tentar obter o ID também do cache. 15:21 Folhinha criada: 2649. 15:36 Outro problema (tá explicado na folhinha), dessa vez com o NT e o 9x. As folhinhas criadas são 2650 e 2651. 16:55 E agora (já há algum tempo) mexendo no problema de sincronismo de senha. Estranho. A função que deveria sincronizar retorna erro de duplicação ao tentar inserir registro mas erro de registro não encontrado se é tentado atualizar X(. 18:05 O problema de sincronismo estava relacionado com a nova função CopyObject, que chamava a função da LIB SetServer() com Cache==FALSE e na volta não redefinia o flag para TRUE (e ainda por cima deixava o nome do servidor em branco). Ou seja, cagada total. Conse

= 2004-08-12
:date: 2004-08-12

Atualizações na DLL de Logon: 1. Incluir a função VerifyLimitSize() e sua chamada (ExpLog.cpp); 2. Comentar as mensagens de sincronismo de senha (Logon.cpp); 3. Incluir proteção para não chamar Shell_Notify para sempre. 09:52 A folhinha criada é 2654. 11:00 Agora a DLL de Logon está utilizando headers pré-compilado. Muito rápido :D. 11:05 A folhinha 2586 voltou, pois se o usuário já existe a senha é sincronizada APÓS o sincronismo do usuário, o que faz com que a senha inválida fique no cache. Tenho que mudar isso para que a nova senha seja escrita localmente. 14:50 Corrigido o problema do SyncDB com relação à apagar o usuário no servidor mas este permanecer no cache (ao menos modificado para capturar do cache o ID, se no servidor não for encontrado). 14:51 Folhinha nova: 2658. O Zé disse que não está sincronizando o grupo Everyone, mas eu já corrigi isso. Só confirmei e agora vou mandar o SyncDB mais novo para ele testar. 14:53 Nova folhinha: 2655. Inventar uma maneira de exportar os arquivos de log na versão ISAM. 16:31 Folhinhas que voltaram: 251 (timeouts do SyncDB não funcionando direito) e 2586 (a primeira "sincronizada" de senha não funciona). 16:34 Liberada a 2586. Vejamos a 251. 16:58 Folhinha 251 liberada. Nada mais era que NÃO aguardar mais pelo timeout máximo. Simples, não? 16:59 Agora o próximo problema é: como exportar os logs no novo esquema da ISAM? A idéia é utilizar o CopyFile do 2000, junto com seu ScuaSinc. Essa vai ser uma power modificação e tem até folhinha pra ela: 2655.

= 2004-08-13
:date: 2004-08-13

Mexendo no problema do timeout que não loga mais :p. 12:04 Ainda vem lixo no grupo Everyone. Devo verificar depois se isso sempre acontece, e é necessário criar uma rota de log pra solucionar o problema. 15:25 Problemas que encontrei: 1. Na LIB, ao ler as rotas de logo do grupo Everyone NÃO era verificado o retorno da função e lixo era utilizado para montar a fila (daí o GPF); 2. Na função de sincronismo, nem sempre o IsWindow() retornava TRUE para a nossa janela de logon.

= 2004-08-16
:date: 2004-08-16

Folhinhas ISAM: 2586 (Cadastro de usuários); 2659 (Não funciona sincronismo de usuários com SCUA primário). 09:02 Uma do FingerTrue que Rafael me passou: 2215 (Verificar existência de sensor ao instalar cliente apontando pra servidor remoto). 09:26 Um novo problema no logon que vou ver agora é: o SyncDB não consegue se autenticar com o servidor do Zé! (XP), enquanto que dos testes feitos com meu servidor (Windows 98 VM) todos obtiveram sucesso. 09:43 Passos para reproduzir o bug: 1. Apagar o banco; 2. Reiniciar a máquina; 3. Tentar logar no servidor do Zé (suporte1) com o usuário tst01; BUG: O logon nunca termina (seta de espera eternamente). 09:44 Teste feito: 1. Apagar o banco; 2. Reiniciar a máquina; 3. Rodar o SyncDB para o usuário tst02; 4. Tentar logar com o usuário tst01; BINGO: O usuário foi sincronizado e logou normalmente. 09:48 Agora apaguei o banco e logou. Vai entender... =*(. 10:06 O salvamento de senha não funciona quando não existe registro de senhas antigas no cache. O velho problema de tentar ler um registro no cache ANTES de escrever no Servidor. Farei mais uma função "faz tudo no servidor". 10:37 Feito. Agora as verificações para mudança de senha são feitas no servidor. 11:38 Mandei a folhinha mais difícil pro Willian :). 15:03 Liberada a folhinha 2586. Seja o que Deus quiser.

= 2004-08-17
:date: 2004-08-17

Estou colocando mais log na DLL de Logon (como o Zé havia pedido) e consertando alguns pequenos problemas em potencial no código (como uso de algumas desagradáveis variáveis globais). 11:44 Os logs foram melhorados. Agora estou vendo o problema de no release dar GPF. 15:23 Voltou a: 251 (pra anexar a última DLL de Logon, com algumas "correções" e mais logs; 2649 (bug f***** no sincronismo). 15:35 Duas folhinhas vieram à mim: uma é a 2618 (Wizard não é rodado numa instalação "cliente aponta para si mesmo"), mas já vou repassar pro taz. A outra é relacionada à cadastro automático de usuários (número 2659). 16:03 Bugs conhecidos que o Zé pegou: 1. Mesmo apagando o usuário criado automaticamente pelo esquema do Template no servidor e apagando o Template no servidor o mesmo usuário é criado; 2. Os vínculos não são apagados quando o usuário é apagado (tanto no Admin quanto no sincronismo). 16:07 Marquei a folhinha 2649 como a de codificação atual (ver o problema de não estar apagando usuário do cache).

= 2004-08-18
:date: 2004-08-18

Folhinhas do dia: 2667 (Quando Servidor de Segurança não está de pé, o usuário deve ser logado com o usuário template); 2649 (Problemas ao sincronizar usuário que foi apagado do banco); 2659 (Problemas no cadastramento automático, diz o Zé). 14:38 Copiei a base do Zé para meu servidor 9x e funcionou. Agora o próximo passo que estou tentando é utilizar minha máquina real como servidora.

= 2004-08-19
:date: 2004-08-19

(Depuração) Estou parado na hora que o componente irá capturar os índices dignos de atualização. Peraí :p. 16:18 Fechada folhinha 2649 (na verdade vou liberar nova versão). Um bug no CtreeNT fazia com que os últimos registros da lista não fossem apagados.

= 2004-08-20
:date: 2004-08-20

Finalizada folhinha 2667. Próxima é 2659 (cadastro automático não funciona com DLL primária). 15:46 Folhinhas novas: 2671 (RegisterSetup() na SConfig.dll), 2672 (Erro de senha na primeira tentativa com banco local trava processo), 2669 (Banco local + DLL Primária trava), 2668 e 2670 (Vínculos não são sincronizados com o servidor e vínculos retornam quando um usuário com mesmo nome é criado) e 2651 (Problema de deleção de objeto no servidor, criacão de novo objeto com mesmo nome e tentativa de sincronismo com uma estação).

= 2004-08-24
:date: 2004-08-24

Resolvendo problemas de keynos (desde ontem). Criei a folhinha 2685 e agora irei anexar toda a galera nela. 11:27 Compilado HDCript (deu trampo porque sem o Update o Builder se recusava a compilar). 13:38 Folhinha 2685 liberada. Agora verei as próximas :p. 15:17 ATENÇÃO!! A marca é 2685. 15:20 Liberada a 2669. 15:23 Folhinha 2671 eliminada (Rafael corrigiu o problema no instalador). 16:47 Folhinhas 2668 e 2670 parecem corrigidas (cliente/servidor 9x). 16:52 Próxima folhinha é a 2672 (Ao instalar o produto apontando para o computador local e logon primário do SCUA, ao errar a senha no logon, o computador trava). 17:48 Tenho que fazer uma folhinha de um bug no instalador com relação à escolha Cliente/Servidor e apertar o "Voltar", mas se eu não fizer, taqui o registro :). 17:50 Próxima folhinha é a 2674 (Servidor não disponível + Logon de alguém que não existe em cache = travamento do processo).

= 2004-08-25
:date: 2004-08-25

Mais uma foinha perdida: 2659 (Cadastro automático de usuários com DLL primária não funciona). 11:39 Problema no SyncDB (não está apagando aplicações do cache). Estou mexendo nisso agora. 11:42 Bug já corrigido (mas não liberado, aguardando folhinha). O release é 7.0.0.3. 11:44 Mexendo agora na 2659 (cadastro automático com DLL primária não funciona). 13:46 A folhinha para o bug do SyncDB (não apaga aplicações no cache) é 2694. 13:48 Criada folhinha 2697 (LogDebug desativado loga do mesmo jeito). 13:49 Criada folhinha 2698 (incluir geração de número de registro para ISAM). 14:04 A folhinha do momento é a 2675 (GPF no CTree9x). 15:10 Sobre a lentidão no logoff: verifiquei que (aqui nos meus testes do GPF do CTre9x) a lentidão NÃO ocorre com o logon do Template. 15:22 CTree9x.exe antigo não deu nenhum GPF depois de uns 10 relogons. Daí com o novo após alguns relogons deu GPF em outro processo (LPCS algumacoisa). E agora com o Log habilitado realizei relogon umas 200 vezes e nada. Daí desativei o log e vamos ver no que dá :p. 15:51 Liberado o 2675 (GPF no CTree9x) depois de várias tentativas de gerar o problema. 15:53 Mexendo na folhinha 2697 (mesmo com o log desativado, ele é gerado no SyncDB). 16:47 Nova folhinha, 2701 (retirar mensagem referenciando mpr.dll quando o SConfig.dll é chamado em plataforma NT). 17:42 Novas folhinhas: 2702 (sincronismos que não funcionam) e 2699 (rodar Wizard na instalação muito rápido dá erro de acesso ao banco). 17:47 Estava mexendo nas coisa de registro.

= 2004-08-26
:date: 2004-08-26

Para o registro precisamos encontrar o gerador do cnf.dat. 13:50 Liberada a 2702 porque não encontrei nenhum dos problemas descritos (sinconismo de criptografia de disquete e categoria do usuário não funcionando). 13:52 Mexendo na 2699 (execução muito rápida do Wizard na instalação falha acesso ao banco). 14:47 Liberada a 2699 (problemas quando o Wizard é executado rápido demais). 15:10 Mexendo na 2701 agora (tirar msg chata de mpr.dll da LIB). 15:13 Ooooooopa, não. Vou passar essa pro Will e pegar a 2698 (mudar geração do número do registro).

= 2004-08-27
:date: 2004-08-27

Implementar a execução do CopyFile na DLL de Logon como é feito no SMMC. (Folhinha 2704). 10:36 Folhinha 2698 (verifiquei que o algoritmo com o número da versão alterada funciona, bastando descobrir em que parte do software o número da versão é escrito). 14:18 Adicionei um "gerador" de CNF no aplicativo gerador de números de registro e liberei a folhinha (2698). 14:23 Voltaram as folhinhas 2672 (Ao instalar o produto apontando para o computador local e logon primário do SCUA, ao errar a senha no logon, o computador trava) e 2659 (Com o logon do SCUA primario não esta funcionando o sincronismo de usuário). 15:28 Folhinha nova (2719) pra renomear arquivos de log gerados pelo SCUA na DLL de Logon. 15:30 E é a que vou mexer agora :p. 18:06 Folhinha 2198 (colocar msg de confirmação ao apagar rotas no Manager).

= 2004-08-30
:date: 2004-08-30

Criada folhinha 2723 para bug no instalador (chamando CreateAllFiles() duas vezes quando a instalação é cliente apontando para servidor remoto; detalhe que não pode ser chamada nenhuma vez). 10:48 Obs do comentário anterior: isso faz com que a instalação trave no final e seja criado um banco padrão (Master, 123456).

= 2004-08-31
:date: 2004-08-31

Total de foinhas: 2720 (No relogon não esta executando o CopyFile); 2721 (Fazer com que a dll de logon renomeie o arquivo current.clf no relogon); 2672 (Ao instalar o produto apontando para o computador local e logon primário do SCUA, ao errar a senha no logon, o computador trava); 2659 (Com o logon do SCUA primario não esta funcionando o sincronismo de usuário). 09:50 Mexendo na 2659. 10:14 Criei a folhinha 2727 porque instalador não está copiando o ctreestd.dll na pasta do CopyFile. 10:28 Voltei a 2659 porque (como já havia visto antes) está tudo funcionando. Agora partirei para a 2672 (banco local + dll primária + erro de senha = travamento). 10:50 Liberei a 2672 também (o problema não ocorre). Obs: assim não dá :p. 10:53 Agora vou pegar o 2720, execução do CopyFile depois do logon na conta de usuário não funciona (obs: só falta funcionar tb). 14:04 I num é que funcionou? Liberei a 2720 tb. E agora é a 2721 (renomear Current.clf no relogon). 15:18 Finalizada a 2721. Ehhhhhhhh ;D. 15:34 Duas folhinhas de DLL de Mensagens (pra relaxar): 2235 e 2237.

= 2004-09-02
:date: 2004-09-02

Estava mexendo no SImpNT (aplicativo que importa contas do NT para o banco do SCUA 9X) ontem para ver por que diabos ele não funciona. O problema tem relação com acesso ao banco. Alguém está abrindo o arquivo da estrutura ObjectInfo com o tamanho errado, ou algo do tipo. 14:10 Agora irei implementar a importação de vínculos para os usuários. 18:33 A folhinha é 2741.

= 2004-09-03
:date: 2004-09-03

Entrou uma folhinha eterna, 2580: fazer com que o CopyFile utilize nosso componente de acesso ao banco ao invés da DLL da Faircom (risos incrontroláveis). 09:41 E a do momento, 2739 (quando temos um nome de logon com espaço o usuário não consegue se autenticar). 10:33 Babinha, era só colocar aspas pra chamar o SyncDB :p. 10:58 Agora é a 2742 que, acredite ou não, NÃO é ISAM! :p (problemas com sincronismo nessa nova versão do SCUA 2000).

= 2004-09-06
:date: 2004-09-06

Hoje foi fechada a folhinha 2742, referente ao problema do SMMC de travar o logon quando o usuário existe no cache mas o servidor não está no ar. 14:48 A próxima folhinha parece que será algo a ver com a implementação do Magic Number para NT.

= 2004-09-08
:date: 2004-09-08

Fazendo teste pra ver se implementação da macro <LOGDIR> no CopyFile está funcionando. 14:04 Existiam fontes antigos misturados com novos no projeto do CopyFile. Me baseei nas novas mudanças e está funcionando.

= 2004-09-09
:date: 2004-09-09

Hoje é ??????? :). 10:48 Estou na pendência de adicionar evento de manipulação do Magic Number na SSGina.dll.

= 2004-09-10
:date: 2004-09-10

Ontem fiquei o dia inteiro cuidando de um problema que já existia no SMMC na versão mais nova.

= 2004-09-15
:date: 2004-09-15

Olha só que hora que eu cheguei! :Z Obs: 15 minutos atrás :p. 17:36 Criada a folhinha 2777 para compilação coletiva da galera do SCUA 9X ISAM.

= 2004-09-16
:date: 2004-09-16

Projetos do SCUA 9X que incrementei o build: Install, LogView, MLogon, Scua32, ScuaEasy, ScuaLib, ScuaWiz, SImpNT, SLog, SUser95, SyncDB, TestDB. 09:18 Agora suas versões: SConfig.dll: 7.0.0.6, LogView.exe: 7.0.0.2, MLogon.exe: 7.0.0.4, Scua32.dll: 7.0.0.26, ScuaEasy.exe: 7.0.0.2, ScuaWiz.exe: 7.0.0.2, SImpNT.exe: 7.0.0.4, SLog.exe: 7.0.0.2, SUser95.exe: 7.0.0.5, SyncDB.exe: 7.0.0.5, TestDB.exe: 7.0.0.3. 09:33 Criada folhinha 2778 para o problema de exportar mais de 2700 carinhas pro .ini. Aliás, deixa eu comentar sobre isso: no Windows 9x, quando vc tenta exportar mais carinhas que o número citado acima, a função WritePrivateProfileString() retorna FALSE e a entrada não é escrita (ao que parece, GetPrivateProfileString() também falha nesse limite). Importante saber que o TGF DataBase, por incrível que pareça, também tem suas limitações O:). 16:47 Resolvido problema da 2778. Mexendo agora na 2742, que é o problema do SMMC.

= 2004-09-17
:date: 2004-09-17

Vamos lá (problema da Gol, Proteção de Boot): 1. A thread InstBootProt chama VerifyIntegrity() da classe da LIB do hdsk; 2. Essa função chama ReadFirstSectors() para cada disco (na Gol diz o log que são 3). ReadFirstSectors() chama ReadSectors() (reaproveitamento de código =); 4. É chamada VerifyMBRIntegrity() passando o MBR lido e o número do disco (o primeiro do log é o de número 2, prova que existem 3 discos detectados pelo nosso device na máquina do cliente); 5. Essa função chama VerifyMBRSignature(), que vai procurar pela assinatura válida de MBR no disco 2 (não vai encontrar e vai retornar erro); 6. Isso vai fazer com que seja gerado um suporte e o suporte vai gerar mobilização do desenvolvimento (nesse caso específico, eu :). 16:30 A solução para esse problema parece ser ajustar os HDs para estes ficarem bonitinhos na hora de instalar a proteção de boot. 17:27 Liberada a 2742 (SMMMMMMMMC). O problema ocorria por conta da deleção da entrada do usuário no cache caso ele não existisse no sistema.

= 2004-09-20
:date: 2004-09-20

Após ler parte dos e-mails (faltou o new do CodeProject) e pedir pro Strauss registrar meu domínio (www.blakhalk.com.br) e assinar um provedor, e depois de ter resolvido os problemas da Lilly (SMMC) e ISAM (Vínculos, etc etc etc) vou partir para aquele projeto anterior de implementar Magic Number no SCUA 2000, com o lance de DLL que implementa uma interface que é chamada pela SSGina.dll etc e talz. 10:54 Primeira tarefa: Colocar um evento a mais no WaitForSingleObject para esperar pelo evento de MagicLogon (3 horas). 13:43 Ao receber tal evento, a ssgina deve alimentar uma variavel interna que sinalizará que o proximo logon será utilizando o esquema magic number e forcar o logoff (2 horas). No proximo logon a ssgina irá verificar se deve-se utilizar o magic logon e verificar se a dll de magic logon existe e está assinada. Carrega-la e chamar a funcao de magic logon (2 horas). 13:47 A ordem das funções Wlx chamadas: WlxIsLogoffOk, WlxRemoveStatusMessage, WlxDisplayStatusMessage, WlxDisplayStatusMessage (de novo), WlxLogoff, WlxRemoveStatusMessage, WlxDisplaySASNotice, WlxRemoveStatusMessage (sim, de novo), WlxLoggedOutSAS (é a parte que aparece a cara da GINA e ela pede nome e senha), WlxDisplayStatusMessage (2 vezes), WlxRemoveStatusMessage (2 vezes tb), WlxActivateUserShell, WlxRemoveStatusMessage (não cansa). Acabou =).

= 2004-09-21
:date: 2004-09-21

Voltou a folhinha 2699 (Wizard do ISAM), com o mesmo problema de acesso ao banco de dados.

= 2004-09-22
:date: 2004-09-22

Se o retorno dessa função for positivo, a ssgina irá efetuar o logon utilizando os dados retornados pela rotina e repassando para o smmc (3 horas). 09:28 Terei que parar o projeto novamente para ver um problema no SMMC. Parece que quando o usuário é criado uma vez no Servidor de Segurança e é apagado nunca mais é criado. 11:50 A LIB, ao que tudo parece, só apaga um usuário da tabela SidInfo se alguém pedir por um usuário passando o ID. Pior, o SRefreshIds.exe nunca é chamado em um Servidor SCUA 2000. 11:51 O fato dele não ser mais criado no sistema é porque a LIB sempre retorna o ID do usuário que nunca é apagado do banco do SCUA. 14:08 O problema é que antigamente como o SidInfo dependia do SID do usuário no banco do NT, e este nunca repete, a referência ao ID perdido nunca é restaurada. No entanto, com o nome do usuário sendo o novo "SID", sempre que um usuário de mesmo nome é criado essa referência SEMPRE é restaurada. Além do mais, a rotina que sincroniza os IDs não contempla essa condição, uma vez que esse problema não existia.

= 2004-09-24
:date: 2004-09-24

Foi implementada a thread que sincroniza SAM/AD com CTREEDB no DataSvr de tempos em tempos, e corrigido problema na hora do SyncDB obter o ID de um usuário ainda não inserido no banco (chamando RefreshUser() para o usuário em questão). No entanto, para o sincronismo, ainda existe o problema dos objetos do cache não serem apagados (pois seus IDs não são obtidos). Para esse problema, será necessário fazer uma pesquisa no banco cache e sincronizar os IDs dos grupos e do usuário alvo junto dos IDs encontrados no servidor. Além disso, existe o mesmo problema para aplicações. 15:05 O problema do ID do usuário em cache e dos grupos foi resolvido. No entanto, parecem haver problemas na hora do DataSvr retornar os vínculos do usuário. 18:03 Feitas modificações na chamada de LookupAccountName() por conta de nomes reservados do NT não funcionar a sintaxe DOMINIO\NomeDoUsuario. Dai é feita busca sem o domínio e verificado se o domínio retornado é BUILTIN.

= 2004-09-27
:date: 2004-09-27

Para o problema do SMMC (2742) foi necessário modificar: smmc.exe, datasvr.exe, srefreshids.exe, syncdb.exe, scualib.lib. 09:56 O problema do Wizard não foi detectado na última versão. Portanto, liberei a folhinha =). 10:11 (Voltando ao MagicNumber) Se o retorno dessa função for positivo, a ssgina irá efetuar o logon utilizando os dados retornados pela rotina e repassando para o smmc (3 horas). 10:14 Estava modificando a função GetNotifyObject(), já que é nela que está dando erro de compilação =P. 11:18 Pior que programar numa sala cheia de programadores é programar com o Taz do lado ;P. 18:01 Implementado o lance da função LogonEx. Agora existem duas interfaces para o SMMC e uma função nova. E a SSGina chama uma interface ou outra, dependendo da disponibilidade desta.

= 2004-09-28
:date: 2004-09-28

Se tempo de logon for diferente de zero, iniciar contagem regressiva e quando este tempo estourar forçar o logoff na máquina (2 horas). 11:16 Obs: A DLL do MagicNumber poderá calcular a partir de uma data/hora fixa e a data/hora do computador quanto tempo deve ser definido para expiração. 11:26 Criada folhinha 2794 para o problema do tempo de expiração fixo, que permite que um operador consiga efetuar logon quantas vezes desejar com o mesmo número mágico simplesmente alterando a data/hora da máquina.

= 2004-09-29
:date: 2004-09-29

Ontem implementei o lance de expirar a sessão. Mas ainda tenho que fazer uma janela que avise o usuário um minuto antes do logoff. 10:39 Problemas no SMMC: 1. Efetuar logon com o cabo de rede para montar o cache; 2. Reiniciar a máquina e efetuar o logon no cache; 3. Efetuar logon com o cache novamente. BUM: As partir desse logon, as regras dos grupos não são mais repassadas, ficando apenas as rotas reservadas. 10:40 Terminei (faltando só alguns ajustes bestas como definir o Reason, setar a janela como always on top, etc) a implementação da expiração de sessão, mas agora irei dar ALT + TAB para o projeto do SMMC. 17:47 Terminada a implementação da tela de expiração de sessão e nos últimos testes agora. 17:49 Verificar falha no sprintf do motivo da expiração.

= 2004-09-30
:date: 2004-09-30

Existe um problema de segurança no logoff forçado a ser verificado depois (o usuário só efetua logoff se quiser). 13:33 Terminei a puxação do MLogon pra DLL do Bradesco.

= 2004-10-01
:date: 2004-10-01

Terminada implementação básica, com a interface do SMMC para ativar o MagicNumber, execução da SSGINA da DLL do MagicNumber, passagem de nome e senha para o logon (além de salvar um possível auto-logon configurado), a tela bonita da DLL do MagicNumber (puxada do MLogon), etc e talz =D. 15:29 Encontrado um pequeno problema: quando estamos logados pelo MagicNumber e aparece a janela de expiração de logon, e vamos ativar novamente a opção MagicNumber, é efetuado o logoff e não aparece nenhuma tela, e a SSGINA pára de responder. 17:10 Nova tarefa: Caso a autenticação seja efetuada com sucesso, alterar a chave Run do aplicativo shell do Bradesco pelo rundll32 que irá chamar a função que restaura o dado desse valor para o aplicativo Bradesco (4 horas).

= 2004-10-04
:date: 2004-10-04

Os dois problemas existentes (travar quando a tela de logoff aparece e vc efetua logoff pelo shell ou ativa novamente o MagicNumber, e o não forçar o logoff corretamente da SSGina) vão ser deixados de lado momentaneamente para a implementação das outras coisas. 15:09 Terminei isso aqui da SSGina: Verificar se a dll de magic logon está assinada (4 horas, FEITO em 6 horas +-). 15:10 Agora isso: Exportar uma função que irá instalar um hook de teclado que captura a seqüência de teclas do MagicNumber e, se esta for ativada, sinalizar o evento criado para efetuar a comunicação entre o smmc e a ssgina (4 horas). 15:27 Criada folhinha para MagicNumber do SCUA 2000: 2802.

= 2004-10-06
:date: 2004-10-06

Mexendo na folhinha 2408 (DLL de Mensagens do DirLock). 13:05 Wizard.h está usando um novo define na DLL que não existe na versão atualizada na máquina do Strauss (98). Portanto será necessário recompilar os aplicativos que utilizam esse define, pois troquei o valor desse id. Mensagem IDS_NOTOKEN_WITHOUT_PWD_ERROR.

= 2004-10-07
:date: 2004-10-07

Depois de resolvidos os problemas do DirLock, voltarei à implementação do MagicNumber. 09:38 Nova e próxima pendência: Implementar verificação da opção de não aplicar regras para o usuário, independente de ser master ou não. 12:08 Pobreminha: usuário não consegue trocar shell do sistema (mesmo sendo administrador no Scua).

= 2004-10-08
:date: 2004-10-08

Foi resolvido o problema de um notebook na Dixie que não bootava mais. Pelo que eu vi, inicialmente o vírus estava lá, mas com a tabela decriptografada. No backup do setor original a tabela de partições era diferente (não havia link para uma extendida, como estava na primeira). Enfim, foi só isso que eu fiz hje =P. 16:30 Mais uma pendência: Forçar o logoff após 20 segundos iniciado o logoff normal (4 horas).

= 2004-10-11
:date: 2004-10-11

Terminada a pendência do logoff forçado. 16:45 Problema: apertar Ctrl + Alt + Del durante a execução do MagicNumber burla a manipulação do shell do sistema, pois o usuário que loga não terá direito de alterá-lo (logo mantém-se o anterior, que pode ser o Windows Explorer). 18:12 Liberada (FINALMENTE!) a folhinha do MagicNumber, 2802.

= 2004-10-13
:date: 2004-10-13

Vendo problema do SConvert até agora. Segundo os caras, ele não está sendo executado, mesmo com usuários com direitos de administração. Claro, com uma versão de primeiro de junho do ano passado, é bem compreensível :). Folhinha 2804.

= 2004-10-14
:date: 2004-10-14

Ontem no fim da tarde fiquei ajudando o taz com o Wizard do FingerTrue, e no resto do dia fiquei mexendo num bug na criptografia de um HD externo. 13:56 Drivers da 7.18: ScuaBP.sys (31.mai.2004), ScuaHdsk.sys (31.mai.2004). 14:07 Drivers da 7.30: ScuaBP.sys (15.set.2004), ScuaHdsk.sys (04.out.2004). 14:11 Compiladas novas versões dos devices. Vamos ver no que dá :P. Tela azul (que previsível :P). 14:14 Nenhuma mudança aparente entre as versões 7.18 e 7.30 vista no Source Safe. 14:32 O erro que ocorre é só no primeiro reinício do sistema após instalados os drivers de Proteção de Boot. Irei partir para o problema mais grave (tela azul ao acessar o driver) e depois veremos isso. 15:05 No problema dos PTEs, é necessário logar uma vez na máquina em Modo de Segurança para que a máquina boote normalmente. 15:15 Curioso. Após uma instalação e reboot do pacote de Proteção de Boot, NÃO deu tela azul :?.

= 2004-10-15
:date: 2004-10-15

Valor de SystemPages: Máquina do Djalma == 33000h, Notebook da Dixie (inalterado) == 6300h, Na Minha == c3000h.

= 2004-10-18
:date: 2004-10-18

Ah, sim. Estou otimizando a alocação de memória no ScuaBP.sys para utilizar uma lista LookAside.

= 2004-10-19
:date: 2004-10-19

Continuo mexendo nessa implementação da lista. Por algum motivo desconhecido, as alocações PARAM de serem feitas com sucesso utilizando o tal do LookAside list. 18:56 A Zona também está acabando. No entanto chegou ao dobro de itens alocados, comparando com o Lookaside List. 18:57 Ignorando as falhas de alocação da Zona o sistema consegue subir, diferente do Lookaside.

= 2004-10-20
:date: 2004-10-20

Chegou a folhinha para o problema de Proteção de Boot (2611). 17:32 Liberada folhinha 2810, que adiciona mensagem de confirmação para deleção de aplicações.

= 2004-10-22
:date: 2004-10-22

Dado importante: a função de dispatch do driver ESTÁ usando algum dado do ponteiro para o context do Stack Location.

= 2004-10-26
:date: 2004-10-26

O Zé apaga uma aplicação no servidor, fecha o Manager. Loga em uma estação e as regras somem. Quando ele abre de novo o Manager, as regras dos usuários e aplicações somem!

= 2004-10-28
:date: 2004-10-28

Começando a ver o problema do Zé lá na Lilly de "sumimento" das regras do banco do SCUA 2k. 11:43 Observações sobre o problema: no arquivo de rotas de acesso, só encontrei IDs para aplicações, e nenhum ID para grupos (mesmo apagado). Isso antes de abrir na máquina de teste (como o Zé mandou). 18:12 Criada folhinha 2819 para o bug do DataSvr (não vou descrever o problema, pq já passa das 18 e to cum priguiça :P).

= 2004-11-03
:date: 2004-11-03

Vendo problema da GINA não desligar quando requisitado pelo usuário através de sua interface. 11:51 Comentei tudo, desde o DllMain() até o WlzLoggedOutSAS() (obs: que NÃO comentei para aparecer a tela, MAS comentei o tratamento das mensagens, com exceção dos botões) e funcionou. Agora o processo inverso vai começar =p. 13:25 Em algum momento a máquina desliga (isso durante o processo de "descomentamento" do fonte), mas isso deve ser longe, porque deixei a máquina assim e só depois ela desligou (em algum momento).

= 2004-11-04
:date: 2004-11-04

O grande problema está relacionado com a janela de status de logoff, que não é fechada através do WlxRemoveStatusMessage(), pois este nunca é chamado. Contudo ao ler um dos artigos sobre o tema vi que o pessoal usava mesmo era o DialogBox() e não a versão Wlx correspondente. Troquei a chamada e bingo! Mas agora devo utilizar o desktop correto, que me é passado no método WlxDisplayStatusMessage().

= 2004-11-05
:date: 2004-11-05

Folhinha para implementação da criptografia para drives fixos (2833). 15:54 Lugares que o ScuaHdsk pega informações de discos/partições montadas no sistema: ScuahdskAttachByPointer() e RefreshDeviceList().

= 2004-11-09
:date: 2004-11-09

A folhinha para o problema do botão Desligar na GINA é o 1963. 10:24 Folhinha nova (2787): implementar criptografia para discos removíveis != disquete.

= 2004-11-10
:date: 2004-11-10

Novo problema: separar a criptografia da proteção de boot. 10:15 A idéia é inserir o vírus na MBR, mas NÃO criptografar a tabela de partições. Dessa forma, temos o espaço necessário para colocar o mapa de bits que armazena os flags de qual partição está criptonitada. O vírus já suporta isso, e é necessário ver se os outros drivers o fazem também. 10:17 O ScuaBP já faz isso. 10:22 O ScuaHdsk tb =D.

= 2004-11-11
:date: 2004-11-11

Fiz com que a janela de Proteção de Boot fosse criada uma única vez (apesar de poder ser exibida N vezes). Isolei a rotina que instala a Proteção de Boot.

= 2004-11-12
:date: 2004-11-12

Problemas com mais de um disco (está criptografando a tabela de partições). Verificar depois. 11:23 Problemas na desinstalação. Isso tem que ver agora :).

= 2004-11-16
:date: 2004-11-16

Ao desinstalar a proteção de boot com tabela não criptografada é exibido uma mensagem de erro, contudo ela é desinstalada com sucesso. 10:26 O erro na desinstalação e as telas azuis freqüentes podem estar relacionadas com a última modificação no ScuaBP (retirada da lista de Device Extensions para os Completions). 10:31 ERRATA: O problema de erro na desintalação realmente ocorre mesmo com a versão antiga do ScuaBP (os testes agora estão sendo realizados ignorando a versão nova). 11:13 IMPORTANTE: O esquema do suporte de desmarcar uma partição criptografada, reinstalar SCUA, Proteção de Boot e depois remarcar a partição pode não funcionar se essa partição for FAT32 (erros como a GINA não aparecer nunca mais, por ex). 11:20 Liberada a 2850, referente à independência entre Criptografia de Partições e Proteção de Boot. 13:19 Mexendo na criptografia para discos removíveis.

= 2004-11-24
:date: 2004-11-24

Liberada 2850 e agora estou na 2611 (telas azuis randômicas na Proteção de Boot).

= 2004-11-29
:date: 2004-11-29

Liberada a folhinha 2611 para testes após duas modificações que o Driver Verifier reclamou. No entanto, ela deverá voltar para compatibilizar o binário para Windows NT (a função utilizada não existe para NT).

= 2004-12-03
:date: 2004-12-03

Voltaram as folhinhas 2611 e 2850 para que sejam anexados os binários que irão rodar em Windows NT e 2000+.

= 2004-12-06
:date: 2004-12-06

A folhinha do problema de mapeamento é 2612. 16:48 A folhinha para o problema de versão errada na DLL de Mensagens é 2872.

= 2004-12-07
:date: 2004-12-07

A folhinha do bug de mapeamento (2612) já foi liberada para o instalador pelo Zé. O histórico dela é: (29/07/2004) Utilizando o device que bloqueia a disconexão de drivers remotos, fazer com que esse comportamento seja desabilitado quando o master estiver logado. (29/07/2004) O Scuaacc avisa o NtApiFlt quando o Master estiver logando e assim a função que disconecta drivers mapeados volta a funcionar normalmente. Para assegurar a compatibilidade com os demais devices que interagem com scuaacc, esta sendo atachado todo o grupo de controle de acesso. (01/09/2004) teste ok!

= 2004-12-08
:date: 2004-12-08

A tela azul que ocorreu na instalação da criptografia nas máquinas do cliente que o Zé foi ocorreu porque o membro Data de um dos elementos da lista ligada de completions estava zerado.

= 2004-12-13
:date: 2004-12-13

Criada folhinha 2892 para enviar as correções feitas aos problemas que o Zé encontrou na Fábio Perini S.A.

= 2004-12-16
:date: 2004-12-16

Implementei nova DLL de Magic Number para o SCUA 2000 que basicamente utiliza as classes do Nilton para gerar o Magic Number e validá-lo. Mas depois de conversar com o Zé vimos que a real urgência é a implementação para 9x, que já possui o sistema de troca de shell, mas não o logon com senha randômica. Para isso foi necessário procurar o projeto do ScuaCoff feito para o Bradesco entre os projetos do Silvestri. Agora procuro pelo que instala o atalho para o Magic Number (Ctrl + Shift + L).

= 2004-12-17
:date: 2004-12-17

Parece que o aplicativo que instala é um tal de ChangeShell.

= 2004-12-20
:date: 2004-12-20

As pendências (na ordem) são: Proteção de Boot (voltar a compilação que funciona), Bank Boston (Cliente criptografou note e agora perdeu tudo), MLogon (bug no 9x, ver direito com Zé depois) e MagicNumber pro Bradesco (inicialmente pra 9x, geração de senha randômica). 10:05 Depois de alguns problemas nos teste que o Zé fez nas máquinas do suporte no fim da sexta-feira, hoje, segunda-feira de manhã, recompilei os mesmos fontes e ambas as versões (NT e 2K) funcionaram em minhas VMs. Estou reencaminhando para testes para que o Zé verifique no final de alguma tarde se o problema ainda persiste nas máquinas do suporte. Obs: Esse problema realmente existiu independente de máquina, pois cheguei a testar na sexta o binário em minhas VMs e a mesma tela azul foi reproduzida. Foi ressucitada a folhinha 2892 para que fosse enviada nova versão para testes.

= 2004-12-27
:date: 2004-12-27

Lembrar de fazer alguns testes para esconder partições criptografadas como medida de contingência nos casos onde o sistema operacional é perdido e são tomadas aquelas medidas do procedimento do suporte para reaver a partição. 09:50 Mas o próximo passo mesmo é ver o bug de desmapeamento no SCUA 9x. 16:57 Depois de muito suar, consegui concluir que o problema NÃO ocorre no 98, MAS ocorre no 95 Release A, que era onde o Zé estava testando. E a partir daí consegui reproduzir na VM dele aqui. E renomeando os VXDs, conclui que o problema está no ScuaAcc.vxd. 17:14 Últimos arquivos que foram alterados: ScuaAcc.cpp, LogHook.cpp, ScuaUtil.asm, Misc.cpp...

= 2004-12-28
:date: 2004-12-28

Ai, meu estômago =/ 14:54 Ai, meu aparelho digestivo =/

= 2004-12-29
:date: 2004-12-29

Comecei a mexer num problema enfrentado pelo Zé num cliente no Rio (SCUA 2000).

= 2004-12-30
:date: 2004-12-30

Chegou folhinha nova: 2921 (Backport do Magic Number da 7.30 para a versao 7.20).

= 2005-01-04
:date: 2005-01-04

Agora estou implementando um traking de operações no registro para que as operações possam ser restauradas.

= 2005-01-07
:date: 2005-01-07

Está sendo mais difícil que eu pensei inicialmente =P.

= 2005-01-10
:date: 2005-01-10

Terminada versão básica do tracking do registro.

= 2005-01-12
:date: 2005-01-12

Folhinha 2931. Inserido alguns comentários nos protótipos das funções e alterado o nome da função CreateKey() para o mesmo da API, RegCreateKey(). 15:00 Folhinha 2802. Referente aos testes de "Magic Number - Projeto Agências", o Zé fez as seguintes observações: Ajustar a fonte da DLL, pq no WinXP aparece barras ao invés de bolinhas; Inserir msg. de erro de logon com é feito no aplicativo MLOGON.EXE; Ajustar a tela de logon da aplicação de acordo com o Projeto Agências; - Inserir um novo botão no aplicativo de logon para voltar a situação original. 17:16 O MagicNumber para 2000 está com um pequeno problema: não mantém o nome/senha do usuário configurado para logon automático após a execução do logon utilizando MagicNumber. Obs: no entanto, se cancelamos o logon por MG, o logon automático funciona.

= 2005-01-13
:date: 2005-01-13

Alterando uma coisa no desinstalador (mudar os flags dos diretórios do Windows, do Sistema e do All Users (???) para retirar atributo de hidden).

= 2005-01-14
:date: 2005-01-14

Consegui (finalmente! yupi!) recompilar o desinstalador. Pra isso tive que utilizar a versão do MFC (Static) do VC6. Além, é claro, de se utilizar de LIB estática para a LIBC. Foi gerado um build especial, e coloquei um comentário no seguinte padrão: NOFOLHINHA - CLIENTE. Daí ficou: 2931 - Bradesco. Obs: Tenho que subir as LIBs do Scua 9x 6 e SLibHdsk nas versões especiais, para ficar mais fácil recompilar caso seja necessário. 11:54 Folhinha 2802. Iniciando (finalmente!) modificações no MN do SCUA 2000 que o Zé pedira. 16:05 Mais uma vez liberado o desinstalador. Agora pra retirar um atalho do Menu Iniciar e Desktop.

= 2005-01-17
:date: 2005-01-17

Ontem no fim da tarde fiquei mexendo nos últimos detalhes para a instalação SCUA 9x Bradesco que o Zé estava orquestrando. Ou seja, ainda não comecei a mexer no Magic Number. 17:25 Folhinha 2802. Hoje eu: troquei a fonte para aparecerem bolinhas no Windows XP, inseri mensagens de erro e sucesso durante o logon do MagicNumber, troquei o label do botão de cancel para aplic. agência (just like 9x). Folhinha 2802. E agora o problema está em alguma situação em que o autologon se perde. 17:28 Folhinha 2802. Não é fácil de achar. Acho que irei já liberar a folhinha pra teste e comentar que existe um bug, mas que não consegui encontrar a situação (é até capaz que seja alterada a maneira de funcionar do MagicNumber no NT para ficar compatível com o tosco 9x). 18:06 Folhinha 2802. Liberada a folhinha. Agora é só testar =).

= 2005-01-19
:date: 2005-01-19

Definindo prazos para as pendências da semana. 17:22 Vendo problema de importação de grupos na instalação. O problema ocorre somente na instalação (não reproduzível pelo SManager) e quando os grupos não existem. Outro detalhe é que não são todos os grupos que perdem as regras (mas a maioria). Provavelmente se eu tentar depurar a instalação não irá funcionar porque o problema tem a ver com condição de corrida, mas é o único caminho (tirando análise do banco de dados) que enxergo. 17:40 Detalhe sórdido: RefreshUser() é chamado na ScuaGimp.dll ao invés do RefreshGroup(). ????? ?????????! =) 18:12 Testei com RefreshGroups() e deu certo! Parece que a solução será mais fácil do que imaginei.

= 2005-01-20
:date: 2005-01-20

Estou vendo quanto tempo vai demorar pra resolver o problema da listagem de usuários com caracteres esquisitos. 10:30 Ahá! Descobri o porquê do maledeto: caracteres unicode =). 11:36 Já reportei o problema pro Carlos e a prioridade agora é o desinstalador silent pra SCUA (e pra amanhã). 14:18 Implementando modo silent no desinstalador do SCUA 2000. Ops, parece que já existe algo. Estou separando agora o silent do reboot automágico. 15:30 Quando usuário não tem direitos, uma msg de erro é exibida. Corrigir. 15:36 Mensagem de proteção de boot tb é exibida. 16:07 Agora estou evitando essas mensagens. Não é nada difícil. Mais difícil é testar =P. 16:08 Tenho que aprender a definir um contexto antes de inserir uma msg. Essa, por exemplo, não tem nada definido :).

= 2005-01-21
:date: 2005-01-21

Terminei de terminar o modo silent no 9x.

= 2005-01-24
:date: 2005-01-24

Quando eu fizer o conversor de banco de dados da versão 7.20 para 7.32 seria legal usar o convdb.exe.

= 2005-01-26
:date: 2005-01-26

Mexendo na conversão do banco de dados.

= 2005-01-27
:date: 2005-01-27

Criado doc para os passos do MagicNumber: D:\Docs\Passos para implementação da versão Bradesco do MagicNumber.doc

= 2005-01-28
:date: 2005-01-28

Ver função SetPrimaryLogo() pro Rafael. 15:27 Já posso iniciar as implementações de Senha Randômica para o Bradesco. E foi dada a largada.

= 2005-01-31
:date: 2005-01-31

Fiz uma classe básica para a geração de senha randômica (SEM senha randômica ainda) para utilizar na DLL de Logon (leia-se do MN). 16:04 Dei suporte à um possível problema no desinstalador silent do SCUA 2000 para o Caio. 16:22 E voltando ao código (agora salvamento e restauração do login/senha do usuário a ser logado no Windows).

= 2005-02-01
:date: 2005-02-01

Esta manhã (e provavelmente esta tarde também) estou vendo o problema de um notebook de um cliente que teve sua partição de dados (D:, NTFS. O C: é FAT32). Até agora vi que tudo estava ok para o SCUA, os dados estavam de fato criptografados e o flag devidamente levantado. Mas agora que tirei a partição de dados da tabela de partições o Windows parece não logar mais com sucesso. Simplesmente loga e fica em hang. No modo de segurança, loga e volta pra tela de logon. 13:59 Várias tentativas depois, acho que só me resta instalar o Windows por cima (solução mais rápida). Sabendo que o objetivo é reaver os dados, é uma operação aceitável. 14:08 Espera aí. Talvez o boot.ini... 15:31 Pois bem. Fiz mais alguns testes com a tabela de partições até que consegui voltar à situação inicial e agora se iniciou o processo de desencriptar a partição de dados. 15:53 Folhinha 2950. Enquanto o SCUA desencripta a partição de dados, mexo no problema do desinstalador do SCUA 2000 executado em modo silent por um serviço que roda na conta de sistema (ufa). 16:49 Folhinha 2950. Fechada a folhinha. 17:47 Folhinha 2951. Pois bem. Depois do notebook da gol e a solução pro desinstalador silent do SCUA 2000 tem o do 9x, que deve rodar quando um usuário estiver em sessão e mesmo assim conseguir fazer tudo.

= 2005-02-02
:date: 2005-02-02

Folhinha 2951. Verificando qual a possibilidade de executar o desinstalador na conta de usuário de uma forma que ele não consiga executar. Interessante, não?

= 2005-02-04
:date: 2005-02-04

Folhinha 2951. Resolvi o problema enfiando no resource do executável o nome e o hash da chave de personalização + senha do master. Se estes baterem, o desinstalador pode ser executado por um usuário qualquer. Não é a coisa mais linda do mundo, mas é algo que protege contra execução arbitrária, ou seja, pelo menos o carinha tem que ter essas informações, e teoricamente teria direito de execução de qualquer coisa. A única falha que vejo é a possibilidade do binário sair do nosso controle. Daí não importa se o usuário sabe ou não. Basta executá-lo. 16:27 Voltemos à senha randômica.

= 2005-02-09
:date: 2005-02-09

Folhinha 2951. (Já tá ficando ultrapassado esse DayToDay). Hoje, meio expediente, consegui recompilar os módulos da senha randômica again e constatar que está dando tela azul (na GINA). Provavelmente é culpa da DLL, coisa que irei ver amanhã.

= 2005-02-10
:date: 2005-02-10

Folhinha 2951. Yesss agora funciona tudo com a nova implementação do Sérgio. Agora o próximo passo será validar o tempo de expiração. 16:20 Folhinha 2951. Pronto. Agora faz todas as verificações necessárias. E funciona! Irei fechar um build e partir pro 9x.

= 2005-02-21
:date: 2005-02-21

Folhinha 0000. Prioridades: bugs encontrados no Coffee-Break do Bradesco (senha randômica); independência do DCOM para o mesmo; customização para distinção entre os números gerados em produção e para teste. 17:58 Folhinha 0000. Por enquanto tentando entender o funcionamento do Coffee-Break para tentar corrigir bug que impede que ele seja ativado mais de uma vez no mesmo logon.

= 2008-09-10
:date: 2008-09-10

Começando novamente a usar o daytoday para as idéias do dia-a-dia. Lembrar que todas as LIBs devem possuir o sufixo "Lib" no nome do projeto. Ex: SsLogLib, SsAccLib. Esse padrão deve ser mantido e migrado nos projetos legados. 10:41 Com isso fica fácil saber se estamos lidando com uma LIB de interface (para DLLs e componentes COM) ou se trata-se de uma LIB com código mesmo. 13:52 Entre criar duas configurações diferentes (Debug, DebugSbrubles, Release, ReleaseSbrubles) em um projeto, optar por criar outro projeto com nome diferente. Uma possível exceção seria quando o arquivo resultante tiver o mesmo nome, mas apenas em última instância. 14:29 A migração das dependências de LIB do projeto para o código-fonte é gradual, mas facilita a longo prazo. 16:51 Trocado StopSMMC para autenticar domínio padrão SCUACORP e se o valor AllowMaintenanceSupport dentro de HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon estiver igual a 1 (REG_SZ).

= 2008-09-11
:date: 2008-09-11

Lembrar de sempre, SEMPRE, SEEEEEEMPRE trocar o setup.ini para instalar o Magic Number do Bradesco para os testes. Fernando vai mexer em um problema de controle de acesso a drives mapeados, e portanto agora vai começar a usar o Bazaar.

= 2008-09-12
:date: 2008-09-12

A pasta onde está a última instalação do HSI (agente de inventário) é a \\10.2.0.25\Agentes (esse IP pode mudar de vez em quando). O instalador do serviço é o HSISins.exe. 11:08 A interface de gerenciamento fica em hsiserver/hsiserverHtdocs/adminloginset.htm.

= 2008-09-15
:date: 2008-09-15

Instalador novo com senha randômica para o Vista e testes do Inventário que exibe tela preta. 16:21 Depois de encontrar o fonte perdido na máquina do Sérgio, me deparei com mais e mais arquivos perdidos. Agora faço o backup das suas pastas para montar o HD do Nakai.

= 2008-09-16
:date: 2008-09-16

Feitos os backups das máquinas do Sérgio e do Nakai, junto dos backups do Wanderley, do Rafael, do Nilton e do Fernando. Todos estão devidamente sete-zipados sem compactação.

= 2008-09-19
:date: 2008-09-19

Dar uma olhada no problema de logon do SCUA por falta de direito.

= 2008-09-22
:date: 2008-09-22

Problema na rede ainda. Vamos ver a documentação e tentar entender por que o notebook do zé dá problema. 09:44 Isso é beeeem interessante em se tratando de problemas de autenticação relacionado com software arcaico que não preza pela segurança de suas soluções (quem será?): .

= 2008-09-23
:date: 2008-09-23

Problema no SShell Release no teste básico de instalação no Windows Vista (Rose). Macro <COMPUTERNAME> aparentemente está cortanto o início do nome das máquinas (e.g. de suporte para uporte). 11:08 Atualizando e ativando o Windows 2003 Server que havia sido congelado durante minha primeira estadia na SCUA. Vendo três problemas ao mesmo tempo. Não é uma maravilha? Zé pediu para mandar os drivers debug para poder ver pelo DbgView o que está sendo bloqueado. Haja paciência... 11:21 Configurado o 2003 e feito um snapshot inicial.

= 2008-09-24
:date: 2008-09-24

Ontem fiz um pouco de refatoração nas pastas e consertei o script de build. Apagando incêndio novamente no Bradesco... Ê laiá.

= 2008-10-01
:date: 2008-10-01

De volta para a SCUA, depois de internado três dias no Bradesco resolvendo problema de Driver.

= 2008-10-08
:date: 2008-10-08

Hoje é dia de testar a mídia do Bradesco. Ficamos ontem até altas horas resolvendo os problemas do RegBack, novas diretivas de acesso e etc. 14:29 Hoje dei uma organizada no processo de build, melhorei nossa bat e integrei com o script do nant. Agora estamos a poucos quilômetros de distância de nosso próximo objetivo: build automático!

= 2008-10-14
:date: 2008-10-14

Testando a freqüência de uso.

= 2008-10-15
:date: 2008-10-15

O contador de freqüência de uso utiliza a função SetWindowsHookEx (pra variar) com o valor WH_SHELL. O que quer dizer: "Installs a hook procedure that receives notifications useful to shell applications. For more information, see the ShellProc hook procedure." 15:49 Vendo a tal da função, podemos facilmente verificar no código que os três eventos que são capturados pelo agente são: janela criada, janela destruída e janela ativada. 15:50 Todas as três enviam uma mensagem personalizada com a linha de comando do aplicativo em questão. 15:51 Observei que a mensagem só é enviada no caso de janelas principais (quando o GetParent(hwnd) retorna NULL). 15:52 Janela criada é uma mensagem um, janela destruída é uma mensagem zero. Quando a janela é ativada, o código de ação é dois. Muito intuitivo... 15:54 Existe uma janela global (cujo handle é compartilhado com todos) que recebe a mensagem especial que obtém informações pertinentes sobre a criação, destruição e remoção de janelas. 16:16 A linha de comando do processo é enviada para a janela de outro processo através da criação de um atom. Esse mesmo atom é enviado através do WPARAM. Ah, sim, o LPARAM contém o actionCode.

= 2008-10-16
:date: 2008-10-16

O servidor que estamos usando para os testes da freqüência é o 10.2.0.30:9090, pois o "oficial" está sendo usado para o cliente.

= 2008-10-17
:date: 2008-10-17

O objeto intruder, AFAIK, nunca foi usado na edição NT do Security. Se tratava de um usuário que tentava logar várias vezes com senha inválida e era bloqueado temporariamente no Windows 9x. 09:00 A categoria e o status dos objetos não mereceria alguma categoria "neutra", já que grupos e aplicações não possuem nenhuma das características usadas (além da flag que define a "origem" do grupo, no caso da categoria)? 09:02 Entendo que é um objetivo "nobre" salvar a senha do usuário em nosso banco, mas não seria esticar demais a confiança do cliente e de nós mesmos no produto? Ou esse é um campo "reservado para uso futuro"? 09:24 No novo modelo de ramificação dos fontes, abolimos o nome da empresa/marca como denominação dos projetos. Dessa forma, o SCUA Security Suite virou SecuritySuite e o HSI/Config/IT Manager/Whatever virou Inventory. Dessa forma uma mudança de estratégia de marketing do lado de fora não exige mexer um dedinho na configuração de fontes. Já tivemos esse problema na Open com dois produtos, e não foi agradável perder tempo renomeando arquivos. 11:15 Os IDs dos executáveis rastreados pelo monitor de sistema de arquivos devem ser tratados distintamente dos IDs usados para os executáveis do monitor de freqüência de uso, visto que a atualização dessas duas listas ocorre em momentos distintos. O problema provavelmente ocorre entre execuções do serviço de inventário. 11:16 Passado para o Miyasaki para que ele veja se existe correpondência entre os IDs do sistema de arquivo e freqüência de uso. 14:34 Copiei o vídeo do ponteiro. Mó legal =)

= 2008-10-20
:date: 2008-10-20

Lembrar de descrever a diferença entre LIBs estáticas e dinâmicas (LIBs de importação) na hora de documentar nossos processos. 16:03 Dois bugs: o SWUsage.dll corrompe a lista de executáveis (ao reiniciar o inventário ou parar o serviço) e o HsiService.exe troca os IDs de alguns arquivos (sem detecção do momento em que isso ocorre).

= 2008-10-21
:date: 2008-10-21

Dois pepinos que o Zé encontrou no cliente (pra variar): agente atual não roda no NT 4 (falta da função de rede) e instador remoto não está funcionando no Safra.

= 2008-10-22
:date: 2008-10-22

O bug dos grupos locais ocorre quando existir pelo menos um grupo local vinculado a um global. Se for usado todos os grupos globais, então funciona. Se for usado todos locais, também funciona.

= 2008-10-23
:date: 2008-10-23

Analisando novamente o travamento do Internet Explorer ao ser fechado. Foi descoberto que o próprio depurador trava, possível consequência do loader lock travado. 11:19 Existem várias threads esperando pelo mesmo critical section sendo bloqueado por uma thread que contém um loop de mensagens para a janela com a classe OleMainThreadWndClass. Provavelmente estamos lidando com um travamento de OLE/COM/Sbrubles. 11:20 O mais interessante: a pilha da thread travada não contém nenhum third part software, apenas M$. Talvez seja algum tipo de comunicação OLE que não termina nunca. A verificar... Bom, já perdi tempo demais com isso. Vou matar a thread suspeita e ver se tudo termina normalmente...

= 2008-10-24
:date: 2008-10-24

O PsExec consegue sua "proeza" criado uma conexão de rede para \\maquina-alvo\ipc$ usando o usuário e senha passados para ele. Após isso a máquina como um todo tem direito de acesso ao \\maquina-alvo\admin$, o seja, o diretório de sistema da máquina-alvo. Para isso ele utiliza a função WNetAddConnection2.

= 2008-10-28
:date: 2008-10-28

Importante (para lembrar): Telas azuis só podem ser geradas com teclado USB em servidores 2003 ou superiores. Por outro lado, não é necessário reiniciar: basta tirar e colocar novamente o teclado.

= 2008-10-30
:date: 2008-10-30

Muitas coisas ao mesmo tempo. Focar em terminar tudo, em vez de qualidade. Mas qualidade também é importante, porque senão as coisas voltam a acontecer. Vixi Maria =) 11:31 Para apagar os serviços, use a página hsiserverHtdocs/taskslogin.htm

= 2008-11-03
:date: 2008-11-03

Estou colocando um timeout na própria DLL do Magic Number, já que o comportamento deve ser similar ao Vista. ... e também porque é mais fácil =)

= 2008-11-05
:date: 2008-11-05

Encontradas 15 chamadas a CoInitialize. 11:52 Encontradas 14 chamadas a CoInitializeEx. A tempo: as chamadas ao CoInitialize, algumas estavam comentadas. 17:57 Problemas no CoInitialize (tela azul).

= 2008-11-07
:date: 2008-11-07

Acho que descobri por que o Cruise Controle estava dando o erro "Failed to access IIS metabase".

= 2008-11-10
:date: 2008-11-10

Capturar o CDKEY dos produtos. A idéia é substituir o ProductId onde der.

= 2008-11-11
:date: 2008-11-11

Ironicamente, desde que o desenv virou templo sagrado não temos mais descanso externo =)

= 2008-11-12
:date: 2008-11-12

GPF no inventário no Vista. Ê laiá...

= 2008-11-17
:date: 2008-11-17

Tentando pegar se interface de rede é física. Achei uma chave entre as PnP da vida: HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Class\{4D36E972-E325-11CE-BFC1-08002bE10318}. Teste no XP e funcionou... mas a vida não é só feita de XP...

= 2008-11-18
:date: 2008-11-18

O maldito ddkbuild não é encontrado em nosso build automático... sux!!

= 2008-11-19
:date: 2008-11-19

Suporte10, usuário administrador, senha suporte, unidades 'd' e 'e'. 11:19 120 pro remédio da mãe (distensão muscular). 15:25 Descobri que ao usar o parâmetro /USEENV para rodar o msdev para compilar o projeto do inventário os mesmos erros do servidor de integração acontecem. 16:35 O que acontece se o WMI não estiver instalado no Windows 9x e rodarmos o inventário? As interfaces de rede não aparecem mais...

= 2008-11-21
:date: 2008-11-21

Existem diversas máquinas com IDs semelhantes, porém ligeiramente diferentes. Existe uma máquina com o checkpoint sendo uma interface de rede ainda válida.

= 2008-11-24
:date: 2008-11-24

Michaelis defende o uso de "intricado" em detrimento a "intrincado". Já Houaiss defende "intrincado" como a forma principal.

= 2008-12-01
:date: 2008-12-01

A manhã inteira perdida por causa daqueles defeitos que qualquer programador sempre terá: VERIFIQUE SEU BUILD ANTES DE FODER O DOS OUTROS!!!

= 2008-12-11
:date: 2008-12-11

Pesquisando sobre como tornar o Windows XP um Servidor de Segurança do SCUA. 15:30 Isso pode ser útil: .

= 2008-12-16
:date: 2008-12-16

Sobre o acesso anônimo no XP/2003 e problemas de compatibilidade: ). 17:33 XP Pro: THMPV - 77D6F - 94376 - 8HGKG - VRDRQ.

= 2008-12-18
:date: 2008-12-18

Windows Volume License Key: FCKGW-RHQQ2-YXRKT-8TG6W-2B7Q8

= 2008-12-19
:date: 2008-12-19

Protocol Buffers, da Google: talvez nossa solução em comunicação na SCUA.

= 2009-01-15
:date: 2009-01-15

Precisamos definir as regras de padronização do código-fonte. Não serão muitas, contudo: o objetivo é organizar e tornar mais fácil reaproveitar o código.

= 2009-01-21
:date: 2009-01-21

McAfee faz bloqueio de registro e ferra o SCUA na hora de setar policies. 09:57 Regex que usei para trocar os defines em tabels na wiki: ^\#define:b{[A-Z_]+}:b+{\-*[0-9]+}:b+//:b{.*}$ para || \2 || \1 || \3 ||.

= 2009-01-22
:date: 2009-01-22

As cabeças do HD (heads) geralmente são uma por lado de cada disco, ou seja, duas por disco. Por isso o nome head às vezes é trocado por size, por significar o mesmo conceito de "lados" disponíveis no HD. 13:46 Uma track no HD é um círculo concêntrico do lado de um prato, ou seja, uma unidade bidimensional. 13:49 Ao menos uma cabeça é necessária para ler uma única track. Acho que track pode ser traduzido por trilha =) 14:54 Pelo jeito um cilindro (cylinder) compreende as trilhas na mesa posição, porém em pratos diferentes. Uma maneira que foi usada para melhorar a velocidade dos HDs foi construindo mais cilindros, pois dentro de um cilindro é possível ler todas suas trilhas de uma vez sem mexer a cabeça. 17:08 Existem problema com senhas muito grandes no boot (e na contingência).

= 2009-01-28
:date: 2009-01-28

E se o usuário digitar a senha de instalação antiga errada?

= 2009-01-29
:date: 2009-01-29

A ferramenta de diagnóstico deve coletar os primeiros setores do HD e os setores em torno da criptografia (se esta estiver em operação). Inicialmente talvez fosse melhor gerar um arquivo único. 15:57 Para Windows, pode ser feita a mesma coisa. Talvez seja interessante ler pelo driver e por user mode.

= 2009-03-18
:date: 2009-03-18

Voltando das férias... quarta-feira.

= 2009-03-19
:date: 2009-03-19

O cronograma irá ser formado sexta-feira, após alguns testes e provas de conceito. 14:28 Logon local com Template vale mesmo sem usuário. Logons locais com servidor de segurança remoto em que não foram feitas modificações nas diretivas globais e não existe usuário Template cadastrado não funciona, pois o logon local com Template é ativado por padrão. O problema principal está no fato do sistema não conseguir identificar se a configuração está desabilitada ou ela simplesmente não existe pois nunca foi mexida. A consequência é que o sistema não irá deixar usuários logarem na máquina enquanto não for criado o usuário Template ou gravada alguma diretiva global. 16:02 OLE DB, de acordo com a Microsoft, é o adequado para acessar qualquer base de dados independentemente usando Visual C++. OLE OLE DB pode ser usado com ATL.

= 2009-03-23
:date: 2009-03-23

Tentando resolver o problema do GPF no SMMC quando o sistema é desligado. 09:54 A primeira coisa que eu fiz foi atachar o WinDbg de kernel e aguardar o shutdown para ver se algo acontece. Aconteceu! Quando dei logon como paulo (todos os grupos do scua) e dei shutdown, o WinDbg parou em uma exceção. 09:55 Usando o comando !process (sem parâmetros) é possível ver o processo atual, que era o SMMC, com apenas uma thread, como status RUNNING. Agora vou usar a versão Debug da minha máquina e ver as threads que estão ativas durante o shutdown. 10:08 Lembrar de, um dia, termos um StopSMMC decente que funciona nas mesmas vias do MagicNumber do HDEncryption (com proteção por máquina/domínio/etc). 10:40 Aparentemente, a scuaaud.dll tem culpa no cartório. A exceção onde para o WinDbg começa na função scuaaud!SLOG_SetUserID+0x13c4. 10:45 Nossa, como o WinDbg tá demorando para parar! 13:21 Talvez o problema esteja apenas no logon de usuários protegidos (com alguma coisa para logar, palpite). Agora estou usando o NTSD redirecionando para o depurador de kernel para ver como as coisas vão e vem durante o shutdown 13:37 Chamada da função LOG_Event na scuaaud durante o CEngine::OnShutdown. O ponto que o depurador nos mostrou foi exatamente a cópia de *Log para OldLog, essa última uma variável estática da função DoEventLog do tipo EventLog. Como mexemos no formato dos logs do SCUA, esse é um lugar que de fato pode dar problemas. Só não sei ainda como! 13:47 Outro ponto de exceção: COverLogon::NotifyLogoff. A coisa começa a ficar mais complicada. 13:53 Roteiro de testes: logo que subir o NTSD, carregar símbolos do SMMC e colocar breakpoint nas duas funções que iniciam situação problemática: CEngine::OnShutdown e COverLogon::NotifyLogoff. 13:58 Mmmmmmm... fiz o logon apenas como Paulo... e o problema ocorreu no NotifyLogoff. Logo... talvez existam de fato dois problemas que se manifestam dependendo da ordem dos logons. 14:31 Dessa vez o problema apareceu novamente no DoEventLog, SEM logon duplo. O ponteiro Log estava apontando para memória inválida. O que será? 14:52 Sempre que um evento é enviado para ser escrito, ele é colocado em uma memória alocada dinamicamente e enviado para escrita por outra thread. Após criar a thread, o sistema realoca a memória usada para montar os logs. 14:54 O problema está no design do algoritmo. Existe uma variável estática de teste (OldLog) e o ponteiro do log atual (Log) aponta para a memória dinâmica temporária que é usada pela thread de escrita e logo depois apagada. Isso aparentemente não possui riscos, com a exceção da última linha da função que sempre copia o conteúdo do ponteiro do log atual para a variável OldLog. Na maioria esmagadora dos casos, essa escrita é bem sucedida, pois a thread de escrita não tem tempo de desalocar a memória usada por Log. 14:56 No entanto, o problema ocorre apenas no shutdown por um motivo: o evento de shutdown aguarda a finalização da thread de escrita, que, como sabemos, desaloca a memória no seu final. Por isso, a leitura da memória apontada por Log (LogCache) nunca é válida durante a cópia de teste (OldLog), gerando um acess violation em tentativa de read (exatamente como o César descreveu em suas anotações). 14:57 O bug em Smmc!COverLogon::NotifyLogoff persiste. 16:56 O bug da escrita do log foi resolvido. Porém, ainda o OldLog é necessário para eventos de file system, e assim irá permanecer. 17:00 Eeeeita nóis! Agora um bug com a scuaaud.dll descarregada. Aguenta, debug!!!! 17:08 Uma thread WriteToFile desavisada continuava rodando, MESMO após o toque de recolher. 17:17 Agora estamos mesmo é na fase de correção: ajustes, teste, ajustes, teste, ajustes... 17:41 Depois de cinco boots consecutivos, o problema da thread rodando depois do Release do ScuaAud.dll não aconteceu mais. O resto dos problemas aparece como handles inválidos, uma exceção extremamente comum no SMMC, que precisa de reparos mais profundos. 18:40 Bom, dois problemas foram corrigidos, e o problema do log é o que mais se assemelha à situação demonstrada em cliente e em algumas máquina. Amanhã então irei gerar uma versão nova da ScuaAud.dll e Smmc.exe, tendo o cuidado de citar que poderão haver mais problemas "escondidos".

= 2009-03-24
:date: 2009-03-24

Fazendo testes com a versão modificada. Esse !process é bem confuso de usar... 09:39 Vamos lá. Deu pau, carregou símbolos. Primeira coisa a fazer é ver o processo atual: !process -1. NÃO ESQUEÇA O -1, senão ele vai tentar mostrar todos os processos do universo. Ah, também serve !process sem nada. Mas não use com 0! 09:50 Na primeira vez que o sistema iniciou, com depurador de kernel atachado, uma exceção ocorreu. Então coloquei o PDB e o NTSD pra funcionar: nada. 09:51 Talvez eu possa forçar o erro apagando o profile do Paulo e refazendo o "primeiro logon". 10:17 Aconteceu de novo, sem depurador de user mode. Pelo jeito vou ter que tentar detectar a thread faltosa pelo kernel, mesmo. 10:18 Para fazer isso, imaginei gerar "dumps" consecutivamente enquanto threads são criadas durante o shutdown. Mesmo assim, fica a limitação de que não existe símbolo para o que estou fazendo. 10:40 Mas é complicado mesmo esse !process ! 10:42 A próxima ideia é habilitar manipulação do evento de criação de thread. Sai de baixo que aí vem evento!!! 14:46 Então, coloquei log em tudo quanto é thread do SMMC e ScuaAud: entrada e saída. É a thread de Write. Por um motivo que nós, programadores, desconhecemos, algumas pessoas insistem em usar variáveis simples para confirmar uma situação em um ambiente multithreading. 15:28 Aparentemente era isso mesmo. Passei a usar um LONG de sinalizador que é modificado e comparado com funções atômicas (Interlocked*). Não deu mais problema em cinco reboot consecutivos. 15:29 Para resolver o problema das threads de write de shutdown sendo canceladas, o cancelamento aguarda meio segundo pelas threads, desregistra o usuário e sinaliza que as threads futuras abortem, aguardando mais meio segundo por elas. Troquei o LibMain pelo DllMain e coloquei no projeto do ScuaAud. Ocorreram alguns warning de .CRT, mas aparentemente tudo OK.

= 2009-03-25
:date: 2009-03-25

Pronto para os testes da nova versão, que usa um LONG alterado atomicamente em vez de um BOOL nojento em um pseudo-multithreading. 09:26 Passou nos testes de versão Release. Agora estou enviando para que o Zé teste no note que sempre dá problema. 09:53 Passando a desenvolver uma forma de configurar a conexão SQL do servidor SCUA. 17:02 Consegui terminar uma versão inicial do configurador de banco de dados SQL do SCUA (inicia tela do ODBC e salva string de conexão). A próxima versão deve ler as tabelas e verificar consistência, o que já dá abertura para o início do sincronismo. Amanhã: criar tabelas e iniciar leitura.

= 2009-03-26
:date: 2009-03-26

Hoje devo criar as tabelas e começar a lê-las. 11:04 Agora consigo ler todas as tabelas do banco de dados após conectar. Com isso eu verifico a existência de todas as tabelas necessárias. Caso não exista alguma, exibo uma mensagem de aviso. Parece que o CruiseControl consegue executar o cmd passando a opção /C para executar a batch de build e, na eventualidade do retorno diferente de zero, acusa o erro. Ainda em testes. 16:12 Aparentemente, esse tal de OLE DB com ATL usa o mesmo princípio do WTL com os seus templates híbridos mas estáticos. Legal =) 16:18 Acho que esse OLE DB and ODBC Developers Guide parece útil para entender tantas classes e conceitos. 16:34 Dentro de um aplicativo de banco de dados, existe uma camada chamada OLE DB Consumer. Esse OLE DB Consumer se comunica com o OLE DB Provider, que por sua vez se comunica com a base de dados. A conexão do consumer para o provider é feita através de um data source. 16:35 O CDataSource é usado para passar coisas como ID do usuário, senha e o nome da fonte de dados para o provider OLE DB. Para termos uma simples conversa entre o consumer e o provider, além da fonte de dados precisamos de uma sessão. 16:36 Um objeto CSession é o elo primário para conseguirmos obter a funcionalidade do OLE DB. 16:37 Para obter um comando, uma transação, um conjunto de linhas (rowset), para tudo isso precisamos obter através de um objeto de sessão. Para manipularmos operações nos dados usamos comandos. 16:38 Um objeto CCommand é responsável por manipular bindings, como seus parâmetros e colunas de saída. 16:39 Um binding é uma estrutura que contém informação sobre como uma coluna, em um rowset, deve ser obtida. Ele contém informações como ordinal, tipo de dado, tamanho, status, e por aí vai. Um objeto de CRowSet representa os dados do data source. Nós sempre temos um rowset quando precisamos conter e manipular dados. 16:55 Um accessor descreve como os dados estão armazenados no consumer OLE DB. Eles são usados para definir armazenamento e para transferir dados para e de um rowset. Eles também controlam o binding das variáveis do consumer para os dados retornados pelo provider. 18:54 Depois de muito apanhar, consegui inserir dois usuários no SQL. E consegui ler! Parece um struct!!!! Vou até pro cinema, agora.

= 2009-03-27
:date: 2009-03-27

Agora devo começar o trabalho trabalhoso: começar a ler todas as tabelas SQL e colocar em listas de estruturas do SsDatabse. 13:16 Estou usando o Wizard de MFC para criar a classe Accessor para as tabelas do SQL. Com isso edito essas classes para só manterem os membro necessários. 13:17 Também criarei em cada uma delas os nomes de tipos TableT (CTable), CTreeT (struct do SsDatabase) e CTreeListT (vector de CTreeT). Temos também os métodos muito úteis e genéricos GetTableName e ImportToCTree. 13:18 Agora é só ter uma função template que recebe um Accessor desses e realizar a operação genérica de varrer as linhas, chamar ImportToCTree para cada uma delas e preencher a lista de structs CTreeT com esses objetos. Que lindo! Super-genérico e super-compacto! 13:53 Um director_info possui o ID do objeto e um ID próprio. Esse ID próprio é usado para relacionar o conjunto de regras director_info com suas regras em dir_info. O problema é que essa chave não existe nas estruturas do CTree, pois um DirectorInfo contém um array de 60 DIRINFOs.

= 2009-03-30
:date: 2009-03-30

Fazendo commit do estado da solução SQL até agora. A princípio a ideia principal se mantém: importar tabela por tabela e fazer a conversão apenas no final. Testando o build... 09:48 Lógica das diretivas (policies). Um objeto tem várias "objeto_info_regra", que relaciona o objeto com uma "regra", que é de um "regra_tipo". 10:06 O PolicyInfoAccessor é o equivalente do DirInfoAccessor. Agora o "regra_tipo" deve ser algo muito parecido. Usarei "Group" no lugar de "tipo". 10:14 Feito. O próximo é o "objeto_info_regra", que deve relacionar o ID de um objeto com o ID de uma regra em cada linha. Esse é mais parecido com o InfoRights. 10:32 Já importada a tabela de relacionamento objeto/diretiva. 11:04 Vou transformar os Accessors em simplesmente acessadores das tabelas SQL e preenchedores de uma estrutura que representa uma linha na tabela. Isso torna-o independente de CTree. 11:05 Quem usará os Accessors será um CTreeImporter, por exemplo, que usará como núcleo uma estrutura representativa do banco de dados SQL. 11:41 Falta o status, categoria e tipo de objeto. 17:00 Agora estou criando script SQL para gerar dados padrão do SCUA (regras, tipo de direitos de rotas, grupo de diretivas, etc). Quer dizer, agora eu estou indo =)

= 2009-03-31
:date: 2009-03-31

Vamos montar as tabelas de dados fixos (direitos e diretivas) com os defines previamente definidos no SsDatabase. Com isso fica fácil e flexível inverter ordem de entradas, adicionar novos valores e criar exceções por toda a parte. POG allowed. 10:33 Script SQL agora cria tabelas e cria valores fixos como regras e diretivas. 15:16 Agora precisava de uma escrita no banco de dados, pois fica difícil testar dessa forma. 16:03 Que trampo transpor as classes CTree para uma LIB à parte (SsCTreeLib)! 17:00 Amanhã, continuar a exportar o CTree.

= 2009-04-01
:date: 2009-04-01

Um bug na nova diretiva de logons locais faz com que qualquer logon após o bug seja considerado como logon local, MESMO sendo no domínio. O Zé conseguiu com que esse bug entrasse na frente da minha lista, o que quer dizer que terei que parar com o SQL...

= 2009-04-02
:date: 2009-04-02

O problema do logon local aparentemente ocorre porque não zeramos a flag de usar regras do template quando voltamos para a situação "não é um logon local ou não é um servidor remoto". 10:47 Encontrei outro problema na comparação de servidor remoto: se o servidor contiver as barras iniciais a comparação se revela falsa, mesmo sendo um logon com servidor de segurança local. 11:20 Teste feito com sucesso. De fato era a variável não zerada. 11:37 Lembrar de gerar um build beta antes de ir embora. 15:09 Copiei um VPC Windows 7 da Rose que copiou do Nilson/César e converti para VMWare. Só que o sistema está dando tela azul e reiniciando. 16:04 Vamos acompanhar passo-a-passo do processo de boot e logon do SMMC e SSGina para documentar e entender melhor o que pode dar errado. 16:06 Para acompanhar tudo do começo começo mesmo, vamos baixar os fontes, colocar os símbolos e depurar pelo kernel. Hardcore na veia! 17:31 Documentar processo de logon amanhã.

= 2009-04-03
:date: 2009-04-03

Hoje eu faço a documentação do login.

= 2009-04-06
:date: 2009-04-06

Vamos aproveitar o tempo de documentação da GINA para entender o problema de lentidão da rede nos logons do Bradesco no Rio... 08:54 Lá vamos nós no esquema kernel-debug/user-debug/winlogon. 09:18 A primeira função da GINA chamada é a WlxNegotiate (documentado). Isso permite que a GINA decida se suporta ou não a versão instalada do WinLogon. 09:20 É usado o esquema padrão de redireção: um assert para verificar se a variável da classe CStubGina está lá; se estiver, é chamado o evento relacionado com a função (no caso, OnWlzNegotiate). No construtor de um CStubGina, o m_pInstance contém a última instância (this). 09:21 Note que isso funciona tanto para versões "puras" de uma CStubGina quanto versões especializadas, como uma classe derivada. 09:23 A consequencia disso é que é MUITO IMPORTANTE saber se mais de uma instância de CStubGina está sendo criada, e EM QUAL ORDEM. A ordem influencia na CStubGina que estará recebendo os eventos das funções exportadas. 09:24 Nós sabemos que essa instância atualmente é a CSSGina _SSGina. 09:26 Das coisas que são feitas no construtor da SsGina, a mais impactante seria a inicialização de m_Net, o accessor de rede da classe. 09:37 O método CStubGina::OnWlxNegotiate chama o método LoadTargetGina passando a string MsGina.dll; ou seja, por padrão, a GINA carregada é a da Microsoft. 09:40 O CStubGina::LoadTargetGina é bem simples: carrega a DLL e obtém os endereços das funções suportadas. Agora, sabemos que o OnWlxNegotiate chamado é da CSSGina, pois se trata de uma função virtual. 09:41 Por mais bizarro que seja, o método CSSGina::OnWlxNegotiate chama o método LoadTargetGina DIRETAMENTE DA VARIÁVEL GLOBAL _SSGina. O CSSGina::LoadTargetGina NÃO sobrescreve o CStubGina::LoadTargetGina, pois possui assinatura diferente. 09:51 A partir do carregamento da GINA (qualquer GINA) a CSSGina toma conta dos eventos Wlx, e redireciona o comando caso achar conveniente. 10:25 Enquanto isso, na SMMClândia, existe a variável CEngine _Engine que, adivinhe só?, é uma global da classe CEngine, a classe mais importante da SMMClândia. 10:30 Provavelmente a chamada a CEngine::OnStartup é feita pelo PreMessageLoop. 10:43 Quando o WinLogon sobe, os processos já de pé são: System, smss.exe, autochk.exe e csrss.exe. Existem dois ntsd aqui no WinDbg, sendo que um deles é pai do WinLogon e o outro é o pai deste. 10:49 Pelo jeito, no WlzInitialize, a CSSGina faz valer a variável m_bByPass, que é definida como TRUE quando conseguimos abrir o evento SSGinaLoaded. Isso significa que, por precaução (ou problema passados), não devemos executar o código de CSSGina::OnWlxInitializeAfter a não ser que sejamos os primeiros a ser chamados. 10:50 Só no OnWlxInitializeAfter da CSSGina que o RegisterApplication é chamado, o que nos dá poderes de fazer coisas... 10:51 Chamada legada: VerifyCryptKey. Verificava um valor no WinLogon sobre chave de criptografia para lockar um volume e dar chance do finado HDCript encriptar o HD antes do logon. 10:52 Aqui são criados os eventos de MagicNumber e OverLogon. 10:54 Após isso é criada uma thread feita especialmente para lidar com esses eventos. 10:55 WlxDisplayStatusMessage passa direto por todos... 10:56 WlxRemoveStatusMessage passa direto por todos... 11:06 Carregou o smmc.exe 11:09 No PreMessageLoop é chamado o CEngine::OnStartup que chama RegisterApplication, ScuaInit, CoInitializeEx e a galera do mal. Isso inicializa também a classe CServices, que inicializa outras classes, como os ícones. 11:10 Carregamos as bibliotecas (LoadLibraries). 11:11 Começa a ScuaAud.dll. É aí que logamos o primeiro evento: UserBoot. 11:12 Carregamos os timeouts do SyncDB e criamos a thread do SShell, que no XP não faz nada. 11:13 Ctrl+Alt+Del chama o WlxLoggedOutSAS, provavelmente uma das funções mais importantes para nós. 11:16 A verão SSGina limpa as variáveis de logon, tenta usar o MagicNumber (se deu problema, reboot), verifica informações de auto logon. Se existir um DefaultPassword e AutoAdminLogon, então o logon será bypassado. 11:21 Depois das maracutais de MagicNumber e auto logon, chamamos o WlxLoggedOutSAS da StubGina. 11:22 Se a GINA retornou WLX_SAS_ACTION_LOGON, então o logon foi efetuado com sucesso. 11:45 Existe um mecanismo de timeout no logon usando MagicNumber. Se isso for ativado, então um logoff é forçado. 13:26 A função SendLogonNotification roda em paralelo após o logon para economizar tempo, já que precisamos apenas avisar o SMMC que o logon foi feito com sucesso, qual o usuário e o domínio e seu token. O melhor está por vir, quando o shell for criado. 15:33 O Zé mandou um log do Bradesco/Rio que contém o problema de rede da SSGina. 16:38 Agora está confirmado: OnWlxActivateUserShell chama UserInitNtf, que chama o CEngine::OnUserInit, que inicia todo o processo de regras do SCUA.

= 2009-04-07
:date: 2009-04-07

Documentado no trac e testando build após tantos logs reformados e novos. 12:47 Vendo o problema de lentidão na rede através dos logs que o Zé me mandou. Existe uma flag na biblioteca que define quando a rede está lenta. Vou começar a logar a mudança desse flag. Vamos ver as funções que usam rede: 12:49 NetUserChangePassword, NetUserGetInfo, NetGetDCName, NetUserModalsGet, NetLocalGroupGetMembers, NetGroupGetUsers, NetUserGetLocalGroups, NetLocalGroupEnum, NetGroupEnum, NetGroupGetInfo, NetServerGetInfo, NetQueryDisplayInformation, NetWkstaGetInfo, NetUserAdd, NetGroupAdd, NetGroupAddUser, NetApiBufferAllocate, NetUserSetInfo. 13:04 Existe uma chamada descoberta de LookupAccountName em GetIdUser. Continuo chamando essa função, mas aviso se a rede estiver lenta. Devemos decidir no futuro o que fazer com isso em condições péssimas de rede. 13:35 Coloquei log em todas as chamadas das derivadas de NetAccess e nos eventos da GINA. 14:43 Logs funcionando; porém ocorreram erros durante o logon. Vou checar.

= 2009-04-08
:date: 2009-04-08

Agora, voltando para o CTree. O que estávamos fazendo mesmo? Ah, vamos tentar consertar a geração do cornograma. 17:52 Tudo compilando na mão. Amanhã devo testar build automático com o novo namespace CTree.

= 2009-04-09
:date: 2009-04-09

Feito o isolamento do CTree e agora tudo compila. Próximo passo: fazer o exportador de dados.

= 2009-04-13
:date: 2009-04-13

Vamos tentar alterar a mudança de versão. 15:39 Desisti de mudar a forma de alterar versão porque já perdi metade do dia tentando compilar minhas modificações da quinta e a outra metade explicando funções virtuais para a Rose.

= 2009-04-14
:date: 2009-04-14

Compilando! Já foi pro build oficial. Agora devo continuar a exportação. 09:37 Que eu me lembro, existia um erro ao obter os IDs dos objetos, retornando alguns IDs como desconhecidos, assim duplicando o script que insere esses objetos no SQL; 10:12 Está exportando os objetos corretamente! E o script de criação das tabelas foi atualizado. Comitando... 10:24 Incluí TYPE_APPL como zero para evitar inserts errados na base. 15:41 Temos que reverter algumas coisas. Não faz sentido o ID representar a máscara de bits, mas o ID pode representar o bit usado para guardar a representação. Sacou? 16:45 Pronto! Agora o SQL vai guardar o bit que define algum estado.

= 2009-04-15
:date: 2009-04-15

Hoje tomei vitamina de mamão, que possui muita vitamina A e potássio, além de ser rico em uma substância que combate os radicais livres. 08:43 A relação entre as regras (policies) no SQL e o CTree é bem complicada: o ID da regra está na faixa de valores de bit (0 a 15) do ID da regra, sendo que a posição onde esse short está pode ser obtido no campo ordem do tipo da regra. Vixi maria, melhor desenhar bem isso... 11:22 Terminada a importação em CTree e montagem do script. Feito o refactory on-demand para transformar minhas funções deliciosas de conversão em um namespace Helper do Sql e uma classe, todos no SsCtree. 11:24 Tentando compilar. Acho que vou gastar um tempinho com o tal do erro do include da winsock. 11:45 Resolvido o problema da winsock2: foi só remover todos os includes! 11:46 Agora teremos que, através da leitura SQL da SsSql::Database fazer com que ela se converta em uma base de dados CTree em memória... de gelo. 13:24 Lembre-se que falta importar e exportar as rotas e diretivas globais. O meio-campo está pronto, mas falta fazer! 17:59 Já está convertendo os objetos e suas rotas. Agora falta a bagunça do policy e as regras das rotas.

= 2009-04-17
:date: 2009-04-17

O que que eu estava fazendo ontem? Já não lembro. Como é DIFÍCIL se concentrar no trabalho quando tem muitas pessoas em volta falando... 09:30 Pra que que eu tenho dois níveis de abstração? Os accessors já não seriam responsáveis por copiar as linhas das tabelas dentro de estruturas CTree? Dessa forma, nem preciso de headers específicos para o SQL. Os accessors fazem tudo, porque eles possuem inteligência superior. 09:36 Ou talvez seja interessante possuirmos funções de conversão entre accessors e ctree. Essa seria a função do nosso amigo CTreeImporter. Ele instancia um Database e manda ler a base de dados SQL. Podemos ter rotinas de leitura para objetos, rotas e diretivas, que criarão as tabelas necessárias e chamarão rotinas de callback para conversão linha a linha. 13:10 Que bosta. Refactory de código novo. Bom, melhor que ficar uma bosta de bagunça, que é como eu estou vendo isso aqui... 14:02 Pronto. Agora temos os accessors lendo a base de dados e a classe Database transformando tudo isso em listas. Existem três funções principais para ler: objetos, regras e diretivas. Todas funcionam no esquema de callback (para casos de base de dados gigante) e todas recebem uma instância de Database, para poder referenciar outras tabelas se necessário.

= 2009-04-20
:date: 2009-04-20

Andando de bike tive a seguinte ideia sobre o sincronismo: vamos repassar todos os itens do SQL e criar listas de execução indexadas pelos itens atuais do CTree. 15:48 É importante notar que, no caso dos objetos, tanto o OBJID quanto o nome do objeto são usados como índices, então devem ser levados em conta na hora de buscar itens na lista. Se o objeto não existir na lista atual, incluir na lista de execução como "adicionar". 15:49 Se o objeto existir na lista atual e não tiver nenhuma diferença, ele permanece, entra na lista de execução como mantém. 15:50 Se o objeto existir e contiver diferenças (não nos índices), então ele é adicionado na lista de execução como "alterar". Agora é a vez de rodar os objetos atuais do CTree. Na primeira rodada, se o objeto não existir na lista de execução, então ele é apagado do banco. 15:51 Na segunda rodada, se o objeto existir na lista de execução e estiver marcado para manter, nada é feito. Se existir e for marcado para alterar, salvar dados alterados. 15:52 A última rodada é da lista de execução, que pega os itens a ser adicionados e adiciona.

= 2009-04-22
:date: 2009-04-22

Vou ter que receber um contexto no ReadObjects, do contrário não tem como estruturar os dados lidos. 10:32 Agora as funções de callback viraram métodos virtuais de uma interface que irá receber eventos. Isso possibilitará também, futuramente, a utilização de eventos do próprio SQL para sincronismo pontual. 11:02 A função SaveObjectInfo NÃO SALVA informações de usuários e grupos. Mas alguém salva!! 11:09 Os usuários são obtidos no Windows. Agora temos que alterar a forma como funciona para suportar SQL e AO MESMO TEMPO a forma antiga. 11:28 Vamos imaginar os problemas durantes os testes. Por enquanto, sincronismos das duas outras coisas: regras e diretivas. 16:09 Sincronismo de regras está funcionando. Com direitos (YES!!!) 16:10 Agora só falta as diretivas... lá lá lá... 21:03 Pronto! Já está inserindo, atualizando e apagando objetos, regras e diretivas de todos os objetos não-reservados do SecuritySuite.

= 2009-04-23
:date: 2009-04-23

Exportando regras e diretivas globais com o ID 0. Agora não podemos importar esse ID para o CTree, ou melhor dizendo, importá-lo de forma especial. 14:49 Após alguns ajustes (como voltar a usar as flags como IDs dos status, tipo e categoria do objeto) é possível exportar as informações do CTree, importar pelo SQL e ainda sincronizar sem nenhuma mudança exceto a inserção dos objetos (que NÃO estão no banco CTree). 15:21 Achei um bug no contador de referência da ClPolicy: não usava Interlocked operations. 16:42 Até aqui tudo bem, exceto o travamento no destrutor da ClPolicy, coisa de sincronismo mal feito... Amanhã o próximo passo é transformar o teste em um serviço e começar o procedimento padrão para testar as regras sendo enviadas para o cliente;

= 2009-04-24
:date: 2009-04-24

Temos duas coisas imprescindíveis para fazer: corrigir bug do ClPolicy e implementar sincronismos das regras de auditoria (que agora estão misturadas com a de acesso). 17:10 Trocando as estruturas de log de diretórios e URLs. Como é bom o build centralizado.

= 2009-04-27
:date: 2009-04-27

Com a modelagem atual, não tem como saber se o usuário deseja que a rota seja controlada ou não, já que a rota de auditoria está junto desta. É necessário que exista algum indicador de controle na rota. Estaremos no momento ignorando rotas de acesso sem qualquer flag, lembrando que isso é o mais comum. 13:12 Outro problema: não dá pra inserir duas vezes dois DirectorInfo, já que esse item só existe um por objeto (na versão atual). 17:07 Confirmado: não adianta criar um usuário no SQL e sincronizar, uma vez que um outro ID é usado para este usuário.

= 2009-04-28
:date: 2009-04-28

Tudo feito, mas falta sincronizar corretamente os objetos CTree por causa de seus IDs erráticos. Se um objeto é criado no SQL ele deve ser replicado no CTree. 13:35 Agora sincronizando objetos corretamente com o ID do CTree; porém, objetos novos criados no NT deverão ser criados no SQL também, e vice-versa, até que definamos como as coisas vão funcionar para integarir com o sistema operacional. 14:48 Temos uma escolha a fazer: mais testes de usabilidade ou console de gerenciamento SQL.

= 2009-04-29
:date: 2009-04-29

Algumas mudanças no leiaute da tabela. Iremos ignorar o director_info e passar a usar apenas o dir_info com o código do objeto. Esse mesmo dir_info irá conter uma coluna options que irá definir ser a rota é de acesso, auditoria ou ambos.

= 2009-04-30
:date: 2009-04-30

Já foi feita a alteração das tabelas, com a matança do DirectorInfo e DirectorOption e o nascimento do DirOption (opções da rota: auditoria e/ou acesso) e DirInfoOption (relação entre rotas e opções). Agora falta testar o sincronismo, porque aparentemente a exportação funcionou.

= 2009-05-04
:date: 2009-05-04

Temos que criar mais uma tabela para guardar valores da aplicação que não existem na tabela original do SQL. 10:30 Outra coisa é a mensagem de logon, que irá ser guardada em uma tabela de parâmetros globais. 13:06 Problemas no login do Safra: usuários locais não logam. O usuário não está sendo mais criado no servidor, mas também não loga. Zé está para mandar os logs do SMMC. 14:18 Mudando prioridade para logon do SMMC. Vamos examinar passo-a-passo o que teremos que fazer para definir o funcionamento do logon no SMMC.

= 2009-05-06
:date: 2009-05-06

Fiz uma tabela para testar todas as condições de logon (ou as mais usuais) para mim e para o suporte. Para mim inicialmente; para o suporte nos próximos releases... Resolvi vários problemas da 8.20: relogon remoto e criação automática de usuários quando com flag de autologon. 10:13 O Zé achou um bug que deixava o SMMC ocupando 100% do processamento. Isso acontecia porque corrigi o problema do contador de referências do ClPolicy, que agora deixava criada a thread dos hooks. Essa thread ocupa muito processamento, pois fica o tempo todo tratando mensagens e chamando a função Wait do sistema. Só que minha última correção, que foi a eliminação de objetos residentes no SMMC (ClPolicy e ClObject) elimina essa thread, que só fica ativa se pelo menos uma instância da ClPolicy está criada. 10:14 Resta saber se existirão efeitos colaterais. Provavelmente não, já que ninguém ligou que esse hook não estava ativo... 13:08 Lentidão na rede simulado nas minhas três VMs: um domínio, um servidor de segurança e um cliente. 13:50 Agora travou o logoff. O logoff está preso por três threads: a do OnLogoff espera pela thread de acesso, que aguarda uma terceira thread. Uma delas seta um evento que deve fazer a última thread ir embora, mas isso não aconteceu dessa vez. 14:32 Problemas com a auto-criação de usuários no esquema cliente-domínio-servidor. Além da lerdeza que pegou de vez minhas VMs. 15:10 Tá muuuuuuuuuuuito lento. Tá comendo todo meu tempo de teste.

= 2009-05-07
:date: 2009-05-07

Voltando para lentidão no logon. Montando novamente o ambiente... 11:10 IP da VM XP em host only: 192.168.118.129.

= 2009-05-08
:date: 2009-05-08

Tenho que isolar a thread da ScuaHook da instanciação do ClPolicy para manter minha correção que permite exclusão da pasta de cachê. 15:12 Aparentemente, pelo que o Zé disse, usuários que logam no domínio estão aplicando regras do template. Ummmm...

= 2009-05-11
:date: 2009-05-11

Por algum motivo ainda inexplicável, o WaitForSingleObject da thread de hooks das diretivas de Copiar/Colar e PrintScreen ocupava 100% da CPU se chamada com 0 milissegundos de espera. Mais inexplicável ainda, porém, é o fato de voltarmos para o código anterior que aguardava por um mísero milissegundo (um!) e a CPU voltar ao normal! 11:29 A versão corrigida por mim do ScuaHook, há muuuito tempo atrás, não estava ainda consolidada na solução. Então foi preciso "migrar" o fonte para o Bazaar e ajustá-lo para integrar ao build oficial, que está rodando nesse exato momento. ScuaHook 8.0.0.0. Ops, 8.0.0.1 =) 13:35 Campos que deverão ser removidos da base de dados SQL: SCUAUserID, UserType, MachineNodeAddress, PID, FileHandle. Deverá ser criada nova coluna baseada no novo flag de herança das aplicações: ProcessAccount (coluna Conta do LogView). 18:30 Feitas as coisa do sequelê. Agora é só fazer um teste básico amanhã de manhã.

= 2009-05-12
:date: 2009-05-12

Finalizando últimas modificações acordadas com o Renato... agora só falta recompilar no build oficial e testar básico. Fechamos o chamado.

= 2009-05-13
:date: 2009-05-13

Precisamos fechar os bugs da 8.20. Após isso, temos que atualizar o script de testes e fazer um chamado pro suporte testar tudo.

= 2009-05-15
:date: 2009-05-15

Testando o roteiro de testes. Na VM, usando USB criptografada, tá travando tudo!

= 2009-05-18
:date: 2009-05-18

Voltando para a análise de lentidão no logon. Agora ou vai ou racha! Tenho que analisar primeiro os logs, porque é a maneira mais fácil de detectar problemas no logon. Talvez depurar pelo kernel já seja uma alternativa. 09:42 O tempo de espero no logon parece ter um tempo fixo, exato. 10:33 Frase de efeito: Pobre é como papel higiênico. Quando não está no rolo está na merda. 10:35 Tentei colocar o SS no domínio, mas a lentidão persiste. 10:39 Mudei de SS para o servidor de domínio e ficou rápido. Voltei para o 2000 e continou rápido! Agora estou reiniciando com o 2000... 10:53 Ativa o log e agora fica rápido. 13:31 A parte em que tudo fica travado não aparece nos logs. Vamos ver se depurando há alguma luz no final do túnel (o trem). 13:47 O sistema agora ficou apenas um minuto lento. Mesmo com a versão Release... 15:04 O César comentou que o que ele fez para reproduzir a lentidão foi usar um Alias para o Servidor de Segurança. Esse Alias é criado no servidor DNS do servidor de domínio. Aparentemente, não ficou tão lento assim, já que minha VM sem SCUA já fica lenta pra caramba!

= 2009-05-19
:date: 2009-05-19

Hoje vamos tentar simular DE VERDADE o tal problema do logon. 10:11 O esquema explicado pelo César foi de criar um Alias para o Servidor de Segurança e usá-lo no lugar do nome original. Dessa forma, segundo ele, às vezes o login fica muito lento. 10:13 Nas minhas VMs essa lentidão não ocorreu (ainda). 10:14 Talvez essa lentidão possa ser "amenizada" se considerarmos qualquer chamada à biblioteca de rede do Windows pecado e só usarmos se o timeout mínimo for diferente de zero.

= 2009-05-20
:date: 2009-05-20

A atualização da 7.qualquer coisa pra 8.20 que está dando erro de logon no Manager: a Cássia mandou os SDiag do servidor e dos clientes com versão antiga e nova. 17:06 Entendi que o problema na lentidão do logon afeta mais o usuário porque na verdade sem o Scua o Windows consegue logar mesmo sem rede. Se pudéssemos aplicar isso para todos os logons, não teríamos esse problema.

= 2009-05-21
:date: 2009-05-21

Preciso achar informações que não existem em cache para convencer o Zé de que uma mudança maior é necessária 13:06 A versão 8.19 está dando problemas para pegar a categoria do usuário. Da mesma forma, apesar da categoria mostrar Usuário, consigo acessar o Scua2000. 15:08 Lista de problemas relacionados com o logon: O SMMC está demorando para subir em determinadas máquina e isso trava a comunicação com a GINA. 15:10 A detecção de rede lenta está retardando o funcionamento da GINA e SShell, apesar de ter funcionado nas máquinas do Bradesco. 15:12 Em algumas situações falha a obtenção da categoria do usuário e o cache fica com -3, transformando um administrador em um usuário com acesso ao Scua2000. 15:13 De acordo com a Mara (não reproduzido) a troca de categoria no servidor de segurança não está sendo replicado para o cache, só se este for apagado. Pode ser outro efeito do mesmo problema do GetCategory. Coisas a ser feitas: Reproduzir situação em que SMMC demora para ser iniciado em uma máquina testável. 15:14 Reproduzir problema da troca de categoria em máquina testável. 15:15 Criar novo formato de cache e forma de obtê-lo através da rede não pode depender da biblioteca de rede do Windows.

= 2009-05-22
:date: 2009-05-22

Mensagem de beep pra avisar que build acabou: if exist Beep.txt type Beep.txt.

= 2009-05-25
:date: 2009-05-25

Compilando modificações do Fernando. Agora preciso descobrir por que não está funcionando a comunicação dos agentes de inventário do servidor de teste. 13:32 Separado o AddLogDb do configurador (AddLog em services, configurador em interface). 13:33 Apaguei a versão para 4.0 e coloquei o Common em uma LIB. 14:45 O Zé falou que o AddLogDB mais novo é o do Gérson, que não precisa de 500 executáveis para fazer o serviço. Agora estou tentando compilar ele. 14:59 Ahhhhhhh, entendi... o Gérson mudou só o Service 4, mas isso está no vss factory e não no "backup" do Zé. Posso teoricamente corrigir isso no último branch. 15:41 Novamente reajustando o projeto, só que agora a partir da Service 4.0.

= 2009-05-26
:date: 2009-05-26

O log está funcionando, e de quebra já com o formato novo, pois estamos usando a lib nova. 09:35 Está funcionando com a versão antiga e a nova. Agora tenho que usar a mesma lógica do viewer para adicionar conta onde não tem. 09:57 Blzinha. Tá funfando... agora... como instala essa joça? 16:06 Está dando erro na hora de instalar o serviço como usuário. 16:33 DtImpSet ou ConvSrv? Qual dos dois tem culpa no cartório?

= 2009-05-28
:date: 2009-05-28

Atenção para teste de desempenho: 10212 linhas... 09:09 Rodando! Cabou. Mas deu erro

= 2009-05-29
:date: 2009-05-29

Após o incêndio do Bradesco, posso voltar rapidamente para o AddLogDB e sua otimização. Foi feita a mudança de que, quando especificado 0 minutos de espera para o processamento dos arquivos, seja aguardada modificações na pasta. Tenho que testar. 10:49 Mudei a variável de estado (running) para um evento que é setado quando o aplicativo deve ir embora. Isso deve evitar o pooling que era feito.

= 2009-06-01
:date: 2009-06-01

Desenvolvendo alguns testes "básicos" para as correções no instalador do Security.

= 2009-06-02
:date: 2009-06-02

Estou parando de gerar meus logs diários e isso não é bom: tenho que me focar em descobrir quanto tempo gasto em cada coisa. 09:27 Passos para testar sobrescrita de secserv.ini: define o secserv.ini original como somente leitura, descompacte o instalador e crie um arquivo secserv.ini dentro da pasta antes de rodar o setup. 09:34 Na versão interativa, o instalador pergunta se deseja sobrescrever o arquivo secserv.ini, com as opções de Sim, Não e Cancelar. 09:39 Na versão silenciosa, a mesma coisa acontece. 10:34 Testando instalação cliente sobre instalação servidor. 10:35 Agora é exibida a mensagem e a instalação realmente aborta. Porém, se eu não estou interessado em instalar a versão cliente, sou obrigado a editar o setup.ini. 10:39 Apesar disso, a proteção funciona. 10:45 Instalando correção do SShell instalador incorretamente no XP. 11:07 SShell está sendo executado pelo instalador.

= 2009-06-03
:date: 2009-06-03

Definindo cronograma para projeto megalomaníaco da 8.21. Começando pelo MLogon e seu problema na macro. 14:33 Instalei SCUA 7.44 (driver 5.0.0.1) e CryptWiz versão estável e no boot deu erro.

= 2009-06-08
:date: 2009-06-08

Fazendo teste de criação de chave no registro como administrador do domínio. Um administrador local consegue apagá-la? 16:17 Essa teoria não faz muito sentido, pois administradores de domínio precisam ser, necessariamente, administradores locais da máquina para fazer alterações. Administradores locais já possuem "poder total" na máquina onde mexem.

= 2009-06-09
:date: 2009-06-09

Testando atualização que dá tela azul. Já se sabe que isso não acontece entre 8.18 e 8.21, mas ocorre entre 8.19 e 8.21. Trocando todos os drivers na 8.18 pelos da 8.19 ANTES de atualizar para 8.21, dá tela azul. Realizando novo teste para confirmar. 14:28 Testado e aprovado. 14:29 O Release da 8.18 é o 280, onde foram alteradas as versões dos drivers que iriam para a versão estável da 8.18. Esses drivers compilados DEVEM funcionar. 14:33 Se funcionar a compilação da 8.18, passaremos a compilar as versões 8.19, até dar tela azul. 14:38 Temos cinco commits para verificar qual deles dá tela azul. Começando pelo do meio: 370. 14:41 370: tela azul. 14:43 Voltando um commit atrás, para o 344, só resta ele antes da 8.18. Ou é ele ou é a 370. 14:52 344: tela azul. Testando instalação 8.19 para ter certeza. Se for, então o primeiro commit logo após a versão 8.18 já foi cagada... Desconfio da chegada da filha pródiga, Scuac32... 14:58 O problema deve estar entre os revnos 280 e 344... 14:59 Vamos retirar as modificações do novo formato de log (revno 338). 15:03 No próximo teste temos várias modificações do Fernando logo após a inclusão do StupScua (a partir do revno 326). 15:07 Mudanças a dar com pau no revno 293.1.1 (Log de execução de processo em contas diferentes da atual). 15:10 Bingo! Estamos entre a 326 e a 332, onde o driver praticamente mudou de sexo. Vamos para a 328. 15:13 Erros de compilação, indo para o 330. 15:15 Indo para o 332: não compila. 15:17 Essa versão deve dar tela azul, o que significaria que a bagunça toda está na bagunça desses commits. 16:33 Analisei o bugcheck e encontrei o problema. O help do WinDbg ensina como trackear os drivers que bloqueiam páginas de memória, mas não desbloqueiam. Dessa forma, ativei o bicho e na versão Debug ele até me mostrou a linha de código responsável pelo lock! 16:34 O lock é usado para a auditoria do SCUA. Temos que chamar no SMMC a função UnregisterUser, que irá chamar a ScuaAud, que irá chamar o driver, que irá desbloquear as páginas bloqueadas. Tudo isso é chamado no OnShutdown, que aparentemente não é chamado ao parar o serviço. O serviço SMMC nunca é parado, só que nas atualizações o instalador pára ele, gerando toda essa confusão. 16:48 Agora não gera mais tela azul! Trava o SMMC =P

= 2009-06-10
:date: 2009-06-10

Indo para a AllianZ analisar lentidão no logon. Peguei tudo: sources e logs. Ah, e o St. Expedito.

= 2009-06-12
:date: 2009-06-12

Cá estou em casa para fazer o início da prova de conceito contra a lentidão do logon. A ideia primária é entender como funciona enviar e resetar as regras do SCUA. 08:52 Depurando SMMC. A chamada de SACC_RegisterUser2 no login do paulo recebeu os seguintes dados: UserInfo = Paulo blá blá blá, AccessThread = 0, LinkedAccess = 1, FileScan = 0, TrashDir = "C:\RECYCLED\*\*.*", Event = 0xdc, Event2 = 0xe0, SharedVariable = "", hUserToken = 0x220. 09:09 Muito bem, já conseguimos um token. 09:43 A classe CPolicies é central. No startup é chamado o Initialize, no shutdown o Terminate. Quando o usuário loga é enviado o SendToAccessService seguido de LogonUser. Isso quer dizer que o Unregister provavelmente só é enviado no final, mesmo. 10:02 Tudo bem, conseguimos setar as regras do SCUA com um simples aplicativo console e sem tela azul. Setamos quantas vezes quiser O problema da tela azul está na memória compartilhada que é passada. Ela é bloqueada na memória. Se passamos NULL, então está tudo OK. 11:02 Hora de ver o conteúdo do IO Control. 11:03 Passa os dois eventos que já vimos (mais sobre eles depois), um ProcCall vazio, ThreadCall inválida (0xcccccccc), um ponteiro para Chain, em LogFileName o path da lixeira, em LogonPath o path do banco de dados CTree loal, retFlag zerado, bLinkedAccess cmo true, fileScan como zero, sem flags, sem id do usuário, e um SharedVariable setado. 11:16 Pausa para o café. 13:17 Já consigo montar duas correntes de regras e enviar pra o driver, que monta a fila do usuário e uma de aplicação. Só que por algum motivo o LeVxd não consegue ler a fila da aplicação (ou parece que não). 14:50 Eu IA almoçar, mas meus tios chegaram. Saco =P 14:51 Muito bem. O problema agora é o log. O driver de fato precisa de uma memória bloqueada, e essa memória precisa estar rodando em algum processo. Se for no XP, poderia ser feito com a GINA. Se for no Vista, talvez um processo do usuário. De qualquer forma, se o processo é terminado, surge uma tela azul 15:25 O problema da Allianz irá exigir algumas modificações no processo de logon que está há anos funcionando. Isso quer dizer que iremos mexer em código bem antigo. O lado bom é que esse código bem antigo vem sendo mantido com gambi em cima de gambi, nos dando a chance agora de limpar um pouco essa bagunça

= 2009-06-15
:date: 2009-06-15

Montei um cronograma para os dois problemas de logon que sabemos que temos: o start do SMMC (cerca de três semanas) e a lentidão nas requisições de rede (cerca de três meses). Agora, voltando para a tela azul.. 13:04 Coisas para lembrar para sempre: a lista de máquinas do debug remoto não fica no registro, nem no profile do usuário. Fica em C:\Documents and Settings\All Users\dados de aplicativos\Microsoft\Native Debug Engine. Um arquivo chamado NativePorts.dat. 13:11 O Zé deu uma ótima ideia de teste: bootar/logar a máquina sem cabo de rede. Com isso a GINA deve saber que estamos sem rede e tudo loga normal (será?). 13:58 Na verdade, o OnShutdown já era chamado. Só que por algum motivo ainda assim o processo era terminado com páginas bloqueadas. Resta saber se isso é resultado de mudanças no driver (mais provável) ou o SMMC passou a parar com mais eficiência, não dando tempo para o desbloqueamento de páginas. 14:27 Mesmo chamando o UnregisterUser o driver continua deixando a memória bloqueada. Alguma coisa errada deve estar acontecendo na hora de desalocar. 15:05 Um assert muito sinistro está acontecendo sempre em processinfo.cpp, line 1138. Acontece na criação de processos, se não me engano (versão Debug do driver, a Release ignora que explodimos). 15:42 Achei o possível problema: a chamada a MmProbeAndLockPages precisa de sua contraparte, MmUnlockPages, que NÃO está sendo chamada. 15:48 Não deu tela azul!!!!!!! 17:36 Corrigido e documentado o problema da tela azul. 17:37 Só temos que lembrar quando o suporte vier chorar que a "versão mais nova" está dando tela azul na atualização. Amanhã, avaliar os chamados do Vista e fazer um bem bolado de testes.

= 2009-06-16
:date: 2009-06-16

Aguardando serial do Windows Vista para instalar. E enquanto isso mudando o incremento das versões dos produtos (colocando build number). 10:54 Mudei o VersionChanger apenas para exibir um único define (o build number) e criei uma batch que consegue atualizar o build number e fazer commit dele. Acredito que o commit é a melhor solução, já que podemos trackear facilmente pelo controle de fonte os builds acontecendo. O próximo passo é colocar tags dos builds automaticamente se estes derem certo. Daí fica babinha trackear os releases enviados para o suporte. 11:38 Se a variável de ambiente %ProductVersion% existir mesmo após chamar o BuildInstaller, então podemos apenas trocar o BuildInstaller e "aproveitar" que um instalador foi gerado com sucesso e gerar uma tag. 11:40 Legal. As tags são enviadas para o servidor assim que aplicadas. 14:33 Coloquei mais um up antes de inserir modificação do build para certificar que está tudo atualizado. Não sei ainda se é o certo a fazer. Idealmente nem deveríamos mexer no controle de fonte durante o build. Porém, só o tempo dirá se esta escolha foi boa ou má. 14:35 Tiver que fazer uma minifaxina do ChangeVersion, porque estava quase impossível dar manutenção nele. Pelo menos agora temos três funções bem comportadas e um switch controlador dos argumentos. 15:46 Faltou zerar o build quando mudarmos a versão. Simples de fazer agora. 15:51 Feito! =) 15:55 Iniciando testes do SCUA no Vista que capturei do HD do Rafa. 20:40 Se eu compro mais 2000, perco 1000 se chega a 4. Mas se eu compro e vai a 8, ganho mais 9000. 23:49 Essa REEM4 parece interessante. Tem o PL a descoberto, mas é o valor da receita de um ano. Os lucros líquido de um ano pagam a dívida total e ainda sobre uns 8 milhões. Considerando que ela tá valendo no mercado 24 milhões, esse seria um P/L de 3, mas está em 1. 23:50 O interessante é que ela não está tão mal no ativo, que é de 144 (o PL está 232 negativo). Apenas o último resultado do trimestre parece desapontar, com EBIT de 5 milhões e líquido de meio milhão.

= 2009-06-17
:date: 2009-06-17

Hoje lembrei que só preciso selecionar uma pasta no vi que ele lista os arquivos para mim. Depois posso até navegar. 09:42 Testando o ingresso no domínio VMDEV06. Com a VM-DEV06-XP2 funcionou. Isso quer dizer que quem tá cagado é o Vista. 10:01 Um cara falou para habilitar WINS no cliente e no servidor, e no servidor habilitar lookup por Netbios. Outra dica é desabilitar ambos os firewalls para tentar o join. 10:02 O outro falou para desabilitar ipv6. 10:04 Ipv6 não é. 14:03 Consegui!! O Zé deu a dica: para fazer um Windows Vista ingressar em um domínio LOCAL, use sempre .LOCAL após o nome do domínio. Funcionou. 14:17 Para atualizar as diretivas no XP/Vista, usar o comando gpupdate. 15:04 Perdi minha XP antiga (não está achando alguns arquivos do HD) e estou configurando então o do scua4, porque esto louco para ver o VS 2010 =) 16:44 Não há espaço em disco para o VS 2010. O jeito é aguardar um momento melhor. 17:00 Logon no Vista com SCUA falhou! Ótimo, agora vamos melhorar esse processo amanhã.

= 2009-06-18
:date: 2009-06-18

O primeiro erro diz respeito ao SShell retornar o código de erro de rede não disponível, pois tenta se conectar com um servidor AD que não está realmente disponível. O fato do AD não estar disponível, no entanto, não impossibilita o logon em cache, até pelo fato do Servidor de Segurança poder estar em outro lugar. 10:09 O erro seguinte é do SyncDB: acesso negado. Aparentemente o Vista não está conseguindo, na conta de sistema, conectar-se a um 2000. O motivo pode ser ele estar no domínio 2k3 e esse domínio não ter as diretivas de conexão remota com impersonate ativadas. 10:15 Funcionou. Aparentemente, dependemos das diretivas do servidor de domínio TAMBÉM. Importante lembrar o Zé. 10:44 Criei dois snapshots pro Vista e pro 2k3 com o Patch 2003 aplicado. Instalei novamente o SCUA e... novamente o erro de acesso negado. 11:18 Agora logou com os snapshots antigos (sem Patch 2003). Isso quer dizer que precisamos do servidor de domínio ligado e operando? 11:22 Esse tal de SQLite parece lindo, e perfeito para o Babel! 11:24 Segundo logon, após restart, com 2003 desligado, funcionou. 11:25 Agora testando novamente a instalação e três boots e logons iniciais com o 2003 desligado. Se todos falharem, é alguma coisa no primeiro logon. Sempre, independente de patch. 11:27 Por algum motivo, parece que ele está perdendo a configuração do firewall. 13:11 O serial do Vista que o Flávio me passou é 9DRWM-7G742-PKKBM-9TX2D-9338B. 14:06 Com o Windows XP o erro do primeiro logon não acontece. 14:11 Vamos ver isso do ponto de vista do SyncDB. 14:33 Driver do 8.20 é 5.2.0.6. 15:12 CrYpt#4250@11-08 16:15 Sabemos que o instalador do 5.2 consegue copiar a chave antiga de um cryptwiz do 5.1. O detalhe é que a versão do Cryptwiz no 5.1 é 5.0 =P Curioso, o Zé comentou que no Bradesco eles não conseguem logar nem a pau em um domínio criado com .local no Vista. Pelo menos aqui eu consigo, mas tem que estar disponível o servidor de domínio no primeiro logon.] 16:16 Vamos testar agora se tem alguma relação com o cache. 16:18 Ah, essa é muito boa! Não loga como admin como o teste anterior, mas loga com Paulo!! 16:20 Opa, corrigindo: não loga mais com o Paulo. Por incrível que pareça, foi apenas o primeiro logon como Paulo. 16:51 Já vou liberar a correção do SShell e passar adiante a versão. Avisar o Flávio que existem pendências ainda não resolvidas, mas nada de se precipitar nas movimentações. 16:59 Ideia de artigo: as voltas que às vezes temos que dar. Como consegui destravar a mensagem de EULA da ferramenta da Sysinternals através da própria Sysinternals. 17:00 Fui rodar o pslist remotamente, só que ele travou, pois nunca tinha sido rodado naquela máquina, e existe um valor no registro que identifica isso. Para solucionar o problema, tive que abrir outro console remoto e criar essa chave no registro, para duas ferramentas: pslist e pskill. Depois de criado, rodei o pskill para matar o primeiro pslist 17:01 Depois, pude rodar novamente o pslist, pois ele não travou na pergunta do EULA, pois já estava no registro constanto que eu cliquei em Sim a primeira vez que ele executou (bom, mais ou menos). 17:17 O SMMC roda o SyncDB do system32, passa o path completo, usa \\ no nome do servidor e aspas duplas no nome do usuário. É uma diferença! 17:23 Rodei exatamente como o SMMC roda o SyncDB e funcionou! Mas na hora do logon simplesmente não funciona.

= 2009-06-19
:date: 2009-06-19

Temos que focar em saber o que de diferente acontece quando o 2k3 esta ligado e quando não está. Também porque conseguimos executar o SyncDB com sucesso pelo psexec. 10:46 Analisando os logs do RegMon e parando os serviços "paráveis" para ver se é algum componente do sistema em específico, e não todo o sistema. 10:51 O primeiro passou. 10:52 O próximo processo tem cinco serviços: Centro de distribuição de chaves Kerberos (kdc), Logon de rede (NetLogon), Serviços IPSEC (PolicyAgent), Armazenamento protegido (ProtectedStorage) e Gerenciador de contas de segurança (SamSs). Começando pelo logon de rede. 10:55 Bingo! 13:59 Vamos arregaçar as mangas e depurar feito homem: no kernel! 16:40 Começo a desconfiar dos acessos do componente COM DataSvr instalado no 2000 em vez das configurações da estação, já que o problema está em instanciar um componente remoto naquela máquina. Vamos rodar o ProcMon para ver o que dá. 16:51 Tentando abrir mais a segurança do DataSvr do 2000.

= 2009-06-20
:date: 2009-06-20

Acabei de finalizar a versão do Babel usando SQLite. Em menos de duas horas (apesar de uma estrutura SQL bem básica). Ficou MUITO mais rápido que o original. Sem condições.

= 2009-06-22
:date: 2009-06-22

Voltando para a criptografia. A meta de hoje é corrigir o programinha que autentica o Magic Number e documentar a diferença entre versões. 10:00 Dica de depuração: usar ,hr após o nome da variável vai exibir a descrição do código de erro. 10:07 Trocando de acesso genérico à máquina para acesso específico no compartilhamento de administração admin$. Dessa forma funciona no 2000. 10:25 Vamos aproveitar e obter o domínio padrão e usá-lo no lugar de sempre o primeiro domínio (isso vai garantir que usuários que sempre logam no domínio usem o domínio como garantidor). 10:30 Problema: se defino como admin$ o compartilhamento apenas administradores poderão se logar. Isso quer dizer que ao pegar o domínio padrão poderemos limitar o uso da ferramenta na rede. 10:36 Troquei para ipc$ e funcionou no XP real (scuacorp), XP virtual (local) e 2k (local). Testando agora no domínio; 10:58 Funcionou. Último teste é no Vista. Devemos avisar o usuário sobre o detalhe de desconectar de todos os mapeamentos daquela máquina, salvo se usar o mesmo usuário. Também é bom trocarmos a mensagem de erro para direto no console. 11:11 Funcionou no vista como local, mas ele precisa ser executado com privilégio aumentado. Talvez colocar o manifesto seria uma boa ideia. 11:12 Também funciona como paulo, mas é preciso lembrar de apagar as conexões criadas com privilégio aumentado, pois estas conexões NÃO serão vistas em um prompt comum de administradorzinho. 11:37 Funcionou o logon no domínio também. 16:10 Nova ideia para artigo: sobrecarga de funções não valem em espaços de nomes diferentes. 16:29 Apesar de ter funcionado o truquezinho do UAC, o Vista exibiu mensagem de erro imaginando que a "instalação" não foi feita com sucesso. Dessa forma, vamos deixar isso de lado enquanto não temos tempo de mexer com arquivos manifestos. 16:30 Compilando última versão do dia e enviando para testes.

= 2009-06-23
:date: 2009-06-23

Voltando os testes do HSI/WMI. Aproveitei e atualizei o processo de build para conseguirmos atar os builds e controle de fonte. 10:53 Vários problemas com o versionamento do inventário. Um deles é que nossa versão não bate com as versões passadas do scua4, e outra é que o versionamento inclui as três partes antes do build. 11:19 Testando versão serviço do inventário em XP. 11:20 Windows exibe mensagem do firewall para o HsiService. Não bom. 11:26 Corrigindo: testando versão NÃO-serviço. 11:39 Testando trocando apenas o WMI e o executável. 13:18 Modo que estou testando: instalando os pacotes de serviço e para 9x normalmente e capturando a saída da versão atual. Após isso paro o inventário, troco o executável do teste e a DLL do WMI, os dats de captura, e volto a rodar e capturar a saída. 13:47 As duas versões deu GPF. 15:06 Gravei dumps criados pelo ADPlus durante os testes do Vista. O crash ocorre DEPOIS do inventário, provavelmente durante a comunicação com o servidor. 15:16 Como previsto, rodar no 98 sem WMI não gera as tags CpuName e CpuVendor. 15:17 Com o WMI instalado é possível obter as tags ComputerManuf, ComputerMOdel, ComputerSerial, BaseBoardManuf e BaseBoardSerial a mais do que na versão original. 15:23 Em CpuName, o nome do "Intel(R) Core(TM)2 CPU processor" vira "Intel Celeron processor". 15:25 No valor DoUpdate de CpuSpeed é colocado corretamente um número (1862), enquanto na versão antiga foi colocado o valor "E". Nova tag DesktopLaptop indica Other. Versão nova capturou um slot de RAM (DRAM) que a antiga não capturou. 15:26 AssetTag indicando "No Asset Tag". 15:27 Enquanto na versão antiga a placa de rede AMD foi acusada como NetworkComponent, na nova ela vira NetworkInterface, com suas configurações de IP, máscara e MAC Address. Está capturando todos os slots PCI (a antiga não capturou). 15:29 Na versão one shot para 98 foi retirado corretamente o final "None" de ComputerModel. BaseBoardModel ficou faltando. Mesma diferença de CpuName. DesktopLaptop = Other. 15:30 Continua não capturando os slots de memória, enquanto na versão antiga temos a lista de conectores DIMM. Correção: captura apenas os slots que contém memória. 15:32 No Windows XP, continuam as mesmas diferenças apontadas no último teste nos três componentes testados (HSI, HSIService e one shot). 15:33 Mesmas diferenças no Windows Vista. 15:34 No Windows Vista, foi detectado um crash logo após fazer o inventário, provavelmente na parte de comunicação com o servidor. Foram gerados alguns dumps com a ajuda do utilitário AdPlus e coletadas informações da execução juntamente com os símbolos para a versão em teste. Obs.: O mesmo problema foi apresentado na versão atual. 15:35 Para reproduzir o problema no Windows Vista, o serviço deve ser iniciado, ele deve coletar todo o inventário e gerar o arquivo HSI.DAT. Após isso e mais cerca de um minuto o serviço capota e o Windows exibe uma mensagem de erro. 15:37 Os arquivos do crash estão disponíveis em \\scua4\DESENV\Dumps\Crash_Mode__Date_06-23-2009__Time_14-23-3333.7z. 16:51 Finalizados os testes, podemos começar com o scuafdsk. Acredito que um simples DeviceIoControl pode retornar o último status do driver.

= 2009-06-24
:date: 2009-06-24

Vamos tentar incrementar a obtenção do status do driver para que no CryptWiz seja possível obter o ponto exato onde ele está (além de logarmos isso, é claro). 09:59 Analisando se podemos gerar uma lista de linhas de log em kernel e repassar isso para a userland. Possível, é. O detalhe é que essa lista não pode crescer além de um limite razoável. Também devemos sincronizar a lista. 10:00 Como temos apenas um dia para isso, pretendo usar apenas um status e tá bom. 14:34 Funcionou. Agora temos que pensar em uma maneira de exibir isso para o usuário. 15:45 Testando nova funcionalidade. Quando ocorrer algum erro o driver irá cair fora do loop de criptografia. 16:12 Passos a realizar: 1. usar o Progress apenas como indicador de andamento, 2. atualizar o código de erro do driver sempre que recebido e 3. modificar o cryptwiz para se tocar que a vaca foi pro brejo.

= 2009-06-25
:date: 2009-06-25

Fiz uma implementação de testes. Se for criado um CryptWiz.ini na mesma pasta e inserido o valor CryptStatus em Test ele é usado no lugar do que o driver retorna. Isso pode ser usado para simular um erro durante a criptografia. 15:39 Seguindo o tutorial do Fernando para criar logs no event viewer pelo driver. 16:47 O Zé testou tirar a dependência do SMMC com o RPC e o logon foi instantâneo. Agora ele irá testar nos outros clientes com problema de lentidão. 16:59 Eventos necessários para alerta: instalação/desinstalação da proteção de boot, início/fim da criptografia, erros durante a criptografia. Mais algum?

= 2009-06-26
:date: 2009-06-26

Lembrar de alterar instalador do SCUA para incluir scuafdsk como fonte de eventos. 13:26 Faltou a desinstalação de boot. 13:54 Pelo visto ninguém testou instalar proteção de boot, encriptar hd, desencriptar hd e tentar instalar novamente. 14:35 Bom, é oficial: detectado que alguma coisa diferente acontece e o driver não detecta mais que está controlando o HD. 16:14 Colocando breakpoint em todas as chamadas ao EventLog e tentando passar por todas as situaões embaraçosas de erro. 16:25 Vamos ignorar o teste dos buracos porque a VM não tem buracos no HD. Vamos imaginar que vai dar tudo certo porque o índice estará correto.

= 2009-06-29
:date: 2009-06-29

Mais um problema: a instalação da proteção de boot falha no meio e o CryptWiz acha normal, reboota e ainda continua o processo. 10:10 Alterado comportamento da instalação de boot: se não for possível escrever as chaves, então restaura a MBR. Se não for possível escrever o status, então restaura MBR. Alterada mensagem do CryptWiz para aquela coisa vaga de "não foi possível instalar a MBR" para "não foi possível instalar o boot seguro". 10:51 Corrigidos os passos mais importantes, agora é hora de testar o Release. 14:57 Documentado procedimento para o travamento da criptografia. Agora podemos documentar o funcionamento atual da criptografia. 18:06 Na decriptografia, o driver altera o campo setor inicial até chegar ao final. Quando chega, restaura o setor inicial e zera o setor final, já que a criptografia foi finalizada. Um tanto suspeito, já que na instalação da proteção o valor setor final já está definido.

= 2009-06-30
:date: 2009-06-30

Primeiro vamos mapear quais caracteres são permitidos nas senhas. Ou tudo junto. 10:14 Scuafdsk 4.0.0.21, primeiro colocado no controle de fonte. 10:15 Scuafdsk 4.0.1.0 Usando magicnumber no CD de contingência e cryptwiz para funcionar com essa solução adotada. 10:16 Scuafdsk 4.0.1.1 Aparentemente a última versão antes de mudarmos a versão da criptografia para 2.0.0.0. 10:17 Alterada criptografia de 1.51 para 2.00: alterada criptografia para 192 bits. O Scuafdsk virou de 4.0.1.1 para 2.0.0.0. 10:19 Foi alterada a versão para 5X e o Scuafdsk manteve sua versão 2.0.0.0. 10:20 Logo depois da tag 5.0.0.0 existiu a mudança da versão usada no magic number. Vamos dar agora um retrospecto no Security para ver onde se enfia esse driver. 10:22 Copiando todas as versões antigas de 2008. Como eu entrei em 2008, são essas as versões que modificam o driver de criptografia COM CERTEZA. 10:41 Scuafdsk 5.0.0.1: alteramos a criptografia para 128 bits. 13:54 Os caracteres "extendidos" permitidos pelo instalador do CryptWiz: !@#%&()-=_+[]{},.; 15:19 Vendo agora o problema do CD de contingência. Se fazemos a decriptografia completa ele não fica mais bootável. 15:24 Para o teste eles usaram senha suporte em tudo (dupla custódia) e para boot Scua2009 (devido às restrições de segurança). O ID do cliente (felizmente só com a primeira letra em maiúscula) Scua.

= 2009-07-01
:date: 2009-07-01

O tamanho da partição de teste do XP que deu pau tem 10237 MB, de acordo com o fdisk 98. Isso quer dizer que a gente precisa de um HD igual ou maior. 13:55 Mais diferenças: a partição principal e única tem 10 GB, mas o disco inteiro tem 20 GB. Estou criando outra vm com as mesmas configurações e ver no que dá. 16:57 Após restaurar, usar fixboot e bootcfg /default. 17:12 Aparentemente, com apenas 1 GB, a decriptografia funcionou. Porém, com outra VM idêntica, apenas com a diferença do tamanho (20 GB, que nem a original) o mesmo resultado apareceu nos primeiros setores. 18:02 Mais um bug: se desencriptarmos pelo CD de contingência e restaurarmos a MBR, não será possível encriptar novamente, já que a restauração não retira o flag de boot seguro instalado. 20:59 Acho que encontrei o erro. Aparentemente é o lseek. O mais estranho é que esse erro existia desde a primeira versão do Bazaar (William). E eu lembro de termos desencriptado HDs maiores que 2 GB pelo CD de contingência. Bom, está rodando os 20 GB. Vamos ver. Troquei o lseek pelo lseek64, de acordo com o compilador a melhor opção.

= 2009-07-02
:date: 2009-07-02

Compilado CD com a big correção dos 4 GB. Espero que tudo funcione. Agora vamos partir para o Copiar/Colar e PrintScreen. 10:54 Testei Copiar/Colar e PrintScreen no XP e não deu nada. Mandei para testes para o César e agora vou mexer no Switch User do Vista. 13:20 Lendo sobre pular no Vim 13:21 O que aprendi: Posso usar c no lugar de d para apagar e já editar. Posso usar r para trocar um caractere rapidinho. Posso usar d com qualquer outra forma de navegação que ele navega até o local apagando tudo pela frente. O comando dwTeste troca a palavra atual por Teste. 13:22 Existem os atalhos {, }, ( e ) para navegar entre parágrafos (linhas separadas por linha em branco) e frases (texto separado por ponto). Agora é só praticar! 13:40 Vamos começar a setar o padrão como Release. 17:03 Para continuar o algoritmo, precisamos estimar o tempo gasto por segundo (aguardar 1% de progresso) e exibir o tempo por segundo multiplicado pela porcentagem concluída e restante.

= 2009-07-03
:date: 2009-07-03

Vou ligar para a Relacho Grande quando precisar desabafar: (11) 4353-7099.

= 2009-07-06
:date: 2009-07-06

Uma boa metodologia para encontrar bugs: TRAFFIC! 1. [T]rack the problem (Trace o problema?), 2. [R]eproduce the failure (Reproduza a falha?), 3. [A]utomate and simplify (Automatizar e simplificar?), 4. [F]ind infection origins (essa é difícil... Fique nas origens da infecção?), 5. [F]ocus on the most likely origins (Foque nas origens mais prováveis?), 6. [I]solate the infection chain (Isole a infecção em cadeia?), 7. [C]orrect the defect (Corriga o defeito!). 09:20 As origens mais prováveis: infecções conhecidas; causas no estado, código e entrada; anomalias; código fedendo! 10:21 Bom, primeiro vamos entender como funciona esse gerador de ISOs. 14:12 Vamos baixar o Fedora mais novo e tentar enfiar o kernel dele =P 15:28 Erro de servidor de RPC não disponível nas máquinas Vista do Bradesco. O César detectou que de fato o serviço de RPC estava desabilitado nas máquinas com problema.

= 2009-07-07
:date: 2009-07-07

Baixei o Fedora Live-CD mais novo e um modelo de como fazer CDs bootáveis. O script do cara cria um root, um initfr e um ISO a partir de uma pasta. 11:14 Aparentemente tenho que trocar o arquivo root.ext2 do original para a imagem nova. Só não sei se é esse img gigante que está dentro do ISO do Fedora. 16:24 Agora estou tentando instalar o Knoppix no HD para ter um outro Linux para poder trabalhar com o tutorial de como customizar o Knoppix. Afff...

= 2009-07-08
:date: 2009-07-08

Deu tela azul no Vista de divisão por zero (trap no kernel) após logar como administrador e com o HD 100% encriptado.

= 2009-07-13
:date: 2009-07-13

Pesquisando a lentidão do SMMC... "This can impact such issues as a domain controller, which cannot access the network where a protocol, or a service such as DHCP, attempts to load BEFORE the network card has had a chance to be bound (for example, Compaq Netflex)." 10:16 Voltando para o Copiar/Colar. Os rapazes do suporte encontraram a situação em que ocorre o problema. 10:32 Fiz a descrição correta do bug no chamado. 11:27 Para corrigir o apagamento do cache, apagamos as instâncias das classes CTree no UserInit após usar. Isso faz com que, ao ser chamada a função StopAccThread o ponteiro para ClPolicy esteja zerado e não chame a função ResetRegistry, que tiraria todos os policies e ainda pararia a thread dos hooks de PrintScreen e Copy/Paste. Fora isso, ao setar as diretivas não existe um "senão" estiver definido para Copy/Paste, pois já se imaginava que isso estivesse parado para o próximo logon. 11:28 Solução semi-alternativa: se o ponteiro estiver zerado, então crie uma instância "rapidinha" para resetar as diretivas. Vamos ver no que dá. 14:32 Alterando SMMC (para usar objeto automático apenas para parar hooks) e ScuaHook (o pedaço de código horrível que usa variáveis globais para controlar um estado multithreading e nem distingue mais entre hook de Copy/Paste e PrintScreen. 15:32 Interessante. O hook de shell de um usuário não irá interferir nas janelas do outro usuário. Por outro lado, um hook definido na conta de sistema interfere na conta de todos os usuários! 16:04 A função de instalação é chamada 5 vezes porque estamos definindo a police para cada usuário no registro. Ufa! 20:15 Ajustando o hook nojento do ScuaHook... 20:41 Genial! Para calcular o sistema price (todas as prestações são iguais) precisamos saber qual a quantidade total de juros dividida equitativamente pelas prestações. Solução? Primeiro calculamos o valor total do saldo devedor após todos os juros (para isso basta aplicar 1,juros n vezes). Depois pegamos os juros% disso (juros% vezes o 1,juros n vezes). Sabendo a porcentagem total dos juros, dividimos essa mesma porcentagem pela porcentagem total (1,juros n vezes menos 1).

= 2009-07-14
:date: 2009-07-14

Compilando modificação do Ferdinando... 13:55 Quando o SShell falha ao executar a lista de executáveis no backup SShell (substituto do UserInit) ele retorna erro e o sistema executa logoff. Precisamos talvez dar uma olhada no UserInit para ver se é esse o comportamento esperado.

= 2009-07-15
:date: 2009-07-15

Analisando log do Bradesco. 09:20 Pelo log do SShell ele nunca é executado durante o logon, pois sempre roda como sistema (executado pelo SMMC). Isso quer dizer que pode haver algo de errado com os valores UserInit e SShell na chave WinLogon. 09:48 Achei uma falha na proteção de Copiar/Colar: não podemos copiar pela área de transferência, mas podemos arrastar! 10:03 Descoberta impressionante: o hook como está funciona apenas para administradores. Para qualquer usuário ele não funciona. Criei o serviço ScuaHook e iniciei no desktop de um admin, e para todos admins funcionou. Já para os paulos... 10:11 Já era esperado, mas só pra confirmar: o hook só funciona na sessão 0, que é onde roda o serviço que o iniciou. Só que só roda na sessão 0 como administrador! 10:22 Para o hook funcionar em algum lugar, quando o serviço for iniciado ele tem que estar na sessão 0 ativa. 10:23 A versão de maio funciona como usuário! 10:58 Corrigindo a loucura: a versão de maio também não funciona se o usuário for um... usuário! 11:37 Descobri! Quando estava copiando a DLL da real para a virtual, as permissões do arquivo só davam direito de administradores acessarem. Como quando copiamos arquivos a VMWare primeiro copia para a pasta temporária do usuário e depois para a pasta final, durante a passagem pelo tempo as permissões do administrador "grudavam" no arquivo.

= 2009-07-16
:date: 2009-07-16

Temos que mudar agora as descrições das diretivas da área de transferência para algo mais correto e mais abrangente (de acordo com o e-mail que enviei ao Flávio). 10:12 Quando o LoadLibrary retorna o erro 0x000001e7 é por causa que a DLL foi forçada a ser carregada em um endereço que não está disponível. 11:15 Alterada descrição da diretiva "Desativar os comandos Copiar, Recortar e Colar" para "Desativar Área de Transferência entre aplicativos". Alterado "Desativar a tecla PrintScreen" para "Desativar cópia de imagens (ex: tecla PrintScreen)". 11:16 Em inglês foi de "Disable the Copy, Cut and Paste commands" para "Disable Clipboard among applications". E "Disable PrintScreen key" para "Disable image copy (ex: PrintScreen key)". Adicionado log de erro caso falhe o carregamento da ScuaHook. 11:17 Adicionado hook à própria ScuaHook, durante a instalação e desinstalação dos hooks. 11:18 Implementada atualização do HMODULE da DLL carregada (pois ela pode ter sido realocada). Agora o install/uninstall pode funcionar indefinidamente (anteriormente só era possível instalar o hook uma vez). 11:19 O hook de PrintScreen foi alterado para usar controle do Clipboard por mensagens de janela. Agora cada vez que uma imagem tentar ser copiada será emitido um bepp. 11:21 Foi alterado o teste StartScuaHook para suportar ambos os hooks seletivamente. É suportado agora o argumento "all" para ambos, "ccp" para CopyPaste e "ps" para PrintScreen. O padrão é apenas CopyPaste. 14:03 Como eu já havia previsto, existe uma falha no conceito de proteção da área de transferência para impedir cópia de dados não-autorizados: o arrastar-e-soltar. Hoje em dia muitos editores permitem que o usuário arraste o texto selecionado para outra aplicação, o que burlaria a proteção do clipboard pelo simples fato que essa operação NÃO usa o clipboard. 14:04 É bom lembrar também que, no novo hook de PrintScreen, não é apenas o PrintScreen que fica desativado, mas qualquer cópia de imagem, inclusive dentro do próprio aplicativo (por exemplo, o Photoshop ou o Paint Brush). 14:06 Essa modificação exige a troca do SMMC para que a instalação dos hooks seja feita com sucesso, independente do número de logons e logoffs que os usuários façam. 17:05 Vários problemas de segurança advém da proteção da área de transferência, pois sabemos que ela não é infalível. Por exemplo, o usuário pode copiar conteúdo por maneiras alternativas: arrastar-e-soltar texto, usar "copiar de..." de algumas aplicações, abrir o gmail de dentro do Visual Studio (ex. de vazamento de código).

= 2009-07-17
:date: 2009-07-17

Recebi meu product key do Windows 7: Q3VMJ-TMJ3M-99RF9-CVPJ3-Q7VF3 13:36 Mulheres da classe C assalariadas aumentando, o que significa maior compra de alimentos prontos e mais fáceis de usar (maior uso de plástico). 13:58 O PlantUML funciona bem, é modo texto, simples de usar na linha de comando (automatizável). 13:59 O UmlPad era meu sonho: rápido, simples e não feito em Java. Ele é visual, mas bem simples de mexer. Pode exportar os diagramas para bmp e jpeg.

= 2009-07-21
:date: 2009-07-21

Iniciando avaliação da complexidade atual do logon no Security. Vamos pegar essa bagaça e enfiar goela abaixo. 11:41 WinDbg espetado, servidor de segurança 2k. 13:32 Temos que ir livrando as amarras do logon aos poucos. Se tanto faz a procedência do que recebermos por RPC na porta de serviços SCUA, esse tanto faz no futuro pode virar SQL direto. Se tanto faz com o cache é estruturado, esse tanto faz pode virar XML no futuro. Mas por enquanto é importante apenas o tanto faz, que continua sendo CTree. 13:50 Legal, SsGina usa apenas o INotify. Podemos usar como base de nosso esqueminha genial de redirecionamento de logon. 14:11 Já vi que a SsGina tá usando policies... que bagunça! 14:13 Alguma coisa fez o sistema logar, mesmo com erro no UserInitNtf (sem querer). 15:34 Agora são detalhes tão pequenos e nojentos no meio do logon... mas calma que a coisa vai... 16:00 O objeto CPolices precisa ficar vivo durante o login para receber os avisos de controle de acesso. 16:54 A thread de controle de acesso está disparando constantemente várias operações desconhecidas. 17:11 A estrutura base para o controle de acesso é a RegInfo (kernel). 17:12 Temos uma lista de paths no membro Chain do tipo QueueStructEx. 17:13 A tal da variável compartilhada entre user e kernel contém um ponteiro para a estrutura FULL_STRUCT, que contém um path completo, um nome de processo, uma operação e os direitos. 17:14 Aparentement é importante a variável que indica se é acesso vinculado ou não. Ou se tem acesso vinculado ou não. 17:15 O driver tenta mapear o hEvent (primeiro evento) dentro de PathControlEvent. 17:16 Mais um evento. Dessa vez é mapeado dentro de PathSyncEvent. Se LogFileName contiver algo, então é usado como o path da lixeira (?). 17:17 Se foi passada uma variável compartilhada, então compartilha (bloqueando a memória). 17:21 Ninguém usa ProcCall nem ThreadCall.

= 2009-07-22
:date: 2009-07-22

Tentando pelo jeito mais convencional: usar o código intocado do CEngine e simular um SMMC dentro da GINA. 09:46 Existe uma diretiva que proíbe logon local sem ser administrador. Essa é uma das outras diretivas esquisitas que teremos que implementar. 09:54 Talvez seja mais produtivo fazer "from the scratch" anyway. 10:17 ThreadCall aparentente está setada para 1 sem querer, já que 1 obviamente não é um ponteiro de função válido. 10:47 Ah! Ele usa UserID == 0 mesmo para indicar NÃO-master. Putz! 13:47 Tá, a gente já consegue, teoricamente, setar controle de acesso, auditoria e diretivas. 17:26 O log está funcionando no SMMC mas não está funcionando no meu EXE de teste, mesmo usando o mesmo ID e o mesmo processo, chamando a aud.

= 2009-07-23
:date: 2009-07-23

Como analisar um crash baseado apenas na versão do arquivo e em alguns endereços que o Windows nos deu? Essa é uma boa ideia de artigo. 08:16 Como é que a gente converte um "carimbo" de data/hora em uma data/hora de verdade? 13:11 Pronto, funcionando o log. Agora podemos partir para as diretivas e tá tudo certo (ou quase).

= 2009-07-24
:date: 2009-07-24

Bem, aparentemente a solução para meus problema sé usar janelas de verdade com mensagem WM_COPYDATA. Vamos ver...

= 2009-07-26
:date: 2009-07-26

Testando novamente escrita no PenDrive 11:24 A Economia de Mercado se rege através do Consumidor e do Produtor. A base dessa Economia é a liberdade de empreender, a não-intervenção do governo e a propriedade privada. 11:25 O que a Teoria da Firma tenta explicar é o comportamento da empresa quando esta está desenvolvendo alguma atividade produtiva. É para analisar produção e seu custo. 11:26 Firma é a unidade de produção, é a empresa em si, que tenta deseperadamente maximizar os resultados na velha relação produção/lucro. 13:57 Fator de produção é tudo que se emprega para virar produção (mão-de-obra, 

= 2009-07-27
:date: 2009-07-27

Aparentemente a janela criada no OnLogon fica em um desktop diferente, o que quer dizer que talvez a solução seja rodar o programa durante o UserInit e dar uma descansadinha... 14:31 Muitas complicações para fazer enxergar a janela do SACC_RegisterUser 15:15 Funcionou! Criei uma thread e a partir dela alterei o desktop para o default. Como o serviço SACC_Register roda também na station default funcionou. Agora vamos testar no Vista para desencargo, pois acho que teremos algum problema aí...

= 2009-07-28
:date: 2009-07-28

Mais problemas no update (aparentemente o StupScua capota com um tal de AgencyStationInst) e a tela azul do update da 8.19. Bom, testar Vista. 07:54 Apenas lembrando: a 8.22 é que vai para o Bradesco, porque algum idiota mandou um beta da 8.21. Dammed! 14:14 Windows 7: tela azul com IRQL not less or equal na hora de setar um evento no módulo de controle de processos do ScuaAcc. O KeSetEvent que sinaliza o erro. Estranhamente, o mesmo evento ocorre no Vista sem problemas. 14:15 Um detalhe é que no KeSetEvent do 7 ele eleva o IRQL para DPC, enquanto no Vista isso aparentemente não ocorre. Diz a documentação que quando passamos FALSE no último parâmetro ele não eleva, mas quando é TRUE eleva. Estamos passando FALSE. 14:22 Ói que estranho: troquei a alocação do KEVENT para dinâmica com NonPagedPool e o sistema travou! Não boota, mas não dá tela azul. Se eu booto sem depurador então dá tela azul. Vamos parar por aí... 15:13 Uma Window Station contém um ou mais desktop, possui segurança e fica relacionado com o processo que cria, e associado à sessão atual.

= 2009-07-29
:date: 2009-07-29

Teste com pipes: criar um pipe nomeado com direitos para qualquer um e simular "conexão" enviando um handle duplicado de um pipe anônimo de outro processo. Isso deve funcionar no Windows Vista sob qualquer condição de segurança. Se funcionar, estamos mais próximos da solução. 09:33 Existe um pipe que funciona como mensagens. Talvez todo o esquema de pipes anônimos seja desnecessário, uma vez que a função do pipe nomeado é servir de ponto de entrada de funções úteis. 10:52 Telefone do Zé no Brad: 4197 2012 11:24 OK. Funcionou. Devemos conectar no named pipe criado, que irá aguardar por alguma requisição de algum cliente. O cliente então pode chamar o CallNamedPipe com o formato DeviceIoControl. Do lado servidor ele sai do Connect, faz um ReadFile/WriteFile e o cliente retorna. O servidor então pode desconectar e voltar a usar o connect para outra requisição. 11:25 Agora temos que ver como isso se comporta no Vista. 14:24 Alterei o DACL do pipe e o Paulo e o Admin acessaram o serviço, mesmo não interagindo com o desktop. 14:33 Tudo foi um suuuuuuuuuucesso. Agora temos que alterar o loop de mensagens para pipes..

= 2009-07-30
:date: 2009-07-30

Tarefas para hoje? Deixar o SACC_RegisterUser pegando usuário de verdade... acho que é só. Ele já pode virar um serviço de login. Se tudo der certo, já criamos o serviço de sincronismo. Ah, sim, tem que tudo funcionar no Vista e no XP... 16:28 Agora o SMMC é um serviço que se chama SsLogin. Inicialmente a única razão dele existir é para fazer login: e sempre no cache.

= 2009-07-31
:date: 2009-07-31

Temos que ignorar se o servidor é local ou remoto (e sempre usar o cache) e temos que simular os eventos de logon e user init "bunitinho". Vamos tirar esse negócio da GINA verificar rede disponível. 14:03 Primeiro o básico: se comportar exatamente igual a um SMMC de gelo. 14:13 Não podemos eliminar o SMMC porque por enquanto ele é usado para outras coisas.

= 2009-08-03
:date: 2009-08-03

Vamos ver o que falta estudar rapidamente.... 09:27 Regras de três simples e composta. Como era a composta, mesmo? Vou perguntar pra Mitiko. Juros simples e compostos com capitalização e desconto. Eita nóis, acho que me viro. As taxas de juros preciso dar uma recordada... 09:32 Nossa, geometria espacial. Isso talvez seja melhor dar uma olhada...

= 2009-08-04
:date: 2009-08-04

Bom, vamos arrumar essa bagunça hoje e ver no que dá...

= 2009-08-05
:date: 2009-08-05

Resolver o problema da passagem do token e da criação da classe de janela (se houver problema). 15:25 Provavelmente está tudo OK. Pra hoje ainda falta o GetProcessID. 15:26 A tempo: o fato do SMMC e do SsLogin possuírem a mesma classe de janela não fez com que eles não funcionassem. 15:33 Tá bão demais. Vamos agora tentar eliminar alguns namespaces rapidamente da documentação. 18:08 Esqueci do Vista!!!

= 2009-08-06
:date: 2009-08-06

Chave do Windows 7 v. 64 bits: Product key: P72QK-2Y3B8-YDHDV-29DQB-QKWWM 14:36 Mais um bug cabuloso: se não acha o pipe não ocorre erro no login. 15:27 Sabemos que não deve funcionar em Windows NT, pois a função de que define a segurança do handle do pipe nomeado não existe. 17:04 Para suportar detach de processos depurados no Windows 2000 temos que instalar o serviço dbgproxy.

= 2009-08-07
:date: 2009-08-07

Deverei ser chamado para comparecer quando mandarem rodar esse login novo no NT/2000. Está escrito.

= 2009-08-13
:date: 2009-08-13

Voltando à lentidão de logon, o GetPolicies falha porque o SMMC não tá sabendo que alguém fez login. Vamos deixar o Zé descobrir isso... 13:26 Problema no login do Gustavo: O NotifyLogin não conseguiu achar o pipe a tempo, mas o UserInit sim, o que gera o conhecido travamento de aguardar eternamente por um login. 13:27 Solução: aguardar mais tempo pelo serviço, evitar espera eterna, etc. 16:32 Modificar SsInstall!StopSmmcEx (ou suas chamadas) para que seja usado o SsLogin no lugar (não sei ainda como).

= 2009-08-14
:date: 2009-08-14

Teste do OnStartShell feito com sucesso no vista, para administrador (depurado dos dois lados).

= 2009-08-20
:date: 2009-08-20

Nossa, faz tempo que não relato os acontecimentos para o diário de bordo! 09:14 Erros de compilação no projeto do VC6. Provavelmente mistura de runtimes novamente: a MFC e a LIBC (new e delete). 11:13 Notei que o cliente quando roda a versão configurada para ser silenciosa não sabe exatamente quando a instalação termina. Nesse caso é possível que ele reinicie sem saber, o que pode gerar problemas na instalação.

= 2009-08-25
:date: 2009-08-25

A função mais importante do MLogon é a MakeLogonuser.

= 2009-08-26
:date: 2009-08-26

Corrigido a tela azul do overlogon. Mas o logoff não está funcionando no caso do SsLogin (do SMMC funciona). 14:53 Foi corrigida a tela azul, mas manteve-se o problema durante o logoff (a ser resolvido se for REALMENTE importante).

= 2009-08-27
:date: 2009-08-27

A escrita da versão da mídia do Bradesco aparentemente escreve uma aplicação com o nome igual à versão (sem path nem rotas) e isso parece estar zoando a lista de aplicações do scua.

= 2009-08-28
:date: 2009-08-28

Ponto de vista interessante sobre hooks: WH_CALLWNDPROC grampeia o método DispatchMessage, enquanto o WH_GETMESSAGE grampeia o GetMessage/PeekMessage. Também existe o WH_CALLWNDPROCRET, chamado após a função de janela.

= 2009-08-29
:date: 2009-08-29

Testando o daytoday no Windows 7! 11:19 Agora o teste do backup escondido. 11:30 Mais um teste, agora com hidden não funcionando (vai ficar assim mesmo).

= 2009-09-01
:date: 2009-09-01

Verificando o funcionamento do controle remoto para vendermos essa bosta para o cliente. 10:50 Já vi que qualquer falha no HsiService do processo nem é reportado (ou não é respondido de acordo do lado acessador). 16:49 Tentando se concentrar para trabalhar. Se não trabalhar, fico com sono e as coisas pioram... bom, mas sem estresse =) 16:52 Mudando de tarefa: o César falou que o PrintScreen agora funciona no Excel, mas o Word insiste em capturar as cópias de tela...

= 2009-09-02
:date: 2009-09-02

Acordando novamente. Temos hoje a visita do Zé à AllianZ e os problemas de PrintScreen no Power Point e a geração dos logs. 08:25 Ainda não tá legal... o Power Point está travando ao copiar, o Excel até funciona, mas o Word continua copiando o PrintScreen (apesar de falhar durante a cola). 08:33 Tudo bem. Mexer no ScuaHook é legal, mas temos que dar uma olhada no log... 14:13 O hook de PrintScreen se mostra excessivamente lento junto do PowerPoint, em detrimento ao Word ou Excel. Indo para a AllianZ.

= 2009-09-03
:date: 2009-09-03

Vendo problema de sumir partição D (estendida) depois de desencriptar usando o CD de contingência. 10:46 O dump de setores de após a criptografia já mostra o backup sem a partição, o que pode ter ocorrido se (1) uma versão anterior tivesse deixado um backup sem partição e a instalação nova não tivesse sobrescrito o backup antigo ou (2) foi criada a partição após ter sido criptografado (pouco provável). 10:48 Existem dois tipos de correções possíveis: (1) certificar-se que o backup novo será sempre escrito e (2) quando restaurar o backup manter a tabela de partições (muda CryptWiz/Driver e CD de contingência). 13:05 O maior problema é que o usuário já está com a partição à mostra e logo após a decriptografia ela não está mais lá! Portanto, a correção politicamente correta e rápida é sempre utilizar a tabela de partições atual quando for desencriptar. Acredito que o CryptWiz já faz isso... 13:07 Não, ele não faz. Então temos que alterar o driver e o cd.

= 2009-09-04
:date: 2009-09-04

Corrigido também o ScuaFdsk e compilado um novo build do Security (o Security deve puxar o scuafdsk mais novo do build do HDEncryption). Agora devemos testar a desinstalação, o que é relativamente mais rápido que encriptar o disco inteiro.

= 2009-09-08
:date: 2009-09-08

OK. Vamos trabalhar. Talvez dar uma olhada naquele bug de listagem de grupos do CTreeExport antes do almoço... 12:43 Como descobrir o que aconteceu com uma fotografia pós-desastre? Avaliando as funções por onde o código passou. E não menos importante, junto de seus parâmetros. 14:26 Esse utoa é bem suspeito, já que ele converte buffers de 100 bytes com um limite de 256 de dentro da função. Talvez seja a hora de substituir ele de uma vez por wcstombs

= 2009-09-09
:date: 2009-09-09

Já vi que a área de transferência do Office bypassa legal nossa proteçãozinha de limpar clipboard. Os aplicativos do pacote compartilham uma área secundária de clipboard que não conseguimos limpar.

= 2009-09-10
:date: 2009-09-10

Bootar pelo CD de contingência; 18:19 Documentado o ScuaHook em um diagrama de atividades UML... uau, estamos progredindo nesse negócio de documentação! 18:20 Talvez uma solução provável seja gerar um ISO parecido com o que o TrueCrypt gera. São apenas 2 MB!

= 2009-09-11
:date: 2009-09-11

A solução da Truecrypt é muito específica, e levaria mais tempo que o planejado para desenvolver algo parecido (mesmo baseando-se na solução deles). 11:19 O César disse que onde o CTreeExport falhou todos são DCs. 15:33 Não é possível editar diretamente o squash porque ele é um file system de imagem comprimida _somente leitura_. Para fazer tudo direitinho temos que copiar o conteúdo inteiro do ISO, o conteúdo inteiro do squashfs e o arquivo ext3 (esse podemos montar e desmontar à vontade). 16:19 Vivendo e aprendendo. Ext3 foi alterado e copiado para a pasta de extração do Squash. O Squash foi gerado e copiado para dentro da pasta de extração do ISO. E o ISO foi gerado e copiado para fora da VM.

= 2009-09-14
:date: 2009-09-14

Fernando corrigiu a tela azul no Windows 7. Aparentemente relacionado com checagem de retorno de inicialização da LIB de informação de processos e atraso na inicialização dessa LIB. 10:23 Mesmo alterando o volume do CD editando "binariamente" a coisa não funfou. Vai saber... 10:50 A pasta isolinux está idêntica. Próxima... 10:53 Apenas um byte de diferença no arquivo Bootable_NoEmulation.img da pasta [BOOT]: o do offset 0x0C (0x1E no HDEncryption e 0x29 no Fedora). 10:54 A pasta EFI é idêntica. 10:55 Está tudo idêntico, menos o squashfs (e o detalhezinho do boot no emulation). 11:06 Mesmo o ISO não-tocado não boota se usado com o comando mkisofs. 12:49 Bom sinal. O controlador da Minerva comprou 100% das ações que seriam lançadas ao mercado para aumento de capital. 22:14 Analisando empresa Minerva. O caixa da empresa é bem previsível. Já o financeiro é lamentável, aos trancos e barrancos. No final de 2008, então, vou ladeira abaixo. 22:15 O último trimestre deu uma puta subida, mas isso aliado a um histórico deplorável leva a crer que esse negócio pode ser sazonal. 22:47 Minerva está oferencendo subscrição de 0,4 ações para os acionistas, que converterão o recibo em opções de compra de BEEF3 até final de 2011. Esses papéis (BEEF11) poderão ser negociados no mercado de ações. 22:48 Parece ser bom negócio esperar para poder comprar esses papéis, que possibilitam alavancagem. 22:53 O câmbio estabilizando deu uma melhorada nas dívidas.

= 2009-09-15
:date: 2009-09-15

Ainda tentando arrumar espaço nesse HD! 10:42 Tive que apagar os dois HSs virtuais D: e S: e agora estou encolhendo o C:. Criarei novos drives e copiarei os dados "não-reproduzíveis" (que não estão no controle de fonte). 12:58 Criados novos HDs e agora estou copiando os dados. 13:54 Pronto. Build testado e agora podemos voltar para o Ubuntu. 15:22 Guia de como fazer um LiveCD "from scratch" para o Ubuntu. Parece mais didático e atualizado 18:20 Existe ainda algum erro no boot, e quando isso ocorre o CD sempre cai no prompt (initramfs); não está montando corretamente o squashfs; se bem que se eu pudesse editar o initrd para colocar o autoenc seria show de bola já.

= 2009-09-16
:date: 2009-09-16

É isso aí. Agora o problema é entender por que o Ubuntu meu não consegue montar o squashfs. 08:47 Testando com a pasta casper do CD original. 09:06 Talvez eu devesse entender um pouco mais dos internals... mas sinto que não temos tempo... 09:49 Vamos tentar agora com uma distro que é usada exatamente para recuperação e suporte técnico 10:28 O SysRescueCd é o primeiro distro que eu vejo que consegue achar a rede e sincronizar a data/hora de acordo com o servidor! 10:43 Montando o squashfs. O bom desse CD é que tudo é feito com um comando só, que roda um script espertão. 11:12 Tive que adicionar a partição de swap na jogada e agora parece estar funcionando 11:13 Para fazer isso usei o comando mkswap /dev/sda2 seguido de swapon /dev/sda2. 11:14 Para ver se deu certo, ver o conteúdo de /proc/swaps ou free. 13:11 Coloquei o autoenc e funcionou. Agora vamos começar os testes de funcionalidade. 14:43 Já que tirando o modo gráfico o tamanho fica a mesma coisa vamos manter tudo que tem direito. Temos que alterar o script inicial para rodar as "ferramentinhas" e copiar as "ferramentinhas" para dentro do bin.

= 2009-09-17
:date: 2009-09-17

Copiei o motd para o CD e vamos ver se ele é exibido ao logar. 09:44 Tudo bem, funciona. É preciso executar o restore para exibir o texto. Outra coisa é que a resolução não é das melhores (talvez seja configurável). 09:51 Coisas a fazer: rodar o livecd-login após o login, tentar alterar a resolução do console (modo gráfico?), mudar o nome do script restore. 11:15 O autorun roda antes de terminar o login. Isso quer dizer que não dá pra fazer em pequenos passos. 14:57 Alterando script inicial pré-login para exibir a ajuda do HDE, enumerar os hds e fazer login. 14:58 Alterado o motd para hdewelcome e o restore para hde, pois já existia um restore.

= 2009-09-18
:date: 2009-09-18

Escrevendo o procedimento de geração de novos CDs de contingência.

= 2009-09-21
:date: 2009-09-21

Começo a ficar com dúvidas sobre a Minerva... 10:21 Primeiros passos para descobrir como diabos esse inventário do Linux funciona. 10:22 No login é executado o hsilinuxregform e o hsilinux. A saída do hsilinux é redirecionado para hsilinux.pid, na $HOME do usuário. 10:23 Mais tarde esse hsilinux.pid será usado no script de logout, que "mata" o processo cujo PID seja a saída desse arquivo. 10:24 Com isso deduzimos duas coisas: os processos de cadastro e inventário são distintos. O inventário fica rodando durante o login do usuário e é terminado no logout. Os processos principais são o hslinuxregform (provavelmente para cadastro) e hsilinux (provavelmente para inventário). 10:27 Outra coisa! Os programas devem estar localizados em /usr/local/hsilinux. 10:28 Estranho. Se não fosse no Linux, que path seria =P 10:46 O hsilinux no boot do RescueCD ficou rodando! Mas nada aconteceu, então estou partindo para a solução Fedora 11 no HD e ver o que acontece. Talvez seja uma boa tentar instalar o KDevelop e ver o código-fonte. 14:04 Tentando instalar VMWare tool em vão no Fedora. Aparentemente a falta de padronização nos diretórios fez falhar a configuração. Posso rodar de novo da pasta bin. 15:45 O HsiPackageGen é colocado no lugar do gerador de mídia do GIBuild. Quando ele é executado, o path do XML a ser parseado é parseado (duh!) e seus executáveis são colocados dentro dele (até onde eu vi). 15:47 A base do pacote é um resource dentro do PackageGen com o número #500. 22:25 Interessante... estou sendo contatado para analisar dumps de kernel. Não de travamento ou crash, mas lentidão! 22:26 A Minerva não está mais tão endividada quanto a Margrif, por exemplo. Mas não foi a Margrif que teve prejuízo lascado no último ano. 22:27 Ops, Marfrig. 22:35 Na verdade a dívida bruta da Minerva chega a ser mais que o triplo do PL. 22:39 Na verdade o PL não está negativo. E vem grana nova por aí. Essa grana vai dar fôlego para as dívidas de curto prazo, pois se continuar com 30 mi de lucro por trimestre não vai conseguir saldar a dívida de mais de 400 mi no CP. 22:42 Acredito que o caso da Minerva realmente foi interessante enquanto ela valia um quinto do que vale hoje no mercado. Hoje com a subida fica difícil acreditar em lucros estrondosos com essa dívida de CP comendo todo o dinheiro de investimentos. 22:45 A questão da Grazziotin é: por que caiu tanto? Ou: por que subiu tanto para cair?

= 2009-09-22
:date: 2009-09-22

Testando novamente execução dos binários do hsilinux. 10:59 As mensagens de erro pelo rescuecd ficam em /var/log/messages. A configuração disso ficaria em /etc/syslog.conf, mas existe outra pasta. Não importa. Nesse arquivo dá pra achar os erros do inventário. 11:00 No Fedora 11 está dando problema de unresolved external com a libstdc++.so.5. Aparentemente nele vem a versão 6 e o projeto foi compilado com dependência compartilhada. É possível tirar isso com o parâmetro --disable-shared no gcc. Pra isso precisamos conseguir compilar os fontes =) No RescueCD deu o erro "Load of local inventory obj failed; trying to register..." 13:15 Analisando a cópia da cópia da cópia da cópia dos fontes do hsilinux. E nem foi o Rafael! 13:17 O src\a é idêntico ao src. Duh! 13:19 Entre o src e o src\a\hsilinyx.tgz existem diferenças nos Makefiles e em alguns fontes.

= 2009-09-23
:date: 2009-09-23

Eu já avisei que tem um pau no KDevelop que tem que alterar o script ltmain.sh? Todos os $echo que encontrar tem que virar %ECHO. 10:41 Agora não está mais compilando os projetos novos, mesmo alterando o main.sh. Qualquer projeto! 14:57 Está funcionando! Pega até o nome do host... 14:59 Só precisei usar um hsi.ini de um servidor do Config válido. Instalando Suse da Marisa. 15:01 Não consegui habilitar debug pelo KDevelop, mas o GDB funciona. Já quebra um galho quando for visitar o cliente... 15:02 Preciso perguntar para eles qual o método de instalação do LiveCD e como conectar em um servidor deles (se for possível). 15:13 Preciso do número da loja (ou não). IP da rede local? Número do caixa... 15:14 A loja é 666 e o caixa é o 6. O hostname é o mesmo da VM e não coloquei IP. Modelo da ECF? Pode ser SWEDA, BEMATECH ou EPSON. 15:25 Qual o modelo de impressoras fiscais que eles utilizam? 18:40 Vamos analisar aqueles dumps malditos agora..

= 2009-09-24
:date: 2009-09-24

Analisando dumps de memória. Windows 2000, IIS 5.0, usando AdPlus com parâmetro -hang e -iis, além de usar o cdb.exe como depurador. 15:10 Aparentemente o IIS estava trabalhando com o saite bradescoseguros. Temos 10 processos relacionados! 15:15 Nós temos como antivírus o VirusScan da McAfeee. Ah, é uma VM =) 15:40 Tem um programa escrito compaq. Podemos imaginar que é uma máquina compaq? 16:03 Foi detectado que as threads com mais tempo de execução estavam associadas pela pilha com o componente COMSVCS.DLL da Microsoft. Esse componente é de 5 de setembro de 2005. Essa análise é do processo DLLHOST.EXE 2680. 16:04 Foi feita uma pesquisa a respeito o que revelou um problema relativo a crash por causa de um critical section não iniciado corretamente para sistemas baseados em Windows 2000 (que é o caso). O relatório desse problema data de 7 de outubro de 2005, portanto, mais novo que a data do componente em questão. 16:05 Nele é citado o COM+ hotfix rollup package. Recomenda-se sua instalação. Porém, a data do componente é de 8 de abril de 2005, de acordo com o mesmo linque. 16:06 Recomenda-se sua atualização se essa já não foi feita.

= 2009-09-27
:date: 2009-09-27

Vamos começar a compilar e testar o RpcSvc. Espero que o último DDK (7) tenha o ATL, senão isso será impossível. 14:21 Por algum motivo temos um GPF quando paramos o serviço. Isso acontece exatamente durante a parada dos serviços específicos. 15:18 Descobri por que dava GPF de vez em quando. Quando a thread parava de escutar ela ia embora. Quando ia emobra o objeto local era destruído e só depois que os serviços eram parados.

= 2009-09-28
:date: 2009-09-28

Ainda com problema de sumir a partição D na AllianZ. Posso fazer um novo CD que tenha scripts para geração do backup dos primeiros setores e gravar em um PenDrive. 11:02 O script que faz backup no disquete está falhando. O que pode ser feito é arrumar esse script e fazer outro script para PenDrive. 15:17 Testando com as mesmas dimensões dos snapshots do César e tudo OK. Mesmo criando a partição APÓS a instalação da proteção de boot a lista de partições é mantida. Vamos então partir para facilitar o backup dos setores para poder analisar. 18:04 Criado página para o problema do CD de contingência.

= 2009-09-29
:date: 2009-09-29

Pelo jeito usar a biblioteca estática C++ pode dar dores de cabeça infernais (especialmente nos fins de semana). Por isso talvez seja melhor dar uma olhada como criar pacotes e colocar a dependência da LIB dentro dele. Tornando automático talvez impressione o cliente. 14:37 Esse linque explica o drama que é usar a C++ estática: 14:53 Achei um projeto que pode resolver o problema de RPM de uma vez por todas (risos incontroláveis) Vamos começar do simples: um script que instala o maldito e desinstala.

= 2009-09-30
:date: 2009-09-30

Como será o sincronismo de usuários? 09:16 A princípio, temos duas ações a tomar: 1. sincronizar os usuários do AD com o banco de dados SQL e 2. deliberadamente criar um usuário no AD e atualizá-lo no SQL para políticas como template. 09:17 Isso no sincronismo pode não funcionar mais, então teremos que fazer algumas alterações no modo como os usuários são sincronizados. 09:36 PÁRA TUDO! Vamos congelar o Linux e começar SQL do Bradescalho. É incrível o poder do Bradesco sobre a mente das pessoas. 15:02 Estou vivendo o deja vu que é configurar o SQL para acesso remoto. 16:07 Consegui conectar no SQL! Precisa tirar o IP dinâmico e colocar 2301 como fixo. E no caso de SP2+, desabilitar o firewall! 17:07 Telefone do Josias Costa, do desenv da BVA: 3595-3845.

= 2009-10-01
:date: 2009-10-01

Voltemos para trabalhar. Como vamos garantir a qualidade mínima das versões? Quais os testes automatizados simples que podemos fazer para começar? Onde fazer esses testes? 15:48 Bom, quebrei bastante a cabeça hoje tentando entender por que não consigo escrever no banco de dados... êta mundo véio sem portera!

= 2009-10-02
:date: 2009-10-02

Tá prontinho para depurar o DataSvr com as alterações para SQL. 23:27 É incrível como o processo de build realmente está bem facilitado para quem quiser colaborar com os projetos SCUA...

= 2009-10-04
:date: 2009-10-04

Podemos trocar o envio de updates para o servidor, pois é verificado apenas se o envio foi feito corretamente. No caso do primeiro envio continua síncrono, pois é necessário receber os dados de registro da máquina.

= 2009-10-05
:date: 2009-10-05

No CTree, as aplicações realmente são espelhadas pelo ObjInfo, mas para grupos e usuários isso não existe. Os IDs são gravados em SidInfo, o que não é espelhado no SQL. 10:05 A gente pode continuar com o mesmo sincronismo de objetos, porém ao encontrar um objeto no SQL que não foi encontrado no CTree devemos atualizar o ID desse objeto, o que automaticamente criará o "objeto" do AD dentro do CTree. Caso não exista sincronismo, tudo funciona, pois não existe SsDbSync. Caso exista, então é necessário que os objetos existam no SQL. 10:06 Vamos começar primeiro com o sincronismo do DataSvr, que deve sincronizar em ambos os cantos, para permitir compatibilidade com ambos os lados. 10:34 Uma solução simplista seria no DataSvr listar os usuários/grupos adicionados no CTree e por ele sincronizar com os objetos do SQL. 16:15 Pronto primeira versão do sincronismo. Agora partir para o Update e Delete dos objetos criados. 16:37 Erro no Update (eu já sabia!). Não estamos conseguindo inserir usuário com mais de sete caracteres no login. Na verdade, insere truncado. 17:20 Que droga! Não dá pra testar usuário template porque o XP não funciona como servidor de segurança.

= 2009-10-06
:date: 2009-10-06

Primeiro teste para verificar o bug dos sete caracteres: rodar o wizard de novo. 10:30 Descobri! Temos que setar a largura das colunas antes de escrever. Como o exemplo usava MoveFirst, e o primeiro objeto tem largura maior que o nome, funcionava. E eu usava MoveLast com o usuário msiexec, de sete caracteres!!! 11:26 Roteiro de testes para adaptar o leiaute atual: Apagar todas as tabelas existentes e desinstalar o Security. 11:27 Rodar os scripts iniciais e instalar o Security. Rodar o configurador da string de conexão. 22:24 Não faz mais sentido exportar os usuários e grupos no SsCTreeExport, pois eles já serão inseridos no banco assim que a conexão SQL estiver disponível.

= 2009-10-07
:date: 2009-10-07

Testando o SCUA Manager para navegadores Microsoft. Aparentemente, o sincronismo de regras é imediato. Porém, um teste mais apurado (com login de verdade) revelou que as regras não estão sendo trazidas para o cliente por algum motivo obscuro. 16:49 Motivos obscuros são legais, mas estranhos =)

= 2009-10-08
:date: 2009-10-08

Resolvendo problema das macros no Vista. Não conseguia duplicar o handle do processo, com erro de acesso negado. Estou criando mais uma função na interface para que o próprio serviço entregue um handle fresquinho dele mesmo com o direito de duplicar handles. Na verdade, o OpenProcess já retornava acesso negado. Óbvio, por ser Vista, mas estranho (1 real), por ser apenas um handle para duplicar handles.

= 2009-10-09
:date: 2009-10-09

Bom, depois de umas férias no sincronismo, vamos implementar a exclusão completa de usuários e a duplicação do usuário template. 15:29 Tem que apagar o sec_dir_info. Para apagar o sec_dir_info tem que apagar as relações em sec_dir_info__direito e em sec_dir_info_has_sec_dir_option. E sec_dir_option se houver algo em sec_dir_info_has_sec_dir_option! 16:44 Feita a parte de rotas. Belezinha. 16:45 Para apagar as diretivas, temos que eliminar o sec_objeto_info__regra, que está atrelado ao sec_regra. Só isso. Facinho. 16:51 Ah, não. Só precisa apagar a sec_objeto_info__regra. Babinha!

= 2009-10-11
:date: 2009-10-11

Se até o registro for assíncrono será necessário estabelecer uma "ponte" entre o recebimento do OK do servidor com o envio de dados. Essa ponte deverá ter seu callback definido no listening que é aberto na porta pelo serviço. 17:50 Tudo começa no ServiceMain, que irá construir o CInventoryManager e rodar o método Process. 17:57 Tive uma ideia: podemos criar um aplicativo que é iniciado no run do usuário e que se comunica com os serviços do SCUA (HSIService e SsLogin). Quando algum deles estiver de pé, ele exibe seu ícone baseado no executável. Através de uma interface simples do SimpleService é possível requisitar as opções do menu que ele irá exibir e executar, chamando o serviço correspondente. 18:04 O sistema de módulos do inventário foi criado de forma que todos as DLLs recebessem seu caminho, o XML e o flag de parada. Isso quer dizer que teoricamente poderíamos transformar o inventário em vários módulos. 18:24 O listener já processa o registro! Na verdade, tudo que temos a fazer é receber o dinheiro =P Bora fazer o servidor de teste. Nada melhor que ficar independente do Java para poder testar as coisas.

= 2009-10-12
:date: 2009-10-12

O vPro terá que ser testado, mas foram baixados os fontes e os exemplos de uso.

= 2009-10-13
:date: 2009-10-13

=café-da-manhã: Dois pães integrais com cream cheese e uma caneca de chá verde. 09:58 Para conseguir duplicar o usuário template, ou temos que já ter o novo objeto cadastrado em objeto_info ou devemos criar nós mesmos. Isso exigirá um sincronismo dentro do próprio DataSvr? 10:02 No caso do autocreate não precisamos fazer nada, pois nós criamos o usuário no AD e o sincronismo de IDs se vira para colocar no SQL. Agora, o problema do template é saber que o novo usuário veio do template. 10:11 Colocaremos no comentário do usuário template "Template". Quando o objeto for inserido no SQL, esse comentário será usado para copiar as regras do usuário template (se ele existir e não for ele mesmo). 12:55 #almoço: Sopa de mandioquinha com taça de vinho e café expresso. 13:00 Tudo bem, se txt_comentario for igual a "Template", mas txt_login for diferente de "Template", então esse sr. Usuário que será incluído no banco de dados SQL é um usuário copiado do template, e deve sofrer duplicação das mesmas rotas e diretivas do objeto cujo txt_login igual a... "Template"! 13:14 A gente pode construir uma classe que recebe o ID do Template e que, durante as chamadas de callback, duplique a informação para o ID do novo usuário. 19:31 #café-da-tarde: pão integral com cream cheese e chá verde. #jantar: Arroz, feijão, espinafre, frango frito e linguiça. De sobremesa, bolo de milho. 19:32 Como come esse diabo!

= 2009-10-14
:date: 2009-10-14

=ceia: sementes de abóbora e amendoim com uma banana. #café-da-manhã: vitamina de abacate sem açúcar. 13:24 To bribe: subornar! 13:25 #almoço: Bem complicado! Salada em geral (pepino, tomate, cenoura, beterraba), salada de maionese caseira, um pouco de arroz, feijão, beringela e doce de chocolate. 17:05 #café-da-tarde: pão integral, chá verde e uma ameixa. Ah, e sementes de abóbora de novo. 22:47 #jantar: primeiro um pedaço de bolo de milho, depois arroz, feijão, espinafre e abobrinha frita, junto de uma salada de alface. De sobremesa uma manga e algumas sementes de abóbora.

= 2009-10-15
:date: 2009-10-15

=ceia: gelinho de chocolate! #café-da-manhã: um pão de queijo, vitamina de abacate (sem açúcar!) e um expresso com leite. 13:40 #almoço: lasanha com arroz integral, beringela, suco de laranja e acerola. E uma sopa de algumas coisas. 15:51 Foi detectado que em algumas situações na versão corrente apenas o usuário era criado. Isso ocorria por causa que a transação só era iniciada na hora de duplicar as regras. Mesmo assim, isso indica que acontecia algum problema e a transação das regras era abortada. Quero ver tudo isso funcionar ainda com o sincronismo do CTree. Deve dar uns paus lascados, porque o objeto é duplicado no CTree, daí duplicado no SQL, enquanto o serviço que sincroniza SQL -> CTree tá rodando, de olho em regras que mudam... 15:56 #café-da-tarde: caneca de café pela metade mais algumas sementes de abóbora. 17:00 Ops! Quando não tem o Security instalado, mas o serviço de sincronismo está rodando, ele apaga todas as rotas.

= 2009-10-16
:date: 2009-10-16

=jantar: pipocão do cinemark. #ceia: danoninho (que coisa saudável). 09:17 #café-da-manhã: barrinha de cereal sabor açaí e misto de castanha de caju, amêndoas e pistache. 10:07 Seria legal se o daytoday conseguisse enviar dados para o twitter. E também com opções de busca de todo o histórico, além de ficar no tray para recebimento de tweets e outras coisas mais. Um sistema de plugins viria bem a calhar... Quanta ideia! Quanta falta de tempo para implementar ideias! 10:09 Não cheguei a ver por que o banco de dados é zerado quando reinstalo o Security, mas esse problema é conhecido. Vamos ver no que dá. 11:22 O que eu não tinha entendido até agora era que a partição estendida não sumia! O que sumia no problema da AllianZ era o drive D DENTRO da partição estendida (partição lógica). E de fato o setor responsável pela partição estava com lixo. 13:38 Aparentemente o nosso driver maluco está detectando um "buraco" de criptografia e pulando o setor inicial da partição! Ahá!!! 13:55 #almoço: Arroz integral com soja, um pedaço de alcatra, salada de alface e tomate, tremoço, batata assada e uma taça de vinho.

= 2009-10-17
:date: 2009-10-17

=jantar: cachorro-quente com pimenta. #ceia: semente de abóbora e dois copos de abacate congelado. #café-da-manhã: pão com manteira e café e açúcar. #almoço: churrascaria e doces.

= 2009-10-18
:date: 2009-10-18

=jantar: pizza. 11:20 #café-da-manhã: pizza.

= 2009-10-19
:date: 2009-10-19

=almoço: lasanha e carne enrolada. #jantar: lasanha e carne enrolada! 12:53 #café-da-manhã: pão integral, barra de proteínas e chá verde. #almoço: arroz, tutu de feijão, salada básica, purê e taça de vinho. 12:54 Técnica para criar ambiente com vários programadores: pequenas equipes de quatro ou cinco pessoas e uma delas tem que saber tudo sobre o projeto; se não souber, tem que ter a capacidade de aprender com pessoas que entendem mais ou possuem mais experiência. By Bill Gates. 12:55 Fazer sempre revisão de código, para enxergar possibilidades de melhora pelo pessoal sênior e para enxergar dicas de código bem feito em projetos que se deram muito bem. 15:23 Bom, até onde paramos, existia um probleminha em tentar rodar alguma coisa na instalação da Marisa. Preciso reinstalar com uma senha que eu conheça. 16:03 Se liga na senha absurda criada (talvez o root não seja setado pela senha ser sempre fraca): aqamns45% (dica: o lance do casamento). 17:02 Não deu certo usar uma senha forte. Mesmo assim o login do root diz que é inválido. O jeito é aguardar pelo pessoal da Marisa. 20:25 #café-da-tarde: castanhas. #jantar: lasanha e enroladinho de carne com escarola. 23:05 Hoje consegui simular um servidor que ativa o cliente. O cliente gravou o hsi.dat!

= 2009-10-20
:date: 2009-10-20

=café-da-manhã: barrinha de proteínas e castanhas diversas.

= 2009-10-21
:date: 2009-10-21

=almoço: salada, carne e taça de vinho. #café-da-tarde: castanhas em geral. #jantar: Arroz, feijão, escarola, banana e pudim de leite. #café-da-manhã: barrinha de proteínas, castanhas diversas. 16:57 Frequência de uso: como cortar em dias. A lógica por trás do checkpoint leva em conta a data/hora mais próxima: a criação do processo sendo calculado ou a data/hora do início do dia atual. O que for mais próximo é usado para calcular o tempo total de uso. 16:58 Antes de realizar o checkpoint sempre é verificado se a data de report (arquivo atual) não mudou em relação ao dia atual. Se mudou, então despejamos o arquivo atual para um arquivo arquivado e começamos os contadores de novo (incluindo os processos que já se foram).

= 2009-10-22
:date: 2009-10-22

=jantar: pipoca! 09:19 #café-da-manhã: vitamina de abacate COM açúcar (esqueci de pedir sem) e pão de queijo gigante e "fervendo" por dentro. 10:54 #pré-almoço: barrinha de cereal. 11:01 Analisando tela azul da Allianz. Ela ocorre em logoffs e quando o usuário vê as aplicações no LeVxd. 13:30 O César falou que no meu notebook se colocar todos os grupos do SCUA para um usuário dá tela azul. Veremos isso mais tarde. 13:31 Então, a tela azul da Allianz ocorreu na execução do Levxd e durante a busca por uma aplicação. Aparentemente o ponteiro para o path passado em user estava inválido durante o while. 15:01 #almoço: (quase esqueci). Bom, salada básica (alface, beterraba), peixe (sardinha), arroz e feijão. 16:58 #café-da-tarde: amendoins.

= 2009-10-23
:date: 2009-10-23

=jantar: cachorro-quente, misoshiru, arroz e bambu. #café-da-manhã: barrinha de proteínas e castanha de caju. 10:17 A compilação Fedora está rodando em uma máquina OpenSuse, especificamente o LiveCd da Marisa. Agora que a dependência básica está resolvida podemos repartir para o método de instalação e integração com a solução. 16:23 Scua2: administrator, Scua2009* 17:38 Como gerar o SsUpdate. Primeiro, vá no path dos infernos: C:\Src\SecuritySuite\Install\Install\Client\IShield\Media\CDbr\Disk Images\Disk1 17:39 Extrair os arquivos do instalador em questão para esse path dos infernos. Como é atualização, pode apagar as pastas que ficam. 17:41 A Rose guarda as informações específicas dos clientes em sua máquina, em c:\Custom Security Installer Files\Client. Pela rede fica \\desenv05\c$\Custom Security Installer Files\Client. A máquina dela é desenv 05!! CINCO!!! 17:42 Sempre comparar os arquivos que os cliente mandam porque são os clientes que mandam! Ver com o Zé/César se a cagada está pré-confirmada e sobrescreve os arquivos da pasta do cliente. 17:44 Os arquivos mais comuns são cnf.dat, secserv.ini, setup.ini e smds.dat. Sobrescrever nos arquivos extraídos naquele path grande. 17:45 Eu não tenho o package for the web!! Meu Deus!!! Mas eu posso copiar da Rose. 17:46 Ele está em \\desenv05\c$\Program Files\InstallShield\PackageForTheWeb 4. Vamos copiar para a minha máquina. Lembrar disso para avisar a próxima vítima que cuidar disso. 17:48 O abridor de arquivos pfw (prato feito do windows?) é o pftwwiz.exe. Quando abrimos o pfw (que aliás está em C:\Src\SecuritySuite\Install\Update\SSUpdate\IShield), aparece a tela do wizard (depois de fazer a devida associação). 17:51 Depois de next, next, next, next, finish é gerado o arquivo SCUA2000UPDBr.exe na pasta de saída bin\release. Gerou. O que fazer? Processo nojento? Pegar o SsUpdate da VM de build. 17:52 Ir para C:\Src\SecuritySuite\Install\Update\SSUpdate\SSUpdateBuild. 17:54 Dar uma olhada sempre no setup.ini para ver se está de acordo com as configurações de atualização do cliente. 17:56 Rodar geralmente o 1_release.bat que vai gerar o novo pacote chamado SsUpdate gordão (na mesma pasta). Na mesma pasta de saída de binários. 17:57 Copiar o arquivo SsUpdate gordão para a pasta \\scua4\PRODUTO\Instaladores\SCUA SECURITY NT NSID\Custom, onde o procedimento é renomear de acordo com os arquivos que já estão lá. 17:58 Detalhe: depois de renomeado, NÃO falar para o cliente pegar no scua4. Não vai funcionar! 17:59 Sempre dar uma instaladinha para dar uma olhada se não dá tela azul (e se instalou também). 18:00 O teste básico é ver se instalou.

= 2009-10-26
:date: 2009-10-26

E aqui estamos nós de novo! 08:37 #café-da-manhã: amendoim torrado, pão integral. 08:41 Como a gente guarda as configurações dos clientes? Trac? 09:59 Temos que avisar a Mara que não é possível fazer o update da 8.19 até 8.21.0.3 para qualquer versão em máquinas com SP desatualizado ou Windows 2000/NT. Para Windows Vista tudo bem. 10:20 A instalação e atualização são marcadas por arquivos de log na pasta \windows. Se esses arquivos de log pudessem ser analisados automaticamente teríamos um processo em que contato humano é diminuído para o mínimo possível. 10:22 Podemos fazer isso aliado a uma instalação que está localizada em algum lugar padrão com o instalador/atualizador silent. Após a análise de instalação/atualização pode ser executado o SDiag. 13:51 Erro nos testes da Mara. Quando executamos o SsUpdate como administrador durante a sessão do usuário a instalação falha, uma vez que o SsLogin não está parando corretamente (trava no CEngine::OnShutdown). Verificando isso... 20:56 #almoço: salada, arroz, feijão e frutas. #café-da-tarde: pão integral e chá verde. 20:57 Janta: arroz, feijão, carne e couve.

= 2009-10-27
:date: 2009-10-27

=ceia: três gelinhos de chocolate. 09:04 InstallShield 8 instalado, mas parece que falta o pacote de idioma... 09:18 A vantagem de criar sempre branches locais para uma tarefa é que é as telas azuis e GPFs ficam distribuídos. 10:12 Voltando a refletir sobre a inepar. A dívida "nervosa" é de uns 400 milhões. Esse mês eles conseguiram aumentar o prazo dos debenturistas e pagarão metade em 2010 e metade em 2011. Dessa forma, diminui o risco de ficarem sem capital imediato. 10:13 Outro problema seria a falta de giro, que parece estar sendo recompensado com a nova emissão de ações no valor de 50 milhões. Também haverá desdobramento para 7. 10:28 O stop do SsLogin tem que esperar que ele termine (ou pelo menos defina um timeout). 15:21 Testando nova forma de parar os serviços de login. 15:22 Lembrar de definir erro se der timeout na parada de qualquer dos dois serviços. Isso é um erro, mesmo. O serviço não existir não é erro (como veremos nas versões antigas sem SsLogin e nas versões futuras sem SMMC). 15:29 Tudo OK e muito bem, só que se tentarmos parar o SMMC antes continua dando pau. A solução é pelo menos fazer com que isso seja detectado. 20:40 Bom, vamos lá: simulador de socket! 20:41 #café-da-manhã: amendoim torrado + café. #almoço: sopa de capelêti com carne e cenoura, taça de vinho. #jantar: Arroz, feijão, abobrinha frita, uma banana, couve-manteiga e meio copo de vinho.

= 2009-10-28
:date: 2009-10-28

=café-da-manhã: pão integral + café. 13:26 #almoço: arroz integral, tremoso, cenourinha, queijos diversos, carne e taça de vinho. 14:52 Parar gerarmos o pacote server do Bradesco precisamos do Installfiles atualizado, InstallShield versões 5.5 e 8, atualizadinhas e com pacote west. 14:54 Tudo começa quando o Zé pede para gerar o pacote, geralmente com um StupScua atualizado. O executável e as configurações ficam em D:\Install Files\Shared\SCUAINST. Outra coisa é que o Zé vai mandar as regras atualizadas, na forma de arquivos scg, scu, sca e outros (?) 14:56 As regras ficam no arquivo D:\Install Files\Bradesco\ScuaBradConf\config. A pasta GroupsNTTest é para as regras em homologação e a GroupsNTProd para as regras em produção. Existe um histórico de regras descritos nos arquivos Build9x.txt e BuildNT.txt. Lembrar que as configurações mais novas devem estar sempre na máquina do cara do instalador, que atualmente é a Rose. 14:59 O primeiro instalador a ser notado é o Server, que fica em D:\Install Files\Bradesco\ScuaSrcBradesco\Source e corresponde ao projeto C:\Src\SecuritySuite\Install\Install\Server\IShield. 15:02 Na própria pasta dos arquivos customizados do cliente também tem os arquivos do servidor do Bradesco e do Safra (Custom Security Installer Files) 15:03 As configurações do Bradesco ficam em Custom Security Installer Files\Server Pacotes\Bradesco As do próprio pacote ficam em PacoteServer 15:04 As configurações das instalações server e client ficam em suas próprias pastas com seus respectivos nomes. É lá que ficam os setup.ini!!! 15:05 Sobrescrever o arquivo buildnt.txt (procurar em todos os lugares de installfiles, para garantir), cujo último está em \\desenv05\c$\Custom Security Installer Files\Server Pacotes\Bradesco\buildnt.txt 15:07 Uau! Tem que atualizar um monte de arquivo em um monte de pasta. Mas tudo fica na pasta já citada. 15:09 Atualizar o instalador cliente em D:\Install Files\Bradesco\ScuaSrcBradesco\Source\SETUP\Scua2000. Nota: às vezes tem que atualizar o ssupdate na mesma pasta O SsUpdate é o externo! 15:11 Hora de abrir o InstallShield 8. Nosso projeto fica em Install\Custom e aí você se vira 15:12 Para organizarmos a geração dos pacotes, sempre atualize a versão, que vai estar escondido em vários lugares do projeto. Depois disso, vamos para Media, Releases 15:15 Por padrão é gerado um arquivo setup.exe em D:\src\SecuritySuite\_output\bin\release\Bradesco\PackPWD_Not_MSI\DiskImages\DISK1. 15:19 Detalhe Rafael/Rose: já tem um botão no InstallShield8 para a pasta de saída. 15:26 A partir daqui o procedimento é com o Zé. Copiar o arquivo setup para \\scua4\PRODUTO\Instaladores\SCUA SECURITY NT NSID\Custom\Pacote Server Bradesco no mesmo formato de nome dos anteriores. Se quiser ir adiante, dar uma olhada no atencao.txt. 15:50 #café-da-tarde: chá verde. Para automatizar a versão servidora do instalador teremos que seguir o mesmo caminho do SsUpdate: mitigar as configurações dos clientes e criar um gerador automático. 15:51 Como quem deve suportar os clientes seria o suporte o mais ideal é termos uma versão genérica customizável do SsUpdate. 15:52 No fundo só precisamos atualizar a versão do pfw e sempre gerar um package for the web padrão. O resto (setup.ini do SsUpdate) pode ser feito através do próprio. 15:54 Se bem que os arquivos do instalador customizáveis ficam embutidos no package for the web. Esse é o grande problema na hora de gerar um customizável. 17:36 Atualização com SsLogin está falhando (aparentemente o mesmo travamento de antes, só que mesmo parando o SsLogin primeiro). Testando com o log habilitado para ver se é isso mesmo. Detalhe: O SMMC pára. 17:39 Depois do reboot funcionou! Ou com o log ativado, pois foram as duas únicas mudanças visíveis no teste... 17:48 Um outo problema em potencial é a parada dos serviços de login. Se algum deles parou, é possível que as regras tenham ido para o espaço, o que demanda um restart. Isso pode virar um círculo vicioso...

= 2009-10-29
:date: 2009-10-29

=café-da-manhã: vitamina de abacate sem açúcar. 09:56 Vamos tentar achar a situação em que o SsLogin trava, mesmo sendo o primeiro a ser parado. Provavelmente quando ocorrem dois logons. 10:04 Hoje tudo funciona. Alguém me belisca? 10:05 É isso aí. Vou liberar para build, gerar o SsUpdate customizado e refazer os testes básicos. 11:08 Bateria de testes com o build release e SsUpdate RC. 7.36 passou; próximo é 8.20. 11:12 8.20 também OK. Passemos para a 8.22 (esse é o teste!) 12:53 Quanto melhor fico, mais recebo críticas. E quer saber? Isso é lindo! Treinamento automático rumo ao sucesso... 16:02 #almoço: lasanha no indiano, arroz com legumes, salada. #café-da-tarde: amêndoas, maçã. 16:04 Terminados os testes. Vou considerar essa versão fechada para a Allianz, só que resta alterar a exibição de versão no painel de controle.

= 2009-11-03
:date: 2009-11-03

Depois de um largo fim de semana sem notificar nada, aqui vamos nós. #café-da-manhã: pão integral, barra de cereais. 08:49 O chamado 9100167 é o do problema do CD de contingência antigo no Bradesco. 13:59 #almoço: salada caesar, com alface, torradas e frango. Bom, problema do BVA. Vamos dar uma olhada no histórico da Rose. 15:22 Muito bem. Reproduzido. Eis os passos: 1. Instalar o IIS (Windows XP) 15:23 2. Instalar .NET Framework (3.5) 3. Copiar a pasta de exemplo do BVA 4. Ir na adminitração do IIS e adicionar a pasta raiz (onde estão AAA e bin) como diretório virtual com o nome de bva 5. Digitar no browser bva/AAA/Webforma.asp 15:24 6. Testar as janelinhas (tem que exibir um alert ao fechar a segunda janela). 7. Instalar o Security 8. Após instalar, tentar brincar de novo: o alert não é exibido mais! 15:32 Primeiro teste: comentar tudo que tem direito no CPrb. Funcionou! O que será, hein? 15:34 m_spDefaultDocHostUIHandler não está sendo usado nunca; vamos apagar tudo isso. 15:43 Não é apenas comentando o invoke que as coisas funcionam. 17:02 Parei na hora de implementar a solução para SsLogin;

= 2009-11-04
:date: 2009-11-04

=café-da-tarde: amêndoas. #jantar: frango frito, farofa e vários gelinhos de chocolate. 08:11 Difícil não devanear... ainda mais sem a Rose por perto! (férias) 08:33 A solução para o SsLogin: criar uma nova classe QueryInfo que é membro da Engine. Dessa forma ambos os sistemas podem usar a CCQueryInfo sem trauma. 09:46 Me perguntaram quais drivers mudaram desde a 8.20 e o que mudou. Se nós tivéssemos uma forma de registrar o histórico de mudanças por compomente isso seria bem mais fácil. Bastaria após o build, durante a atualização de componentes, registrar o porquê da mudança. 13:20 #almoço: mais salada: alface, cenoura, palmito, batata, presunto e mussarela.

= 2009-11-05
:date: 2009-11-05

Tenho que escrever! O Service Pack da Allianz é o 2 10:19 A versão do update é 7.38 10:36 O desinstalador era a correção da Rose para as macros COMPUTERNAME no secserv. Eles pensavam que era problema. Ai, meu deus. 10:55 #almoço: uma saladona com tudo que tem direito #jantar: pipoca com manteiga. 10:56 #ceia: gelinho de chocolate. #café-da-manhã: pão integral com margarina. 15:14 Feito toda a estrutura de pastas para gerar o SsUpdate para qualquer cliente customizado. 15:16 O que falta: 1. Apagar secserv.ini antes de construir novo pacote para web; 2. Definir corretamente a versão do instalador e renomear o SsUpdate de acordo; 3. Definir corretamente o setup.ini do SsUpdate dependendo da versão que está sendo compilada (internoxexterno).

= 2009-11-06
:date: 2009-11-06

=almoço: lasanha do indiano, salada com coisas diversas, etc 10:21 #jantar: arroz, feijão e bife #café-da-manhã: vitamina de abacate sem açúcar e pão de queijo. Como otimizar o build do Security Suite? 10:22 Temos que montar um hands-on para novos membros da equipe desenv da scua

= 2009-11-09
:date: 2009-11-09

=café-da-manhã: barrinha de proteínas e semente de abóbora. Hum... e pãozinho integral. 10:54 Agora iremos criar um daemon. Que coisa! 10:55 Existem vários daemons no sistema, e o comando que o APUE usa é o ps -axj O PID 1 geralmente é o init, que é responsáve por subir vários serviços do kernel. Note que o PPID (Parent PID) do init é zero, indicando que ele foi iniciado pelo kernel, mesmo. 10:56 Vamos dar uma rápida olhada nos daemons padrões do livro. kevenTD fornece um contexto de processo para rodar funções agendadas no kernel. O daemon kapmd fornece suporte ao gerenciamento avançado de energia. 10:57 kswapd é o cara que pagina a memória, e suporta, portanto, a memória virtual do sistema O kernel do Linux faz flush dos dados em cache para o disco usando dois serviços helpers: bdflush e kupdated. 10:58 Isso não importa. portmap é o carinha que mapeia portas para que o RPC funcione pela rede. syslogd, um serviço muito importante para o nosso agente, deve estar disponível para qualquer programa fazer logs no sistema 10:59 O tal do inetd (xinetd) fica escutando a rede para atender a requisições. Os daemons de file system de rede são o nfsd, lockd e rpciod O cron, outro daemon famoso, executa comandos em data e hora especificados. 11:01 A maioria dos daemons roda na conta de superusuário (user ID igual a 0). Nenhum dos daemons tem um terminal de controle (o nome fica ?). Os daemons do kernel são iniciados seem um terminal de controle. A falta de um terminal de controle em processos de user mode é atribuído pelo resultado da chamada a setsid pelo daemon. 11:03 Importante: todos os usuários no nível do usuário são líderes do grupo do processo e da sessão, além de serem os únicos processo de seu grupo e sessão. Por fim, repare que a maioria dos PPID dos daemons é o próprio init, que inicia daemons de acordo com o nível de boot do sistema. 12:49 #almoço: salada de alface, cenoura, abobrinha; arroz, feijão e banana; Abacaxi, morango e uva. 13:02 O cara do Efetividade.net organiza os feeds por frequência que serão lidos, além das seções de praxe. Isso quer dizer que no Google Reader teria uma pastinha Diária, outra Semanal e talvez uma Mensal, além da pasta Pesquisa, que serve como referência. 13:21 Mudando de prioridade: Conflit do CryptWiz com a DLL da Scopus. 13:25 Podemos aproveitar a correção e mapear as versões antigas que estão rolando no Bradesco. Isso permitirá também melhorar a detecção do novo CD de contingência, que pode avisar qual versão do CD deve ser usado. 13:45 O primeiro teste é mudar todo o fonte que abre o driver para FILE_SHARE_READ | FILE_SHARE_WRITE. Primeiro testamos com a versão antiga. 13:55 Vai ter que ser gerado um novo CryptWiz, o que quer dizer que o instalador deve rodar novamente. 14:09 Eu aceitaria pagar 45 pela Inepar, com o risco em 50%; só que ainda não sei até onde vai essa empresa. 14:10 Uma boa análise introdutória seguido do resultado trimestral pode abalar minhas dúvidas sobre a solvência e garantias dessa empresa...

= 2009-11-10
:date: 2009-11-10

=café-da-tarde: amêndoas, semente de abóbora, barrinha de cereais. #jantar: pão integral, barrinha de cereais, semente de abóbora, amêndoas. #ceia: gelinho de chocolate. 14:51 Beleza. Já criamos um daemon decente. Agora só precisamos saber como instalar! 15:01 Problema ao logar com o daemon. 16:19 Existem scripts que iniciam os daemons em /etc/init.d/* que podem ser úteis. O cron, por exemplo, utiliza um script dentro dessa pasta que usa as funções dentro do arquivo functions, entre elas a função daemon. 16:53 Precisa criar um linque dentro de alguma pasta /etc/rc[x], onde x é o nível de inicialização do sistema. Coloquei no 3, que é o modo multiusuário completo 16:54 Para criar um linque simbólico (como está em todas as pastas de init) usa-se o comando ln -s ../init.d/hsilinux Shsilinux O S no começo identifica que o daemon é para ser iniciado (Start); se fosse K, ele seria terminado (Kill). 22:46 Vamos montar o procedimento para testar a nova comunicação dos agentes do Config. Primeiramente, precisamos de duas máquinas que consigam se comunicar pela rede. 22:51 Muito bem. Próximo passo é instalar o serviço Rpc e o servidor de teste. Copiar a pasta SERVER para a máquina servidora. 22:52 C:\SERVER\RpcSvc.exe -install 22:53 Habilitar o LogDebug no RpcSvc.ini e no Hsi.ini (para o plugin). 22:54 Inicie o RpcSvc Verifique a conectividade da porta TCP 22:56 Log não está funcionando. 22:59 Não era na seção Options, mas na seção Log 23:03 O log do plugin não funcionou. Bem, próximo passo: rodar o servidor de teste. 23:06 Correção: usar a pasta c:\hsi para copiar arquivos do servidor. E corrigir IP do servidor no INI 23:15 O ServerCommTest precisa do HSIMod_Downloader.dll Senão ele trava. Colocando no pacote... Verificar a situação do TCP com os dois rodando. Agora deve ser a parte do cliente. 23:16 Configurar o IP do servidor corretamente (CryptFile). 23:17 Escolha um dos agente para rodar (renomeie o outro) e rode. 23:18 Lembrar de abrir o DebugView para ver o que está acontecendo. 23:22 Na versão Release não existe o retorno na tela dos comandos. Por isso use o servidor de teste para enviar o inventário (ProcessInventory). 23:23 Tem que configurar o IP do servidor do servidor como o IP do cliente, para que ele mande para o computador certo o comando. 23:28 Que bagunça! Prontinho, funcionou! Arruma os pacotes e se vira amanhã...

= 2009-11-11
:date: 2009-11-11

=café-da-manhã: pão com manteiga, salame e café com leite. Amoço: bife com cebola, arroz feijão, batata frita. 15:12 Conseguimos iniciar o daemon colocando na pasta rc.5. Depois de matar o hsilinux temos apenas que rodar init 5 para reiniciar o serviço. 16:18 Vamos testar no Marisa. 16:19 Eu preciso REALMENTE quebrar a senha do root da instalação da Marisa. 17:14 Consegui mudar a senha usando um aplicativo chamado chpasswd dentro de sbin Logo antes de reiniciar a máquina, trocar a senha do root. Funciona. 18:09 Apesar de ter funcionado no Fedora, não funcionou ainda na marisa, apesar de ter sido instalado "corretamente" como daemon.

= 2009-11-12
:date: 2009-11-12

=jantar: pipoca. #ceia: gelinho de chocolate. #café-da-manhã: frutas secas diversas, cacau. 11:03 Consegui fazer rodar o hsilinux pelo OpenSuse copiando o esqueleto de script para daemons. 11:04 Está rodando no runlevel 3. Removi a máquina do servidor e agora o daemon não está mais conseguindo conectar com o servidor. O XP consegue (mesma porta, mesmo IP). Ah, está pingando =) 16:54 Beleza. Agora cata a descrição do computador e o nome sem ajuda do executável à parte. 16:55 Com isso já dá pra fechar a parte "instalação". A geração do pacote será outro martírio.

= 2009-11-16
:date: 2009-11-16

=café-da-manhã: pão integral, chá verde e amêndoas. Vamos montar novamente o procedimento para testar o novo inventário. 08:59 Precisamos de duas máquinas; certificar-se que ambas podem se comunicar (ping). 09:00 No cliente, copiar da pasta CLIENT a subpasta HSI e copiar no C:\ 09:01 Abra o utilitário CryptFile e altere o IP do arquivo hsi.ini para o IP da máquina usada como servidora. Escolha um dos dois aplicativos para usar e apague o outro: HSIN95 ou HSIService. 09:02 Se for HSIService, instale-o com o parâmetro "-install". Para o HSIN95 basta executar quando for a hora. 09:03 Obs.: Para acompanhar o funcionamento, use o utilitário DebugView ligado. 09:04 No servidor, copie a subpasta SERVER\HSI em C:\ e os arquivos dentro de SYSTEM32 para a pasta de sistema. 09:05 Instale o serviço RPC usando o parâmetro -install ao executar o executável RpcSvc. 09:06 Inicie o serviço. Verifique o log gerado na mesma pasta (RcpSvc.log). Deve existir a linha "Loaded service InvUpdFile:36" no arquivo de log. 09:07 Rode o utilitário ServerCommTest para reproduzir o comportamento do servidor do Config. 09:08 Obs.: Verifique se as portas estão abertas corretamente através do utilitário TcpView. O ServerCommTest deve abrir a porta 3332 e RcpSvc a porta 45796. As portas podem ser verificadas também do lado cliente. 09:09 Inicie o agente do lado cliente e verifique se ele foi registrado com sucesso. 09:10 Após o registro, no servidor de teste (ServerCommTest) use o comando ProcessInventory seguido do IP do cliente. 09:14 Obs.: Teremos que usar o ServerCommTest na máquina cliente. 09:16 Criar pasta c:\HsiServer Pronto! 16:56 Consegui gerar um RPM bonitinho que copia o único executável do build para a pasta bin. Bom, isso é legal. Veremos como fazer o resto.

= 2009-11-17
:date: 2009-11-17

=jantar: arroz, feijão, banana, mandioca. 13:48 #café-da-manhã: salame. #almoço: arroz, palmito, carne.

= 2009-11-18
:date: 2009-11-18

De volta à ativa: integrei a solução do Config, alterei o trac, fiz o build e agora estamos usando VC7. 10:45 Alterei meu relatório de dieta para usar tags que nem no twitter. Legal =) 10:47 Por falar nisso, ontem no #jantar comi filé mignon com cheddar, além de vinagrete e pão, com alguns chops. E na #ceia, gelinho de chocolate. Agora no #café-da-manhã foi pão integral. Como eu procrastino! Agora vamos finalmente mexer de novo com RPM. 10:48 Como será que defino a saída do hsilinux, copio o sysvinit e o hsi.ini? 16:14 Achei O SITE sobre RPMs. Esse sim bem explicado 16:15 Da forma como ele explica o funcionamento de RPMs, visualizo que a geração de pacote customizado é possível, mas necessário existir um Linux rodando, algor não trivial. 16:17 Pode ser uma VM rodando um Fedora (meu caso). Ou pode ser um Cygwin rodando por baixo dos pano (será???). 16:36 Mmmmmm... quer dizer que o make install realmente INSTALA o hsilinux na máquina? Verei amanhã, mas parece interessante... por isso que ele usa paths absolutos... 16:37 O que quer dizer que terei que instalar também os scripts de daemon, etc e talz. Se for isso.... bingo! 16:40 Nem que eu não saiba usar make install, poderia incluir no script %install duas linhas que simplesmente copiam o script e o arquivo de configuração no path que devem estar. Daí a lista em %files funcionaria. Esse é um atalho nojento que funciona de imediato.

= 2009-11-23
:date: 2009-11-23

Meu #café-da-manhã foi pão integral e iogurte. Já meu #almoço foi arroz integral, tutu de feijão, tremoso, salaminho, alcatra e uma taça de vinho. 15:54 Testando todas as possibilidades do ScuaInst funcionar. No XP é usada a função CreateProcessWithLogon com sucesso por um administrador. 15:58 Como SYSTEM, o mesmo erro de acesso negado, mas a rotina para NT funciona. 16:00 Até como o Paulo funcionou a rotina para 2000!

= 2009-11-24
:date: 2009-11-24

Parei de registrar minha dieta. Ela está boa, só não será controlada minuciosamente. Se as calorias estão passando, saberei instintivamente.

= 2009-11-25
:date: 2009-11-25

Analisando assembleia da Inepar. Interessante que eles vão entrar com tudo na carteira da Petrobras, realizando diversos serviços em Santos (plataformas) e nas hidreelétricas que estão sendo construídas no momento. 10:57 Possivelmente irão entrar na licitação para Monte Belo.

= 2009-11-28
:date: 2009-11-28

Iniciando as análises das empresas que capturei ao longo de meses de estudo. Primeira selecionada é a Triunfo, que alguém disse ser uma surpresa de lucros, trabalhando com pedágios, etc, só que com coisas bem previsíveis e, portanto, sem surpresas felizes. 11:30 Sinceramente, essa empresa não expira a menor confiança. Apesar do líquido ter dado a volta por cima e o lucro bruto voltado a crescer com força nos últimos conjuntos de 4T, o operacional é um desastre, oscilando entre muito negativo, pouco negativo e medíocre. 11:31 Consequentemente, o que dizer do LL, coitado, esmagado pelos resultados financeiros sempre negativos, uma margem irrisória para compensar gastos operacionais abusivos que impedem uma lucratividade constante. 11:43 A MPX de Eike Batista não tem nada de excepcional em seu balanço, a não ser que vem gastando mais que lucrando nos seus dois anos de vida. 11:44 Aparentemente as disponibilidades não saem do lugar, dando a entender que a empreitada ainda é de mera especulação sem resultados. Realmente existem outros Xs que estão acima do valor do IPO por um motivo: estão dando lucros absurdos. Não é o caso da ainda nem promissora MPX. Veremos daqui a um ano. 11:54 Nossa amiga Dixie... Está com faturamento estável nos últimos cinco anos... pena que não cresça também!

= 2009-11-30
:date: 2009-11-30

Modificar uma estrutura de attach no driver do Scua não é algo trivial, então...

= 2009-12-02
:date: 2009-12-02

Tentando montar ambiente de teste para estressar frequência de uso.

= 2009-12-03
:date: 2009-12-03

Encontrei condição de erro: precisa acessar página que tenha e comercial ou % alguma coisa. Ainda não sei ao certo, mas é só fazer isso que, provavelmente no próximo checkpoint, ferra tudo.

= 2009-12-09
:date: 2009-12-09

No cliente (BVA) todos esses dias. Lembrar que não é possível gerar tela azul em teclado USB e Windows XP. Tem que ser 2003 ou superior. Nesse caso usar .crash.

= 2009-12-10
:date: 2009-12-10

Aprendendo como implementar um BHO.

= 2009-12-14
:date: 2009-12-14

Algum problema no load da DLL antiga. Talvez seja conflito com a compilação da nova... 10:10 Descobri que tirei sem querer do vcproj da ScuaPrib a informação de TypeLib de dentro do executável. Uau Por isso que o registro falhava. Imagino eu: vou testar.

= 2009-12-15
:date: 2009-12-15

Chamando o connection point para cada document complete, como no código original, dispara corretamente o evento de invoke. 17:53 Mas os múltiplos pontos de conexão não são suportados pela interface que faz tudo (evita implementar o Invoke). Dessa forma, continuaremos a pesquisa.

= 2009-12-17
:date: 2009-12-17

Comparando soluções até agora: o scuaprib.old falha ao tentar imprimir logo que a página é carregada (isso já existia na versão original). Testado em uma nova página (Ctrl+N) e no saite do Terra. Foram necessários três Refresh, mas é logo depois do Refresh. 09:24 O funcionanaquelas ainda não foi testado nessa situação: vamos ver. 09:25 Também falhou! 09:27 O novo ScuaPrib falhou também, no mesmo teste. 14:23 Versão de emergência da ScuaPrib: manter o fonte antigo, tentar se desfazer dos binds durante o SetSite e usar o esquema "quem chegar primeiro protege a impressão", ignorando o resto.

= 2009-12-18
:date: 2009-12-18

Liberada versão instável para teste no BVA, mas sem alocação infinita de bindings. Ainda trava e dá pau, por isso vamos trabalhar em uma versão híbrida que consiga ser estável e só ser vulnerável algumas vezes.

= 2009-12-31
:date: 2009-12-31

Testando escrita no Nokinha =)

= 2010-01-04
:date: 2010-01-04

Iniciando 2010, o ano do daytoday (será?) Anotando agora os filmes assistidos por aqui (futuramente pelo Symbiam). 09:08 #tv Três ladrões e um bebê. Um filme de ação sem cortes nas lutas (viva Jackie!), mas com uma história fraca que dá até vergonha 2/5. 09:09 #tv Hitch, Conselheiro Amoroso. Finalmente uma comédia romântica com roteiro interessante! 4/5 09:25 Lembrando o que eu estava fazendo no ScuaPrib. Aparentemente isolando a lógica das duas interfaces em duas classes distintas, de forma a deixar a sujeira em um lugar só. 10:24 O maior problema da nova solução é saber serializar inúmeros eventos de print para a mesma janela.

= 2010-01-05
:date: 2010-01-05

Voltando ao ScuaPrib, devemos agora selecionar se imprimir ou não.

= 2010-01-07
:date: 2010-01-07

Terminadas todas as pendências importantes, ficando apenas a definição de como será o cadastro de PenDrives.

= 2010-01-08
:date: 2010-01-08

Terminando a documentação para Dispositivos Móveis no Security; falta o funcionamento interno, aquele com diagramas de sequência. 15:57 Agora é hora de decidir como será a passagem de regras para esses tais dispositivos móveis.

= 2010-01-11
:date: 2010-01-11

=cine Hanami - Cerejeiras em Flor. Emocionante e Instigante. Um pouquinho de Up, de A Partida no melhor estilo germano-nipônico 5/5 08:37 #cine Encontro de Casais. Uma terapia de casais cinematográfica em que o humor foi prometido, mas não cumprido 3/5 Mas sempre pode-se ser pior no cinema, assim como na vida. Prova disso é o... ... inócuo "Sempre ao Seu Lado", o mais novo spam bonitinho sobre um cachorro fiel que invade algumas salas da cidade. Eca! 1/5 #cine 15:39 Interessante. Os #if's do scuafdsk não funcionam se não tiver definido os DEFINES. Isso quer dizer que quem não incluir config.h não rola.

= 2010-01-12
:date: 2010-01-12

Aliás, #cine Alvin e os Esquilos 2. Houve um momento no filme que pensei que fosse terminar acima da média, mas eu me enganei 3/5 12:01 MLogon usuário = domínio, system = secserv. 15:44 Problema da versão da mídia do Bradesco: não havia distinção entre aplicações cadastradas e qualquer outra coisa, uma vez que não existia "qualquer outra coisa". Agora foi feito um filtro baseado em ObjectType.

= 2010-01-13
:date: 2010-01-13

Lendo o guia "seja feliz sem reclamar" 13:20 Vou traduzir mal e porcamente o que ele diz sobre ser melhor: Aliás, linque para o artigo: - Páre de reclamar; você está desperdiçando seu ar e seu tempo. 13:21 - Em vez de manter suas ideias em algum lugar vago na sua cabeça, escreva-os no papel. - Agora sonhe um pouco mais alto e amplie os objetivos; faça-os mais audaciosos. 13:22 - Continue escrevendo uma história ou visualize-a em sua cabeça, o que você gostaria ou sentiria com esses objetivos já concluídos e atrás de você. 13:25 - Então, deixe livre os objetivos. Tenha em mente que esses objetivos podem mudar. Sua intenção é esperar por essas coisas ou algo melhor; é impossível saber como a vida será pavimentada na sua frente; aceite que você pode chegar nesses objetivos ou algo melhor. - O passo final é escrever algumas coisas que podem ser feitas hoje para iniciar os objetivos. Passos de bebê.

= 2010-01-14
:date: 2010-01-14

=cine Contatos de Quarto Grau. Nenhum filme que imita o título de outro famoso pode ser excelente. Esse é bom. 3/5 09:48 Atuação da Milla Jocovich terrível, sentimento no início do filme que os "atores" do vídeo real são bem mais convincentes que os que apresentam a história. 09:49 Apesar disso, não dá pra negar que a ideia de mesclar as duas versões foi uma ideia funcional para preencher as lacunas do que o vídeo "real" não gravou. 09:50 De qualquer forma, a deformação das fitas nos momentos cruciais do filme soam em alguns momentos artificiais, principalmente na visita do guarda à casa da analista. 10:00 Por outro lado, esse clima de "mistério não resolvido" é eficiente para uma parcela de "quase-céticos", apesar de não convencer completamente exatamente pelas oportunísticas distorções.

= 2010-01-15
:date: 2010-01-15

"Portanto, se estamos dentro do universo da firma, o seu longo prazo é aquele necessário para que a quantidade de todos os seus fatores de produção muda."

= 2010-02-07
:date: 2010-02-07

Testando agora o SmartCard 13:54 Testando mais uma vez

= 2010-02-09
:date: 2010-02-09

Esse é um bom teste de backup silencioso.

= 2010-02-18
:date: 2010-02-18

Iniciando testes com o carregador via USB. Iniciando carga agora, após ele desligar por falta de energia. 23:25 Ainda carregando...

= 2010-02-19
:date: 2010-02-19

Estou escrevendo o artigo na wiki sobre o DayToDay. 01:30 Acredita que ainda não carregou a bateria?? 01:32 Vou considerar que já carregou, já que quando tiro ele fica com todos os "pauzinhos". Mas vamos ver quanto tempo dura.

= 2010-02-22
:date: 2010-02-22

Testando geração de log no SmarDrive no trabalho.

= 2010-02-23
:date: 2010-02-23

Testando solução do ScuaPrib. Aparentemente a modificação não deve afetar a proteção, mas nunca é demais testar. 08:53 OK!

= 2010-02-25
:date: 2010-02-25

Vou tentar logar aqui o que estou fazendo (de novo). 15:41 E o que eu estou fazendo é tentando fazer funcionar o servidor web do security. 17:49 O servidor web está funcionando, Security instalado e apontando para a base. 17:50 Foi "só" criar 10000 usuários e o DataSvr já começou a dar erro de inclusão de novas entradas na base. Tentando compilar Debug o Security, com vários erros.

= 2010-02-28
:date: 2010-02-28

Testando novamente

= 2010-03-01
:date: 2010-03-01

Problema potencial: usando o c:\hsi\hsi.ini para guardar configurações do InvUpdFile existe o risco potencial do HSI ser removido do servidor e todos os arquivos recebidos passarem a mudar de pasta. Solução imaginada: parâmetros para os plugins do RpcSvc podem ser configurados diretamente no registro, em HKLM\System\CCS\Service\RcpSvc 15:13 O bônus adicional é que os plugins receberão essas configurações pelo próprio serviço, sem saber de onde vem

= 2010-03-03
:date: 2010-03-03

Iniciando a análise de tela azul da Allianz. Deus, eu não consigo descrever todos meus passos aqui! 10:13 O pau ocorre quando o InCD, do Nero, chama a função NtOpenFile, e láááá no IopFreeIrp, logo após IopParseDevice, é gerado o KeBugCheck 10:28 Começar a testar com algumas versões antigas para ver a data do bug. 10:53 A versão 8.20.0.1 causou um page fault, mas só no primeiro reboot. Depois trava o explorer e não mata os processos de acordo. 10:56 Testando primeira 8.22 10:58 Voilà! Mais um page fault! No primeiro boot. 11:02 Aparentemente, os mesmos problemas de travamento do explorer da versão anterior. Próximo... 11:03 8.23.0.5 11:06 Agora sim!! 11:07 8.21.0.24 11:12 Travamento similar ao bug anterior. 11:13 8.22.0.32 11:16 Travamento do explorer. Estamos bem próximo agora 11:17 8.22.0.40 11:21 Travamento do Explorer. Tá bemmmm perto 11:25 é, pelo jeito, a primeira versão que temos é mesmo a 8.23.0.5 Testando novamente. Só prá.... 11:47 Essa é a versão. Agora temos que comparar as diferenças entre essa e a última. Infelizmente temos alguns builds perdidos no meio do caminho. 15:58 Compilando versão 8.23.0.1 para teste. Talvez tenha a ver com as modificações para Windows 7. 15:59 As mudanças do Fernando foram feitas entre o build 1 e o 2. A versão 1 dá tela azul de non paged fault. Isso quer dizer que talvez trave o explorer, e o bug ainda não esteja "consolidado" =) 16:30 Na versão labelizada 8.23.0.2 dá a outra tela azul. O que quer dizer que a mudança foi feita entre essas revisões. Agora passando uma a uma, iniciando pela 478.1.2 (correção para o McAfee no Bradesco). 16:48 Agora é oficial: o revno 478.1.2 carrega esse bug, que troca de "travamento do explorer" para "tela azul". Bem melhor, né? 17:49 Vamos tentar repassar os pontos onde os IRPs são completados, para verificar qual fluxo de eventos está tornando a situação de múltiplos completes. 17:54 Aparentemente o complete NÃO está no StackPlus. 18:01 Temos uma coleção de drivers de FS no InCD: InCDFs.sys, InCDRec.sys, InCDRm.sys, InCDPass.sys. 18:21 A pilha usermode aponta para uma chamada a SHELL32!SHGetDiskFreeSpaceExA, que por sua vez chamakernel32!GetDiskFreeSpaceExW, passando NULO (diretório-raiz).

= 2010-03-04
:date: 2010-03-04

Voltando a depurar. Como é ruim continuar no dia seguinte... 10:25 Aparentemente o problema ocorre no completion em Create.cpp, linha 487. 11:33 Finalmente conseguimos parar na pilha e na chamada que vai cagar todo o resto. 11:40 Não chamei o completion para o file raiz, não deu tela azul, mas reproduziu o travamento do explorer. O IRP pendente era da pasta que havia aberto. 13:01 Não acontece mais nenhum completion após o que irá gerar a tela azul. 17:08 Se eu entendi direito, nosso driver (ou o outro) deve estar cobrindo a stack location do outro e completando novamente a IRP (que foi completada quando o driver original estava na stack). Isso faz sentido quando vemos que a rotina de completion do driver de baixo, que é o do FS de CD, é uma rotina do nosso driver! 17:09 Então a questão agora é encontrar ONDE que essa cópia é feita. Provavelmente na hora de setar o completion e alterar a stack location (ver o código de correção para McAfee).

= 2010-03-05
:date: 2010-03-05

Vieram diversos dumps da Bovespa para analisar, o que quer dizer que nossa telinha azul do momento vai ter que esperar... 11:33 O IRP da tela azul da Bovespa, e sua stack, com o McAfee e o ScuaRaw dançando juntos, mostra os completions acima do driver que realmente os contém. Ainda não sei se isso é o normal; se não for, é o problema, então é por aí que devemos analisar. 13:59 O passo mais importante seguinte é provar que a sequência de completions está errada. Se não estiver, veremos qual será o próximo passo. Mas o erro está relacionado com o fechamento múltiplo de completions e com a exceção no analyze das regras. 14:29 Voilà! Sem a função de Create não dá tela azul nem trava o explorer. Apenas redirecionando pelo StackPlus, sem completion nem espera. 14:32 Ops. Fazendo um monte de coisa pelo Explorer com o CD trava geral... 14:34 Então deve faltar o completion dessas IRPs, mas não fazemos completion duas vezes mais, pois isso geraria tela azul. 14:45 Interessante que sem o InCD o Explorer começa a responder pelos eventos de CD. Quando tira o CD ele fecha as janelas. Isso mesmo com o Security Instalado. 14:57 Redirecionando o FsClose pára o travamento do explorer. Pela minha dedução, então, o Create gerava a tela azul, o Close o travamento do explorer. Talvez o travamento do explorer teria continuado se não fosse a nova tela azul vir "salvar o dia". Como a tela azul é mais urgente, vamos nos focar nisso. 17:54 Retirei a auditoria de regras não controladas, que é o que gera o rodeio de chamar o driver de baixo, esperar a completion que seta o evento que é sinalizado no dispatch que daí envia o evento assíncrono para a ScuaAud. 17:55 O efeito foi que parou de dar tela azul. Nesse caso podemos concluir que é apenas nessa parte que o problema principal se manifesta.

= 2010-03-08
:date: 2010-03-08

Voltando à tela azul da sexta. Explicando para o César como funciona o problema dos completions, me veio à mente que talvez eu estivesse ignorando o problema principal: estamos completando um IRP já completado (ou existe outro ser na pilha de chamadas que completa depois da gente, mais provável pela tela azul?) 11:11 Como testado semana passada, o novo código trava o explorer totalmente ao retirar o cdrom e tentar fechar a janela em que ele está aberto. Além de um BAD_POOL_CALLER que eu mesmo gerei e consertei. 11:18 Mesmo sintoma voltando a rotina Close e corrigindo o BAD_POOL_CALLER. 14:01 Provado: "IoSetCompletionRoutine installs the completion routine address and context argument in the next IO_STACK_LOCATIONthat is, in the stack location in which the next lower driver will find its parameters." "Consequently, the lowest-level driver in a particular stack of drivers does not dare attempt to install a completion routine." O que quer dizer que faz todo o sentido a completion estar no SL do lower driver. 14:46 Suuuuuuuuuuuucesso! Não deu mais tela azul. Agora preciso testar as condições mais gerais do Security... 14:47 O problema era chamar o MarkIoPending (ou algo do tipo), pois esse esqueleto é necessário nas chamadas às funções de completion (por algum motivo ainda nebuloso na minha cabeça). 15:03 O problema do close continua, como era de se supor. Podemos, no entanto, ter uma versão sem ele que funciona quase tudo. 15:57 Muito bem. Agora vamos tratar do problema do close, com calma e disciplina =) 16:29 Comentando o WriteToLog pára o problema, o que quer dizer que o único problema é a comunicação entre o driver e a aud. 16:35 Sem o SendToLog continua dando o problema, o que quer dizer que as funções de ProcessInfo podem ter conta no cartório. 17:43 O sistema de nomes (namelookup.c) trava quando as IRPs do CD-ROM são acumuladas e, aparentemente, não são finalizadas. Por algum motivo, ou a completion nunca é chamada ou o evento nunca é setado (ou os dois).

= 2010-03-09
:date: 2010-03-09

A correção de ontem não deu jeito na Bovespa, pq o bug check é diferente, o que indica um outro problema. Como podem dois problemas surgirem do nada? Não é possível concluir que vieram do mesmo commit, pois o segundo erro não pode ser reproduzido aqui. 13:37 O bugcheck FDS_FILE_SYSTEM só ocorre ao instalar o XP sp2 ou o pack de segurança 890859 13:38 Além dele ser raro, poucas pessoas parecem saber o que ele significa... e acho que ninguém compartilhou isso na rede.. 13:56 Vamos tentar reproduzir o erro com o próprio McAfee... 17:10 Bom, eles não testaram ainda com os driver REALMENTE novos, o que por enquanto me exige de olhar para seus dumps. Vamos voltar para o travamento no close.

= 2010-03-10
:date: 2010-03-10

Ontem, foi tentado reproduzir o problema no McAfee e analisar as telas azuis geradas na Bovespa. Como a Bovespa ainda não conseguiu gerar dumps com drivers atualizados, vamos voltar para o problema do close (AllianZ) até então. 10:57 Ih, parou de travar. 11:11 Aparentente, a chamada de NLGetFullPathName em SfClose está demandando completions que não são realizadas, acumulando IRP pra c** 17:31 Consegui rastrear a irp faltosa (ou cheguei perto). Aparentemente uma irp que trava na thread trava todas as outras, explicando pq a thread toda fica travada (e o explorer). E ela realmente fica em wait.

= 2010-03-11
:date: 2010-03-11

Setei a flag NLFL_ONLY_CHECK_CACHE antes de buscar o nome do arquivo que está sendo fechado. Aparentemente não trava mais! O problema é: vai estar sempre no cache o nome do arquivo? Teste nos logs... 12:48 O log de close não está sendo feito; provavelmente pq o nome não existe no cache, forçando-nos a pegar de fato. 13:55 Essa é a única IRP que pára no breakpoint de wait, e fica em wait sem o completion rodar... ever! E enquanto isso a thread travada fica com um punhado de IRP esperando. 14:02 O ScuaAcc tb está na pilha, mas como hook de função API (NtClose). Testando subir a máquina sem o acc... tela zul!

= 2010-03-12
:date: 2010-03-12

No bug check DFS, existe um trap que foi capturado pelo próprio Mup, daí ele ter aparecido no !verifier. 13:59 Esse trap pode ser obtido no quarto parâmetro da função na pilha KiDispatchException (e usado no comando .trap). 14:35 Achei o path do maldito arquivo: \ADSCOR0102P.corporate.int\SysVol\corporate.int\Policies\{B5935660-D021-456A-9E18-90ACF0B9E7B7}\User\Scripts\Logon {Root} 14:40 Vamos tentar fazer um teste mais realista: colocar o xp em um domínio, criar um script de logon para um usuário desse domínio com o path semelhante ao encontrado no dump. 15:32 Lembrar de usar o IRP Tracker para o problema do close (qdo eu voltar para ele). 18:31 IrpTracker está "sumindo" após o logoff, mesmo como serviço. Terei que ver isso semana que vem.

= 2010-03-15
:date: 2010-03-15

Agora vamos tentar encontrar de onde o ScuaRaw achou o valor inválido do trap antes da exceção. 10:42 A memória do dump 0x88cad010 aponta para uma memória alocada em memória não-paginada. Isso quer dizer que é um código dinâmico. 10:51 Então tá. A função ScuaRawFsNotification chamou IsAccessible que ferrou em algum lugar, mas a pilha mostra claramente que o endereço de retorno é após essa chamada. 11:28 A memória do szPath é alocada em memória PAGINADA. Isso pode querer dizer algo. Ou não. 13:21 Conseguimos trackear o szFileName e sua memória no pool de memórias. O tamanho está certo, e o pool também. Então... tudo bem! Droga =( 14:25 Mais um ótimo artigo para ser escrito em português, com a ajuda do Crash Dump Analysis: como caminhar pela pilha crua usando dds. Ops, dps! Geralmente iniciamos definindo o range desejado, sempre do menor para o maior. 14:26 A pilha do 8086 cresce "para baixo", o que quer dizer que endereços de funções que estão em uma posição maior na pilha chamaram as funções que estão em posição menor, junto de trocentos parâmetros locais e de passagem (parâmetros da função). Junto disso existe o chamado stack frame, que é constituído do EBP (Base Pointer) e do ESP (ou Ret Address). 14:30 O endereço de retorno da função chamadora irá estar sempre uma posição "à frente" do endereço do próximo stack frame, possibilitando "caminhar na pilha" usando esse padrão: pega valor posterior, exige nome do símbolo, caminha para valor apontado, pega valor posterior...

= 2010-03-16
:date: 2010-03-16

Primeira coisa: abrir o dump Segunda coisa: usar o !analyze Terceira coisa: capturar a exceção nos parâmetros para KiDispatchException. Usar o comando .trap 10:24 Encontrada a última ocorrência na pilha, procurar esse endereço através do !search !search apenas com o valor procura em toda a memória válida. 10:25 Usar dps para rastrear a suposta pilha "mais para as bordas" 10:34 O primeiro dword do nosso amigo 88cc0d68 contém uma "lista ligada" que tende ao infinito (ou é maior que 10000). Ainda não está claro o que essa lista contém. 14:39 Logo abaixo da posição da pilha do retorno da chamada ao IsAccessible (a834e658) existe a lista de parâmetros passada para ele, incluindo o szFileName (e16af688), o ulOperation (00000002), o ponteiro para ulRights (a834e690), a thread (00000073) e os dois nulos (é diretório e NULL mesmo). 15:55 Existe uma estrutura que leva o endereço de retorno da pilha para 88cad008, mas não pode fazer sentido pq esse valor NÃO está na pilha do WinDbg. 15:56 Por outro lado, ele pode achar que esse foi o último valor setado... vai saber viajando na maionese... 16:42 A memória 88cad008 (ou 10) que está na pilha corresponde a uma memória alocada por nós, ou por alguém que usa a biblioteca de kernel C++ htscpp, pois a tag Htsc é a usada para alocar essa memória.

= 2010-03-17
:date: 2010-03-17

Na verdade, os 88 bytes de tamanho da estrutura alocada são 136 em hexa. 17:24 Criando estrutura de todos os dumps e analisando. Resolvi classificar por bug check (afinal, a chance de serem o mesmo bug é alta) e em cada bug check a pasta da empresa (afinal, a chance do ambiente ser parecido é alta). 17:25 BugCheck8e analisado. Ocorreu no BPN e no Bovespa, e ambos usam McAfee. O ponto do crash varia entre a chamada ao IsAccessible dentro do SfCreate e logo após, antes do Strlen. 17:38 O bugcheck 50 (PAGE_FAULT_IN_NONPAGED_AREA) acontece no mesmo ponto do bug check estranho! Isso quer dizer que talvez valha a pena analisar esse daí (mais comum) do que o outro lá (raro quase nunca acontece).

= 2010-03-18
:date: 2010-03-18

Vamos continuar analisando os outros dumps para chegarmos a algum consenso. 16:00 A versão que todos falharam inicia no dia 17 de setembro de 2009, depois das 14:00, o que quer dizer que com certeza todas aquelas mudanças estavam valendo. 17:02 Ficar de olho amanhã no BSOD\BugCheck82\BPN, pois o dump é mais organizado, pois tem o endereço da exceção no zero e o IsAccessible na pilha! Yes, we can!!

= 2010-03-19
:date: 2010-03-19

Vendo o projeto agências do Bradesco Comunicação TPC/IP: teremos domínios? relação de confiança entre domínios? rede internet ou intranet? portas abertas? 09:24 O que seria a versão do produto e o build? O build das regras ou do produto? 11:01 Tentando bolar uma nova maneira de fazer o sincronismo. Não me sai da cabeça que a melhor maneira é fazer de novo =) Porque a ideia de cache são "dados temporários obtidos de um lugar principal" Isso quer dizer que o cache pode representar um momento no histórico de regras que foi obtido para efetuar o logon do usuário; caso não seja possível atualizar o cache, é usado sempre o último para o usuário. 11:02 Então teremos a tarefa mais difícil no cliente, que é ler, no lugar do ctree, o novo cache, e subir as regras. A parte de montagem do cache e transporte é "relativamente" simples... E talvez eliminar qualquer comunicação com o servidor que não seja pelo cache? 11:03 Mas podemos ter uma interface de somente leitura que retorna dados simples para o cliente... Talvez usar o esquema já montado do superserver... 18:01 Algumas definições (ainda em análise) sobre o uso do framework e dos branches: 18:02 Primeiro: todos os branches devem saber qual a versão atual do Framework no momento da compilação. Segundo: Os branches (branch==projeto) podem depender ou não do Framework, que deverá estar disponível na pasta ao lado. 18:03 Os subprojetos (subbranches), como será o HDEncryption, dependerá no nível do fonte do Framework e no nível de binários do seu projeto principal.

= 2010-03-22
:date: 2010-03-22

Migrei os componentes do projeto agencia do Bradesco para nosso primeiro branch framework Agora já migrei as ferramentas e fiz os projetos usarem elas diretamente de nosso _output, assim como foi alterado tb no build oficial (output compartilhado). 15:07 Também criei um version.h de qual todos os version.h dos outros projetos dependem. Agora estou colocando a versão do framework dentro dos resources dos arquivos. Agora vamos começar a matutar sobre os projetos agências... 16:44 171311

= 2010-03-25
:date: 2010-03-25

Voltando do problema da Bovespa, vamos usar as regras que eles estão usando lá para tentar reproduzir essas telas azuis que, pelo jeito, são testes de estresse com várias aplicações de acesso vinculado e várias rotas.

= 2010-03-26
:date: 2010-03-26

Atualizando versões do cryptlib (crypto++) e boost para ser mais fácil a integração com Visual Studio 2008.

= 2010-03-29
:date: 2010-03-29

Parece que o nosso Cópia Exata está tomando forma. Nesse exato momento temos um ícone na área de transferência e um menu de contexto que consegue realizar backup on demand e sair do aplicativo. Cool! Essa mensagem foi criada para testar o Backup now! 00:34 Dados do DLink DI-524: 00:35 P/N: II524ZNA.....H1G S/N: DY2I199034342 H/W Ver.: H1 F/W Ver: 4.01 FCC ID: KA2DI524H1 00:36 MAC ID: 002401-98E999

= 2010-03-30
:date: 2010-03-30

Pesquisando se existe alguma maneira de se conectar ao CE 5.0 sem ele precisar se comunicar primeiro. Aliás, a tela azul da Bovespa foi oficialmente entregue ao Ferdinando. 15:32 Vamos enviar para o Ferdinando todos os dumps gerados durante a visita, além de atualizar o branch.

= 2010-03-31
:date: 2010-03-31

Problemas ao gerar a configuração para compilar IDLs. O problema é o define do CMAKE, que usa aspas duplas e fica assim: \"Debug\"". Essas duplas aspas duplas deixa o compilador de IDL doidão. 11:22 Ignorando projetos COM e tentando compilar o resto. 11:25 Também teremos que dividir as DLLs de mensagens. Not a big deal. 14:20 Caso clássico de estagiário na Microsoft: GetModuleFileName fica na kernel32.dll; a versão Ex na PsApi.dll. Caso clássico de estagiário na MSDN: A ajuda do GetModuleFileNameEx diz que a função fica na kernel32.lib.

= 2010-04-01
:date: 2010-04-01

Fazendo a migração para CMake aos poucos em branch separado, para deixar bem claro o procedimento. Primeiro Libraries, depois DLLs, etc.

= 2010-04-02
:date: 2010-04-02

OK. Vamos parametrizar o CopiaExata e torná-lo "usável" fora da minha máquina.

= 2010-04-03
:date: 2010-04-03

"Há uma diferença entre ser pobre e estar quebrado. Estar quebrado é algo temporário, ser pobre é algo eterno." - Pai Rico, Pai Pobre. 21:46 "Não trabalho por dinheiro: o dinheiro trabalha para mim."

= 2010-04-05
:date: 2010-04-05

Agora que conseguimos dar "olé" no ScuaPrib (e virtualmente em qualquer outro projeto com IDL) podemos começar a projetar como seria o procedimento das pessoas para compilar o projeto. 18:04 Iniciando de novo. Dessa vez a ideia é uma coisa rápida: configurar os CMakeLists, colocar no controle de fonte, separando o Libraries da DLLs e criando dois projetos distintos.

= 2010-04-06
:date: 2010-04-06

Qual seria a solução mais rápida, mesmo? Ah, sim, deixar os projetos mais organizados ANTES de aplicar CMake.

= 2010-04-07
:date: 2010-04-07

Vamos dar mais uma procurada pelo projetos perdidos. 10:38 Ah, CTreeFile!!!

= 2010-04-08
:date: 2010-04-08

O problema do RPC foi resolvido chamando a função RpcServerRegisterIf2 no lugar da RpcServerRegisterIfEx. Com ela podemos especificar o MaxRpcSize para -1 (INFINITE!). 14:33 Agora me toquei: durante a instalação de pacotes, o código de retorno pode ser o do InstallShield, o que invalidará o sucesso ou erro na instalação. Mmmmm...

= 2010-04-09
:date: 2010-04-09

Por outro lado, nosso sistema de update já aguarda o job; seria redundância (e consequente erro) criar um job no FwUpdate.

= 2010-04-12
:date: 2010-04-12

Tentando subir um console web para tentar reproduzir os erros acusados pelo César (sincronismo dos policies e exclusão de aplicativos). Teremos que implementar a importação dos usuários/grupos/aplicações lendo da tabela que o java põe para os arquivos importados. 14:28 Consegui!!! 16:47 Corrigido parcialmente o sincronismo de diretivas. O problema maior era a mudança do leiaute da tabela dos grupos de diretivas, com uma nova coluna com o nome interno.

= 2010-04-13
:date: 2010-04-13

Os únicos três itens que não foram sincronizados pertencem ao mesmo cod_regra_tipo, 3, que está deslocado dos outros na ordem (por algum motivo histórico que foi repassado nas tabelas SQL). 14:49 Corrididos itens específicos das diretivas de acesso: três itens de rede estavam com o número de ordem errado (era 3, passou para 6). Causa? Talvez por serem de rede e estarem gravados na seção desktop. 14:57 O motivo de ignorar as exclusões é que não estamos levando em conta uma flag de "apagado", em vez de admitir que os itens excluídos são, de fato, excluídos do banco. 16:13 Por algum motivo, o Manager legado não mostra as informações das aplicações cadastradas no Console Web. 16:18 Criando novo chamado para esse problema. Mas corrigida a exclusão.

= 2010-04-14
:date: 2010-04-14

Como acelerar os builds? 10:22 Projetos menores? Tirando os projetos não atualizados nos últimos seis meses?

= 2010-04-15
:date: 2010-04-15

O open do SQL na versão debug é beeeeeeem mais lento que a versão release.

= 2010-04-16
:date: 2010-04-16

OK. Próximo passo: desempenho do DataSvr. Precisamos ver rapidamente esse item para já partir para a importação.

= 2010-04-22
:date: 2010-04-22

O DataSvr também tem sérios problemas para parar. Alguma coisa trava ele... 11:39 Muito lento ainda... vamos ver o Release. 16:01 Vamos desabilitar a atualização das informações dos usuários e grupos, pois este item não é tão relevante no atual momento, e fica bem mais rápido. 16:06 10000 usuários escaneados em menos de 10 segundos. OK 16:07 Menos os relacionamentos, que vamos ver agora =)

= 2010-04-27
:date: 2010-04-27

O próprio sistema de sinocronismo dos IDs do CTree já sincroniza o SQL; ou seja, na criação dos usuários/grupos, a criação no SQL é automática; não precisamos mexer nessa parte...

= 2010-04-28
:date: 2010-04-28

Ainda cuidando do problema do sincronismo, que não pega as rotas de auditoria.

= 2010-04-30
:date: 2010-04-30

Não criou nenhuma rota!!!

= 2010-05-03
:date: 2010-05-03

De novo o erro do SQL. Só que dessa vez não existe código de erro. Acho que deve ter alguma coisa na wiki. 10:43 mmmmmmm!! Tem que atualizar o MDAC! E não havia colocado isso no diário Para corrigir o problema do SQL tem que atualizar o MDAC! 12:59 Vídeos da Empiricus, com Marcos Elias 14:25 Quando criamos uma aplicação e sincronizamos no CTree, OK. Depois apagamos a original e criamos uma IDÊNTICA, ele remove a original no primeiro sincronismo. No segundo sincronismo ele sincroniza o app novo. 14:42 Primeiro erro do DataSvr: não levar em conta o índice de exclusão para listar objetos. Está, consequentemente, REapagando todos os objetos. 15:17 Outra coisa vital: as informações de usuários/grupos antigos NÃO estão sendo atualizados, com exceção do login, que é obrigatório capturar. Esse é o preço da otimização que eu fiz. 16:32 A solução proposta é "reabilitar" o usuário/grupo, mesmo que este tenha rotas e diretivas antigas. Podemos decidir futuramente se essas regras devem ser apagadas, mas é interessante mantê-la se o algoritmo de geração de SIDs for alterado para usar hash.

= 2010-05-13
:date: 2010-05-13

Há muuuuito tempo atrás, eu usava isso daqui para logar minhas ações =)

= 2010-05-23
:date: 2010-05-23

Tentando bolar a nova versão alfa do nosso amigo CópiaExata. E como esse botão de espaço falha!

= 2010-05-26
:date: 2010-05-26

Voltando a narrar os acontecimentos, pra conseguir traquear tudo que estou fazendo e não me perder. 14:50 Nesse momento estou testando a ferramenta que criei que habilita o compartilhamento de arquivos pelo Firewall do Windows. Vou testar no Windows 7, que notadamente tem uma maneira bem diferente de fazer isso pela interface. Ao mesmo tempo, estou copiando os arquivos do VS2003 para instalar no scuadesenv, pronto pra se transformar numa máquina de build. 14:57 Chamei o pai do Windows de batatinha. Depois de setar o valor da policy no registro (rebootar), funcionou! 15:21 Mesmo que consigamos habilitar o compartilhamento de arquivo no W7 é preciso mexer no registro, o que remotamente é mais difícil ainda. Por outro lado, a maioria dos clientes deve ter suas máquinas dentro de uma rede, o que faz com que a solução funcione. Vamos testar com o W7 no domínio. 16:17 Funcionou! Aparentemente o Seven usa algum critério para selecionar o "perfil" de firewall padrão e altera esse padrão, mas não os outros. 16:18 Próximo passo: conseguir essa proeza remotamente. 17:01 OK, o Firewall NÃO pode ser acessado remotamente pela interface do código da rosa. Dessa forma, como está começando a ficar complicado (ou "hackiplado") é melhor definir que essa porta tem que estar aberta e vai se fuder, obrigado.

= 2010-05-27
:date: 2010-05-27

Puxa. Se não tem as DLLs do VC não vai funcionar essa operação, né? =) 10:59 De novo deu pau no firewall. Ainda não descobri se tem relação com nosso programa.]

= 2010-05-28
:date: 2010-05-28

Continua dando pau no serviço de firewall do Windows. Alguma coisa não está muito legal... 19:36 Vou falar: o sistema de atualização do serviço RPC e seus plugins está LINDA!!!

= 2010-05-30
:date: 2010-05-30

Testando CopiaExata versão alpha (de novo!) 19:06 Teste 19:07 Teste 23:03 Acho que terminei uma versão muito boazinha pra começar a usar CopiaExata por todos os cantos. 23:05 Testando mudança de arquivos. 23:07 Ping

= 2010-05-31
:date: 2010-05-31

Com o sistema sendo atualizado sem reboot teremos um problema de sincronismo com os drivers, pois os antigos sempre estarão rodando com os serviços novos. É necessário determinar quando o reboot será realmente necessário, nesse caso. 11:17 Travamento após parar SsLogin. Pode ser coincidência, mas geralmente não é.

= 2010-06-01
:date: 2010-06-01

Peguei todo o histórico antigo da Scua e anexei no meu daytoday atual.

= 2010-06-08
:date: 2010-06-08

Tentando atualizar novamente. 10:53 Erro ao acessar o console web em scuades02. Fiz o básico: extraí os arquivos compactados em \\scuafiles\dev\produtos\WebSecurity\security.zip para dentro do webapps do tomcat (renomeand o antigo). Estou reacessando a página, mas ainda estááááá abrinnnnnnnndoooooo... 11:10 Parece que existe um problema quando os nomes dos objetos batem com entradas antigas (por exemplo, uma nova aplicação com o nome de um usuário). Mas isso deve ser falha do algoritmo de hash, pois nós mantemos o range de cada tipo de objeto. 13:33 Minha suspeita, então, de que poderia ser um erro causado por objetos com mesmo nome e categorias diferentes, é infundada.

= 2010-06-17
:date: 2010-06-17

Pra zerar as configurações do firewall do Windows: rundll32 setupapi,InstallHinfSection Ndi-Steelhead 132 %windir%\inf\netrass.inf

= 2010-06-21
:date: 2010-06-21

Para habilitar administração remota no Windows 7 não basta habilitar o firewall, precisa setar o valor DWORD LocalAccountTokenFilterPolicy para 1 na chave HKLM\Software\Microsoft\Windows\CurrentVersion\Policies\System e reiniciar o sistema. 11:17 O Windows 7 está "travando" a DLL FwUpdate.dll mesmo depois de rodar o FreeLibrary. Mesma versão foi testada no XP e funcionou. Então existe algo no Seven que impede a atualização imediata do plugin (só no reboot).

= 2010-06-29
:date: 2010-06-29

Analisando problema de criptografia de disco de 250 GB em um NetBook HP. 11:29 Achei algo que não encaixa: os indicadores de status mostram um valor que não é redondo, ou seja, ou criptografamos a "beirada" do disco ou ele perdeu o compasso nos chunks da vida.

= 2010-07-13
:date: 2010-07-13

Vou tentar começar a usar isso como base de conhecimento aprendido, para rever depois. Tive um sonho hoje em que o daytoday tinha um sistema de play, pause, rewind e forward, para eu andar pelas minhas anotações. Bem legal =) 10:06 Esse DBH do WinDbg parece bem útil para analisar símbolos, pois ele exporta muitas das funcionalidades do DbgHelp.dll. Estou tentando encontrar como listar módulos de um processo analisando um dump de kernel mode. 10:07 Acho que devo colocar aqui tudo que aprendo, inclusive durante minhas debugadas. 10:09 O comando para listar DLLs usadas por um processo dentro da análise de kernel é o !dlls. Com ele é possível inclusive achar qual módulo é responsável por um endereço. 10:10 Parar usar esse comando, devemos setar o contexto para o processo que queremos analisar. Com o parâmetro -c <endereço> achamos o módulo responsável pelo endereço em um determinado processo (caso a pilha não mostre ele). 10:17 É claro que ele não carregou os símbolos. Eu tenho que primeiro setar o processo ativo e depois dar um .reload. 11:06 Para listar apenas um processo, use !process 0 0 <nome-da-imagem> 12:49 Além de rever estes comentários, devo rever meus itens compartilhados e estrelados. O período de fazer isso ainda é uma incógnita, mas verei o ritmo e como me comporto com esse novo esquema.

= 2010-07-14
:date: 2010-07-14

Tem uma thread em um processo que estava travada aguardando a criação de um processo (e nosso ScuaRaw no meio). 14:33 Mesmo em um Seven "vazio", podemos notar alguns processos com número de handles abertos igual a zero, o que invalida minha teoria que o sistema de hook pode estar travando a criação das threads principais de alguns processos 14:34 De qualquer forma, não deixa de ser curioso que exatamente no momento de geração do dump um processo estava sendo criado (e no wait). 15:15 O MLogon usado pelo dumpão é da versão 8.23.0.47 (versão do arquivo 8.2.0.4). O mais bizarro é que essa versão do arquivo não havia sido empacotado em nenhum build, pois logo ela virou 5 e daí foi para o próximo. Isso tem cheiro de modificação customizada urgente.

= 2010-07-15
:date: 2010-07-15

Aprendi um monte de coisas esta manhã, no conforto do lar: Usando !lock conseguimos obter os recursos que estão sendo disputados pelas threads no sistema inteiro (kernel debug). Foi dessa forma que achei o dead-lock do acc em duas threads durante a criação do processo. 13:34 O recurso em questão é um push lock, que é aquele recurso que pode ser obtido por várias threads para read, mas apenas por uma no write. 13:35 Os push locks começaram a ser usados no XP/2003 e principalmente no controle de páginas de memória do Memory Manager, no controle de objetos do Object Manager e na tabela de handles! É exatamente nesse último comentário que o dead lock faz sentido, pois ocorreu em dois ZwClose. 17:22 When ideas have sex and have an orgasm. Today I was completely relaxed. Woke up and stayed in my bed, getting time to my ideas have sex. And they had. I pointed out exactly the problem I was looking for four days consecutively. My mind was discovering little pieces of Universe whilst I was aborbedly thinking. No matter was between me and the problem. No stress, no pathology, no anything. And it was like this. My ideas have an orgasm. No, no, not one: multiple ones. And I was going office floating in the air, thinking in how life's beautiful, simple and perfect. And that was the moment I was completely living my life, with my mind free and my ideas resting in peace.

= 2010-07-16
:date: 2010-07-16

In peace? This is ridiculous. I know. This is the effect of dopamine and norepinephrine. Pretty logic. And pretty stupid. I know. But I can't help it, so I'm not doing it. The only solution is the time, I think. Probably I gonna laught out loud when I read this. I hope so. And I wait. Desperately

= 2010-07-18
:date: 2010-07-18

Nova versão do daytoday, redimensionável. 18:34 A posição também? 18:45 Testando

= 2010-07-19
:date: 2010-07-19

Testando novo daytoday no trampo. Ele deve manter o tamanho que eu quiser da janela. 09:53 No ProcessInfo::Initialize é criada a thread de sistema CreateProcessInfoThread. Também são instalados os hooks para as funções NtCreateSection, NtOpenSection, NtMapViewOfSection e NtClose. 09:54 A última coisa é instalar o notificador de criação/término de processos através da função PsSetCreateProcessNotifyRoutine. Nossa função é a NotifyRoutine. 09:56 Na saída, pra variar, os hooks são desinstalados, a rotina de notificação é retirada, o evento de saída da thread de sistema é setado, aguardamos seu término e vamos pra casa. 09:59 (é bom lembrar que o ProcessInfo::Initialize só é chamado no "segundo" DriverEntry, que é agendado para executar mais tarde, por problemas nos hooks iniciais.) 10:09 Aparentemente, a versão atual NÃO controla processos que rodem em system account. 10:13 É verdade. 10:57 Essa linha faz a "mágica" de pegar o índice na tabela de funções de sistema: *pulIndex = *((WORD*)((ULONG)pNtProc + 1)); pNtProc é o endereço na ntdll da função nativa que iremos hookar, só que no fundo iremos hookar direto no índice 11:01 O que é feito é uma aritmética dos infernos que converte o ponteiro para a função em um ULONG, adiciona 1 _no endereço_ e pega o WORD (16 bits) resultante. Como depois do byte do mov eax (b8) temos o índice da entrada no kernel, esse ULONG é capturado, mas apenas seus dois bytes menos significativos (a tabela não é tão grande assim).

= 2010-07-20
:date: 2010-07-20

Descoberto que está sendo usado o esquema de alocar uma section de uma página e compartilhar com todos os drivers. Essa página possui uma estrutura tag -> endereço. É lá que está alocado o Handler, que é copiado de seu código C. 13:36 O endereço da section é \Device\NVTable, mas a tentativa de abrir uma view dela pelo WinDbg foi em vão. A única saída de encontrar a memória aberta é usando a variável do scuaacc, NVTable::m_pNVTable. 18:29 Father weekend. I'm a pretty lucky guy. Some situations in my life allow me to feel like a different persona and I don't have even to fake. This weekend, by example, me and my girlfriend enjoyed all the kids play from her niece, just like we were his parents. We made shopping, watched movies, talked to her. I played fireworks, bed jumping, blocks assembling with her. And it was amazing, because I'm not her father to do that. I'm not even relative to her 8)

= 2010-07-26
:date: 2010-07-26

Criamos um Google Wave para discutir nossa armação. E somos os Bastardos Inglórios! Ainda testando a interface, mas parece coisa boa. Será que estou expandindo demais minhas atividades extra-curriculares? 16:25 Meu IP atual é 172.11.1.163 (máscara 255.255.255.0, gateway 172.11.1.1) 16:26 E o nosso amigo scuadesenv é o 172.11.1.16

= 2010-07-27
:date: 2010-07-27

Defini nova rotina para o Todolist: 8 horas diárias, mas só começo a contar após uma hora de trabalho. Depois o almoço conta junto. 14:37 Algumas chaves (serial): Office Enterprise 2007 with BCM CC7JT-FWK2M-4Q7YJ-239MJ-TRPH6 Project Professional 2007 TCKGC-7DMY2-JMGKD-TPPKD-Y6JV6 Visio Professional 2007 GCVXW-9RPC4-C33Q4-QKR3P-8PKRG 14:38 Pode ser útil um dia (A) 17:46 Quando usamos o dd temos que especificar conv=notrunc, do contrário o arquivo de saída será truncado até o último byte escrito. Isso não ocorre com discos, claro. 17:47 Fiz um script que escreve a chave de criptografia (key.dat) dentro do second pulando os 7 primeiros bytes (jmp e assinatura). Nesse comando usei o notrunc. Depois só precisei usar o dd novamente para copiar o second para o disco, pulando 18 setores (lembrando que 512 já é o bs padrão). 17:48 ficou algo assim: dd if=/mnt/key.dat of=/mnt/second.b conv=notrunc E o segundo comando: dd if=/mnt/second.b of=/dev/sda seek=18

= 2010-07-30
:date: 2010-07-30

Redefini a forma de usar o todolist: começar a contar o tempo meia-hora depois de chegar e parar meia-hora depois de sair. Dessa forma tem o gap do horário do almoço.

= 2010-08-02
:date: 2010-08-02

A função que está presente em 1092 é a CCTreeFile::Open. Obtive essa informação pelo assembly da primeira função chamada, que contém um código inicial que retorna o erro 0x2F (47). O único ponto no código que faz isso é nessa função, além de eu ter mapeado o resto do código com o código-fonte. 10:38 Nosso travamento ocorre na função CCTreeFile::GetDataFile. 11:11 Não é apenas um arquivo, mas as threads duplicadas tentam abrir múltiplos arquivos. O que faz até sentido, já que o mecanismo de proteção é único para todos os arquivos. Mas foi provado listando todas as threads de uma vez. 11:12 Ah, a linha maldita é a 846 da função GetDataFile, momento em que existe um WaitForSingleObject para _Main.m_mxOpenClose por tempo indeterminado. 14:34 Além das threads que estão tentando abrir um arquivo CTree e que ficam travadas aguardando o mutex global, também existe um outro bocado que segue um fluxo parecido, mas que está tentando fechar um arquivo CTree. O detalhe é que para fechar também precisa adquirir o mutex safado. 14:51 De acordo com este artigo, "If the application uses other kinds of synchronization objects (e.g. mutexes), it is more difficult to identify their owners (kernel debugger is required), and I will reserve it for a future article.": 15:04 Sobre adquirir mutexes mais de uma vez: "A thread can specify a mutex that it already owns in a call to one of the wait functions without blocking its execution. This prevents a thread from deadlocking itself while waiting for a mutex that it already owns. However, to release its ownership, the thread must call ReleaseMutex one time for each time that it obtained ownership (either through CreateMutex or a wait function)." 15:07 Existem apenas três funções que adquirem o mutex em questão: CCTreeFile::DeferredClose (2 vezes), CCTreeFile::ReleaseDataFile e CCTreeFile::GetDataFile. Lembrando (se já não lembrei) que o WinDbg mostra o handle apontando para um EVENTO, e não um mutex. 16:42 Agora a thread que aguarda pelo stop do serviço trava ao aguardar pela thread DeferredClose. Mais uma vez o WinDbg parece ser perder e acusa o handle e4 como Event.

= 2010-08-03
:date: 2010-08-03

Illumination. Maybe I'm too much spoiled and life decided: I need to grow up. So I set up all this situation by myself to make me stronger, to make me no mercy. And no cute feelings anymore. Just sex, animal instinct. And peace of mind.

= 2010-08-04
:date: 2010-08-04

Pesquisando sobre o que ocorre na criptografia de partições estendidas.

= 2010-08-09
:date: 2010-08-09

Testando nova compilação do CTreeNT (e seu ICTreeFile) em um Servidor de Segurança 7.30.0.0 e um cliente dos mais novos. Ambos com os componentes trocados. Depois preciso testar com apenas um deles trocados.

= 2010-08-10
:date: 2010-08-10

Quando estiver depurando remoto com o Msvcmon e o maldito arquivo não conseguir ser aberto pelo mapeamento Z: que vc fez para a saída do compilador, desligue o serviço que você mesmo criou para rodar o msvcmon automaticamente. Na conta de sistema =)

= 2010-08-11
:date: 2010-08-11

Beleza. Minha construção de template consegue configurar uma estrutura CTree e conectar no servidor, na função exata que criar milhões de threads. Agora a ideia é adaptar todas as estruturas para usar essa mesma função e criar milhões de threads. Esse é o stress test. Talvez, de quebra, matar algumas threads locais e no servidor, para ver se isso pode se relacionar com um travamento.

= 2010-08-13
:date: 2010-08-13

Analisando CTreeNT sob pressão. A máquina XP cliente de repente pára de funcionar a rede (nem debug remoto). No reboot, tem um dump de um svchost que capotou. Isso não ocorre no server. 17:20 Detalhe: o programa de estresse está criando 500 threads.

= 2010-08-16
:date: 2010-08-16

Cured? It seems so, because she's ugly again, or almost that. Perhaps this is a good day only, but my feeling tells me I'm good for many days now, and this is, whatever My Pathology analisys, enough to call me cured =) This weekend it happened the C++ event, where I gave a lecture (the last one). It was an almost total disaster, because the last one I prepared has been a good two years now, and I setup too much content for one hour only. Anyway, I got a good number of fans/adepts, and I'm going to prepare a videocast for them. I hope so =) 14:18 Problema ao rodar 500 threads no cliente sincronizando ctree no servidor. Quando reiniciei o serviço ctree, a conexão voltou. 16:32 Uma vez que um processo de teste de estresse dá erro na instanciação dos objetos (aparentemente várias threads de uma vez) nunca mais ela volta ao normal. Porém, se na mesma máquina é iniciado outro processo este funciona.

= 2010-09-02
:date: 2010-09-02

Eu já disse que meu IP atual é 172.11.1.163?

= 2010-09-07
:date: 2010-09-07

Analisando o balanço do 2o. trimestre da Inepar. 13:03 Primeira coisa marcante: o caixa diminuiu de 104 para 69 milhões. Uma queda de 34 milhões em três meses! Seria investimento? 13:04 Por outro lado, o contas a receber teve um aumento de 10 e 9 milhões para clientes faturados e a faturar, respectivamente. 13:06 O aumento de cerca de 3 milhões em títulos e valores mobiliários identifica talvez um aumento em investimenots, e a diminuição de estoques em 11 MI (de 290 para 279) parece indicar que o caixa está por vir nos clientes a receber, e por isso o caixa anda tão baixo. 13:07 Também deve ter havido algum gasto com a nova subscrição. Os títulos a receber também tiveram um acréscimo razoável, de 12 milhões. 13:08 Por fim, uma diminuição de 5 milhões em outros créditos deixou nosso ativo com uma queda de mais de 10 milhões. O rombo do caixa final pode ser o gasto com subscrição e mais investimentos. O resto está a receber e nos títulos. Veremos nas explicações. 13:09 Nosso ativo consolidado fechou em 957 milhões, vindo de 966. Aumento no passivo total da ordem de 48 mihões. Nada agradável. 13:10 Ops, esse é o ativo não-circulante. My bad. Diminuição de 16 milhões em empresas ligadas. Se desligando da Inepar Telecom. 13:11 Estou apenas chutando no momento. Tudo isso estará nas notas explicativas, mas estou tentando melhorar meu feeling em ler balanços. 13:12 Um outro aumento significativo em títulos e valores mobiliários: 56 milhões! Diminuição nos bens à venda e investimentos. Se livrando dos esqueletos, espero. 13:13 Aumentando em 3 e 8 mihões os investimentos e o imobilizado. Coisa boa por aí. O nosso intangível de uma crescida tímida para uns 700.000. 13:14 No total, aumento do ativo em 40 milhões, mais ou menos voltado para investimento, imobilizados e diminuição de participações e ativos ociosos. 13:16 Aumentando nossa dívida com os fornecedores e financiamentos, crê-se pelo aumento da produção e, óbvio, as dívidas defaultadas de curto prazo. Os fornecedores cresceram 19 milhões em sua conta, e os financiamentos tiveram um acréscimo relevante de 29 milhões. 13:17 Diminuição de salários e encargos. Enxugamento de pessoal? As debêntures, pelo menos, diminuíram em 7 milhões. Mas a conta de 187 ainda está alta. 13:19 Os dividendos propostos aumentaram para 4 milhões, que, se concretizar, nos dará junto com a subscrição cerca de... tenho que lembrar quantas ações existem. Diminuição significativa do adiantamento de clientes, um sinal de menos pagamentos. 13:21 O circulante manteve-se quase no mesmo nível do trimestre anterior, o que é compreensível, já que houve ganhos nas debêntures e aumento dos financiamentos. 19:33 No passivo não-circulante já se percebe aumento de 14 milhões nos financiamentos, outra possível referência às dívidas defaultadas de curto prazo. A necessidade de capital de giro para manter o nível de resposta às dívidas de CP é uma obrigação e risco. 19:37 Novas debêntures no balor de 22 milhões no não-circulante. Não sei o que pode ser isso. 19:39 Os impostos sempre aumentando valores irreais. Nesse caso pulou de 588 para 609 milhões, um incremento de mais de 20 milhões em um trimestre onde a receita nem foi tão forte. Isso, contudo, é devido aos impostos que estão inseridos no programa de parcelamento do governo (Refis). Aumento pequeno nas empresas ligadas. 19:40 Uma diminuição de 10 milhões de provisão para contingências. Bem que pequeno perto dos 100 milhões ainda aportados para essa conta, mas foi uma diminuição. 19:42 Finalmente diminuímos o capital social: pulou dos 680 milhões que fazia conta com os prejuízos acumulados de 400 milhões para um lucro acumulado de 14 milhões e o capital para 263, agora o valor realista. 19:45 Há uma reserva de reavaliação, que junto com o capital social formam o grosso de atuais 346 milhões de PL da controladora. Mais os minoritários, que formam 61 milhões. 19:47 A receita mais que dobrou no trimestre, de 300 para 670 mi. O custo dos produtos é ainda bem elevado, gerando uma margem líquida de menos de 20%. Mesmo assim, o lucro bruto dobrou, de 50 para 100 milhões. 19:52 Tudo mais dobrou nas receitas/despesas operacionais, mas houve um aumento significativo nas provisões de futuras perdas operacionais, de 3 para 11 milhões. O resultado operacional ficou negativo em 15 milhões, e boa parte da culpa fica nas despesas financeiras, pra variar. 19:57 Outras Receitas/Despesas vem para salvar o dia, contando com 20 milhões positivos (no trimestre anterior havia sido 14 mi, e tb salvou o dia). 19:59 Temos 68 milhões de ações ainda e um lucro de 17 centavos por ação. Isso quer dizer que atualmente a empresa vale no mercado em torno de 300 e poucos milhões e dá um lucro de 11 milhões no trimestre. 20:05 No fundo, pelo fluxo de caixa o lucro caiu no caixa 6 milhões.

= 2010-09-08
:date: 2010-09-08

Analisando funcionamento do ScuaFdsk no caso de bad blocks. 11:22 Lembrei que existem scripts do IShield que devem ser migrados para o Framework: é código nosso! 11:23 E a ideia do RpcSvc? Podemos colocar na equipe (no bom sentido) a noção que podemos aos poucos criar componentes genéricos que façam o serviço braçal?

= 2010-09-09
:date: 2010-09-09

Corrigindo e testando os problemas detectados na visita ontem ao Bradesco. 17:15 Parou de apagar usuários assim que eu mudei de banco. Coincidência? Sem o processo DataSvr.exe no ar no Servidor de Segurança alguém estava apagando, mas sem saber quem.

= 2010-09-13
:date: 2010-09-13

Bom, consegui simular novamente. Mas cansado de tanta simulação, percebi o óbvio: vamos testar estressando as listagens. Eventualmente tudo vai ruir.

= 2010-09-15
:date: 2010-09-15

Testando modificação da listagem de objetos do CTree para o AD. Com o AD: 17034 objetos. 13:33 Contagem na listagem do próprio CTree: 17517. 14:42 No resultado do Manager, deram 17535 objetos (exceto aplicações). 15:19 Encontrado problema; os grupos não estavam sendo adicionados.

= 2010-09-25
:date: 2010-09-25

Isso é MUITO interessante. Testando o sincronismo, percebi que até com o servidor Win2k dá acesso negado. Pesquisando o porquê, descobri que é o velho esquema do nome/senha do cliente ser igual a do servidor. Se for igual, passa! 10:56 Isso pode ter gerado muito teste viciado.

= 2010-10-01
:date: 2010-10-01

Comando mágico para assinar: signtool sign /f <pfxfile> /p <senha> /t http://timestamp.globalsign.com/scripts/timstamp.dll /v binário.exe

= 2010-10-04
:date: 2010-10-04

Detalhe idiota: se vc mandar reiniciar o computador e ficar de olho nas mensagens da sua janela sendo depurada pelo Msvcmon, o sistema vai matar o Msvcmon primeiro e então vc nunca vai consequir depurar essa parte do seu código, moron!

= 2010-10-05
:date: 2010-10-05

Tela azul na minha VM de casa com a 8.26.0.21 (justo a versão do Bradesco). Coletado o minidump (foi no scuafdsk). 10:06 O SsUpdate funciona no esquema de instalá-lo como serviço rodando como sistema. O que não funciona, e isso é bizarro, é se der impersonate como usuário.

= 2010-10-14
:date: 2010-10-14

Testando DayToDay no meu novíssimo Windows 7!

= 2010-10-17
:date: 2010-10-17

Inepar tinha margem elevada em 2000, da ordem de 20%. Conseguia até aumentar essa margem para circa 25% com aumento na participação de projetos sob encomenda, com maior valor agregado. 16:12 Mais Inepar (analisando histórico 1999/2000): Talvez o pl esteja negativo, mas com o crédito fiscal a soma esteja positiva, mas isso não ajuda no giro.

= 2010-10-18
:date: 2010-10-18

Na prática, a lista de binários do instalador poderia ser exportada manualmente do InstallShield, mas com o build temos mais informações relevantes, como o caminho absoluto de onde os binários vieram, além de um formato que não muda e pode ser comparado entre versões.

= 2010-10-19
:date: 2010-10-19

Vou deixar o certificado Scua.pfx no Lng do servidor de build apenas. A ideia é que ele NÃO fique no branch.

= 2010-10-22
:date: 2010-10-22

Aparentemente, o único grupo que possuía restrições no servidor-destino, mas não no origem, é o GroupCDRomProtect.

= 2010-10-25
:date: 2010-10-25

O teste a partir de duas VMs construídas pelo AddUsers demonstrou que existem mais grupos bloqueando usuários. Vou refazer o teste partindo do script atual e ver se há diferença no resultado do primeiro teste.

= 2010-10-30
:date: 2010-10-30

As pessoas não pensam em controle de fonte quando desenvolvem. Não está em mente quando uma tarefa menor é resolvida dentro de um escopo maior em fazer um commit. Essa é a raiz de todos os males quando uma equipe tenta fazer integrações. Porque um dos fulanos não pensa que seus commits sejam necessário. When it's done it's done. Passam-se dois meses e o fulano vai na pura inocência fazer o mega-commit de oito semanas inteiras de trabalho em um branch que mudou tanto que mal parecem do mesmo projeto.

= 2010-11-03
:date: 2010-11-03

Página relatando mesmo problema que detectamos na home da intranet do bva, relacionado com popup 16:47 Comando interessante: sfc (System File Checker). Ele verivica a integridade dos arquivos do Windows e restaura se necessário.

= 2010-11-08
:date: 2010-11-08

Conferência com Gerson sobre Controle Remoto e Agente Linux. 10:15 Agente Linux está usando dmidecode 16:33 Para tentar provar que a culpa do corrompimento do registro não é nossa, temos uma escolha apenas: encontrar o culpado. 16:34 Mesmo que eu instale todas as versões do SecuritySuite que eles receberam e analise as mudanças do registro atrás de quem alterou a chave culpada, não encontrar evidências não vai acalmar os ânimos do cliente, que tem certeza ser a nossa culpa.

= 2010-11-09
:date: 2010-11-09

Se eu tivesse o costume de escrever aqui teria um relatório mais interessante para entregar para o pessoal.

= 2010-11-10
:date: 2010-11-10

Vou começar a mexer no SsUpdate para refatorar todas aquelas partes antes de liberar a correção do Kill para o Zé. Também pretendo fazer mais testes a respeito.

= 2010-11-11
:date: 2010-11-11

Refatorando SsUpdate

= 2010-11-16
:date: 2010-11-16

Testando (de novo!) meu programinha de backup.

= 2010-11-17
:date: 2010-11-17

Voltando para o SsUpdate e sua separação de resources. 16:53 Passamos pelo primeiro teste: nova organização dos resources, sem abort update matando o processo e com verificações adicionais nas funções. O próximo passo é testar com um apliativo de teste embutido.

= 2010-11-18
:date: 2010-11-18

Terminado o aplicativo. Finalmente! Ele começou simples e agora tem progress bar, roda o cmd e sai interativamente. Ufa!

= 2010-11-19
:date: 2010-11-19

Agora é gerar um novo pacote de update e testar com vários SOs. Finalizado isso, segunda é dia de MAC. Quero dizer, dia do MAC-Address feliz!

= 2010-11-22
:date: 2010-11-22

Bom, hoje eu consegui importar um DAT do one-shot modificando pelo CryptFile o identificador. Descobri que posso ver o arquivo itme.log para analisar erros no servidor. Também a Rose me deu uma dica que o one-shot não possui o código que ela fez para suportar MAC (então MAC, de fato, ainda não existe no one-shot). Amanhã deverei me focar em fazer esse código. Bem básico.

= 2010-11-24
:date: 2010-11-24

Procedimento para captura do inventário por one-shot e identirficação por MAC Address: 08:44 - Substituir agente one-shot em instalações antigas para 1.12.0.20. - Essa versão está no build 1.15.0.73 ou superior. 08:46 Configurar identificação de MAC Address; verifique o hsi.ini. config-oneshot-mac-address 08:47 Em uma máquina a ser inventariada, execute o agente one-shot com o hsi.ini configurado dessa forma. Após a geração do arquivo de inventário, seu identificador deverá ser o MAC Address da máquina, como especificado. 08:49 hsifiledat-right e hsifiledat-wrong 08:50 Copie esse arquivo para a pasta de processamento de DATs do servidor config. 08:51 Ou use a interface de gerenciamento, na opção Tarefas Administrativas, Importação de Arquivos DAT import-dat-file-config 08:52 import-dat-file-config2 08:54 Em caso de erro, analise o arquivo de log chamado itme.log e localizado no servidor no endereço %programfiles%\Apache Software Foundation\Tomcat 6.0\logs; dica: procure pelo nome do arquivo DAT. 08:55 Dica errada; dica certa: procure pelo nome da máquina, MAC, ou data aproximada da importação. 10:09 Acho que posso voltar para o SsUpdate nesse meio termo.

= 2010-11-25
:date: 2010-11-25

Testes do SsUpdate: deu um pequeno GPF no processo do InstallShield chamando o DataSvrProxy.dll, versão 8.23. Detalhe: estava sendo atualizado para 8.27, mas a DLL usada era a do system.

= 2010-11-30
:date: 2010-11-30

Novamente o problema do firewall. Tentando resetar as configurações e criar um snapshot esperto. 10:34 GPF no oneshot... função que não tem como ser chamada pelo WinMainStartup, mas a pilha mostra exatamente isso. O que pode ser: o tratamento de exceção fica no startup. 11:33 O comandinho mágico do firewall não adiantou: travou do mesmo jeito a rede. 13:36 Mais um comando mágico para consertar o firewall do WXP SP3: netsh winsock reset 16:37 Voltando para o problema do stop do SsLogin 8.26. O login na VM 2k está lento, lento... 18:17 Ainda tá dando erro ao parar o SsLogin: Error waiting for available pipe (O tempo limite do semáforo expirou.)

= 2010-12-01
:date: 2010-12-01

Path para processar os arquivos oneshot em bando: Z:\Arquivos de programas\Apache Software Foundation\Tomcat 6.0\webapps\hsiserver\temp

= 2010-12-06
:date: 2010-12-06

SsUpdate: terminada execução de pacote (que tive que fazer de novo) e o probe básico (escaneia uma faixa de ips). Agora podemos partir para o status do cliente: produtos instalados e as regras do security. 16:52 Próxima tarefa: aprender a usar o maldito tinyxml.

= 2010-12-07
:date: 2010-12-07

Terminando obtenção dos produtos instalados, mas ainda o Security retorna coisas bizarras, e não temos versão do inventário.

= 2011-01-12
:date: 2011-01-12

Transição entre a tela verde e os policiais já indica a dualidade e paralelismo entre os dois mundos. 21:59 Forma como fazem para demonstrar como o conhecimento instantâneo é adquirido pelo cérebro (câmera tremendo). 22:05 Ou como eles carregam um novo programa, com um rack focus inicial e a câmera se distanciando depois. 22:19 Câmera rodando volta das pessoas e em torno do telefone para transportar todo mundo. 22:20 Não é explicado como o traidor consegue entrar na Matrix sozinho.

= 2011-01-31
:date: 2011-01-31

Cesinha achou um aplicativo chamado iexpress, que converte batchs em executáveis.

= 2011-02-14
:date: 2011-02-14

Testando daytoday no meu primeiro dia no trabalho;

= 2011-03-03
:date: 2011-03-03

Tentando programar 08:17 Tentando ainda programar 08:32 Lendo e-mails 09:04 Lendo Google Reader 10:37 Lendo twitter 11:16 Tentando programar 11:54 O que eu devia fazer mesmo? 14:31 Fazendo update do branch 14:45 Tentando programar... 14:47 Lendo e-mails 15:42 Escrevendo um pequeno post para deixar o DayToDay disponível para download.

= 2011-04-13
:date: 2011-04-13

Máquinas de teste:Máquina 01:

= 2011-05-02
:date: 2011-05-02

Voltando de férias. E talvez a fazer anotações =)

= 2011-05-27
:date: 2011-05-27

Como devo usar ferramenta na minha produtividade do dia-a-dia? Não estou usando mais...

= 2011-06-03
:date: 2011-06-03

[03/06/2011 15:37:12] TIAGO: Você pode ligar para (55 11) 5056-8300 ou para o EZSAC, o SAC da Eztec no telefone (55 11) 5056-8322. A EzTec irá redirecionar o atendimento ao setor responsável para esclarecer todas as suas dúvidas. 

= 2012-05-11
:date: 2012-05-11

Testando novamente o sistema de journaling diário (no DropBox!) 10:36 Analisando inserção das ordens antigas no book do kernel sem afetar fluxo e indexação. 11:38 Pedindo o book para o Orders apenas quando este estiver vazio, ao receber já insiro na persistência e processo no meu book como se já tivesse sido lido de lá. 11:40 Agora o próximo passo é o próprio Orders saber que ele está sem book.

= 2012-07-03
:date: 2012-07-03

Analisando Eletropaulo após a Aneel dar ontem mais de 9% de redução tarifária, acima do esperado. O governo está fazendo jogo duro com dividendos e lucros das empresas de energia elétrica, as mais lucrativas atualmente. 12:15 No caso da ELPL4 o preço da empresa já está abaixo do Valor Patrimonial e se equipara ao Ativo Circulante. Considerando as disponibilidades em mais que a metade do Capital de Giro, e as dívidas de CP sendo um terço disso a situação da empresa é estável. 12:16 O que estamos acompanhando aqui é mais uma preocupação generalizada da queda abrupta dos dividendos e da lucratividade, ainda mais com o 1T12 saindo com um LL de meros 100M (o anual está atualmente em 1,4B). 13:06 Testando versão Ansi do DayToDay. 21:54 Testando em casa versão ansi do day2day.

= 2012-07-04
:date: 2012-07-04

Considerando um LL de apenas 440M para 2012 a Eletroupaulo estaria com um P/L de cerca de 8 a 9, mesma faixa da Transmissão Paulista (TRPL4). 09:57 Analisando ambos como pares é possível ver que o Patrimônio Líquido é semelhante, assim como a dívida bruta. Porém, a dívida líquida da Transmissão é muito mais alta devido ao baixo nível de disponibilidades (provavelmente temporário).

= 2012-07-05
:date: 2012-07-05

Lendo artigo sobre possível declínio do crédito/PIB/economia da IMB, vou coletar alguns índices para eu mesmo fazer a lição de casa. 16:54 O primeiro que me chamou a atenção foi o Índice de Inadimplência das Empresas, que alcançou maior alta desde 2006. Detalhamento feito pelo Estadão e o artigo da IMB 17:01 O Sistema Gerenciador de Séries Temporais do Bacen pode servir para montar os gráficos legais da reportagem 

= 2012-07-08
:date: 2012-07-08

Feito backup completo para reinstalar Windows 14:28 Teste de backup

= 2012-07-20
:date: 2012-07-20

Testando volta das férias. 17:02 Teste 2

= 2012-07-27
:date: 2012-07-27

Testando o ticket #603, para tentar montar situação onde ocorre o problema. Seguindo o fluxo: 15:18 # Carregar uma conta na persistência do Gateway através do envio de uma ordem. 15:24 # Matar o processo do Gateway pelo Task Manager ou equivalente. # Configurar o reload matinal para ocorrer em breve.

= 2012-08-02
:date: 2012-08-02

Voltando ao Risco Quantitativo. Vamos montar o roteiro de testes básicos para o que já está implementado, liberar os tickets específicos e partir para terminar o que resta. Primeira coisa a fazer: configurar o risco para rodar quantitativo. 11:51 Dentro da tag RiskPlugin, criar ou modificar tag riskType="QUANTS". 11:52 Pelo IniPlugin ou em um banco com os parâmetros já criados, modificar o parâmetro do teste. No caso do IniPlugin, esses parâmetros ficam na seção Settings do arquivo StorageService.ini. Sorry, na seção Limits.

= 2012-08-21
:date: 2012-08-21

Montando nova estratégia: preciso usar método na primeira tela (trend is your friend) e ao mesmo tempo determinar um ponto propício para começar a entrar (MM simples como suporte, MME dupla (12 e 24 meses) e MACD para determinar guinadas). 10:39 A Tela Um terá o escopo de meses. Posso ver 5, 10 anos do papel e determinar o trend atual no ajuste fino das MMs. 10:40 Ainda determinando o que usar na Tela Dois, mas provavelmente montar um envelope e determinar oscilação pelo estocástico. A questão: haverá uma Tela Três? 16:37 O Stop, em um período mais longo de análise, deve determinar o Safe Place baseado em um período mais longo de quedas. De qualquer forma, se estiver seguindo o trend ele não deve ficar muito abaixo. Se estiver, pode ser aviso para não entrar. 23:18 Envelopes são bons apenas para curto prazo. Para acompanhar o LP + fundamentos, o ideal é usar a reversão de uma MM mais longa (26 semanas). 23:19 Analisar sinais técnicos de reversão para a saída. Análise da saída deve partir da Tela Um ou Dois? Talvez acompanhar trend pela 1 e pensar numa saída pela 2. 23:20 Os operadores partem de um bom sistema e o destroem ao tentar torná-lo perfeito. 23:26 Investidores devem reavaliar os stops com intervalos de algumas semanas.

= 2012-08-22
:date: 2012-08-22

Nova estratégia não pode mais levar em consideração o EBTIDA como fator revelante independente do papel. Sabemos pelo livro de Valuation que isso pode esconder alguns detalhes escusos da empresa.

= 2012-09-03
:date: 2012-09-03

Transmissão Paulista (TRLP4) ficou com LL estável, mas EBTIDA subiu 4%. Resultado ficou aquém do esperado por conta de despesas financeiras muito superiores.

= 2012-09-21
:date: 2012-09-21

88924, ezmarket123

= 2012-09-24
:date: 2012-09-24

Comparando Even com EzTec. Even tem o dobro do tamanho, mas a metade da valorização no mercado. Isso parece se dar principalmente pela rentabilidade da companhia, que fatura o dobro da EzTec, mas o lucro líquido fica pela metade. 11:29 A dívida que a empresa tem, líquida em quase 1B, parece ter alguma relação. Outra questão é por que as margens da Even estão tão comprimidas? O que pode mudar? 11:30 Uma mudança na Even pode fazê-la trilhar o caminho EzTec. Tenho que ver se isso é possível. Se for, temos aí um 2-fold! 13:28 Enquanto a EzTec fatura no trimestre 200M e lucra quase 80M, a Even consegue faturar a quantidade de meio bilhão e ter como LL 40M.

= 2013-01-02
:date: 2013-01-02

Tentando reiniciar o diário esse ano. Quem sabe eu não volto a mexer nesse projeto...

= 2013-01-15
:date: 2013-01-15

=853 Existia um erro no reload manual: quando a conta não está carregada ela não é recarregada e não é marcada para reload. Correção: marcar para reload. 15:22 #853 Outra correção: não posso mandar o Gateway atualizar se der algum erro no meu update, certo? Então... 15:33 Gateway capotou durante teste de envio de ordem. Gerado dump automaticamente. 15:55 #853 Para resolver o problema da espera de 10m do reload manual tive que alterar o Send do Channel para detectar conexão cliente e retornar erro caso nenhum send tenha sido enviado.

= 2013-05-08
:date: 2013-05-08

Timeout no carregamento do risco porque o Storage não respondeu (IniPlugin). Path mal configurado. 13:06 O quote estava sem publicar security list pq o ExchangeComm estava ligado.

= 2013-12-30
:date: 2013-12-30

Novamente tentando registrar eventos do DiaADia (promessa de ano-novo?) 20:56 Posso usar a seleção gráfica que o BackTesting me fornece mesmo sem a seleção patrimonial. No entanto, essa técnica pode se mostrar falha com o tempo e dinheiro, algo que talvez não seja necessário ter o luxo de perder...

= 2014-01-03
:date: 2014-01-03

Testando, testando... 12:13 Nossa primeira tarefa do ano é definir um preço médio diário para os papéis em custódia. Podemos fazer isso criando dois campos novos. 16:30 Ticket #1356 Considerando que para calcularmos o valor final será necessário usar todos os exec report recebidos, e já prevendo problemas de suporte, fico tendencioso a incluir a lista de ordens executadas, quantidade e valores, assim como fiz para margens. Dessa forma podemos logar essas operações. 18:45 No entanto, vamos considerar o seguinte: a análise deve levar em conta os momentos em que o reload foi executado (event viewer ou log) e o histórico de ordens (executadas). Com base nisso já é possível detectar se o risco está errado ou não, bastando que ele logue momentos em que o preço médio será alterado e por quê.

= 2014-01-06
:date: 2014-01-06

Problemas no build por causa de conflitos 32 e 64 estão me fazendo perder quase o dia todo. 16:47 Agora que vi que, por termos já um campo (antes do meu ci) que mantém a quantidade financeira executada (compra e venda), o risco pode simplesmente alimentar esse campo. Para obter o preço médio no estilo Thor, basta dividir esse valor pela quantidade executada.

= 2014-01-08
:date: 2014-01-08

Sempre que logo na CBLC a senha está inválida.

= 2014-01-09
:date: 2014-01-09

Para conseguir testar corretamente a versão 64, preciso usar o Storage 2. Para usar o Storage 2, preciso de um banco de dados. Sem o FakePlugin compatível, fica difícil fazer testes nos nossos ambientes descontrolados.

= 2014-01-23
:date: 2014-01-23

Funcionamento da abertura de arquivo de dat do kernel: Primeiro, abre-se o arquivo (duh). 11:12 depois, aloca-se um array de char de 256 como nosso array de chaves inicial

= 2014-01-28
:date: 2014-01-28

Nova versão!

= 2014-06-21
:date: 2014-06-21

Visual Studio 2003 diz que projeto está desatualizado e sempre linka novamente. 18:28 Quando o RsServer dá LoadLibrary e chama o RpcSvc.exe!StartService a primeira chamada ao Log::Log ocorre em um código diferente do encontrado dentro do RsServer, e dá crash. 18:46 Quando um EXE é carregado no Windows 7 como DLL dentro de outro EXE, uma simples chamada a GetLastError pode ser fatal. Possível motivo: deslocamento do endereçamento padrão.

= 2014-06-23
:date: 2014-06-23

WebService não está funcionando quando mesclamos 64 bits com 32 (mesmo se definir o App suportando misturar). 20:12 Fora isso, há uma lentidão absurda na comunicação AppTest -> WebService -> Serviço que gera timeout e às vezes dá exceção.

= 2014-06-25
:date: 2014-06-25

No EzConn do WebService novo, se não tiver algum channel, ele vai embora e vai dar timeout.

= 2014-06-27
:date: 2014-06-27

O serviço WCF (e o WebService por tabela) usa uma LIB (ou algo que o valha) chamada EzConn que faz a conversão do mundo .NET (e suas estruturas específicas) para EzMessage. Daí a mágica. 16:34 Porém, qualquer mudança deve ser feita manualmente, pelo que vi; trocentas localizações para incluir no enum de Tipo de ordem a ordem condicional.

= 2014-07-03
:date: 2014-07-03

Problema na assinatura de market data pode ser LIB que não possui métodos de sincronismo.

= 2014-07-07
:date: 2014-07-07

Muita atenção ao fazer deploy do webendpoint: pode haver problemas com o enum tipo da ordem. Isso aconteceu e foi difícil solucionar no ambiente de desenv. A única coisa que deu resultado foi um completo clean/rebuild e desinstalação e reinstalação do serviço EM OUTRA PASTA (não sei se tem a ver). 13:44 Em ambiente onde não há Visual Studio o installutil, necessário para instalar serviços em .NET, está localizado em \Windows\Microsoft.NET\Framework (ou Framework64) e uma pasta com a versão do framework. Escolha a que melhor lhe apetecer.

= 2014-07-14
:date: 2014-07-14

Hoje aprendemos que não se mistura espaço com tabs em código Python =P

= 2014-07-16
:date: 2014-07-16

Importante: proteger BEM a bola na saída.

= 2014-07-21
:date: 2014-07-21

Novo arquivo do ToDoList para Intelitrader não está funcionando, fica tudo UNICODE. Acho que é porque o TodoList criou ele UNICODE =P

= 2014-07-25
:date: 2014-07-25

O Arauto do Café do Ponto que pedi para moer ontem não parece muito bom. Acho que é o expresso que eu não gostava. Tem um cheiro e gosto diferente, ainda não sei o que é. 10:57 Bom, vou acabar descobrindo, já que tem 250g dele aqui. 12:27 OsVGseFy: O problema ocorre exatamente na hora do subscribe dentro da DLL. Parece que os dados de contexto já eram... 12:30 Lujan de Cuyo é conhecida como a primeira zona de vinhos argentinos. Possui DOC desde 2005. 12:32 A água de irrigação vem do degelo da Cordinheira dos Andes, ou seja, uma água cristalina, pura e rica em minerais.

= 2014-07-28
:date: 2014-07-28

UMDF Feeder precisa passar o channel-name, mesmo que não passei quickfix-configurations. 20:28 O handle entregue para o .NET (InteliMarketClient) é um info (P9MDI_CALLBACK_INFO), conhecido na p9mdi como cookie. O handle da p9mdi é um container.

= 2014-07-29
:date: 2014-07-29

Deu erro de acesso (5) no serviço web? Tenta dar permissão na pasta para IIS_USR. 18:11 Rola até erro de barra dupla no path da dll do aspnet (mexer no ISAPI Filter do IIS).

= 2014-07-30
:date: 2014-07-30

Meu número Oi! é 944026684 18:43 Ligar 1057 para ativar... Ou *800 para escolher outro número. 23:15 Tudo começa a fazer sentido... vejamos: 23:16 Um TioData é uma VARIANT que pode conter uma string C, um int ou um double. Tem outras funções interessantes como ser serializável. 23:17 Um ITioStorage é uma interface que deve ser implementada por todo tipo de storage de TioDatas, como listas, vetores, maps. Um ITioStorageManager é uma interface que gerencia essas interfaces de storage. 23:18 Por fim, um ITioContainer é uma outra interface que representa um container de dados. Tudo possui uma key, um value e um metadata. Mesmo uma lista possui um key, que é sua posição. 23:19 O subscribe de eventos funciona através da classe EventDispatcher, cujo método RaiseEvent dispara todos os sinks cadastrados. O TioTcpServer apenas gerencia TioSessions, que organizam cada instância seus handles (o que obtemos usandos os comandos de create/open). 23:21 No fim, tudo é uma grande massa de interfaces e classes genéricas que organiza contêineres com metadados (ainda chegarei nessa parte) e suporte a subscribe através da geração de log de eventos (set, delete, push_back, etc).

= 2014-07-31
:date: 2014-07-31

Pra variar, novamente apanhando do WCF: The type 'BTCService.Service', provided as the Service attribute value in the ServiceHost directive, or provided in the configuration element system.serviceModel/serviceHostingEnvironment/serviceActivations could not be found.

= 2014-08-04
:date: 2014-08-04

O Strauss corrigiu o esquema de index out of bounds do intelihub, mas o problema de crash no subscribe trade, unsubscribe all do POC do gotardi continua. Agora dei update dos repos e a p9mdi parece não querer mais ser chamada do IntelimarketClient. 16:07 Qui mó das merda: o executável tem que estar no mesmo diretório da DLL (ou vice-versa). Como havia baixado o POC novamente do trello, a configuração de saída zerou. 16:30 Acompanhando uma depuração do POC novamente. Conectando: _p9connection = 0x00d113d0. p9mdi_set_asynchronous... 16:31 Subscribe de T, sempre ele.. 16:32 _instrumentSubscriptions é um dicionário que indexa pelo instrumento e tem como valor um InstrumentSubscriptions, que possui Subscription para todo mundo: Securitydata, Properties, OrderBookBuy, Sell e... sim, Trades! 17:29 Um Subscription possui o instrumento, o nível de informação (snapshot, barará) e o tipo de subscrição (SecurityList, barará, ...). 17:30 Ainda tem um map (_subscriptionInfoByRequestId) de requestIDs (int) para subscription. Chamando p9mdi_subscribe_instrument_properties. 17:32 O RequestID faz parte da classe Subscription, e é um int estático lockado (s_nextCookie). 17:34 Note que o membro Handle do Subscription começa zerado. 17:35 Se deu erro, o DoPosSubscriptionStuff se encarrega de limpar a bagunça. 17:37 E se deu certo, atualiza a informação do subscription (de subscription.CurrentState = Subscribing para state = Subscribed). 17:38 (Tirando esses, só existe o Failed e o None). 18:09 Próximo passo é chamar p9mdi_subscribe_instrument_trades. 18:10 O método p9mdi_subscribe_instrument_order_book é chamado duas vezes: book de venda e de compra. Detalhe que o booksize sempre é 0xFFFFFFFF. 18:19 Todos os callbacks do IntelimarketClient (fieldChange, mapChange, orderBookChange, tradeChange) são delegates em cima de funções com final Handler para que não seja perdida a referência do lado nativo. 18:21 É o FieldChangeCallbackHandler que chama o FieldChangeCallbackHandler, que é responsável por encontrar o subscription pelo requestId e atualizar seu handle. 19:18 Comentando em UpdateSubscriptionHandle apenas a parte que muda o handle pára de dar problema. Colocando duplo lock com o dicionário de subscription permanece o problema. Algo a ver com o handle? Mudando handle = 0x05091ad0. handle = 0x05091c18 19:19 handle = 0x05091c18 Depois da primeira mudança apenas repete o handle. 19:20 Mudando de 0 para handle = 0x04fd1ad0. Agora para handle = 0x04fd1c18 19:21 Mantendo primeira mudança para handle = 0x04891ad0 Ignorando segunda mudança. 19:22 Atribuindo handle = 0x047d1ad0 19:23 Não atribuindo a segunda vez não dá o problema. 19:27 Descobri o problema! Na primeira chamada de Forwarder_FieldChangeCallback é o primeiro bloco que chama o callback, e nele o "handle" passado para o cliente é o endereço de info, ou o próprio cookie que ele recebe. 19:28 Na segunda chamada é usado o handle de fato, que por algum motivo não deve ser o handle publicado para os usuários da p9mdi_client. 19:32 O chamador dessa função é meio complexo, pois o cookie pode brotar de três origens distintas: como o membro wait_and_pop_next_cookie do container, como o subscription_cookie ou ainda como group_event_cookie. 19:35 Correção: na primeira chamada é a chamada direto do DispathThread que envia o container. Da mesma forma, a segunda chamada está no tio_dispatch_pending_events, e o handle continua sendo o container. Então não faz sentido, mesmo isso mudar. 19:44 O container é a estrutura que contém (duh) todas as informações para o usuário, como a conexão, o handle, o callback, o nome, etc. Ele fará parte da lista de containers da conexão (indexado pelo handle, esse sim, único e incrementável).

= 2014-08-05
:date: 2014-08-05

Para deplou de novos pacotes: Está no servidor src.intelitrader.com.br, na pasta /var/www/html/deploy. É só segui a mesma estrutura. 15:14 Analisando os logs do UMDF que os ómi pretende já subir para produção... Vamos ver primeiro os campos não encontrados 15:18 O único campo não-encontrado foi TradingSessionSubID (analisando apenas o canal 055, que era o gigante de ontem). 18:03 Pesquisando sobre o significado do TradingSessionSubID. 18:09 NOTE Customer applications are responsible for deleting the existing theoretical opening price and imbalance information from memory after trading phase changes from Pre-Open (tag 625-TradingSessionSubID = 21) for each instrument in the group whose trading status is different from Pre-Open status (tag 326-SecurityTradingStatus = 21). Lendo UMDF FIXFAST Market Data Messaging Specification - versão 1.6.4.1 [UMDF_MarketDataSpecification].pdf: 18:10 Trading phase information is relayed to client systems using tag 625TradingSessionSubID. 18:11 11.4 Group Phase and Instrument State in the Snapshot Messages: In the full market data recovery process, the current phase and/or state of given instrument is published in the MarketDataSnapshotFullRefresh (35=W) message at the following format: 625 TradingSessionSubID N Group phase (Não requerido) 18:12 15.5 Trading Phases: Trading phase information is relayed to client systems using the field TradingSessionSubID (tag 625). For Legacy UMDF and PUMA UMDF the data type of this field is string and the following table presents the domain relation between BELL and UMDF for possible trading phases: Phase Name BELL Tag Value LEGACY / PUMA UMDF Tag Value Pause N 02 Close M 04 Open S 17 Pre-close F 18 Pre-open E 21 18:15 The trading state of an instrument is usually controlled at the group level. Security groups contain one or more instruments that are similar in terms of market rules and behavior. Managing instrument at the Security group level simplifies operations for BVMF and member firms. Instruments normally operate within a security group phase contained in field TradingSessionSubID (tag 625). Changes to security group phase are communicated using the SecurityStatus (35=f) message. Security group level messages will contain only the SecurityGroup (tag 1151) and the TradingSessionSubID (tag 625) fields. 18:16 Users should note that PUMA UMDF fields SecurityTradingStatus (tag 326) and TradingSessionSubID (tag 625) fields use the same domain of values, where the first carries information of the instrument level state and the later provides group level phase updates. 18:17 Instruments that separate from their security group can later rejoin the group. The current version of UMDF does not provide an explicit message to alert the user when the instrument has rejoined its security group. Applications must store the value of the TradingSessionSubID (tag 625) within your application for each security group and use it to compare to the value contained in SecurityTradingStatus (tag 326) provided in Security Status (35=f) messages sent at the instrument level to determine if the instrument has rejoined the group. When an instrument separates from the group it becomes important to save the value contained in SecurityTradingStatus (tag 326) in your application program as well. Your application should also store whether an instrument is separated from its security group. And use the following tables to determine the security group membership status of an instrument. 18:20 E isso é praticamente tudo do Messaging Specification. Lendo UMDF FIXFAST Message Reference - versão 1.6.4.1 [UMDF_MessageReference].pdf: Domains of TradingSessionSubID and SecurityTradingStatus fields are changed to be compatible with new Matching Engine. 1.3.3 Market Data Snapshot Full Refresh (tag 35=W) 18:21 Phase related to a SecurityGroup where the instrument belongs to. If absent, the default value is 17 = Open. Valid values sent by BVMF: 02 = Trading halt (Pause) 04 = No-Open (Close) 17 = Ready to trade (Open) 18 = Not available for trading (Pre-close) 21 = Pre-Open 1.3.4 Security Status (tag 35=f) SecurityTradingEvent: Identifies an event related to a TradingSessionSubID. Possible value: 4 - Change of Trading Session = Reset Trading Statistics. Obs.: NÃO é required. 20:17 Hora do UMDF FIXFAST Market Data Messaging Specification - version 2.0.1 (Equities Market) [UMDF_MarketDataSpecification-201].pdf: 20:18 NOTE Customer applications are responsible for deleting the existing theoretical opening price and imbalance information from memory after trading phase changes from Pre-Open (tag 625-TradingSessionSubID = 21) for each instrument in the group whose trading status is different from Pre-Open status (tag 326-SecurityTradingStatus = 21). 20:19 Trading phase information is relayed to client systems using tag 625TradingSessionSubID. 20:20 Trading phase information is relayed to client systems using the field TradingSessionSubID (tag 625). For Legacy UMDF and PUMA UMDF the data type of this field is string and the following table presents the domain relation between BELL and UMDF for possible trading phases: (segue comparação com BELL) 20:21 The trading state of an instrument is usually controlled at the group level. Security groups contain one or more instruments that are similar in terms of market rules and behavior. Managing instrument at the Security group level simplifies operations for BVMF and member firms. Instruments normally operate within a security group phase contained in field TradingSessionSubID (tag 625). Changes to security group phase are communicated using the SecurityStatus (35=f) message. Security group level messages will contain only the SecurityGroup (tag 1151) and the TradingSessionSubID (tag 625) fields. The Symbol (tag 55), SecurityID (tag 49), and SecurityIDSource (tag 22) will not be populated in SecurityStatus (35=f) messages communicating group status information. Users should note that PUMA UMDF fields SecurityTradingStatus (tag 326) and TradingSessionSubID (tag 625) fields use the same domain of values, where the first carries information of the instrument level state and the later provides group level phase updates. Instruments that separate from their security group can later rejoin the group. The current version of UMDF does not provide an explicit message to alert the user when the instrument has rejoined its security group. Applications must store the value of the TradingSessionSubID (tag 625) within your application for each security group and use it to compare to the value contained in SecurityTradingStatus (tag 326) provided in Security Status (35=f) messages sent at the instrument level to determine if the instrument has rejoined the group. When an instrument separates from the group it becomes important to save the value contained in SecurityTradingStatus (tag 326) in your application program as well. Your application should also store whether an instrument is separated from its security group. And use the following tables to determine the security group membership status of an instrument. 20:22 The following table presents the domain of possible trading phases: Pause 02 This trading phase is used by surveillance to prevent order entry and matching by market operations or schedule. Close 04 This trading phase is used by market surveillance in order to perform a limited number of functions, including in particular, consultations. As a general rule, during this phase, surveillance checks the consistency of data and post-market state process results before the start of the trading day. Users have no order entry, modification or cancel capability during this phase. Open 17 This trading phase is used by subscribers and surveillance to enter, modify and cancel orders, subject to cancellation and modification rules. The orders entered during this period result in immediate trading if counterparty is matched and the specific instrument status also equals to Open. Otherwise, the more restrictive status rules. Pre-Close 18 This trading phase is used to indicate an intervention by surveillance. If the specific instrument is in Reserved state, the auction continues, otherwise users have no order entry, modification or cancel capability during this phase. Pre-Open 21 This trading phase is used to indicate that all instruments belongs to the group is in Reserved state except the status of the instrument indicates Forbidden state. Final Closing Call 101 This phase indicates when the instruments on this group are on the final closing call for the trading day (Equities only). 20:27 Nada diferente até aqui. Hora de ler UMDF FIXFAST Message Reference - version 2.0.1 (Equities Market) [UMDF-Migration-Customer-Impact].pdf: Isso é importante: Phase related to a SecurityGroup where the instrument belongs to. If absent, the default value is 17 = Open. Valid values sent by BVMF: 02 = Trading halt (Pause) 04 = No-Open (Close) 17 = Ready to trade (Open) 18 = Not available for trading (Pre-close) 21 = Pre-Open 101 = Final Closing Call 20:28 If absent, the default value is 17 = Open. A versão 1.6.4.1 já tinha, então vamos definir assim. 20:31 Campo 1174 SecurityTradingEvent (Conditional required) Identifies an event related to a TradingSessionSubID. Always sent on MDEntryType=c, when field 326 is filled. Possible values: 101 = Security Status maintained separately from Group Status 102 = Security Status following Group Status 20:32 Campo 326 é o SecurityTradingStatus (não-required): Status related to a given Instrument. The default value is 17 = Open. 20:47 Estranho que na primeira mensagem de erro não foi possível obter dados do instrumento (de fato não está lá), mas o campo 1174 (SecurityTradingEvent) possuía 101, que indica que o SecurityStatus em questão é mantido separado do grupo. 04/08/2014 06:01:08.493 ; 4136 ; WARN ; Field not found. FieldName=TradingSessionSubID, msg=MDEnt ryType=c(11); MDEntryDate=20140804(5); MDEntryTime=074350579(11); SecurityTradingStatus=18(5); Tra dingSessionID=1(5); SecurityTradingEvent=101(5), function=bool __cdecl intelitrader::umdf_feeder:: GetField(const class QuickFAST::Messages::FieldSet &,const char *,class std::basic_string<char,str uct std::char_traits<char>,class std::allocator<char> > *,enum intelitrader::umdf_feeder::FieldNot FoundLogBehaviour) 22:17 Perdizes Reserva Malbec de casa: já está há mais de uma semana na porta da geladeira, tirei para dar um trago e ainda gelado há um aroma doce e firme, como ameixa, talvez. 22:39 Estamos falando apenas da mensagem 35=f (SecurityStatus).

= 2014-08-11
:date: 2014-08-11

Começamos a segunda com um incêndio: grtrader com sinal desatualizado. 12:25 Incêndio era só o Pedrinho. Agora tentar mandar a questão do campo não-encontrado para a bolsa. Seria uma boa coletar as mensagens de mudança de estado e printar o que vem. 14:41 Vou deixar para depois esse negócio do campo, pois ainda não consegui chegar em uma conclusão para explicar o que ocorre. Aparentemente não recebe SecurityGroup, mas sabemos que recebe, pois par ao log entrar naquele ponto tem que ter tido. 15:40 Agora #partiu analisar outro bug: subscribe de groups não tá recebendo nada. 15:45 Não existe /intelimarket/bvmf/cash... 16:11 Não existe o valor do grupo como um instrumento. Desconfio que o problema do UMDF2 do SecurityGroup pode estar relacionado. Voltando a depurar este caso. 16:29 Não tem a ver, achei outro ponto onde procura-se o TradingSessionSubID: no OnSecurityStateChange (também deve ser opcionalizado).

= 2014-08-12
:date: 2014-08-12

Problemas no projeto tirar ctree do scua: relacionamentos (não tem edição na tela sql) e ids (pode não bater). 16:52 OK, começando projeto da Scua. Vamos partir do princípio que não existe nada no servidor (só os serviços DataSvr e CTreeNT). 19:26 Problemas de acesso negado da vm para o DataSvr local (meu Windows 7 64). Setando o registro: HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0 deve ser criado um DWORD chamado allownullsessionfallback com 1. 19:27 Em HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa deve ser criado outro DWORD de nome UseMachineId, mas setado 0. E também setar a segurança pelo DComCnfg. Lembra desse carinha?? (Ah, sim, estou tentando configurar sem o instalador, apenas CTreeNT e DataSvr.) 19:41 Criada app InstallComponent para setar a segurança do DCOM exatamente como seta o Instalador (Everyone FullAccess). 20:34 Bom, da minha máquina Windows 7 (desktop) foi de boa depois de registrar o proxy do DataSvr. Nem teve que mexer na segurança. 20:35 Já é um start... dá para desenvolver algo sem testar a transmissão de regras. 23:05 Instalado SP3, depois de 2 horas. E testando o SecuritySuite 9.0.0.502. 23:22 OK, that's enough. Vamos instalar o Security na minha máquina (como server). 23:56 Continuamos sem acesso.

= 2014-08-14
:date: 2014-08-14

Código da minha rede/grupo recém-criada: QU83HM1ur6. Reinstalei o Windows 7 em um novo HD híbrido, BTW. 12:40 Fato curioso: os problemas de campo não encontrado do UMDF 2.0 também acontecem em produção (com o UMDF 1.6).

= 2014-08-15
:date: 2014-08-15

O projeto do híbrido deu bosta, ele só dá tela azul, a Seagate maldita não suporta múltiplos acessos que já trava o controlador. Estou voltando tudo e reinstalando tudo. Uns dois dias de prejuízo. 17:49 Problemas, problemas... conselho do Zé de usar o W2003 Server parece que vai rolar, já instalei a VM e... precisa do SP1 pelo menos (vai até o 2), pois a função DecodePointer usada pelo LogonSrv não existe ainda no SP0. 17:58 E se eu usasse as VMs direto do HD híbrido via USB? 19:31 Finalmente consegui sincronizar rodando como usuário o SyncDB2 de uma VM xp recém-instalada para o meu server 2003. Só deu um erro no final: WaitForConnection returned 0x4002, 0x80070005. 20:09 Primeira coisa que o SyncDB faz: pega a lista de IDs dos objetos a serem sincronizados com base no nome do usuário. 21:40 Não acessa nem fudendo, mesmo com XP => WK3. Vamos tentar com 2000.

= 2014-08-16
:date: 2014-08-16

Aquelas tentativas do CoGetClassObject de retries é configurável no secserv.ini. SyncDBReTries em Options. Tive que reinstalar o SP2 do Windows 2003, e vamos estudar e testar mais coisas de segurança. 13:35 Acho que depois de arregaçar o sistema achei o motivo do acesso negado na instalação do Servidor de Segurança padrão. Vou até fazer um vídeo sobre isso, screenshots, etc. 14:03 O truquezinho: dcomcnfg, My Computer Properties, COM Security, Launch and Activation Permissions ir em Edit Limits e suportar ativação remota para Everyone. 14:16 Bom, primeiro precisamos pegar os IDs de sincronismo. 14:19 Agora esse GetUserAndGroupsIdsFromCache fudeu, pq ele vai procurar no CACHE quais os grupos?? Se bem que, pega nada... 14:42 Tenho que mandar os IDs, pois estes estão relacionados com os grupos e usuários. Podem haver centenas de rotas e elas devem sim estar distribuídas entre os IDs onde foram cadastradas. Isso põe fim à questão "dá pra matar o relacionamento com a SAM do NT". Sem mexer no cliente, ainda não.

= 2014-08-17
:date: 2014-08-17

WTF is that lot of buffers and sizes and longs and indexes and ctree internals inside this motta fucka buffer!?!? 10:40 Não, fala sério. Depois de pegar os índices a serem deletados no final do buffer, o pPosition apontando para o início após dois ULONGs que tinham o tamanho de registros adicionados/modificados e excluídos, vimos isso: 10:41 pReserved = (CTREE_RESERVED*)(pPosition + m_nRegSize); Ou seja, tem um pedaço do tamanho do registro no começo que aparentemente não é usado, e depois temos mais um registro "reservado" pelo CTree. 10:42 O bom de tudo isso é que todos os índices são IDs do usuário (e grupos), então basta o DataSvr funcionar nesse único ponto (ID => usuário/grupo) e consigo pegar toda a galera do SQL. 15:28 Na depuração, SyncDB cria SyncDB2 que instancia CTreeNT. No final, SyncDB mata todo mundo. A parte importante: são as instâncias local e remota do CTreeNT que se comunicam para atualizas as entranhas das tabelas. 16:15 Achei o que que era esses CTREE_RESERVED. Eles ficam depois da estrutura, são dois ULONGs e contém um ID de identidade e um ID de atualização (nessa ordem). 17:02 15840 é o número de bytes do array DIRINFO dentro de Director. 19:38 Preocupações com os 2 bytes de diferença no tamanho dos registros CTree com a struct que ele representa. PORÉM, está funcionando com diretório de acesso, vamos continuar o projeto com esse alerta...

= 2014-08-18
:date: 2014-08-18

Em vez do SID, o nome do usuário em maiúsculo. Até aí, tudo bem. Porém, no início, um ID, o nosso amigo OBJID, que é obtido pelo GetNextFreeID... Que vai lá e começa a zoar geral Pega o CRC do nome do usuário... Aplica os limites de faixas de IDs para usuário (cada tipo de objeto tem a sua). 12:49 E vai incrementando feito louco para evitar a flag do CTree de deleção (isso faz parte do leiaute interno dos registros do CTree). Em resumo: WHAAAAAAAAAAAAAAAT? 18:05 Melhor comando do vim encontrado: q: (em vez de :q) mostra o histórico de comandos. 23:12 Incêndio na migração da Octo. Problema parece ter relação com o log do intelihub no final do dia. De qualquer forma, abortada a operação. 23:13 E eu ganhei novamente um acesso negado do meu SyncDB local, dessa vez para o Servidor de Segurança de teste da scuacorp. Estava tentando usar a máquina de desenv, mas quer saber? Scuacorp.com.br domain, aí vou eu!

= 2014-08-19
:date: 2014-08-19

Cabernet Sauvignon Tarapaca 2013: Leve, fácil de tomar, quente, mas depois de respirar vira um suco. Pouco aromático, muitos sabores. Sensação espacial: Esse poder de unir corpo e mente faz a vida ficar multi-tempo e espaço. Penso em algo do passado e ele serve como gancho de acontecimentos presentes. 11:03 Depuração estupidamente lenta pela VPN. Acho melhor usar minha W2k3 e apontar para o SQL deles.

= 2014-08-20
:date: 2014-08-20

Todo taxista jovem que encontro precisa do alvará para não pagar 200 conto diário para trabalhar em uma frota. É o corporativismo e o sindicalismo fudendo a vida do trabalhador.

= 2014-08-21
:date: 2014-08-21

Dias tensos... muito código, muito SQL... 22:06 Problemas no login quando usuário não existe no servidor de segurança. Preciso encontrar onde ele está dizendo que não existe. 22:45 O SidInfo tá barrando, pois o usuário obviamente não existe no CTree. Tenho que sincronizar esse arquivo, mas o detalhe é que eu mando apagar tudo e o SyncDB roda agora umas 4 vezes no logon. Ou seja, vai apagar tudo 4 vezes?!?!?! 22:46 Podemos atualizar o ulIdentifier com o ObjectID... Não, eu preciso sempre incrementar...

= 2014-08-22
:date: 2014-08-22

Não tem como saber se os IDs passados para o GetChanges já existem no banco, então não posso mandar removê-los, pois daí vai dar erro no client de registro não-encontrado e foi-se. 00:41 Mas podemos modificar/incluir todos. Daí existe uma lógica para isso. 00:58 Modifica pelo uIdentity, mas remove pelo ID??? 00:59 Correção: na lista de remove ele espera o identity. 10:16 Ontem consegui fazer o login de usuários, mesmo que estes não existam? Sim, isso mesmo. O problema é que as rotas não aparecem... 10:27 Opa, precisa colocar o ID dos valores vazios. 11:01 Malditos headers pré-processados... 11:02 Aliás, malditos preprocessadores! 11:15 Importante: definir o CTREE_EXCLUDED_RESERVED ou whatever em todo o projeto do CTreeSqlAdapter. Se não algumas definições da estrutura vai estar com o campo, outras não (chance de caquinhas). 17:41 Para carregar as regras, a existência na SAM do usuário e de seus relacionamentos é vital. Teremos, portanto, que criar esses usuários caso não existam (e seus grupos). 17:44 Uma solução mais completa: usuário deve existir no SQL. Se não existir, será chamada a procedure. Após chamada, a replicação é sempre do SQL para a SAM. 17:45 Isso quer dizer que usuários e grupos no SQL podem existir e serem editados tranquilamente independente da SAM. A SAM só é usada para os clientes antigos usarem para carregar as regras. 17:51 A última gambiarra desse esquema dos usuários do NT no Scua? Seria esse um momento histórico? 21:56 Chamar uma procedure pela interface do OLE DB é mamão com açúcar: exec NOME_DA_PROCEDURE @param1 = 'arg', @param2 = 3.

= 2014-08-23
:date: 2014-08-23

Não é muito bom o caminho pelo Ipiranga para chegar na Sta Cruz de táxi. Sem contar o trânsito para subir aquela rua que chega no shopping. 15:28 No CTreeNT não tem como saber sobre os IDs das aplicações.

= 2014-08-24
:date: 2014-08-24

Pontos de atenção para aplicações: se não existe nenhuma permissão para uma rota, ela não aparece na view. Se não existe nenhuma rota para a aplicação, ela também não aparece. E o sincronismo não está retirando as aplicações deletadas.

= 2014-08-25
:date: 2014-08-25

Pequeno corte na lateral da gordura da bisteca evita que ela fique dura. Fonte: Edu Guedes. 14:52 Antes que eu me esqueça de novo, o cPanel do caloni é caloni.com.br:2082.

= 2014-08-26
:date: 2014-08-26

O que fiz hoje? Mmmmm...

= 2014-08-28
:date: 2014-08-28

Voltei! Puxa, será que vale realmente à pena escrever por aqui?

= 2014-08-29
:date: 2014-08-29

Esses crashs que ocorrem no InteliMarketClient se resumem em: às vezes a comunicação com o intelihub até pode estar legal, mas é preciso ficar atento que nem sempre o retorno da função de chamada equivale ao que foi entregue na saída.

= 2014-08-31
:date: 2014-08-31

Grande decisão: o novo saite Cine Tênis Verde... Colocar as informações dos reviews dentro de cada arquivo ou manter uma lista na pasta _data? 15:14 Talvez o melhor caminho: tudo separado. Daí cada texto possui tudo que precisa: ID do IMDB, título, ranking...

= 2014-09-06
:date: 2014-09-06

Ocorrência no. 318562534 do Itaú (acesso bloqueado).

= 2014-09-09
:date: 2014-09-09

Diário, diário, estoy aqui. Meio na dúvida sobre o que faço com tantas versões do orders_lib. Ou seria orders-lib 23:04 A pasta orders_lib da VM Windows é o branch original e o .bak aparentemente são as mudanças feitas. 23:06 Texto interessante sobre como criar um sink no VB6. 

= 2014-09-11
:date: 2014-09-11

Quando concluo pequenas tarefas dá vontade de fazer mais, e na presença de pessoas fico menos disposto a procrastinar.

= 2014-09-15
:date: 2014-09-15

Rodando o POC chamando SetLogonInfo dá erro no connector do FixSession.

= 2014-09-16
:date: 2014-09-16

Muitas vezes o cliente tem o seu meio de comunicação, que não necessariamente é o email. O Alexandre da Título nos pegou de surpresa ao dizer na reunião que não lia os emails que a gente mandava em cópia, mas que ligasse, pois o telefone era seu meio de comunicação mais eficaz.

= 2014-09-24
:date: 2014-09-24

Lendo o meu daytoday de 10 anos atrás percebi que é muito útil ter a noção temporal de nós no passado. Sendo assim, vamos tentar novamente manter um diário aqui. Vamos começar dizendo o que devo fazer hoje. Bom, hoje temos:

= 2014-09-25
:date: 2014-09-25

As tarefas para hoje são basicamente as de ontem =P Não consegui também acompanhar o trabalho da Rose. Baixei os fontes e estava para criar a base de dados, mas não continuei essa parte. Não consegui voltar para o bagulho da Clear e lançar uma ordem com exec report. Quem sabe dessa vez vai? Ontem consegui fazer toda a conversão dos MarketByPrice para usar a estrutura de eventos do ByOrder adicionando o OrderCount. Mas existe ainda algum bug que muda o direcionamento do OrderCount de um preço para outro (vi de 19,00 para 19,01). Teremos mais certificação, mas não ontem: hoje às 15:30. 20:06 A Simple Connectable Object (thrysoee.dk): Every coclass statement in the IDL file can have a default incoming interface (the standard kind) as well as a default source interface. If the default is not indicated using the default attribute, the first outgoing and incoming interfaces are treated as the defaults.1 This assignment of defaults is important because high-¿level languages such as Microsoft Visual Basic automatically call IUnknown::QueryInterface for the interface marked with the default attribute. 21:15 <CBLSolicLiquidcAntecdContrto><CodMsg>CBL5040</CodMsg><ISPBIF>90</ISPBIF><NumCtrlCBL>1</NumCtrlCBL><NumOpSist>90_O15</NumOpSist><NumItemOp>1</NumItemOp><CodPart>90</CodPart><NumContrto>12015345</NumContrto><CodInvest>87022</CodInvest><QtdAtv>500</QtdAtv><CodACT>90</CodACT><CodInvestCstdia>87022</CodInvestCstdia><CodCart>2801</CodCart><IndrValidcObrig>N</IndrValidcObrig><DtMovto>2014-09-25</DtMovto><DtHrCBL>2014-09-25T17:16:41</DtHrCBL></CBLSolicLiquidcAntecdContrto> Agora, o COM não tem ainda suporte a sink. Estava no "quase lá". Falta fazer isso que é o objetivo amanhã. Dia corrido, mais uma vez graças à certificação. Dessa vez passou de duas horas de testes, e o tempo para coisas da Clear estourou. No entanto, já foi possível finalmente começar a receber executions (erro do pessoal de lá) e graças a um sink de teste foi possível vê-los. Na Certificação tivemos um erro. Fizemos vários testes, mas esbarrou na mensagem 5040 para liquidar com outro custodiante. Isso porque o campo CodACT é o mesmo do CodPart, mas deveria ser o do custodiante. Saca só:

= 2014-09-26
:date: 2014-09-26

- Add a new key under HKey_Classes_Root\Wow6432Node\AppID\ - Again the new key should be called the same as the COM objects GUID. No values are necessary to be added under this key. - Create a new Key under HKey_Local_Machine\Software\Classes\AppID\ - Locate your COM object GUID under the HKey_Classes_Root\Wow6432Node\CLSID\[GUID] - Once located add a new REG_SZ (string) Value. Name should be AppID and data should be the same COM object GUID you have just searched for - The new key should be called the same as the com object GUID - Under the new key you just added, add a new REG_SZ (string) Value, and call it DllSurrogate. Leave the value empty E aguardando próximo agendamento para Certificação na CBLC. Então minha missão hoje fica mais simplificada: terminar o negócio da Clear. Basicamente fazer funcionar o Sink no VB6 para começar a receber executions. Também seria uma boa ter uma tela com todas as funcionalidades do COM para que o Carlos consiga usar. Foi útil para eu usar o Python 64 com o OrdersCom. Hoje o Strauss quis ficar com a parte do MarketByPrice para colocar o CheckIntegration (sei lá como) e mais logs. Imagino que o objetivo seja nos certificarmos que está tudo certo, mas temos que tomar cuidado que quem deve se certificar é o programador da outra ponta. Muito foda conseguir usar connection points... Simple hack to instanciate from a x64 process a x86 (32 bits) COM component: 21:44 Ainda bem que implementei um CheckCertification para esse book, que simplesmente compara um book mantido pelo Transform com um mantido pelo OnEvent, para ver se os eventos coindidem. Achei já um bug do byprice e um do byorder. O do byprice eu não estava apagando uma posição que zerava devido a um set do by order (o preço antigo, no caso). O bug do byorder era que o evento continha um position errado (zero) e pegada a ordem errada. Corrigi procurando pelo OrderId se estivesse bugado. Coloquei um assert nesse carinha para estarmos cientes em debug. Hoje perdi bastante tempo com os sinks do VB6, do Python, do C++. É algo difícil de implementar. Estou indo agora back to the basics para conseguir pelo menos fazer funcionar em C++ para daí pensar em fazer samples em Python ou VB6. Não deu tempo de ver o problema do custodiante para aquele teste da certificação. Se conseguir ver na segunda antes do teste podemos fechar talvez todos os testes. Problemas de suporte na Octo relacionados a um serviço de BI usando a mesma porta do dashboard e um book "perneta", de acordo com o Gottardi. Terei que ir segunda de tarde após a certificação para lá dar uma zoiada.

= 2014-09-27
:date: 2014-09-27

- Se existir, remover do book por preço. - Sobrepor e adicionar no book por preço a nova ordem. - Verificar se existe ordem na posição especificada. Feito isso parou de dar problemas. Quero agora gerar um check integration e um log python friendly para também analisar incrementalmente as mudanças do book. Nenhum erro passará! Fiz um erro fatal na análise de ontem à noite. O evento de set do book por ordem não está usando o position como um indicador da posição original da ordem. Está simplesmente realocando uma ordem (existente ou não) para em cima de uma posição que pode estar outra ordem. Nesse caso o book por preço tem que:

= 2014-09-29
:date: 2014-09-29

Esse fds consegui mudar o log para um script Python que regera o book para comparação. Isso poderá ser útil hoje no cliente. Hoje tem Certificação às 11 e quando terminar devo ir no cliente pegar na mão deles para acertar o book.

= 2014-09-30
:date: 2014-09-30

Cliente: "Olha o book. Tá estranho!" Cliente: "Putz, acho que é cagada minha." Essa semana o foco mudou totalmente. Devo dar total atenção para entregar todas as coisas da Título (ainda que tenha o componente da Clear, devo mexer à noite). Eu: "Oha os logs dos eventos gerados. Veja quantos estão indo para você. Transforme isso em um script Python. Está vendo que book gigante? Transforme em uma sequência de imagens com o top6 desse book. Está vendo como vai sendo alimentado naturalmente?" Fui ontem no cliente. O resto da visita foi babysitting. Ontem deu pouco tempo de manhã para uma certificação que atrasou. Então reagendamos para hoje e fui para o cliente. Para o componente VB 6 o Strauss deu uma ideia de mexer diretamente na IDE do VB e deixar ele montar o método para mim.

= 2014-10-01
:date: 2014-10-01

Ah, e a ideia de mexer no POC VB6 já miou faz tempo. Bom, aparentemente para eles isso era bem importante, porque isso disparou uma série de emails com uma reunião marcada para eu comparecer de maneira "imprescindível" hoje às 14:30. O Strauss não estava copiado nesses emails. Desse jeito vou perder mais tempo para concluir as coisas da Título. Mais um cano do Luiz na Certificação me fez perder o foco de manhã esperando por uma hora. Reagendamos para o mesmo dia às 15:30. Levou para variar umas 2 horas, mas dessa vez terminamos a Certificação! Já enviei as evidências por um link do site. Pelo menos hoje não tem Certificação. Nunca mais (por enquanto). Um bug estourou de repente na Octo: papéis da BMF não estavam vindo na máquina .50. Pedimos os logs, a versão do p9 dizia ser de 10 dias atrás, mas há um bug na geração do log. Devo mudar isso para centralizar em um header com a versão do repositório. Isso vai obrigar a recompilação e a data sempre estará atualizada rodando pelo intelibuild.

= 2014-10-02
:date: 2014-10-02

A primeira coisa é integrar um método de validação na passagem de algumas mensagens antes de enviar para a CBLC. Vou usar o mesmo status que já temos (aprovação com o admin). Surgiu a dúvida agora se isso não vai fazer um ciclo infinito, tenho que ver o código ou com o Strauss. Basicamente é isso. Fazendo isso já faremos um monte. Hoje voltamos à Título. Devo mandar email para o Alexandre confirmando Oracle e Risco para até amanhã e o resto semana que vem. Não dá para prometer o impossível. Intelihub não parava, log não apagava. Sem recovery em desenv.

= 2014-10-03
:date: 2014-10-03

De dia fui configurar os índices e percebi que eles estão configurados, mas há muita mensagem de recovery no canal 010 (índices) e outro de equities, além de vários suicídios causados pela falta da mensagem de recovery e o acúmulo de mensagens no feeder. Fiz o merge com o código da Oracle (InteliBTC) e precisa instalar o cliente da Oracle para funcionar. Eis o linque: . Precisa ser em 32 bits por causa do QuickFix. Hoje devo focar totalmente na Título (espero) para entregarmos ainda hoje as integrações Risco/Oracle. Ontem tentei voltar à Título, mas só no final do dia. Em conversa com Strauss decidimos colocar a validação do risco no WebService, mas ao custo de no final da noite o IIS não colaborar e não funcionar o saite. Tentemos hoje novamente. Pelo menos foi corrigida (teoricamente) a falta de preço de abertura da BM&F evitando a mensagem de delete recebido pela bolsa para o preço de abertura. Já estão em produção e desenv.

= 2014-10-06
:date: 2014-10-06

A Octo acabou de ligar já avisando que a coisa não tá rolando lá no ambiente. Título entregue, menos o Oracle (Strauss está testando e precisa de uma trigger para instalar). Hoje devemos tentar terminar o POC VB6 para o Carlos. Vou enviar os fontes para o repo e o Strauss deve mexer. Enquanto isso darei uma olhada nas tretas da Octo para não deixar o projeto em nossa mão.

= 2014-10-07
:date: 2014-10-07

Fiz todos os commits que já deveria ter feito semana passada (da Título/BTC, do Carlos/POCVB6), testei debug remoto no ambiente da Octo para hoje e ontem tentei monitorar os feeds com ProcDump para analisar o que estava dando de errado. Resultado: nenhum.2003

= 2014-10-08
:date: 2014-10-08

- Analisar dump do intelihub - Analisar dumps coletados - Analisar horário das ocorrências no log - Atualizar xml na .40 - Incêndio na Octo - Montar InteliMarketTest no ambiente de desenv - Trucagens no log: horário - Verificar execução dos feeders BMF - Verificar se XML do QuickFast está atualizado Fora isso à noite teve baladão da Título tentando conectar no Oracle. Ontem a maior parte do tempo foi gasta na análise do sinal do market data, ainda sem muitas conclusões. A lista do que foi mexido:

= 2014-10-09
:date: 2014-10-09

Ainda sobre o Oracle na Título, populei as bases usando o XML de certificação (quer dizer, virou um XML). Fiz alguns testes de tela e corrigi o tratamento de exceção para pegar apenas o tipo do RiskException criado para exibir aquela página com a mensagem de erro. Bom, o incêndio da Octo me permitiu analisar os vários feeds caindo (log e dump), e tudo indica suicídio coletivo. Calculei os pró-labores do mês, mas falta confirmar a corretagem do Strauss. Ainda ficou meio indefinido. Criei o hub espelhado na produção, mas consumiu 16GB de memória e tudo travou. Tive que parar. O André pediu para montar no ambiente da 41. Das coisas que deram certo foi meia horinha consertando o negócio de rede para o Zé. Hoje ele me brindou com um email de um problema no DataSvr. Inclui os scripts das tabelas do risco (Oracle e SQL) e pushei no repo. Ontem girei a chave do Oracle, mas deu problema na lista de ofertas registradas. Mandei email para o Alexandre. O Bruno respondeu com o modo para pegar o último preço (isso hoje).

= 2014-10-10
:date: 2014-10-10

Hoje já começou com incêndios pra todos os lados (Título e Octo), inviabilizando aparentemente toda a nossa discussão a respeito dos dias de foco e os dias de suporte (revezamento). O Gianni se comprometeu semana que vem a ficar os 5 dias como nível 1. Ontem fizemos nossa reunião de planejamento mensal em São José e conversamos com um vendedor das antigas (40 anos de estrada) para pegar algumas dicas e ver se contratamos ele.

= 2014-10-11
:date: 2014-10-11

Dei umas ajustadas no pagamento do mês, mas descobri que o Strauss já tinha feito o pagamento e era uma operação de menor prioridade. Continua na fila. Ontem (sexta-feira) foi mais um dia de problemas na Octo. Eu fiquei consertando tudo da base Oracle para a Título, mas fiz uns testes de manhã com versões do feeder com 10k, 5k e 1k de mensagens enfileiradas (este último o padrão). Também chequei os ambientes para ver se estava tudo configurado corretamente (estava). Lembrando que foi o primeiro dia depois de tirar o recovery da .41. Tentei também para a Título ajustar o risco, mas não entendi que na verdade o serviço da EZ (publisher) não é importável pelo Visual Studio. Tem uma documentação que o Bruno passou em anexo que devo dar uma olhada (parece que eles cospem json).

= 2014-10-13
:date: 2014-10-13

- Configurar recovery na. 41 - Criar base de dados MySql e conectar - Deixar as máquinas de produção iguais (mesmos binários) - Reforçar que antivírus pode ser um problema - Verificar e gerar dumps de todas as máquinas - Verificar se feeders da. 50 também estão capotando Agora eu assumi o projeto AutoFill da Dankia. A Rose não deu conta do recado por conta de compromissos com a empresa, faculdade, mó loucura. Pagarei metade do valor acordado com ela (supondo que ela chego na metade do projeto) e vou ligar para o cliente ver como faz o bagulho. Estourou também na Scua um problema de listagem de membros de um grupo local que tem mais de 30k neguinhos pendurados. Devo dar uma resposta hoje. Fora isso, terminar Título e marcar reunião para amanhã à tarde. Os itens abaixo fizeram parte do meu fim-de-semana: 11:26 Drogas: O Manual Econômico do Defensor da Legalização - Liberzone (liberzone.com.br): Por sua vez, economistas relacionados à Escola Austríaca enfatizam o papel da ignorância e da incerteza no momento da ação (escolha) e a dispersão do conhecimento na sociedade [2]. 11:30 ExperimentoSocialistaNaSalaDeAula (wanderleycaloni@gmail.com): O professor explicou: "o experimento socialista falhou porque quando a recompensa é grande o esforço pelo sucesso individual é grande. Mas quando o governo elimina todas as recompensas ao tirar coisas dos outros para dar aos que não batalharam por elas, então ninguém mais vai tentar ou querer fazer seu melhor. 11:31 4. Ao contrário do conhecimento, é impossível multiplicar a riqueza tentando dividi-la; ExperimentoSocialistaNaSalaDeAula (wanderleycaloni@gmail.com):

= 2014-10-14
:date: 2014-10-14

A correção dos métodos ContractRenewRequests e SendClosingOffer foi mais no esquema "putz, agora está funcionando, vou deixar assim", embora não exista nenhuma referência da tabela ContractRenew. Sendo assim, todas as exceções do Oracle estão tratadas e marquei reunião com o Alexandre na Título às 16:00. Liguei para o Marcelo da Dankia e entendi o procedimento que ele quer. Basicamente aparece a tela e começamos a preencher o código do estoque os os outros campos especificados no banco, linha a linha. Cada erro deve ser marcado, assim como cada acerto, provavelmente com um "PrintScreen". Há update de um campo na tabela para as falhas e acertos. Agora entendi a dúvida do Daniel sobre mais de um sistema rodando ao mesmo tempo. Quanto a Clear, a resposta só veio hoje, mas o Carlos falou que se for entregar até sexta tudo bem. Então, voltemos aos testes. Hoje devo focar mais na Título antes da reunião. Surgiu (semana passada) um bug no DataSvr para listagem de membros de um grupo com mais de 36000 membros (wow), que acontece na chamada normal da NetApi32. Todas as formas de chamá-la dão no erro 1389 ("Too many security IDs have been specified."). Usando a versão LDAP feita pelo fernando dá outro erro, de servidor não-operacional. Contudo, achei um VBScript que usa LDAP e funciona, ainda que lentamente (gera um arquivo csv no final). Vai ser algo em torno das 10 horas, o que poderá ser faturado.

= 2014-10-15
:date: 2014-10-15

Hoje devo focar no TraderGráfico, e temos uma ou duas semanas de respiro das coisas da Título (mas precisamos terminar o quanto antes) e o ambiente da Octo tá bombando (o André pediu para parar todos os feeders). Ontem foi uma correria de manhã de integrar algumas coisas já feitas para a Título e ir lá em uma reunião às 16:00 (que foi uma ótima reunião, como marcamos ela o cliente nem bateu na gente).

= 2014-10-17
:date: 2014-10-17

E consegui gerar uma versão do TraderGrafico no final do dia!! Porém, está com um bug que corrompe e heap e capota na saída. Já hoje fui visitar a Octo e coletar mais cards relacionados com o subscribe do InterliMarket. Estamos com os feeders abaixados, pois o fluxo está frenético e estouramos o link com a bolsa. A pedido do André e do Felipe configurei apenas um feeder para testes amanhã e ensinei como matar feeders de maneira segura. Ontem consegui terminar uma versão do AutoFill para a Dankia, mas o TraderGráfico ainda ficou pastando. O esquema das libs me consumiu muito tempo (mudança para 2013).

= 2014-10-20
:date: 2014-10-20

Hoje o que vamos fazer? Um monte de ADM, mas mexer na Título e conseguir terminar as coisas por lá. No final do dia ainte tem incêndio da Scua. Sexta foi o dia da preguiça. Terminei ajustes da Dankia até o cliente testar, tentei começar as mudanças do risco para a Título (ainda sem sucesso), criei todos os cards relacionados com a visita da Octo. Ah, e fiz commit das coisas de ontem. Tudo isso com o contexto de sábado, estou falando da sexta!

= 2014-10-21
:date: 2014-10-21

Hoje devo compilar o UMDF_FEEDER versão nova em 2013, verificar com o Bruno o problema do JSon, monitorar minhas ferramentas durante o dia e criar um método que lê um arquivo e importa no banco (para a importação de margens do BTC). Ontem recompilei o feeder para o horário de verão, fiz testes no começo do dia com o bind do LDAP (Zé e Cesinha estavam focados nisso e me ligaram), gastei um bom tempo tentando acessar a conta do Itaú, testei classes que o Bruno mandou (a resposta do EzPublisher foi um texto meio-json cortado no meio), criei duas ferramentas para monitorar book e trades e no final do dia analisei o problema com o LDAP (começou a listar, mas deu pau ao imprimir).

= 2014-10-22
:date: 2014-10-22

Hoje acho que ainda dá tempo de mexer em algo da título como a função que recebe uma string (o arquivo de margens) e importa para o banco. Hoje foi dia de encontro quinzenal com os sócios, e vimos que o melhor esquema para as libs é deixar no server como repo git e copiar, baixar, rsyncar e blz. Combinamos de migrar para o RedMine (que já era usado) porque ele tem plugins que resolvem a vida de integrar tudo que precisamos (tickets para clientes, sprint, base de dados sql para fazer query). Ontem compus o email de venda do Primo (supervisor) para a Dankia, tentei compilar o novo UMDF_FEEDER (mas ele começou a dar erro de compilação, o Strauss foi dar uma olhada), chequei a URL de produção do Publisher (me deram o de homolog) e funciona, mas às vezes não. Tentei isolar o request em uma classe, integrei e entreguei no ambiente da Título. Durante o dia fiz alguns monitoramentos com o InteliMarketClientSamples e fechei vários tickets por conta de nada achar.

= 2014-10-23
:date: 2014-10-23

Agora pretendo começar o insert no SQL. Hoje deve terminar essa parte. Ontem comecei a parte do recebimento de arquivo com um POC. É bem simples criar um método no WCF. Basta criar na interface com a marcação [ContractWhatverer] e criar na classe de implementação.

= 2014-10-24
:date: 2014-10-24

Hoje é dia de monitorar o ambiente da Octo em busca de refinar os samples e achar os bugs. Ontem foi o dia de entragar tudo para a Título (só falta a parte do Strauss, ainda em teste) e criar a versão de assinatura de grupos para a Octo monitorar o bug que dizem que há dos eventos do papel aparecer antes do papel. De quebra corrigi um bug que impedia o log do book por preço ser gerado.

= 2014-10-28
:date: 2014-10-28

Correção: acabaram de mandar email da Scua dizendo que ligaram a máquina. Hoje devo dar mais foco de manhã à Título e à Dankia que responderam meus emails. O servidor da Scua continua sem resposta, mas à tarde devemos fazer o Strauss e eu o hangout para as coisas do Intelimarket. Ontem fiz o método que retorna a margem para a Título, dei uma lida no umdf_feeder e analisei uns dumps (o código é bem simples, o mesmo tratador com três instâncias (seclist, snapshot e incremental), há uma mudança de estado e é isso), dei uma verificada no webservice e consulta de clientes, implementei (mas não testei porque o Oracle estava fora) e ia começar a análise do NetLocalGetGroups quando vi que o servidor estava fora do ar.

= 2014-10-29
:date: 2014-10-29

Dankia ainda não respondeu, mas enviei a versão com logs. Enviei email para o Zé explicando a situação, eles estão secos de grana pediu para NF sair em dezembro, mas o projeto também vai sair perto disso porque envolve mudanças radicais no NetApi e merge do CTree. Título ainda em off. Quem sabe agora vai!

= 2014-10-30
:date: 2014-10-30

Não vai dar tempo de fazer o negócio da Scua, passarei para o Dema. O Marcelo da Dankia entrou novamente em contato e vimos um bug escabroso da Rose quando login e senha eram iguais que evitava conectar no banco. Próximos passos da Dankia já foram elencados. Alguns ainda farei essa semana. Ontem, dia mundial da preguiça, pelo menos serviu para começar a popular a base Oracle novamente e dar umas ajeitadas nos scripts. O Bruno já me cobrou hoje, disse que entrego amanhã.

= 2014-10-31
:date: 2014-10-31

Agora a versão do AutoFill da Dankia está usando o novo select e atualizando o banco. Já dá para ir para o cliente. Expliquei para o Dema sobre os dois projetos da Scua (CTreeSqlAdapter e o NetGetMembers) de maneira exemplar. Melhor, impossível. Fiz um vídeo mostrando que no ambiente de produção a consulta do nome dos clientes está funcionando, mas dá pau na nossa VM. Ontem preenchemos o banco Oracle, agora tem oferta, tem contrato e tem exceção porque o Publisher dá pau toda hora. Tentando repassar todas essas tralhas para o usuário. Repassando erros do WebPublisher para nós, mas com alguns problemas nos testes noturnos.

= 2014-11-19
:date: 2014-11-19

Fiquei de levantar quanto podemos gastar com o vendedor, para isso tenho que atualizar as finanças. Hoje é dia de levantar o ambiente de produção da Título. Ontem foi reunião de planejamento. Decidimos tentar transformar em uma empresa "de verdade", mas ainda ficou bem vago. O objetivo no final das contas é ganhar dinheiro para pagar as contas.

= 2014-11-20
:date: 2014-11-20

Estou pensando em melhorar o financeiro da empresa, e é o que estou fazendo. Ontem configurei todo o ambiente da Título, mas a conexão de produção com a Bolsa não estava funcionando. Nenhuma resposta, e hoje é feriado.

= 2014-11-21
:date: 2014-11-21

Financeiro atualizado e "melhorado". Agora as contas dos sócios viram credores de comissões, gastos, etc. Assim é possível ver se existe algo errado quando não está zerado. Hoje não sei o que faço. Vou dar uma olhada no Jira. Também gerei gráficos de andamento do caixa e gastos, mas ainda meio cru, pois temos apenas 4 meses de registros.

= 2014-11-23
:date: 2014-11-23

Hoje também estou tentando ir melhorando a rotina aos poucos. Nada como dezenas de horas de ócio para fazer a mente descontínua trabalhar um pouco mais. Voltei os exercícios (estou no degrau 13). Talvez use esse diário para mais coisas além de trabalho. Afinal, se a rotina for mesclada entre todas as partes, é porque o journal também deve. Lembra daquele dia que eu não sabia o que fazer? Bem, não fiz nada, mesmo. E tenho feito isso nos últimos 3 dias. Agora é domindo de noite e passei boa parte do dia jogando, vendo vídeos do Pirula e comendo. Ando sem foco, mas amanhã já tenho algumas tarefas como falar com a Título sobre o ambiente de produção e talvez terminar o negócio da Dankia com o detector de erros e a parametrização do pause entre os campos. 20:44 Então, usar o daytoday tornaria a anotação de tudo mais ágil. 2014.11.23 20.45 E o atalho está funcionando!

= 2014-11-24
:date: 2014-11-24

Então vamos lá. As tarefas de hoje se resumem em terminar o negócio da Dankia (AutoFill) detectando erros e parametrizando pausa entre preenchimentos e a Título, que tentei ligar agora há pouco e estão ocupados.

= 2014-11-25
:date: 2014-11-25

Enquanto isso minha próxima tarefa é a de compilar, testar e popular o SinacorBridge, um projeto muito legalzinho desenvolvido pelo Gottardi que lê do SINACOR (mais uma vez, da bolsa) e converte para uma base normalizada (leia-se: muito mais simples que o SINACOR). Compilou, funcionou (depois de instalar o Enterprise Library 4.1 e o Oracle Data Provider .NET (e configurar as referência no projeto), mas não funcionou tão bem porque NÃO HÁ MASSA DE DADOS PARA TAL. Pedi ao Gottardi em seu email pessoal, mas por enquanto estou sendo ignorado. Talvez uma ideia interessante fosse comparar fontes e queries SQL... Mmmmmmm... Terminei o negócio da Dankia e fiquei acompanhando o Bruno e a bolsa na saga de conseguir conectar a sessão BTC. Algumas configurações erradas e o Leonardo acabou sendo o cara responsável por se fu... conseguir deixar o firewall passar a rota da bolsa. Até o final do dia ele me ligou dizendo que estava difícil e que possivelmente quando chegasse em casa continuaria tentando. Torcemos por você, Leonardo.

= 2014-11-26
:date: 2014-11-26

Hoje de manhã fui cortar o cabelo, passei no câmbio, meia-hora de chá de cadeira, almoçamos no Indiano e estou de volta. O Bruno ainda não mandou nada, mas já instalei o SmpBridge como serviço e está rolando. Porém, dá exceção em produção quando vai listar ofertas registradas (em homolog está normal). O Strauss pediu para ficar com a parte de modelagem do banco (SinacorBridge) e tudo bem, o objetivo é ter uma demo o quanto antes. O que preciso hoje: o segundo arquivo da CBLC para testar a importação e acesso da porta de Debug também para o ambiente de produção. 18:25 A mesma lógica não se aplica do Terminal Sacomã, que divide os ônibus com destino a uma região entre plataformas distintas. Ou seja, quem vai para sentido Centro ou sentido Bairro precisa ver quais ônibus que atendem a região estão no terminal ou quais estão para chegar e decidir por qual plataforma irá esperar. Esse mês o Terminal Sacomã irá alterar a disposição dos ônibus. A questão é que nem a forma original nem a nova fazem qualquer sentido para os usuários, dando a nítida impressão que quem toma essas decisões as toma de forma arbitrária e nunca usou transporte público na vida, ou se usou, parece não possui senso de localização ou qualquer tipo de senso lógico. A grande vantagem do Bilhete Único são as integrações, que dá alternativas de linhas para os passageiros se locomoverem por uma região. Dessa forma eles podem esperar mais de uma linha em um único ponto, pois sabe que poderá pegar outras linhas intermediárias para chegar no seu destino final. Obrigado, Socicam, pelo total desserviço e descaso. Um exemplo pessoal: existem 3 ou 4 linhas que atendem a região Sul do bairro Sacomã e 2 linhas que usam o mesmo caminho, pela Alencar Araripe, as linhas 5035-10 E 5029-10. Ambas estão dispostas em plataformas distintas e em pontas opostas (tanto na disposição nova quanto na antiga). Um último detalhe para fechar com chave de ouro a incompetência da gestão Terminal Sacomã pela Socicam, os mapas das nova disposição possuem em seu desenho as escadas rolantes e as faixas de travessia dos funcionários para facilitar a orientação do usuário. Porém, na vida real a escada e a faixa ficam em pontas opostas, mas no mapa estão do mesmo lado. Ou seja, para que simplificar se podemos complicar, e de quebra fazer um mapa que mais confunde que ajuda? 18:40 Chegando lá a atendente teve que buscar (provavelmente em todo o histórico de transações) o envio do meu comprovante e a reserva da operação, o que levou cerca de 20 minutos. Após isso ainda há mais uma espera pela abertura do cofre, cerca de 10 minutos. Enfim, mais de meia-hora para obter dinheiro em espécie que já estava reservado há uma semana. Estou usando o espaço do Reclame Aqui apenas para alertar as pessoas a respeito do processo de compras por email da Confidence. Não fui prejudicado de nenhuma maneira financeiramente e não desejo ressarcimento de qualquer tipo. Da mesma forma, fui muito bem tratado por todos os funcionários. Esta reclamação é referente apenas ao processo, que, acredito eu, merece ser melhorado. A questão é que o processo no início parece simples e rápido, mas possui alguns tropeços no meio do caminho. Primeiro envia-se um email para a atendente da Confidence depois de acertada a compra/venda de moeda estrangeira com uma cópia do comprovante de depósito na conta da Confidence e, caso ainda não cadastrado (meu caso), uma cópia de um documento de identificação. Após isso eles enviam um email de confirmação e depois de um tempo um segundo email da tesouraria que não deixa muito claro se a reserva foi efetuada com sucesso e se já posso ir na loja física. Fiquei aguardando uns dias até resolver ir lá obter os pesos que havia adquirido. Recomendo que pedidos por email passem pelo mesmo sistema de outros meios, para que fique simples e ágil o segundo passo nesse processo.

= 2014-11-27
:date: 2014-11-27

Hoje basicamente é tratar essa exceção para conseguir liberar logo esse ambiente e passar a rever o SinacorBridge. Strauss deu a dica de dar uma olhada no AppConfig sobre tamanho máximo de buffer no WCF e habilitar todas as exceções para ver o que está ocorrendo na serialização.

= 2014-11-28
:date: 2014-11-28

Conclusão: O SinacorBridge ignora que possamos carregar dados do SINACOR durante o dia, pois compras/vendas executadas e não-executadas no financeiro e igualmente o que está em custódia não é utilizado. Parece que as tabelas usadas são um tipo de consolidação do dia. 2014-11-28 23:59 Ademais, dar uma reolhada no SinacorBridge e comparar a queries. Nada de mais. Hoje o problema é a importação do DBTO e estou tentando marcar de ir na Título semana que vem para resolver as pendencinhas. Ontem resolvi o problema de exceção graças ao maravilhoso programa... qual o programa, mesmo?

= 2014-12-01
:date: 2014-12-01

O fato de que macacos podem andar de bicicleta não significa que apenas os macacos podem andar de bicicleta. Reflexões sobre a origem e a estabilidade do estado (Mises Institute): 14:39 Porém, se essa tese está correta, e os acordos requerem um fiscal externo que os torne vinculantes, então um estado criado por consentimento nunca poderá existir.

= 2014-12-27
:date: 2014-12-27

Tempo de ficar no cliente (já são 3 dias) mexendo no MetaTrader.

= 2015-02-25
:date: 2015-02-25

Mais uma vez vamos tentar compilar nosso DayToDay. 16:16 A ideia agora é que ele seja usado como era desde 2004: para gerar logs. Mas depois, no final do dia, será usado como foi em 2003: gerar um journal do que foi feito no dia. 16:17 Se bem que acho que vai virar algo parecido com o Cine Tênis Verde, onde as palavras serão escaneadas e isso gera as tags. Também existe uma ideia de tagear qual o assunto para gerar métricas. Por exemplo, uma hora atrás eu estava mexendo no problema do bazaar que dava out of memory tentando baixar o Framework da Scua. 16:18 Depois o journal é que será alimento para o Supermemo, que segue o mesmo fluxo de todo txt por lá: atual e o archive. 16:20 Tentando dividir o tempo entre compilar e depurar para 2 horas, mas só o problema do Bazaar já ocupou mais de uma hora. 16:29 Criando um link simbólico para que o Lng fique na raiz (no fundo está dentro da pasta Scua). 16:30 Mas deu algum xabu que o Lng do raiz não estava apontando para lugar nenhum. 16:37 Mas como achar tantas coisas com tantas palavras? O grep por palavras é imensamente imenso. Já com as tags consegui com o daytoday inteiro cerca de 20 tags (entre elas número de tickets antigos). 17:08 O próximo problema do build foi que não havia projetos do Visual Studio 2003 para DriverLib e ScuaBT (.lib), LIBs de dentro dos projetos dos Drivers e que provavelmente são de suporte para o uso dos mesmos. Usando o mesmo esquema de makefile tudo funciona. 17:30 Agora fudeu. Tem uma lib faltando chamada FltLib que não tem em nenhum repositório do Bazaar, e o pior: não há binários (e nem libs) nas pastas dos builds (que teoricamente estão automatizados). 17:37 Acho que a primeira tag que podemos criar é quando há algum problema de #build. 19:27 E a tal da FltLib que estava faltando era do DDK (de acordo com o Demétrius). 19:35 Portanto, um lembrete: deu problema de LIBs, dá uma olhada também no WDK. Só praaaaa... 23:59 De tarde voltei para casa dar mais um tapa no projeto da Scua. A compilação continuo dando alguns problemas, como o fato de não ter alguns projetos do VC2003 para compilar as LIBs dos drivers (que supostamente são compilados na mão). Depois disso a ausência do FltLib em todos os projetos me fez devanear, até que o Demetrius iluminou o caminho avisando que se tratava de uma LIB do DDK (que por algum motivo é usada por vários projetos de user mode). Enquanto isso o pessoal da MetaQuotes respondeu finalmente à pergunta sobre as ordens stop e deixou bem claro que o MetaTrader faz tudo e nós apenas somos avisados. Ou seja, provavelmente a parte de estratégias podemos deixar de lado e aprimorar a mensageria com eles. Hoje depois do café com a Rose fui para a Rico e o Diego ainda estava tentando subir o ambiente de produção. O maior problema do MetaTrader é gerar a bendita senha, e esta estava "esquecida" no profile do Strauss. Depois de muito apanhar, finalmente ele conseguiu. No call foi discutido um pouco sobre o projeto de startup que o Gianni irá participar, como o fato deles estarem pensando em jogá-lo como funcionário, pá... também revisamos a reunião de ontem do BTC em que o Bruno deu sinal verde para faturarmos após o treinamento. Eu falei sobre a dificuldade de ter vários caciques e demandas simultâneas para conseguir entregar alguma coisa. Já está encavalado agora: atualização do ambiente MetaTrader de produção (que após a correção do ambiente continua não funcionando), ignorar os candles que agora o difusor irá informar que não fazem parte do pregão, montar o ambiente demo funcionando com as contas para matar o ambiente de desenv. Por fim, meu devaneio gerou mais uma tabela de nutrição com as calorias agrupadas por alimentos de porções de 100g (meio um padrão) e elaborada por um projeto da Unicamp. Depois de geradas as traduções ficou faltando traduzir também qual a porção padrão do dia-a-dia. Caso essa porção mude de tamanho podemos lançar mais ou menos alimentos, sendo o ajuste um search/replace no Vim. O importante é que no dia-a-dia tudo fique fácil.

= 2015-02-26
:date: 2015-02-26

De volta (agora na Rico) naquele esquema do DayToDay. 07:18 Lembrei que tentei contactar o pessoal MVP/VS e não consigo mandar email! 09:01 Menos de uma hora para implementar o suporte ao novo campo de candles e mais de uma hora para testar. 10:47 Que carroça! Terminei os testes do candle. Acho que valeria a pena um log mínimo para avisar que não estamos imputando nada no Meta. 11:23 Mas isso deu um problema por falta da coluna working_indicator. Agora estou migrando as tabelas de uma base para outra nova (a antiga fica como backup). Tinha um Gateway apartado rodando como Orders, copiei logs e pastas e centralizei todos no mesmo binário na hora de atualizar a versão que ignora candles after-market. 11:51 Aproveitei a faxina e organizei os backups dos bancos, arquivei uma pasta de deploy, etc. Ignore dos candles em produção. No final o problema era o working_indicator da tabela orders, e não do execution_reports. Feito isso o Gateway de ordem voltou a funcionar normalmente. O Jonathan foi ver o negócio de atualizar produção. Parece que (mais uma vez) é coisa de licença. 20:34 Além disso, como o nível de propina a ser pago pelos traficantes depende dos custos relativos entre o pagamento de propina e defesa armada contra as forças do estado, um aumento da pressão social para combater as drogas, ao aumentar os custos de propina, faz com que os custos relativos de combate armado contra as forças do estado caiam, aumentando a violência e o custo de manutenção do aparato estatal. 23:59 Hoje criei o mecanismo de ignorar candles/trades que estão em after market se aproveitando do status do difusor. Descobri que existia uma versão antiga do gateway de ordens rodando apartado e cuja tabela não tinha a coluna working_indicator.

= 2015-02-27
:date: 2015-02-27

Ambiente de produção continua não-atualizada. 12:54 Migrando todos os docs e o navegador para um volume encriptado. Vai ser minha nova forma de conseguir ir nos clientes e ficar alocado. 12:56 Criei um stash para as mudanças do stop porque agora o que está em foco é conseguir funcionar em produção o que já funciona em desenv. Importei o Gateway de desenv para produção e roteei novamente a conta do strauss, mas por algum motivo as ordens não passam por lá ainda. É preciso mais alguma coisa.

= 2015-02-28
:date: 2015-02-28

Dependências infernais para conseguir compilar os projetos por aqui...

= 2015-03-01
:date: 2015-03-01

Agora não é na segunda vez que o logon fica na tela preta, mas é em algum dos múltiplos logons... Há umas mudanças interessantes no SShell com relação a esperar um tempo para rodar o evento de OnLogin. Quando cai na tela preta o SShell já foi embora... 22:17 Sempre que eu dou Alt+Tab na VM tentando dar tela preta, parece que agora está logando. 22:32 Fiquei um bom tempão na tela de logon e agora parece que a tela preta persiste por mais tempo. 22:42 Aconteceu alguma coisa com o explorer. 22:43 Ele executou e saiu rapidinho. 23:59 Bom, é isso. Sono, agora. Hoje vou falar sobre a sexta e... hoje (domingão à noite). Sexta finalmente o Jonathan conseguiu atualizar o MetaTrader para o teste fatal: não era isso. O stop continua sem aparecer, o que quer dizer que amanhã terei que simular novamente uma posição em produção (com a ajuda do risco) e tentar puxar a linhazinha. Enquanto o Jonathan não chega devo dar uma olhada nos candles para ver se agora ficou tudo OK usando o difusor do japa. Hoje à noite deu vontade de mexer no SShell e o sistema de logon. Descobri que andaram mexendo nele, mas depois de muitos logs do Process Monitor ficou bem claro que está tudo ocorrendo de acordo com os conformes, mas o explorer.exe por algum motivo tem saído rapidinho de vez em quando, deixando aquela tela preta feia. Agora talvez analisando mais logs do procmon fique mais claro. Ontem, sábado, meio que desgringolei para conseguir compilar tudo como era antigamente: rodar a batch de build. O Demétrius mexeu muito nos esquemas e, como todo programador autocentrado, não seguiu o nosso padrão estabelecido. Tive que mexer em vários projetos, baixar outras ramificações mas deu tudo certo.

= 2015-03-02
:date: 2015-03-02

Os candles ignorados (testando por VALE5) estão funcionando com exceção de um justamente no horário de 17:07:07. Os logs do difusor (dump) indicam que de fato o status de 223 é 1 (pregão normal). Agora, se é ou não pregão deixei o Fabio decidir. 12:18 Consertado o ambiente de demo e prod. Em prod o espaço em disco estava zerado, então apaguei vários logs. E entre os dois rolava uma rivalidade com a mesma conexão fix. Deixei o demo conectando nele mesmo (não me parece haver um modo de desabilitar isso), mas com o médodo de replay por arquivo fix. Ambos os serviços estão rodando normalmente. Resta saber como fazer para o roteamento funcionar. 13:19 Formula for Human Genius and Creativity (supermemo.com): Rene Descartes said: "Each problem that I solved became a rule which served afterwards to solve other problems" 16:58 Acabei de falar com o Marcelo da Dankia, já dei os finalmente e vou corrigir só mais uns erros no meio do caminho e o projeto termina. 23:59 Candles estão funcionando em produção, mas um às 17:07:07 (estranho, não?) não deveria estar lá. Porém, dump do difusor indica que apenas nesse horário havia sim dados de pregão (campo 223 igual a 1), então nossa interpretação está correta. Deixei por email para o Fabio Hara decidir. O espaço em disco de produção foi um problema hoje na Rico, tive que apagar alguns logs. Hoje também falei com o Marcelo da Dankia para retomar o projeto. A última tarefa é tratar erros no meio do caminho. No final da tarde mais testes pela Scua e o seu segundo logon. Não é mais o segundo logon, mas é reproduzível ainda. Troquei até pelo cmd o shell e continuou dando o erro. Basicamente o explorer/cmd é executado, mas sai logo em seguida. O status do erro é estranho, pode indicar um logoff forçado talvez. Será que o SsLogin está forçando os logoffs?

= 2015-03-03
:date: 2015-03-03

Há uma pequena coincidência com a linha de log "User already logged, forcing logoff", mas não parece que o SsLogin força o logoff de verdade. Pode ser que tenha a ver com regras? 09:09 Hoje começamos com o problema do stop. Na verdade, com o redirecionamento das ordens de produção para desenv na conta do strauss. 10:09 Feito teste do stop, ele funcionou! Com minha conta. Para rotear ordens de produção para dev precisamos mudar a parte de rota no admin do Meta. Aquela parte da conta onde definimos a conta é apenas para... definir a conta. 12:05 Ordem stop funcionando em produção. Além disso, foi migrado o gateway de desenv para o ambiente de produção e criado rota para que ordens da conta de teste passem por ele, e não pelo gateway de ordens que envia para a bolsa. Uma coisa estranha no roteamento é que se você criar mais de uma regra (por exemplo, um para cada conta) elas parecem se juntar em um E. A partir daí as ordens são rejeitadas sem motivo (e sem log no console do Meta). 12:06 Próximo passo é tirar as tralhas de estratégia e KIS. Antes disso, email para o Everson. 13:21 Everson e Fabio vieram à minha mesa e já estão sabendo dos próximos passos: stop funcionando em produção, candles ok, falta a coluna de P/L ser atualizada (novo request para metaquotes) e mudar forma de funcionar do stop 13:40 Resolvido o problema do sequencial resetando. Na verdade a bolsa está resetando durante o logon. Temos que fazer o mesmo. 14:27 Ambiente de produção com espaço em disco variando muito. Não sei se é isso que está influenciando na lentidão para o Meta detectar os gateways de pé. Próximos passos para o Meta: retirar o gerenciamento de ordens. 14:36 Colocando para apagar histórico atual do serviço de histórico do Meta do ambiente de demo e reconstruir. Vamos ver quanto espaço ocupa após reconstruir. 17:17 Desconfio que o erro da tela preta e a saída dos aplicativos aconteça por logoff. Só que o estranho é que esse logoff não nos joga de novo para a tela de login. Mais um merge do RpcSvc.ini para o pessoal do suporte da Scua. Mais uma horinha... 17:18 Bom, podemos começar tentando provar que o código de erro de retorno tem relação com um logoff. 17:27 Bingo! Tanto a calc quanto o notepad saíram com o mesmo código de saída quando dei logoff na sessão (iniciada normalmente). Resta a questão: quem está forçando o logoff, e por que ele não termina na tela de login? 17:36 Vamos tirar o preload e ver o que que rola. Ainda não sei quem é que pode estar gerando o logoff, quanto mais bloqueando. Uma busca por WM_QUERYENDSESSION não retornou muita coisa útil... 23:59 Hoje consegui finalmente rotear ordens do Meta para o meu Gateway querido de desenv. De quebra tive alguns problemas para estabilizar produção, mas a boa notícia é que havia um problema de ResetOnLogon não setado que contribuía bastante para que o stop não funcionasse em prod. Hoje o Fabio e o Everson vieram em minha nova mesa e viram funcionando. O Andre testou depois à tarde, as linhas funcionaram, mas o stop ativado não enviou ordens para a bolsa. Óbvio: tenho que ver isso ainda, já coloquei na fila. Outro problema é o espaço em disco. O Everson quer que o ambiente não permita a criação de usuários reais, nada mais natural. À tarde foi a vez da Scua, e o logoff realmente gera o mesmo código de saída dos aplicativos que estão rodando (testei com notepad e calc). Mas ainda não sei quem ou o quê anda forçando o logoff (supondo que seja isso, pois não volta para a tela de login). Estava avaliando o tal do preload, mas parece que não tem nada a ver. Veremos amanhã pela manhã (depois tem cabine e reunião de planejamento).

= 2015-03-04
:date: 2015-03-04

Luna Benegas Cabernet Sauvignon 2011: um vinho é um Cabernet bem forte, mesmo. Difícil de tomar sozinho (até com queijo). Talvez mais difícil que alguns Malbecs. 2/3 10:14 5001 Nights at the Movies (Holt Paperback) (Pauline Kael): The tyrant plots with an inventor, Rotwang (a mad, medieval type like Dr. Caligari and, with his mechanical arm, father to Dr. Strangelove),

= 2015-03-05
:date: 2015-03-05

Ontem foi reunião de planejamento. Os assuntos mais discutidos foi a posição financeira nos próximos seis meses e a montagem do sprint principal, único e centralizado (com exceção da Century). 10:29 Para simular pelo log fix a execução de uma ordem a mercado precisamos setar o campo 31 (LastPx) com o preço. O campo de preço (44) pode ter zero, mesmo, pois esse foi o preço enviado na ordem. O importante é o campo 31. Porém, na simulação isso pode querer dizer que não teremos uma macro para ser substituída. Onde obter o último preço do papel? 10:30 A não ser que a gente guarde como o último preço da ordem limitada. Para simulação quebra o galho. 10:38 Exemplo de logs fix que consegue fazer essa proeza agora: media\2015-03-05-log-fix-simulacao.txt 10:53 Agora o stop não é ativado. Pelo menos ele não chama a gente depois que ele foi trigado. 11:35 Criando vários tickets com a MetaQuotes para resolver o problema do storage (questionando o tamanho), o stop não-trigado (mostrando com logs e screenshots) e o P/L não atualizado (ele pediu uma conta para acessar, vou passar a minha). 19:08 O SShell ultimamente está fazendo coisas demais. E se ele parar de fazer tantas coisas? 19:09 Enquanto isso, na Sky, o RPC usado é de 2009. E dá erro que não conseguiu achar nomes das funções no RsSyncFileServer.dll. Pedi para o Carlos trocar... 19:34 Alguém tem que ter chamado ExitWindows para fazer logoff, certo? A questão é... quem? 19:57 Depurando remotamente o SsLogin via dbsrv rodando como serviço e cliente no WinDbg. Para quê? Colocar um breakpoint em ExitWindowsEx. 20:17 OK, chega por hoje. A tela preta apareceu (SShell foi embora) e nenhum ExitWindows do SsLogin. No entanto, só agora ele começou a logar um login. Weird...

= 2015-03-06
:date: 2015-03-06

Ontem fiquei no aguardo dessas coisas da rico e fui na reunião da Título. Bom, o resto você deve saber. Foi uma ótima reunião! Os caras querem nos ajudar a se manter e ter alguém com quem contar em futuros projetos (pelo menos essa pareceu a ideia). 10:12 A conta 1001 (do strauss) estava dando erro em desenv (invalid account). Criei uma conta para mim e funcionou. 19:17 Ia comecar a mexer com a scua quando pipocou a organização do evento, contabilidade da empresa e o Demétrius falando que agora tem erro na compilação pelo ccnet (oxi, nem sabia que ele usava, tem include no d:...) 23:59 Anteontem foi a reunião de planejamento que ocupou todo o tempo. Discussões sobre financeiro e sprint. Ontem foi o velho esqueminha rico/scua com uma reunião na título no meio. Uma reunião muito satisfatória pós-entrega de projeto.

= 2015-03-07
:date: 2015-03-07

Então, por exemplo, o sintoma "função da libc não encontrada" vira "já vi isso uma vez quando ela estava sendo ignorada por causad das suas dependências terem sido compiladas de forma diferente". Correção: compilar todos da mesma maneira. Um problema bobo na linkagem do SsInstall e SConfig (não encontrando funções da libc porque elas estavam sendo ignoradas porque provavelmente estavam dando conflito com outras libs feitas com lib em dll) me fez pensar que um bom método de resolver problemas é retroalimentar casos de uso. 12:40 Agora novamente o erro de out of memory do Framework. Parece ser erro no Bazaar mesmo. A solução no momento para funcionar o build pelo ccnet vai ser criar um novo repo. So sorry... Dessa forma o Supermemo poderia ser otimizado para sempre conter esses casos em que o cérebro não precise pensar, apenas consultar conhecimento prévio. 12:55 Fui criar um repositório do zero e aí me lembrei que posso tentar reaplicar o patch a partir do commit que ferrou tudo (um merge meu, o 178). 13:03 Aparentemente tem um arquivo chamado test.txt que tem um tamanho gigantesco, e é isso que impede que o clone funcione. 14:38 Ainda está dando o out of memory baixando do servidor, mesmo depois de apagado o arquivo (pq ele está no histórico). 20:46 Agora não dá mais tempo de analisar, hora de ir encontrar a japa. Agora tudo compilando novamente e dá erro de ficar travado no Security. Pelo que eu vi isso é comum e está relacionado com o signtool. Pelo menos tinha um monte deles rodando. Quem chamou tantas vezes o signtool chamou continuamente, pois quando abortei o build todos eles sumiram ao mesmo tempo sem eu ter que matar. Resolvi o problema do Framework remontando os commits depois do arquivo gigante em um bolo só.

= 2015-03-08
:date: 2015-03-08

Deixei o signtool de fora por enquanto, pois a compilação funcionou. Mandei email para o povo. 20:18 A primeira coisa são o endereço das capas grandes, para usar no lugar dos títulos. Vai ficar bem legal... Consegui fazer algo no cine tênis verde: script que lê coisas do IMDB e joga nos reviews! Enviado email para o Fernando e Demétrius para baixar o Framework. 21:01 Baixei todas as capas dos reviews, deu 500MB, mas diminuindo o tamanho da maioria deu uns 15MB. Mesmo assim, é muita coisa. Acho que vou precisar partir para o Ajax ou algo que carregue as capas aos poucos (conforme scroll), mas mantenha o filtro funcionando. O ideal também seria um filtro interativo. 21:02 E zoou tudo esse esquema do script. Vou voltar atrás e criar um branch para as modificações que estou aprontando. 21:06 Vários erros que aconteceram estão relacionados com a forma com que o Python reescreveu minhas tags.

= 2015-03-09
:date: 2015-03-09

Hoje é dia de ver se o pessoal do metaquotes corrigiu o negócio do stop que não é trigado. 08:51 Agora o meu ticket foi fechado como duplicado. De fato eu criei o mesmo ticket duas vezes sem querer, mas já havia fechado um deles. Vou considerar que o ticket duplicado que ele se refere diz respeito ao outro ticket que o usuário do Jonathan criou (a pedido do Siqueira). Dessa forma, eu não deveria criar de novo esse ticket, mas como o meu tem informações relevantes e eu não tenho certeza da resposta do primeiro, vou criar novamente (depois de testar e ver que de fato continua sem funcionar). 09:00 Servidor de produção está fora e o start do access não funciona. No modo console ele imprime o que deve ser um erro: "Startup no network configuration". 11:40 Enquanto o servidor está down é uma boa ideia verificar se o simulador suportaria mais ordens do que uma sõ... 11:52 O OrderTarget que lê dos log fix pode usar um OrderCollection para armazenar todas as ordens em memória e conseguir encontrar a ordem por algum id. Ainda resta a questão do last price por papel (e não por ordem, pois uma ordem nova não consegue achar a antiga, os ids são diferentes). 13:24 5001 Nights at the Movies (Holt Paperback) (Pauline Kael): This epic is a compendium of kitsch, but it¿s kitsch aestheticized by someone who loves it and sees it as the poetry of the masses. 17:32 Feitos os pagamentos (erroneamente pagando todos os atrasados, isso vai custar provavelmente um mês na projeção) e tentando testar o VB6 com o novo OrdersCom mas a clear não ajuda. Mandei email porque não está conectando. 17:36 A porta n Responderam dizendo que a porta n 17:37 A porta não está mais ativa. Tenho que usar a 443 ou 80. 18:12 Fiz um aplicativo que loga toda a mensagem que recebe (apenas na thread, nem criei janela). Assim poderemos ver se mensagem de logoff está ou não sendo propagada. 19:43 A análise pelo procmon revelou que o svchost estava tentando rodar o sshell, e recebeu o acesso negado. Depois de vários testes surgiu uma mensagem de acesso negado tentando rodar o sshell.exe. Enviei email para o Zé pedindo como podemos trocar as regras para teste. Parece que o WinLogon tem acesso, mas o svchost não. 20:20 A good day, muitas coisas feitas. Mas fica a dúvida aí da thread... 23:15 Tentando encontrar uma lógica mais matemática de como gerar sinal de tendência. 23:16 Eu sempre observo se o papel está em uma crescente de longa data. A longa data pode ser inicialmente um ano e o crescente pode ser uma esmagadora maioria de pontos com o MME de sinal acima do MME de tendência. 23:32 Algumas medidas dessa forma indicaram até alguns papéis com menos de 50% com tendência de alta (ex: itaú). Se soubesse disso antes, talvez não tivesse entrado. 23:59 E hoje terminou o dia com eu fazendo os pagamentos da turma, tudo atrasado foi quitado (inadvertidamente). Mexi no projeto OrdersCom para testar o novo método de buscar por clordid na clear, mas ela não conectava. Responderam que era outra porta. Mas nem as duas que passaram (443 e 80) conectaram. Então passei a testar minha ideia do logoff fazendo uma aplicação para capturar essa mensagem durante o segundo logon e qual não foi minha surpresa quando teve um momento que a execução do SShell deu acesso negado! Talvez isso seja uma pista do que está acontecendo... Foi criado um script que baixa todas as informações dos filmes dos reviews pelo imdb e joga no yaml do jekyll, mas ainda apenas a capa. Baixei todas as capas porque o imdb parece não permitir carregar todas essas imagens de uma vez. Ficou com 500 MB. Convertendo para tamanhos menores ficou com 15 MB, mas ainda é muito para carregar da home. Uma solução estilo ajax vai ser necessária. Como o negócio ficou grande demais para um fds criei um branch à parte (local). A próxima correção é gravar as tags da forma com que elas foram concebidas, e não como o Python está fazendo sem aspas nas strings. No final do dia 6 pipocou o email do Demetrius reclamando da compilação pelo ccnet (que eu nem sabia que ainda estava sendo usado). Pois bem, isso deu mais algumas horinhas no fds, mas agora todos os repos estão compilando belezinha. Entre os erros o Framework não baixava mais (dava out of memory) porque eu há algum tempo atrás inclui um arquivo gigante de teste. Depois de várias tentativas, para economizar um pouquinho de tempo coloquei todos os commits depois do meu em um comitão. Avisei o Fernando e o Demetrius para apagar o repo. Para finalizar, é bom lembrar que aquele erro do build do security ficar travado no signtool ocorre de vez em quando ainda. Solução? Manda compilar de novo!

= 2015-03-10
:date: 2015-03-10

Novo dia. Revalidar as linhas de bid/ask que não estavam funcionando ontem quando o cliente me perguntou. Imagino que seja por causa da troca do fuso horário. 09:18 BMF aparentemente OK. 10:55 Dando uma geral agora nos tickets que podemos fazer ainda essa semana (a última). 11:24 E dividir o reload dos candles por dia, como o dump do difusor. Vamos corrigir alguns envios de reject e expiração. 11:26 O stop ainda teria que mexer, mas o trigger não está funcionando e o Siqueira já está refatorando toda essa parte. 14:06 You don¿t just find true love. You team up with somebody, and build it from the ground up. - I Hated, Hated, Hated This Movie (Backlist eBook Program) (Roger Ebert) 15:13 O Zé acabou de confirmar que esse negócio do SShell era uma rota reservada esquecida, sem direitos. Bug resolvido! 23:59 De resto fiz umas mexidas no saite do encontro C++ e consegui mandar email para a lista de MVPs. De tarde o Zé aprovou minha solução: são regras que estão impedindo o segundo logon do SShell.exe. Por algum motivo isso impactava o Windows 32 bits. Acredito que porque o WinLogon é o criador do processo, mas no Windows 7 32 era o svchost.exe e para ele não existe acesso vinculado. Hoje eu fiz aquela manutenção básica no projeto da Rico, dei um tapa nos tickets e vi quais dá para fazer essa semana. Se bem que agora tudo eu estou criando ticket para a MetaQuotes. Também entreguei o projeto do VBTerminal para o Carlos brincar com algumas modificações para mostrar que dá agora para usar o clorderid. Também dei uma olhada no dump do RpcSvc, sem sucesso. Queros os logs. O carinha do suporte confundiu memory leak com dead lock. Socorro!

= 2015-03-11
:date: 2015-03-11

Any screenwriter who uses a courtroom scene in a nonlegal movie is not only desperate for a third act, but didn¿t have a second act that led anywhere. - I Hated, Hated, Hated This Movie (Backlist eBook Program) (Roger Ebert): 08:08 Só existem mais duas tarefas em meu backlog que serão feitas (o resto está aguardando posição da MetaQuotes): tratar o status expired e dividir o log do reload dos candles por dia. 08:58 Último comando daqui: git bundle create changes.bundle d480ccd86e989937916bfed112f9975ae06438a3..HEAD 09:02 Candles agora serão reloadados e logados em arquivos por dia. Ontem não estava muito falante. Esse log precisa ser populado. 09:10 Isso é muito estranho, porque a senha vai estar guardada em algum lugar de qualquer forma. Zé acabou de me ligar sobre um projeto que pode virar: usar onde o BitLocker guarda informações de criptografia para armazenarmos a senha de criptografia. 11:42 Fazendo merge das mudanças do branch de stop. Comecei a fazer o do perfmon, mas deu uns conflitos e resolvi deixar de lado. É algo incompleto ainda. 15:34 Bom, vamos para a pesquisa sobre TPM! Enviado email para os MVPs, Eric já respondeu questionando o conteúdo, horário e se em inglês ou português. 19:29 Bom, hoje comecei a pesquisar sobre o TPM, mas as coisas ficaram meio monótonas ao saber que não tenho nenhuma máquina com isso (nem o Zé) 23:59 Hoje o dia foi mais de administração, almoço legal com conversa de programadores (Kabloc), pesquisa básica e ajustes no meu blogue. Hora de "dormir".

= 2015-03-12
:date: 2015-03-12

Hoje tem cabine, então vai ser um pouquinho de trabalho agora, call durante o trajeto, filme e Rico. 13:59 De volta da cabine e do almoço. Último dia aqui na Rico, no final da tarde tem reunião e záz.

= 2015-03-14
:date: 2015-03-14

O que pode ser útil para a busca no cine: título original, ano de produção, elenco, direção, roteiro, capa, música, edição, gênero? 09:35 Ou seja, 'abc' é uma cadeia de três bytes, cada um contendo códigos ASCII (ou UTF-8) para as letras a, b e c. Primeira Lição a aprender: str é uma cadeira de bytes, não uma string! Solving Unicode Problems in Python 2.7 09:36 Segunda lição: unicode, sim, é para strings. 09:37 Mais uma coisa para lembrar, nunca é demais: UTF-8, 16, 32 são formatos de serialização, não unicode. 16:41 Vou desistir de "revisar" meus reviews. Eles já estão prontos para o mundo. Até as simples anotações. Elas mostram a evolução de um crítico. Terá revisão quando eu assitir de novo, oras!

= 2015-03-15
:date: 2015-03-15

1/4 dos papéis que eu investi ficaram abaixo de 3/4 de candles positivos (seguindo a tendência). Deveria abandoná-los? 23:59 Brincadeira. Agora não vou mais para Rico e estou reestruturando minha nova rotina (jeito bonito de dizer que estou descansando). A partir de amanhã (segunda) é Home-Office full time. Essa semana teremos nossa reunião de planejamento. Meu saite de cinema está super-supimpa, com as capas do imdb, busca por regex, tudo! Já é uma versão final para mim. Nossa, não escrevo nada desde o dia 11 (quinta?). Também, não faço mais nada. Estou de recesso.

= 2015-03-16
:date: 2015-03-16

Criandos os issues da Scua já deu para sentir que precisamos de uma POC que vai se tornar o núcleo do desenvolvimento. A POC faz tudo mal e porcamente e aos poucos migramos para a solução ideal. 09:40 Protocolo NET 003152328039835 09:46 Sem internet. Logo pela manhã. Previsão para 19:30 0_0 10:17 Podemos pensar em jogar direto do registro remotamente. 11:45 Artigo: tudo que fazemos em C++ que não é trivial acaba caindo no POC inicial. Você precisa provar que algo é possível de ser feito. 11:51 Problema em depurar binário com VS2013. Pensando seriamente em fazer upgrade. Afinal de contas, não precisamos do Security para funcionar... 14:06 Agora o próximo problema são aplicações 32 bits e onde será que elas escrevem no registro. 16:10 Pronto. Chamando o reg.exe na mão, mesmo. Enquanto não definir registro, essas coisas, fica assim mesmo 18:19 Será que seria legal mesmo o client ser o client? Vamos ficar montados no server? milhares de servidores? 18:22 Ou seria muito mais conveniente deixar o client ser o server e ele apenas avisar que ele existe no seu start. 21:23 Protocolo NET 003152329701920 22:32 Vamos suspender por um momento o stop e passar para a fase de POC: como fazer rapidamente uma análise de backtesting? 23:25 Coisas aprendidas: focar apenas no que precisa. Pegar e gerar os emas de 6 e 12 e para gerar os sinais só gerar uma lista de 1s e 0s somar. 23:59 Avançamos muito no POC dessa vez. Consegui fazer todo o fluxo baseado no preload e um .ini. Quando a versão dele muda ele retorna o novo arquivo. Porém, pensando melhor agora, não faz muito sentido esse movimento de todos os clientes estarem espetados no server. O próprio server poderia simplesmente cadastrar os clientes que avisam de sua existência. Pode existir esse start, que já avisa a versão e passa informações da máquina (IP, logins). Esquema do fluxo de mensagens do login: Hoje foi o primeiro dia longe da rica e primeiro dia sem internet quase todo o dia. A tempestade pode ter alguma relação, mas o mais provável mesmo é a incompetência da galera da NET. Eles virão só na quarta pela manhã, quando estarei ausente. Amanhã devo ligar de manhã, tarde e noite. Sabe como é: conseguir uns números de protocolo para reclamar mais tarde.

= 2015-03-17
:date: 2015-03-17

Estava pronto para testar, quando deu problema. Já está em protobuf essas mensagens. Mas o que fiz foi trocar a leitura do Rules.ini para adicionar algumas linhas lidas dos logins obtidos via cliente. No Console Web. 23:59 - Detectar novas regras no servidor - Ler do banco de dados do servidor Conversei com o Fernando e descobri que não há código ainda no driver para ler do registro caso não existam regras, foi apenas uma sugestão que ele deu para o Zé que evitaria o problema da máquina bootar sem regras. Poderíamos ler do registro pelo driver? Já foi feito um plugin RpcSvc que responde com o conteúdo do Rules.ini (PreLoad) se a versão enviada for diferente da atual. Na outra ponto o cliente baixa o Rules.ini, escreve no disco e chama o PreLoad. Na prática isso já coloca as regras. Deixar o cliente e o servidor rodando ele atualizaria as regras instantaneamente. Não faz sentido nesse projeto deixar os clientes conectados no servidor. Já aprendemos com o CTreeSrv que esse modelo para o Bradesco gera muito overhead desnecessário durante a manhã e uma conexão à toa. Mais inteligente é o cliente ser também um servidor RpcSvc e avisar no seu início (boot) o servidor que ele existe (IP, versão de regras, etc). O servidor fica responsável por guardar isso no banco e ele faz o pooling no banco esperando por atualizações. O formato de envio de informações pode ser otimizado no servidor por grupos de regras, já que cada máquina tem sua lista de IDs (usuários) que receberá. Provavelmente a serialização será Protocol Buffers, então o formato das mensagens pode priorizar esse merge de regras de grupos por usuário. Na hora de escrever vai ser só iterar pelos grupos e jogar no registro/ini/banco/memória/whatever. O que foi aprendido: Próximos passos:

= 2015-03-18
:date: 2015-03-18

I Hated, Hated, Hated This Movie (Backlist eBook Program) (Roger Ebert): The basic miscalculation in Adam Sandler¿s career plan is to ever play the lead. He is not a lead. He is the best friend, or the creep, or the loser boyfriend. He doesn¿t have the voice to play a lead: Even at his most sincere, he sounds like he¿s doing standup¿like he¿s mocking a character in a movie he saw last night.

= 2015-03-19
:date: 2015-03-19

Ontem foi reunião de planejamento e hoje foram criados vários tickets. Fiquei meio perdido no foco um pouco, devaneando no Facebook quando mudava o foco e tentando terminar alguma coisa. Deu relativamente certo, apesar do cansaço: gerei timesheet para a Rico, organizei a lista de pagamentos do evento c++ (que teve super-lotação, quase não cabe todo mundo), revisei os binários que o Dema esqueceu de colocar no controle de fonte, escrevi duas críticas que estava devendo (preciso me soltar novamente, estava divertido tentar imitar um pouco o estilo de Pauline Kael com minhas próprias opiniões), fiz um teste de estresse para o RpcSvc da Sky, até o Zé dizer que atualizou com o RsSyncFileServer.dll e funcionou. Hoje à noite ainda tem reunião com a Marina da Microsoft para fechar os detalhes da organização.

= 2015-03-20
:date: 2015-03-20

Hoje foi um dia de preguiça. Ligando para a NET agora. 15:58 Protocolo NET 003152336336710 16:20 Protocolo NET 0031502336368317 16:34 Protocolo NET 003152336391467 16:58 Consegui. Tem que alterar a titularidade para daí fazer a portabilidade. Ahhhhhhnnn... 19:52 O Loader carrega de onde estiver o dicionário e joga em uma pasta no seu formato específico: Houaiss, Aulete, etc. Vamos brincar de Houaiss2Babylon versão final. Primeiro passo: dividir em Loader, Decoder, Encoder e Builder. 19:53 O Decoder decodifica esse formato específico e joga no nosso formato padrão: no momento um json cheio de verbetes. 19:54 O Encoder codifica esse formato padrão para o formato esperado na outra ponta: Babylon, etc. 19:55 Por fim, o Builder é responsável por construir desse formato específico (no caso do Houaiss, é vital ele instalar o dicionário nesse momento e apagar seus traços, por causa da licença). 19:56 No final deve haver uma interface que junta tudo isso, chamando um por um.

= 2015-03-21
:date: 2015-03-21

Fazendo agora o Encoder vi que esse negócio de JSon parece meio tosco. O problema é que para ler, mesmo que "incrementalmente", ele precisa ler tudo do arquivo. O que eu quero é algum formato de leitura incremental, e as LIBs JSon que achei não estão ajudando. Até a escrita já fiz na mão. 18:27 Completados os pedaços do Everytionary, mas ainda precisa juntar e integrar da forma bonitinha que o HouaissParaBabylon já faz. 22:56 Descobri agora que o QT é pago, e a versão community não deixa fazer quase nada. Hora de fazer o HouaissParaBabylon virar um Everytionary com QT. 23:49 Definir quais as entradas disponíveis para o Engine. Quer dizer, não é necessário fazer a conversão toda de uma vez. Vamos supor que alguém tem uma pasta com um dicionário que ele sabe qual é, já convertido.

= 2015-03-23
:date: 2015-03-23

A primeira pergunta do Quota: "Eu tenho 25 anos e sou preguiçoso. Como mudar isso?" 10:19 A resposta mais votada está de acordo com o que ando tentando fazer através do TodoList e daqui. Além, é claro, de fazer exercícios. 17:15 Protocolo NET 003152340091418 17:22 Protocolo NET 003152340106570 20:09 OK, hoje foi um dia meio instável. Fui levar o filtro, mas vi que não adiantava, fui tentar fazer compras no Wall Mart, mas com o filtro me cansei. O Strauss disse que está se divorciando de novo, o Zé me questionou os testes com binários e é isso aí. Só escrevi minhas críticas, copiei os fontes e o resto é amanhã. 23:59 Mais um dia ligando para a NET e nada. Agora tenho que apelar para o ReclameAqui, pois nem o saite da Anatel funciona direito. Tirando isso, quase não fiz nada. Atualizei o sprint do dia, fui vendo as coisas que faltam... lá lá lá.

= 2015-03-24
:date: 2015-03-24

Compilando (ou tentando) os binários da Scua. Percebi que a versão release do ActiveMQ do backup do Dema já aponta para a pasta 3.8.2 do ActiveMQ, e é por isso que estou passando a usar essa versão. 10:37 Acho que vou lançar minhas degustações direto aqui no DayToDay para depois conseguir achar rapidamente. Que acham? 10:39 Pronto. Meio bagunçado, porque as datas agora estão nos lugares errados. =P 10:45 Escrevi de qualquer jeito... Mas vou manter na planilha. Acho que esse tipo de organização é salutar para bichisses. 10:46 Para falar melhor, seria mais rápido mesmo só digitar uma linha e pronto. 10:58 Mudando pasta para ficar mais acessível. 11:34 Depois de todo esse trabalho dá erro de lib compilada com visual studio mais velho. Ou seja, o Dema deve ter usado o 2003 para compilar as libs (mas como será que ainda funciona com o 2008?). Esquecerei tudo isso e partirei para a força bruta: no momento tudo 2003. 11:48 Informação sem feedback não é nada. Só demorou o tempo de ir no banheiro refletir para decidir manter o arquivo de degustação principal no celular (que é onde eu pretendo usar mais essas informações).

= 2015-03-25
:date: 2015-03-25

003349340240 15:45 Post no Disqus respondendo Celso Cabral Lana Leite: Desculpe, mas minha visão não é tão esquemática. Ela assume que todos que geram valor para a sociedade contribuem para a mesma, seja um serviço manual ou intelectual, tanto faz. Uma empresa é criação de valor de ponta a ponta, começando pela pessoa que decidiu arriscar seu capital nessa empreitada e terminando nos estagiários. Todos que estiverem dispostos a realizar trocas voluntárias são bem-vindos, e todos que estão aí para "tirar proveito" da sociedade não. Só há uma forma moralmente válida de se beneficiar da sociedade em que vivemos: realizar uma troca voluntária que beneficie ambas as partes. Não é preciso dizer que o governo não se encaixa nessa moral. Mas isso foi apenas para deixar claro minha visão. Vejo que você tem outras ideias a respeito, e gostaria de entender, por exemplo, de que forma esse "tipo de empresário" é predador. 16:01 MsgCopy já estava no controle de fonte.

= 2015-03-26
:date: 2015-03-26

Ontem consegui compilar e meio comparar quase todos os binários que estavam sequestrados pelo Demétrius. Já está no controle de fonte. Só preciso descobrir como compilar o maledeto ImageMagik. 07:57 Achei o maledeto, fica escondido na pasta VisualMagik. Tem até um tutorial sobre o processo. 08:03 Em suma, minhas estrelas não conseguem bater o que eu senti pelo filme. Ontem lendo o review do Ebert sobre O Beijo da Borboleta me dei conta, mais uma vez, que meus instintos ainda não estão tão calibrados assim com meu senso estético e técnico na hora de escrever críticas. 10:39 Descobri que o projeto do dema usa C++ moderno, ou seja, preciso do VS2013. 10:41 Mas para compilar o ImageMagik dá erro. 10:48 error C2065: 'HMONITOR' : undeclared identifier 10:49 Isso é aquele problema do projeto COM_ImageMagickObject que não está usando MFC, mas se usar vai dar problema. Na verdade, se usar vai dar pau de que é preciso ser em UNICODE. 10:52 Solução: WINVER=0x0500. 11:22 Descobri. Tem que instalar um kit à parte para funcionar MFC com multibyte. é o Visual C++ MFC MBCS library for Visual Studio 2013. 11:50 Compilando tudo! Eeeeeee.... e descobri que não é dynamic, mas tudo estático (os binários são gigantes).

= 2015-03-27
:date: 2015-03-27

O Strauss veio hoje e meio que a gente não fez nada. Para não dizer que não fiz nada, estou fazendo aquele esquema da libs auto-atualizáveis. Pelo menos agora o meu web2py está no ar. 23:59 Mais um dia de quase não fazer nada, mas de manhã consegui gerar todos os binários dos fontes do Demétrius. De tarde fui comprar o telefone da net e pilhas para meu teclado. Fiquei só com as pilhas. Me encontrei com o Strauss, fomos beber, e esqueci de comprar o telefone.

= 2015-03-30
:date: 2015-03-30

Esse fds foi o evento C++ e um churrasco no domingo. Então, nada de nada. 12:23 OK, conectado no postgres (db_conn_string = "postgres://postgres:marylou2000@intelitrader.com.br/intelidata") e listando tabelas. 18:15 Consegui gerar uma listagem de portfólio. Para isso tive que criar a coluna ID no view do portfólio, ajustar a chamada já criada (provavelmente pelo Strauss) para adicionar no Ajax essa chamada e alguns css do btc. 23:59 Consegui gerar uma listagem de portfólio. Para isso tive que criar a coluna ID no view do portfólio, ajustar a chamada já criada (provavelmente pelo Strauss) para adicionar no Ajax essa chamada e alguns css do btc.

= 2015-03-31
:date: 2015-03-31

Estou em poços e só agora cheguei no micro. Será que dá para fazer alguma coisa?

= 2015-04-01
:date: 2015-04-01

Dica: rodando pelo shell o web2py com -S <nome-do-app> dá para ficar rodando comandos e testando se está certo na hora. Ideia: juntar meu daytoday com o todolist e exibir em um gráfico minha produtividade, como grafix faz com as ações. 09:05 Cara, acho que a única coisa que falta para eu melhorar minha gestão dos projetos é aprender a ler código. Apenas... leia... o código! Esse negócio do revno, por exemplo, aprendi apenas olhando para o código. 09:06 Tudo é fácil, desde que sejamos alfabetizados (by Incrível) 23:59 Ainda restou fazer as duas críticas dos dias anteriores, e programar o restinho do intelidata para me sentir melhor por essa semana. Amanhã ainda vou ter que ir pegar a Hiyori, pois sexta é feriado e domingo é Páscoa. Mais um dia de pouco código. Só tive o pequeno período da manhã antes de ir para a banheira e ir almoçar, viagem, etc. Cheguei tarde e decidi fechar as tarefas administrativas, como colocar as palestras e as fotos restantes.

= 2015-04-03
:date: 2015-04-03

Tendo umas ideias sobre daytoday, todolist e todo mundo junto... 15:34 Basicamente a ideia é deixar o daytoday como o log centralizador de todos os eventos da vida (incluindo vida na internet). O próprio todolist irá gerar eventos nesse log. Porém, o consolidador de dados, o indexador mesmo, seria um banco de dados. Porque isso permitiria realizar queries sobre tudo de uma só vez. 16:05 Por enquanto vamos usar o formato de . para dividir data e hora, mas futuramente uma mudança importante é deixar isso mais padrão (traço - e dois pontos:). 16:26 Pensei que ia ter que começar tudo de novo, mas a base mysql já existia. 16:27 Só lembrando, o sistema que eles estão usando se chama Oracle Forms

= 2015-04-04
:date: 2015-04-04

QDayToDay nascendo, e estou te aposentando, querido WTK antigaço... 09:58 Ia até compilar estático, mas deixa pra depois. Tem que compilar os fontes, e seguir o resto dos passos deste tutorial. 10:34 Parado para ver problema de conexão wireless da Soninga. 11:59 Testando nova fonte monoespaçada. Mmmmm... até que é bem legal. 12:00 Acho que com esse tamanho fica bem interessante... 12:01 éééé... 12:03 Hyiori pedindo sugestão do que ela não fez hoje. 12:07 Agora testando digitar sem poder mais. Parece muito legal essa técnica. Vamos ver se fecha quando eu quero. 12:08 Por que daí o uso mais padrão é digitar apenas uma linha. Talvez seja melhor fechar quando eu não uso o Ctrl. 12:09 A não ser que eu faça como agora, quando eu quero testar mais de uma linha. Acho que o multiline não vai ser de muito serviço. Ainda mais depois de eu conseguir ir e voltar pelas anotações. 12:16 37 Agora mudando oficialmente meu timestamp para incluir segundos. 12:18 Muito legal essa versão do daytoday. 12:28 Trocando o meu DayToDay para o QDayToDay. 12:29 Que dia feliz! Agora fica muito mais fácil evoluir a versão. 12:31 Tcharam!! Só tinha faltado trocar o nome do arquivo de log (em breve configurável?). 15:22 Vendo qual o trampo que vai dar para usar o blog.caloni.com.br como o caloni.com.br (já não uso mais nada do QualityHost, não faz sentido ficar pagando). 15:28 Ops, enviando um email para minha senha esquecida lembrei que o serviço de email eu ainda não tenho nenhum =/ 15:49 OK, vamos continuar usando o QualityHost. Ele é BEM mais barato, tem quase 5GB de storage e já cuida dos emails para mim. 23:44 Hoje consegui finalmente consolidar os dados de todos os balanços anuais. Pelo menos já dá para gerar alguns gráficos interessantes, como o fato de que eu quase sempre gasto menos que ganho e como com isso economizei quase toda a grana atual em 7 anos.

= 2015-04-06
:date: 2015-04-06

Não penso que Ayn Rand quis dizer "seguir o próprio ego", mas perseguir sua própria felicidade, o que me parece algo absoluto para toda existência humana. Como consequência torna o auto-sacrifício imoral. É verdade que o homem ainda não atingiu tamanha racionalidade, e Rand culpa os filósofos altruístas que criaram um mundo onde se sacrificar por algo se tornou padrão. Por isso que temos governos, religiões ou qualquer outra disposição coletiva que inibe o indivíduo de perseguir sua felicidade. A esperança do Objetivismo, se é que podemos colocar assim, é que todos os homens usem a racionalidade de que são dotados para atingir a felicidade própria. - Ayn Rand - Filosofia Objetivista - Altruismo vs Egoismo. 12:42 O que não sai da cabeça agora é se toda essa informação será útil um dia... ou estou apenas carregando futuros megas de texto dificilmente processados pelo meu Luminha (e razoavelmente inexados pelo Kindingo). 14:30 Cloroplastos é um outro tipo de célula (mesma estrutura da célula que queima energia) que transforma luz, água e sais minerais em comida. 14:31 O DNA do cloroplasto é semelhante às cianobactérias, bactérias livres presentes na água que realizam o mesmo processo. Esse processo se chama fotossíntese. 16:43 Como criar uma view no postgres sql com um id auto-incremental, se as tabelas de onde você vai pegar esses dados não têm id? (ou você está acumulando linhas) A resposta fácil seria usar o rownum, mas ele é novo demais e está apenas na versão mais nova do postgres. 16:44 Portanto, a saída é fazer um pequeno hack com uma sequence. Nesse exemplo a sequence é temporária, mas pode-se criar uma para essa view e voilà! 16:45 Drawback: os ids irão incrementar forever. Nova noção do DayToDay: apenas inserir algo aprendido, lido ou reaprendido através de minhas próprias explicações. Isso irá tornar o log pequeno para os meus escritos, mas talvez grande nas leituras. 16:46 Porém, essas leituras deverão ser revisitadas para virar algo cada vez mais simples e fácil de lembrar. Se for algo muito importante que precise ficar na cabeça, se transformará em... adivinha? SuperMemo =) 20:17 Começo a ver que, se eu quero conteúdo útil para conseguir referenciar mais pra frente, o ideal é manter meus recortes no kindle (os quotes, mas talvez nem todos eles) e talvez um compilado de ideias. Todo o log me parece exagerado. E apagar os logs antigos não me parece uma boa. De certa forma, é a história, mesmo que ela não seja usada. 20:29 Mas pode ser que recortes que eu não ache mais relevantes podem ser apagados (não pela estética, mas para a busca no próprio kindle). 20:30 Para o daytoday, vamos continuar usando como usávamos há mais de 10 anos atrás. Ainda há de ter algo de útil nessa estrutura.

= 2015-04-07
:date: 2015-04-07

Testando como eu usaria o supermemo no telefone, por exemplo. No início, apenas copy/paste, mas com o tempo a ideia seria conseguir ajudar minha mente a, por exemplo, lembrar dos preços no mercado. 10:35 Organização feita. DayToDay continua sendo meu log (escrevo aqui sobre tudo, é mais prático e rápido). Se não estiver no computador, email. Do email para o daytoday. 10:36 Meus recortes, vou manter todos eles no kindle, mas posso ir apagando os que não quero mais. 10:37 supermemo.txt é um lugar ainda inabitado, mas que pretende conter uma organização superior a esses dois e auxiliar na memória. 11:09 daytoday.log para daytoday.txt para só copiar o arquivo para o telefone e o kindle e tá tudo certo. 11:29 Protocolo NET 003152361118090 para pedido de desconto do dia 16/03 sem serviço. No calendar está falando do protocolo 003152306730744 (13:52 18:00 com Bruno) também. Não sei direito o que é. 12:06 Protocolo de atendimento Vivo Internet Fibra: 20152477087656. 12:14 Mais um número de protocolo da Vivo Fibra (do setor de qualidade): 891788078. 20:56 Hoje tivemos mais uma reunião inacreditável. O pessoal da Mirae quer trocar todo o EMS e o Home Broker. Eles querem rápido, por um preço razoável. 22:16 Procolo de atendimento da devolução do Wall Mart: 1214898. 23:04 Pedido do telefone 3264500121738563 na Magazina Luiza.

= 2015-04-08
:date: 2015-04-08

Às vezes um filme como o de hoje (Club Sandwich) te dá uma super-dose de realidade. 14:03 Erro no BitBucket de repositório não encontrado (not found) não é falta de direito, mas provavelmente porque o repositório não é git (mercurial, talvez). 19:03 Dois problemas difíceis para essa noite: uma emergência na Scua e fazer a proposta para a Mirae. 19:04 Já quebrando a cabeça para compilar o ScuaUninstallCustom, o copy/paste do sistema do HDEncription. O jeito é inverter a ordem um pouco. Vamos terminar um esboço para a Mirae.

= 2015-04-09
:date: 2015-04-09

Testes hoje de manhã com o Zé revelaram que o ScuaUninstallCustom na verdade tem uma lógica "invertida" em que usuários locais ele pede o desafio/senha, mas usuários do domínio não. 12:50 Antes do Call, se eu já adiantar a leitura das regras do servidor do scua já vou ter um bom início para o fim do sprint da quinzena passada. Considerando os incêndios, as reuniões, e tudo mais, até que está tudo certo. Hoje ainda mantenho o boost de realidade de ontem, meio que na inércia. Exercícios e mudança de rotinas pontuais ajudam de vez em quando. 23:18 Pronto! Temos um sincronismo inicial com protobuf! =)

= 2015-04-10
:date: 2015-04-10

Começa o CodeJam!

= 2015-04-11
:date: 2015-04-11

O sangue é produzido pela medula óssea dos ossos largos (menos a espinhal, que só tem nervos).

= 2015-04-12
:date: 2015-04-12

Post: Como o Code Jam foi difícil para mim. 16:45 Problema: usar gvim como ferramenta de diff no git dá erro de que não encontra a ferramenta. Solução: colocar o path do vim nas variáveis de ambiente. 16:46 Talvez mais tarde eu me arrisque a usar o vim também para resolver conflitos.

= 2015-04-13
:date: 2015-04-13

O que andei pensando essa madrugada enquanto não dormia: 08:03 Indexar conteúdo não texto em arquivos de mesmo nome, mas texto como se fosse o arquivo com metadados. Também usar uma linha ou mais descrevendo o conteúdo antes do nome do arquivo não texto ou um link para ele (pode ser um vídeo do YouTube). Aos poucos indexar informação espalhada que pode ser útil (ex número do recibo da declaração do imposto, senhas idiotas para lembrar). Todo o texto relevante fica no daytoday, mesmo que seja um link para outro arquivo texto. Pedaços de código, mapas mentais ou outros tipos de informação em texto pode ficar apartado e ainda assim ser buscado e exibido. Podem existir links externos de vídeos ou outros recursos. O daytoday pode aos poucos ir suportando cada um deles e pode se expansível por script. A janela ser redimensiona para mostrar o conteúdo e depois volta ao normal (mas tudo acontece na mesma janela). Essa mesma lista pode ser colocada nele com algumas dicas de como achar. Partidas de xadrez também podem ser arquivos separados. Juntar nunca é um problema. A pasta padrão pode ser media, mas não colocar nada além do nome do arquivo para permitir configurar com mais de uma pasta para o daytoday ir buscar. A busca no daytoday é uma barra superior que aparece com um atalho. Se ela estiver aparecendo filtra os resultados da navegação linear. Mas há dois atalhos diferentes para dois tipos de navegação diferente. Ter atalhos para ir para o final, criar nota dentro de notas ou no final (como novas abas no navegador ou uma nova janela). Para gravação compulsiva modo de copiar todo que vai sendo jogado para a área de transferência (texto, imagem, print screen). Pode tanto gravar direto no arquivo principal ou gerar recorte apartado. A busca pode tanto só procurar no arquivo quanto nos recortes. Ter modo para detectar se o arquivo foi alterado fora e fazer recarga sem perder estado. Texto procurado com ou sem realce. Gerar notas criptografadas com senha ou chave pessoal. Para exibir precisa digitar a senha ou se autenticar de alguma forma. Óbvio que deixa a senha salva durante a sessão. Essas notas podem ser gravadas em base 64. Talvez próprio vim já tenha suporte por plugin. Não preciso de Tags porque o texto inteiro poderá ser buscado. Então basta digitar as palavras chave junto com a nota. Não usar o path inteiro pode ser bom para pastas externas, mas talvez apenas o prefixo media\ seja útil para o vim abrir direto e o daytoday consegui otimizar as referências. Um modelo de calendário e todolist poderia ser aplicado usando data futura ao gerar uma nota e usar a marca TODO e DONE no começo das notas. Tudo que é feito pela ferramenta deveria poder ser feito fora dela, com mais ou menos o mesmo grau de complexidade. 08:05 Pelo dia de Ayn Rand, um texto da escritora sobre aborto (Míriam Martinho): Ayn Rand usa argumentos bem definidos contra o aborto. Estabelece que os direitos dos seres vivos sempre serão superiores aos direitos dos não-vivos, ou, no caso, em um ser vivo em potencial. O sangue é produzido pela medula óssea (o núcleo do osso), mas só dos ossos largos. 08:06 Problema: usar gvim como ferramenta de diff no git dá erro de que não encontra a ferramenta. Solução: colocar o path do vim nas variáveis de ambiente. 08:41 Esse cara diz que o maior trabalho é conseguir simplificar nosso PKB. Assim como os escritores, conseguir resumir muito em pouco. 08:42 media\2015-04-13-designing-a-personal-knowledge-base-hacker-news.txt 09:07 Bom, acho que a vida é essa, mesmo. Colocar tudo no daytoday e torcer para achar o que eu procuro. 09:08 E hoje quem sabe finalmente eu consigo compilar um instalador do UninstallCustom decente? 17:35 Andressa de Araújo foi a atendente que deixou uma hora a gente esperando.

= 2015-04-14
:date: 2015-04-14

Hoje preciso falar dessa bagunça que estava o UninstallCustom. Lembro vagamente de ter mexido nele, mas foi um comentário (meu) que me fez exclamar: "PQP!" 10:09 Bom, o caso é que ele é uma cópia mal-feita do CryptWiz, tanto o instalador quanto o gerador de MN. Até o nome HDEncryption estava em alguns lugares. E o pior é que era uma cópia, ou seja, mais uma versão de desinstalador. Portanto, eu peguei a parte que mostra a tela de Magic Number do ScuaUninstallCustom e coloquei no desinstalador oficial. 10:10 A ideia é que seja usado apenas O desinstalador para que fique mais fácil a manutenção. Porém, para evitar que ele sempre exiba a telinha eu tive que gerar uma tripa de chave que não tem nada. Zero. Zerado. 000000 Porque assim ele verifica se tem informação. Se não tiver, ele nem mostra a tela e já retorna false. 10:11 No entanto, foi feito às pressas para o Zé e mantive o nome original. Talvez um próximo passo seja apagar o Custom e deixar a batch renomeando o oficial. 10:54 Meu sócio na Intelitrader é o Rodrigo Luís de Godoy Strauss Mello Vieira, ele nasceu em 26/05/1980, seu RG é 25004402-x, seu CPF é 22565300867, seu telefone é (11) 99777-9220 e mora na Rua Oscar Thompson 23 ap 115, Santa Cecília, 01151-020. 10:55 Nosso contador é o Claudinei Gomes, que mora na Rua São João do Meriti, 62, Bairro Itaquera, São Paulo - SP. CEP 08225-100 12:48 Cancelei meu cartão VISA Platinum do Itaú. Querem agora cobrar quase 400 reaus de anuidade. Opções de cartão free tem o da Saraiva, surgiu um novo da Petrobras e tem o do Santander. 14:22 A corrupção não é algo mensurável justamente por ser algo feito "debaixo dos panos". No entanto, as ações contra ela podem sim ser mensuráveis, como o artigo em questão explica através da pesquisa do Instituto Alvorada. Porém, o governo aumentar o controle sobre ele mesmo não deixa de ser algo irônico, que se faz alguém ficar mais tranquilo, desconfio que seja por pura ingenuidade. Porém, assim como a própria corrupção, as intenções do governo também não podem ser mensuráveis. E ficamos com mais do mesmo. 15:11 Voltando para o novo sincronismo, meu objetivo é que as regras sejam traduzidas de maneira uniforme e através dos novos leitores ela seja devidamente distribuída. Ou seja, seja uma rota de acesso, diretiva ou flags de novas funcionalidades, o que importa é que exista uma estrutura comum que possibilite criar novas regras sem mudar nada no software.

= 2015-04-15
:date: 2015-04-15

Dia da visita ao pessoal da GAS. Quem diria, os que antes eram nossos concorrentes na Open.

= 2015-04-16
:date: 2015-04-16

O banco com mais relacionamentos do servidor 172.11.1.20 é o core_bovespa. A tabela sec_objeto__objeto tem nada mais nada menos que um milhão de linhas! 17:44 Se tivermos apenas o relacioamento unilateral na memória, que é o que será usado de fato (usuário => grupos), economizamos de 290 MB para 164 MB em memória do tio. E se usássemos protobuf? 17:55 Com protobuf o tio carrega milagrosos 48 MB para 37k objetos e 1 milha de relacionamentos. 18:17 Ata da reunião em Indaiatuba: O pessoal está de mudança e ainda quase ninguém foi para Indaiatuba. Estão ainda procurando gente do perfil da Rose, mas dão o golpe dos descontos dos benefícios. Não têm opção, é consultoria especializada então podemos chutar o balde (sugestão de 300 hora). Vamos propor 80 horas. O custo obviamente é o dobro de formos nós dois. 21:17 Dados para reclamações tributárias (como o IPTU abusivo desse ano). Segundo um condômino: "A classificação que a construtora passou para a prefeitura do prédio é: D (é considerado luxo e super-luxo) por causa da área gourmet e não tem isenção. Reclamações Tributárias O contribuinte pode reclamar contra os dados constantes do lançamento do IPTU, no prazo de 90 (noventa) dias, contado da data de vencimento normal da primeira prestação, por meio de formulário próprio (clique aqui para acessar), fornecido pela Prefeitura (Lei 14.256/2006). Os processos de Reclamação Tributária são objeto de análise pelo órgão técnico do Departamento de Arrecadação e Cobrança (Decar) e devem receber o competente despacho da autoridade administrativa, deferindo ou indeferindo a reclamação formulada. Enquanto o pedido não for decidido, o contribuinte deve efetuar regularmente o recolhimento dos tributos. Documentos essenciais a todo e qualquer pedido: Se pessoa física, cópias dos documentos pessoais do requerente contribuinte (RG e CPF); Se pessoa jurídica, cópia do CNPJ e do Contrato Social com suas alterações; Cópia da Notificação de Lançamento do IPTU; Cópia simples, acompanhada do original, do documento de propriedade do imóvel (matrícula do Registro de Imóveis, certidão atualizada do Registro de Imóveis, escritura ou contrato de compra e venda ou de compromisso de compra e venda do imóvel, etc). Att. Claudia" Para reclamar, fica na R. Lino Coutinho, 444 - Ipiranga, SP. 22:19 Protocolo 13032534 para a reclamação de poluição sonora da Rua Riga, 448 (culto religioso), de terças e quintas, das 20:00 às 23:30. Ligar novamente para o 156. 22:34 Descobri (de novo, provavelmente) que Python não tem incremento. Mas tem +=, que é quase a mesma coisa.

= 2015-04-18
:date: 2015-04-18

O Meats (onde pretendemos ir hoje) fica na Rua dos Pinheiros, 320. São duas quadras voltando da estação Fradique Coutinho. 13:31 Colando todos os recortes do Kindle até agora. Não estou mais aí para a ordem cronológica dos eventos, mas quando eles foram criados. Porque o aplicativo que navegará pelas anotações pode ordenar tanto cronologicamente (e daí não importa muito a ordem em que foram criados, exceto quando são iguais) e na ordem normal do arquivo. 21:35 Quais países garantem água limpa da torneira? Só os malvadões, capitalistas destruidores do meio-ambiente (até Singapura, Hong-Kong).

= 2015-04-19
:date: 2015-04-19

O Callia Alta de hoje (Malbec) estava bem forte e equilibrava bem com o Skirt Steak do Ouback.

= 2015-04-20
:date: 2015-04-20

Um erro comum de programador principiante: cair no golpe do "está tudo pronto, funcionando" de uma lib que você ainda não parou para olhar de perto, e ver que ela nem compila direito 10:44 Não faz sentido indexar tudo pelo login quando no próprio banco não é feito assim. Mas faz sentido existir um contêiner para traduzir os ids para nomes e localizá-los mais rapidamente. 15:23 O carregamento das regras é o que menos importa nesse novo sistema de sincronismo. Não é todo o tempo que elas estão sendo mudadas, mas é todo o tempo (e de diferentes lugares) que essas regras precisam ser carregadas.

= 2015-04-21
:date: 2015-04-21

Meio enlatado primeiro episódio de Game of Thrones, mesmo tendo nudez (só peitinhos) e violência (só gráfica). Esse episódio grande de Derek parece meio feito na correria, só para ter.

= 2015-04-22
:date: 2015-04-22

Todas as regras do wanderley.caloni (que têm vínculo com deus e o mundo) dá uns 16 KB serializado em protobuf no registro. Nada mau. 19:37 Motivation = Expectancy x Value / Impulsiveness x Delay (How to beat procrastination)

= 2015-04-23
:date: 2015-04-23

A ntdll32.dll é uma stub que faz a ponte de um processo 32 bits em um SO 64. É ela que conversa com a ntdll 64. 17:05 No Windows, SysWow64 tem um notepad 32 bits em um ambiente de 64 bits.

= 2015-04-25
:date: 2015-04-25

Talvez por isso o daytoday seja importante se usado constantemente. Agora estou perdendo horas para conseguir entender por que a instalação falha na minha máquina, mas na máquina de build tudo bem. 10:58 Tem a ver com a instalação específica do Install Shield. Na máquina de build há duas pastas. Uma está renomeada com o final .instalado. 15:44 Quase nenhum comentário a semana inteira. Está faltando alguma coisa... 15:45 Mais um dia de Callia Alta (a japa quis ir no Outback). Dessa vez um pouco amargo e mais forte. 15:49 Era isso (sobre o Install Shield). Parece que existe alguma instalação mágica que vem com um isutil de um ano depois renovado. Não consegui achar nos instaladores, mas copiei a pasta e rodei o Language Pack (que ainda não havia rodado). 19:06 Alguém deu umas boas respostas aqui sobre como acabar como barulho alheio, inclusive um PM 21:11 Ocorrência de pertubação de sossego registrada na Polícia Militar do Estado Protocolo 25041518308 22:51 Mais um protocolo do PSIU (agora online): 13052606

= 2015-04-26
:date: 2015-04-26

Não foi feita a atualização dos drivers porque usei a tag diferente da máquina de build. A atual é SecuritySuite10.64x (estava usando localmente sem o x, e os binários copiados não foram identificados).

= 2015-04-27
:date: 2015-04-27

Para desabilitar a monitoria de cópia na versão 10 dos drivers do Scua Security vá à linha 475 do ScuaRaw.cpp, lá existe uma atribuição booleana para TRUE (bCopyCandidate = TRUE). Mudar para FALSE e pronto. 17:03 Enviar email para documento@santander.com.br enviar RG, CPF, comprovante de renda 3 meses, comprovante de endereço. 18:10 Muito tempo gasto com burocracia (contas, comprovantes, ligações). Hoje foram duas horas só com bulshitagem.

= 2015-04-28
:date: 2015-04-28

Ontem vi uma imagem esclarecedora sobre projeção negativa de um espaço 3D em 2D (só para dar uma ideia). negative-projection.gif 11:53 Duas informações relevantes: 1) ou a verificação do tamanho do registro ou seu resize não estão mais funcionando para Windows 8.1 no instalador (DLL de instalação) e 2) o reboot pelo instalador não funciona mais. Vou atacar primeiro o registro, que é o que impede a instalação. 17:31 Versão 9: SShell, SsLogin, ActiveMQ, ScuaAud.dll, Drivers compilados sem cópia.

= 2015-04-30
:date: 2015-04-30

Se eu tivesse anotado os binários de ontem para consertar o 9 agora seria meio automático seguir essa lista para fazer o mesmo com o 10. 09:12 Fica faltando o BradOutputGen.exe que está no PackageFiles.fgl, mas da instalação server. Ignorando no momento... 15:21 O Mgnbdc03 não consegui reproduzir idêntico ao último security 10 (57) porque parece que ele é assinado toda hora que se gera um novo instalador. Tipo isso, o build agora gera o instalador com os binários do \bin que vai reproduzir exatamente o .57. 17:03 Procrastinando por uma hora. Sem foco, a questão de ter mais de uma coisa na fila de urgentes.... 17:35 Tem uma lógica diferente para Windows XP no InstallShield? 19:54 Não pode ser isso, deu pau também no Windows 8.

= 2015-05-04
:date: 2015-05-04

As notas da Century têm que ir com cópia para deboramatos@centurybr.com.br e debora@centurybr.com.br. 12:26 Comparando os logs que o Carlos mandou do Process Monitor. Ele mandou dois: com erro e com sucesso. 12:27 Exportando para CSV o processo _IsDel e comparando. Existe uma quantidade de acessos gigantesca no log com erro ao arquivo c:\windows\_delis32.ini. Alguns lugares da internet dizem que é um trojan, mas o _delis32.ini.exe. 12:28 Outro detalhe é que o log com sucesso é da conta de um administrador, mas o com erro está rodando como SYSTEM (por isso o registro abre como HKU/.DEFAULT). 12:29 A partir do SID S-1-5-18, que é de sistema (NT AUTHORITY\SYSTEM). 15:13 Texto genérico para notas: manutenção e suporte de computador. 17:11 O erro do ScuaSecurity.inf deve ocorrer porque o scuaraw.sys não estava na pasta designada pelo run32dll.exe executando o inf com as instruções. 17:14 É essa linha que é usada para instalar os drivers (supostamente): C:\Windows\system32\rundll32.exe setupapi,InstallHinfSection DefaultInstall 128 C:\SCUA2000\Drivers\ScuaSecurity.inf 17:35 Serial number para registrar o InstallShield for Visual Studio, disponível para todos usuários do VisualStudio. Interessante... E6501QW-D17-4032AF570N

= 2015-05-06
:date: 2015-05-06

Protocolo da TIM: 2015248929071 22:20 Usar o tempo de escovação de dentes para tarefas que exigem esperar ou apenas observar é algo produtivo. Uma melhora a cada dia 22:26 Anexando screenshots dos testes de comparação do SyncDB com o RsSyncFile (o que dá erro no update é este último). Aliás, uma boa ideia gerar screenshots...

= 2015-05-07
:date: 2015-05-07

Questão: qual a melhor forma de registrar o histórico de arquivos (no temp), screenshots, etc? 09:25 Talvez uma pasta por dia já seja o suficiente, porque daí eu registro no daytoday o que estou fazendo e fica fácil "resgatar" o histórico. Posso copiar os screenshots do dia e tudo fica mais ou menos integrado. 09:48 Mudando (de novo???) a localização do DayToDay. 09:54 Gerei um dump do SsLogin quando ele estava consumindo 99% de CPU depois de habilitar o admin padrão e logar com ele em uma instalação do Security ontem. 10:29 Parece que o componente Scua2000 tinha um PreLoad encravado no Include File Groups. 12:17 Pode ser que a sacada seja que o PreLoad do fonte é um File Group, não um component, o que pode acarretar o erro. 18:42 Sim, toda lei tem uma "motivação", seja certa, errada, ou com segundas intenções. O que disse era que muitas delas não possuem vínculo com a realidade. Principalmente as que tentam ditar os rumos da economia. Não há governo no mundo que detenha conhecimento suficiente para controlar a economia. Muitas intervenções acabam gerando efeitos colaterais imprevisíveis e muitas vezes que vão contra a "motivação" original (como a PEC das domésticas, que está aumentando o desemprego no setor). 18:45 Essa história de contrato social é apenas mais um atestado que somos coagidos pelo estado desde o nascimento, pois não há a possibilidade de "quebra de contrato" exceto sair do território, nem "renegociação" se não for com o aval da maioria. Ou seja, não há liberdade individual, pois somos reféns do coletivo. Eu também acho que o estado deve fazer o máximo para incentivar o empreendorismo e buscar o melhor nas pessoas, sejam elas trabalhadoras, empresárias ou os dois. Só que para mim o máximo que o governo pode fazer é o mínimo: nada. 18:48 Eu não vou negar que existem pessoas com "posição mais predatória" que a minha, justamente porque elas possuem maior poder de barganha. Para mim são os grandes conglomerados empresariais, geralmente dotados de um monopólio legal através e alta regulação e burocracia, e de quebra são "amigas do rei", ou seja, mantém parceria com o governo e/ou com o partido da situação, em um sistema de troca de favores que favorece a corrupção em todo o sistema estatal e que é muito mais barato para elas do que serem competentes em seus negócios, tentando diminuir o preço de seus produtos e serviços ou aumentar a qualidade. Basta alguns milhões desviados que elas conseguem aprovar leis e serem as escolhidas de licitações, movendo os bilhões de todos nós. Obs.: Muitao boa nossa conversa, sem xingamentos e com ideias interessantes =) 18:50 Eu gostaria de saber qual situação você considera particularmente perigosa caso os benefícios sejam extintos. Veja bem, eu não defendo a extinção da CLT, mas há soluções mais livres. Por exemplo, torná-la facultativa para o trabalhador, mas continuando obrigatória para o empregador. Se o trabalhador quiser continuar com um ou mais benefícios, ele mantém esse direito. Porém, se a empresa conseguir convencê-lo (ex: pagando mais) a largar mão da CLT, o governo não pode mais meter a mão no dinheiro de ambos. Se a CLT é tõ boa assim para o trabalhador, acho que é razoável confiar em sua decisão. O que acha? 19:01 Ninguém considera que ninguém tem boa fé, e isso inclui o governo, que aliás tem um poder de "persuasão" muito maior que qualquer empregador: armas. Os maiores empregadores (leia-se maiores empresas) sabem disso, e colaboram efusivamente com o governo e com o(s) partidos(s) que estão no poder, ganhando em troca leis e vantagens que só um monopólio legalizado com muita burocracia e regulamentação pode fornecer (ex: telecoms). No fundo, o poder centralizado só fode com os trabalhadores, pois eles viram reféns do governo que é manipulado pelos grandes empresários. Independente de qual partido estiver no poder, é o dinheiro que grita mais forte. 19:28 Senador José Antonio Reguffe economizou 17 milhões em seu mandato enxugando seu gabinete e suas mordomias. 21:13 Acho que descobri a diferencinha. Ela está no File Groups. Tem uma propriedade diferente que signitivamente chama-se "Potentially Locked". Ohhhhhhhhhhhhh que legaaaaaaaaaaaall... 22:41 Gerados builds 638 e 70 dos instaladores 9 e 10 para corrigir o problema de lock do RsSyncFile. 22:44 Amanhã devo tentar acessar o SQL. Daí vejo se funciona.

= 2015-05-08
:date: 2015-05-08

"Ou nós acreditamos que o estado existe para servir aos indivíduos, ou acreditamos que o indivíduo existe para servir ao estado." - Ayn Rand

= 2015-05-09
:date: 2015-05-09

Voltando para a questão do contrato social, eu também acho que ele não deva ser abolido, pois isso significa caos. Porém, do jeito que está há muito poder concentrado e uma desconexão entre esse poder e o povo. Existem maneiras de melhorar isso democraticamente, algo que só um povo mais maduro e acostumado com democracia poderá fazer. Não é o que estamos vendo nos últimos dez anos, onde a entrega incondicional de poder aos políticos tem gerado cada vez mais corrupção e menos "benefícios", transformando o governo em uma máquina cara e ineficiente. Agora voltando para a CLT. Acredito que a questão do "mundo que queremos" mudando a CLT poderia ser mais ou menos resumida em um cabo de aço entre liberdade e "segurança". Se por um lado dá a impressão que atualmente a CLT fornece mais segurança para o trabalhador, por outro existe um bem intangível que são todas as vagas que não existem justamente por conta do alto custo e risco jurídico de manter funcionários, que poderiam teoricamente aumentar a demanda de mão-de-obra (e aumentar os salários). A questão que você citou do lado do empregado ser o mais fraco faz sentido, mas acaba na prática sendo apenas mais um item a ser calculado pela empresa em possíveis processos trabalhistas. No fundo toda a segurança que for forçada goela abaixo dos trabalhadores se converte em mais um risco que será mensurado pelo empresariado. Quando mais caro for manter os trabalhadores, mais compensador se torna subornar funcionários públicos, em uma escala cada vez maior. Por fim, eu entendo que retirando os benefícios é possível que muitos trabalhadores se deem mal. Porém, esse é o preço da liberdade que eles têm de tomar suas próprias decisões. Voltamos para a questão: quem quer segurança em prol da liberdade acaba ficando sem nenhum dos dois. PS: Boa sorte em sua prova! Fico feliz de ver que existem pessoas dessa área preocupados em repensar as leis que estão aí e que podem, e na minha opinião, devem ser sempre aprimoradas.

= 2015-05-11
:date: 2015-05-11

O py2exe não parece funcionar muito bem com eggs zipados (como o protobuf estava). Agora está dando um erro no pkg_resources que o __init__ do protobuf importa, mas nesse caso ele está deszipado.

= 2015-05-12
:date: 2015-05-12

O Facebook aparentemente estava chiando da falta da página completa (com o index.html). 10:53 Ideia: Logs do todolist e daytoday como gráfico de uma ação 10:54 Ideia: Toolkit bankline Ideia: Popcorn time em caixinha Ideia: Opção de tuitar direto (e guarda histórico) Ideia: Inserir data e hora no formato do DayToDay classic no arquivo sendo editado para emular o funcionando antigo. Ideia: Foco está indo para o título (faz perder todo o texto digitado). Ideia: AutoComplete não funciona com itens que acabaram de ser adicionados. Ideia: Suporte a múltiplas linhas (como era antigamente). Ideia: Sistema anti-fraude melhor que os do Itaú, BB, etc Ideia: Melhorar solução do raftindriver (desinstalar o GBuster) Ideia: Configurar YouCompleteMe do Vim para Windows Ideia: Criar um plugin para o Miranda que suporte Telegram Ideia: Listar todas as ruas em que passam todas as linhas de ônibus da SPTrans Ideia: Escanear uma imagem de nota de mercado e traduzir os valores que estão lá 10:58 Ideias de post para o Caloni: Loop inverso, Erro de linkedição porque LIBs não estão com a mesma runtime, Namespaces, Rapidez ao usar atalhos do teclado (no VS, por exemplo). 20:19 Sim, Fabio Glauser, a escola Austríaca defende que as maiores crises econômicas da história tiveram origem e foram retro-alimentadas pelas distorções da interferência estatal, que não tem como prever todas as consequências dos seus atos. Se isso é aceito na maioria da comunidade científica eu não sei, pois há vários críticos dessa escola. Porém, há dados dessa análise para fazer a comparação com o "lado do governo" e eles parecem mais completos e fazem mais sentido quando analisados em conjunto. Mas posso já estar enxergando essa realidade com um olhar enviesado. O capitalismo é um sistema humano de troca de riquezas e não está alheio à ganância e o egoísmo humano. É como aquele ditado que diz que o dinheiro funciona como uma lupa: uma pessoa que fica rica subitamente mostra o melhor ou o pior de seu caráter, antes escondido na insignificância da pobreza. Existem outros sistemas que também funcionam como lupas, como a religião, por exemplo. Eu concordo com o Leo Ferreira quando ele diz que ganância detona o capitalismo, mas não podemos nos esquecer que é a mesma ganância que move o sistema. O mundo não seria tão rico se não fosse pelo egoísmo de milhares de pessoas que, tentando sempre melhorar sua situação perante os outros, gerou mais riqueza para a sociedade. Em suma: a mão invisível de Adam Smith. Eu particularmente não acho que esses sentimentos "negativos" sejam um grande problema que possa ou deva ser resolvido. É como a agressividade humana. Ela é inerente à espécie. Apesar de causar dor e sofrimento, tirá-la do conjunto que é o ser humano teria consequências tão imprevisíveis quanto tentar mexer em uma economia auto-regulada. Concluindo, a "cirrose" (boa analogia) do Leo para mim está mais relacionada ao governo tentando inflar o crescimento (leia: arrecadação) de uma economia que, fosse baseada em poupança de longo prazo, traria benefícios muito mais duradouros e positivos para todo mundo (ex: não-inflação). 22:43 Insight: nem eu mesmo consigo me ler, já que um diário caótico gasta muita energia para botar a "conversa em dia".

= 2015-05-13
:date: 2015-05-13

Caro Fabio Glauser, de todas as ideias que estamos comentando, IMO, a que menos se enquadra na realidade brasileira é a libertária. Mesmo com o nascimento do Partido Novo acho que uma guinada à liberdade deve demorar mais tempo do que teremos para testemunhar. No mundo dito civilizado há pouquíssimos exemplos usados como motivo de orgulho por libertários, e mesmo estes pecam pela simplicidade, e acho que foi você que me alertou para isso. Hong Kong e Singapura possuem um território minúsculo e um pontencial comercial invejoso, e a última, apesar de tanta riqueza, ainda é uma ditadura. Falando sobre comportamentos intrínsecos ao ser humano me pergunto se a necessidade de se sentir seguro não é um deles que não pode ser desconsiderado da fórmula econômica/política dos países. Talvez a tão elogiada e sonhada liberdade seja apenas uma grande jogada de marketing do Ocidente, mas no fundo a massa prefere trocá-la por pelo menos a sensação de segurança que um governo empenhado no bem-estar social proporciona. E no caso do brasileiro, então, até deixa "a gente" mais acomodado. Essas ideologias, mesmo as mais naturais como o individualismo, não passam disso, pois como indivíduos estamos fadados a viver a tendência de nossa era. Podemos negar a influência, mas é dificil não se molhar sendo um peixe. Podemos plantar mudanças, mas acho difícil conseguir nós mesmos colher os frutos. Aqui, no nosso mundinho, torcer por menos intervenção estatal (e votar de acordo, ou se manifestar como você tem feito) e quiçá uma lei a menos por ano já seria motivo de comemoração. 18:58 Leo, tecnicamente a dependência é ao contrário: o Estado depende da sociedade, mas talvez você quis dizer que a sociedade possui uma dependência psicológica com a figura do Estado. Se for isso, concordo completamente, e é um dos motivos razoáveis para sermos pessimistas, Fabio Glauser =/ A princípio toda proposta que tenha por objetivo aumentar a liberdade individual é uma proposta libertária, partindo essa proposta ou não de uma pessoa que se diz libertária. Não é porque o objetivo final da ideologia é liberdade completa que a coisa precisa ser binária. E a maioria dos libertários, aliás, acredita em mudanças graduais de baixo para cima, entre eles os autores mais famosos, como Mises. E Rothbard, embora tenha um discurso bem radical, sabe que seus argumentos são mais filosóficos que práticos. Porém, o objetivo é pavimentar o caminho de ideias sobre liberdade para que as pessoas andem usando suas pernas, uma a uma. É por isso que há de se ter cuidado com a falácia do espantalho que a esquerda tanto usa, brincando que os conservadores falam que o governo está preparando uma ditadura comunista. Muitas ditaduras não sofrem transformação espontânea, mas vão crescendo lentamente, uma lei de cada vez. E não dá para negar que várias leis desse governo caminho em prol dessa ideologia, embora o partido tenha saído dos seus trilhos morais há muito tempo.

= 2015-05-14
:date: 2015-05-14

Patch2003() - Begin - Patch applied (AllowDefinedNamedPipes, AllowAccessToAA) 11:21 Como montar conhecimento dentro desse daytoday para que ele seja de fato meu auxiliar no conhecimento? Em suma: o que vai aqui que eu vá procurar depois?

= 2015-05-15
:date: 2015-05-15

Bradesco Ag. 272 CC 83477-7 50945278/1000 00 Imperlimp Ipermibliza Ltda imperflon@uol.com.br.

= 2015-05-18
:date: 2015-05-18

0800 7715 047 106 15 prot. 20152635691132 14:47 0800 015 1551 15:49 Protocolo 20152637234919 18:02 Mesmo medindo toda a matéria(incluindo a escura) faltava 70% para a quantidade de energia necessária para a expansão do Universo que estabelece um formato plano (e, portanto, sem necessidade de energia adicional no seu início). No entanto, ao medir a radiação de fundo, que bateu e voltou no plasma que era a matéria "derretida" (além disso não é possível enxergar, pois o plasma é opaco a radiação), surge a medida que bate com como seria esse plasma em um Universo plano. Por fim, a detecção de uma supernova muito distante estava acelerando, na medida em que a energia necessária para tal fosse exatamente os 70% que faltavam no Universo, e não estavam na matéria. 18:05 É bom lembrar que a matéria não-escura constitui uma infinetésimo da matéria escura, que constitui 30% de toda a energia do Universo. Ou seja, toda a matéria medida do Universo é praticamente insignificante para a equação. 18:17 A relação entre a densidade do Universo como um todo e a densidade da matéria está em um equilíbrio em que é possível que enxerguemos galáxias. Porém, a constante cosmológica está agora acima de nós, e portanto a aceleração tende a tornar as galáxias cada vez mais distantes, até que elas acelerem acima da velocidade da luz e a visão futura seja que existe apenas a nossa galáxia.

= 2015-05-22
:date: 2015-05-22

Um em cada três imigrantes está em situação irregular na cidade de São Paulo 185k imigrantes ilegais na cidade de São Paulo. Porém, eles não recebem ajuda do Estado.

= 2015-05-25
:date: 2015-05-25

Diff no git entre o commit atual (HEAD) e o anterior: git diff @~..@ Isso porque desde o git 1.8.5 @ virou sinônimo de HEAD. 09:55 TIL que começar algo como analisar a strip de fontes do source server para subversion e tentar reproduzir o mesmo com git não é tão difícil se você começar do zero. 14:09 Usei a garrafa do JP para guardar um pouco desse sul-africano. Vamos ver se envelhecendo mais um pouco não fica melhor. 17:13 26152664464967 (deve ser o protocolo de cancelamento da Vivo)

= 2015-05-26
:date: 2015-05-26

Para funcionar no Azure, precisamos tirar o ON [PRIMARY] do script SQL.

= 2015-05-28
:date: 2015-05-28

Sobre exploração dos empresários. É que no caso para enriquecer é preciso arriscar. Quem trabalha com um salário garantido mais "benefícios" nunca irá enriquecer, pois seu risco é praticamente de base: todo mundo tem o mesmo risco. Já um empresário, além de trabalhar muito para se manter competitivo, precisa confiar em seus empregados, em sua capacidade, e mantê-los produtivos, e depender da maré do mercado. Para as pequenas grandes empresas que conseguem crescer há milhares de pequenas empresas que faliram em menos de 2 anos, e muitos empresário engoliram o preju temporário e partiram para uma nova empreitada. É um pouco simplista considerar que um empregado é explorado, sendo que a princípio ele está trabalhando em um lugar que aceitou voluntariamente. Diferente, por exemplo, dos impostos do governo, que aceite ou não, eles serão cobrados. Ou seja, o governo está mais próximo do que podemos chamar de exploração do que qualquer empregador no país.

= 2015-05-29
:date: 2015-05-29

TecBan Canal Seguro ATM

= 2015-06-03
:date: 2015-06-03

Por que a Rússia é tão pobre? 14:47 Território indefensável criou uma população anexada/conquistada que possui em seu mindset sempre expandir e se proteger. Até hoje Putin segue o mesmo princípio. Geograficamente há poucos rios que se comunicam e poucas terras aráveis, tornando difícil o comércio (distribuição) e a alimentação do povo. Se a riqueza não pode ser gerada e eles precisam sempre estar militarmente prontos contra ataques e expansão, a existência do povo não é lá muito tranquila. 14:50 Um surdo-mudo possui uma "voz" interior, mas ele se comunica de forma visual, assim como o idioma padrão da pessoa que respondeu é a linguagem de sinais americana (ASL).

= 2015-06-05
:date: 2015-06-05

Escrevi um post super-rápido sobre o esquema de logs que criei lendo o Dr. Dobbs (light log lib). E acho que não parece mais tão produtivo ficar monitorando o tempo no TodoLib. 19:59 Acho que vou experimentar (no tempo que não precisa de contagem de tempo) começar a simplesmente fazer as tasks.

= 2015-06-06
:date: 2015-06-06

Hoje eu lavei um brócolis gigante, fervi na água e ensaquei todos separados para comer depois. Também fiz um purê muito legal com bacon. E tirei fotos do céu, testando alta exposição com a Lumix (LuminhaNoiteApe)

= 2015-06-07
:date: 2015-06-07

Organizar histórico das finanças. Resumindo em Trabalho, Investimento, Gastos, Rendimento. Agora tentando entender a lógica dos valores para acumular corretamente na tendência.

= 2015-06-08
:date: 2015-06-08

Hoje de manhã preparamos a semana de visitas (EasyTech e GAS), enviei a proposta para a Allianz de mudar o MLogon enviando por XML/ActiveMQ os dados de uso. 14:49 Depois fui para uma cabine muito legal sobre um serial killer que também é policial. Mais uma vez o ator de O Homem que Amava as Mulheres Demais. Foi legal, tirando dois críticos que estavam conversando muito na mesma fileira que eu. Finalmente tomei o açaí da sorveteria da Augusta, para tentar agilizar eu almoço e conseguir participar do call da YouCast (rolando agora). 14:50 Tema do call: snevrs, sguevrs... 15:21 O Zé concordou em comprar mais 40 horas avulsas para usar o resto do projeto da Allianz. Está chovendo dinheiro esse mês...=) 16:47 Presenting DialogBox... 16:53 Waiting for DAT file

= 2015-06-10
:date: 2015-06-10

Ontem: Um filme sobre gay que dorme com mulher, compilação para o Zé, pagamentos, reunião com a Título.

= 2015-06-11
:date: 2015-06-11

WireShark para USB Open Source USB Packet capture (for Windows) 18:37 Tentando entender o processo da minha cabeça de procrastinar indefinidamente em um fluxo infinito de pointless actions... 23:29 Enviando minha sugestão de palestra para o TDC 2015. Troubleshooting em Equipes Remotas com Debugging Tools for Windows Essa palestra é uma continuação da palestra "Depurando até o fim do mundo: técnicas e truques de WinDbg" onde o palestrante Wanderley Caloni irá explicar de ponta a ponta uma arquitetura de build/suporte/depuração distribuída que pode ser facilmente montada em sua empresa e que irá facilitar a descoberta e análise de novos bugs. 23:30 Tópicos a serem discutidos: - Como indexar fontes nos símbolos do Visual Studio usando Python. - Demonstração de como montar um servidor de símbolos. - Demonstração de como montar um servidor de fontes. - Estratégias de distribuição para equipes remotas. - Automação na descoberta de novos bugs.

= 2015-06-12
:date: 2015-06-12

Glauser: I¿ve got to be honest with you. The more we debate and the more I read, the more depressed I get L This article has powerful arguments for the libertarian case, or at least, for less government. I perfectly understand the forces in place to make government ever bigger. I know it¿s stifling the rich economies and, as it is, it¿s unsustainable. But at the same time I know it¿s nearly impossible to cut back on it significantly. Either because of the forces mentioned or because absolute or near absolute market could be just as bad, in my view. You see my dilemma? I think we¿re doomed L 

= 2015-06-13
:date: 2015-06-13

PowerAPI: A Software Library to Monitor the Energy Consumed at the Process-Level

= 2015-06-14
:date: 2015-06-14

Palestra no TDC Segurança Antidebugging: eu não quero que você mexa no meu código Essa palestra é para desenvolvedores interessados em se proteger de atacantes que irão tentar analisar sua ferramenta depurando-a. Vamos explicar, conforme o tempo disponível, como funciona os seguintes "ataques" e suas defesas: - Depuração baseada em exceções. - Ocupando a DebugPort - Detectando attach.

= 2015-06-15
:date: 2015-06-15

Seu programa rodando 24x7 Técnicas para deixar seu programa rodando ou reiniciar o mais rápido possível. Essa é a palestra do Strauss. 19:29 "O campo da nossa ciência é a ação humana e não os eventos psicológicos que resultam numa ação. É isto, precisamente, que distingue a teoria geral da ação humana, praxeologia, da psicologia. O objeto da psicologia são os fatores internos que resultam ou podem resultar numa determinada ação. O tema da praxeologia é a ação como tal." - Ação Humana, Von Mises

= 2015-06-16
:date: 2015-06-16

O orçamento de 2014 do Bolsa Família aumentou para pouco menos de 25 bilhões de Reais (0,50% do PIB) [1]. Se arredondarmos a população do Brasil para 200 milhões [2] são 125 reais para cada habitante do país, ou 11 reais por mês. Conclusão: nenhuma, faça a sua própria =) [1] 

= 2015-06-18
:date: 2015-06-18

O paradoxo de Epicuro: Enquanto onisciente e onipotente, tem conhecimento de todo o mal e poder para acabar com ele. Mas não o faz. Então não é onibenevolente. Enquanto omnipotente e onibenevolente, então tem poder para extinguir o mal e quer fazê-lo, pois é bom. Mas não o faz, pois não sabe o quanto mal existe e onde o mal está. Então ele não é omnisciente. Enquanto omnisciente e omnibenevolente, então sabe de todo o mal que existe e quer mudá-lo. Mas não o faz, pois não é capaz. Então ele não é omnipotente. (p.s. Epicuro não era ateu rsrs)

= 2015-06-19
:date: 2015-06-19

How to turn a liberal hipster into a capitalist tyrant in one evening - Paul Mason "In short, many people have no idea what running a business actually means in the 21st century." (surprise, surprise...) "Part of the answer is: capitalism subjects us to economic rationality." (IMO, that's the more depressed part)

= 2015-06-23
:date: 2015-06-23

Já sabemos que com um index bem legalzinho é possível indexar todos meus posts em um repositório Jekyll. #how-do-i-convert-a-collection-of-html-files-in-a-specific-order Isso quer dizer que eu posso converter minhas resenhas e receitas em repositórios que, privados ou não, podem virar ebooks. 22:38 Eu deveria usar esse diário, mas pelo jeito... Mas achei uma maneira bem bacana de ir gravando minhas resenhas: Jekyll. E depois é publicável para MOBI. Talvez fosse uma boa ideia publicar os artigos mais legais do Caloni. 22:56 Parece que .NET Framework 2 não tinha muitos meios de comunicação. Até o nascimento do WCF power na versão seguinte.

= 2015-06-27
:date: 2015-06-27

Liberdade de Expressão Tem Limite? Clarion de Laffalot A questão não é fácil, mesmo, mas assistindo pela segunda vez esse vídeo delineei (para mim mesmo) onde estava o meu erro em tentar definir uma espécie de justiça para casos de agressão verbal. O Clarion usa uma lógica que parece tender ingenuamente em como podemos impedir que essas agressões ocorram, mas sabemos que não são leis que vão impedir que babacas falem o que der na telha. O máximo que conseguimos como sociedade é coibir essa prática aplicando punições, mas acho difícil que isso diminua o número de babacas (e seus discursos). Ou seja, mesmo que levemos em conta o trauma que isso pode gerar para algumas pessoas, não é fazendo justiça que o trauma vai embora. Isso é um ponto. Outro ponto é que, sabendo que "o ofendido" pode fazer parte de um conjunto de pessoas em que a grande maioria não irá de fato levar o ocorrido como ofensa, faz mais sentido no nível prático que existam mecanismos para os que tiverem algum prejuízo material com a agressão verbal que entrem na justiça. No caso de um indivíduo, um processo pessoal. No caso de grupos, poderia ser um processo coletivo considerando todos os afetados daquele grupo. E como é que se verifica o prejuízo material? Como tudo na justiça, isso é bem subjetivo. Conta de psicólogo/psiquiatra, remédios, perda de emprego, de posições na sociedade, etc. Tudo, a meu ver, tem que ser equiparado no nível material das coisas, e não depender de forma nenhuma na visão pessoa e subjetiva da vítima, mas sim nos efeitos que a ofensa teve na vida real para ela. No entanto, acredito, sim, que toda e qualquer "ofensa", ou declaração, deve ter permissão de ser dita. Isso é a liberdade de expressão completa. No entanto, com tanta liberdade vem a responsabilidade, assim como está na Constituição. Obviamente o anonimato continua proibido, e a pessoa ou as pessoas que fizerem parte em um processo de prejuízo para um indivíduo ou grupo, seja uma figura pública, ou a própria mídia (que muitas vezes sai de alguns casos sem pagar nada), paguem sim pelos seus atos inconsequentes. Mas pague para as pessoas certas. Não dá para afirmar que todos serão ofendidos e terão prejuízos materiais (como o próprio Clarion disse, ele mesmo não teria por que processar alguém, pois não se ofende facilmente), mas pode-se sim realizar uma ligação direta entre o que foi dito por alguém e o prejuízo subsequente. 12:07 Tentando instalar o sample UMDF de mini-filter HID, mas diz que não achou a classe, nem o driver certo para o device. Pesquisando: 14:34 Vale lembrar que, se fosse apenas pelo tal "espirito olímpico" da Grécia Antiga o que valeria ser celebrado é a capacidade dos atletas, e não o contador de medalhas por país. Convenhamos: é o atleta o campeão ou ele está trabalhando para o país que coincidentemente nasceu? Ele é um escravo do "patriotismo", um peão no cenário geo-político, ou é um nome reconhecido independente da região do globo onde ele nasceu?

= 2015-06-29
:date: 2015-06-29

Amanhã terá reunião de planejamento, e hoje é para instalar esse driver maldito de UMDF. 14:47 Olha o FTP de PGNs com coleções de xadrez. Lembro disso há muito tempo, e acho que era o mesmo endereço: 

= 2015-06-30
:date: 2015-06-30

Demorei cinco minutos (segundos?) para encontrar um exemplo do DDK (UMDF, C++, bonitinho) e estou há mais de dois dias tentando instalar esta bosta. 11:06 Não está conseguindo conectar na máquina remota configurada para depuração de drivers pelo Visual Studio 2013? Bom, você sabe que tem que rodar um setup em C:\Program Files (x86)\Windows Kits\8.1\Remote, não sabe? 12:14 Guia de como preparar um Windows para receber drivers de teste (com assinatura e tudo).

= 2015-07-05
:date: 2015-07-05

Semana atualizada. Vamos ve se dessa vez uso mais esse diário.

= 2015-07-06
:date: 2015-07-06

O problema do DeviceIoControl falhando com função inválida (erro 87) era a versão mais nova, que modifica os métodos dos mesmos IOCTLs (mas com o driver assinado, é melhor manter o método antigo de acesso). Agora funcionou. 12:31 Para conseguir sincronizar os named pipe direito, é legal chamar o ConnectNamedPipe antes de começar a escrever coisa em um pipe server => client. Era isso o que estava impedindo o WireShark de conectar corretamente no meu pipe. Bom, solução finalizada. Agora o WireShark é a telinha que eles pediram, e o USBPCap o monitor em kernel.

= 2015-07-14
:date: 2015-07-14

Problema compilando MovieJPG do Dema e linkando com ImageMagik/Magik++ em debug: error LNK2038: mismatch detected for '_ITERATOR_DEBUG_LEVEL': value '0' doesn't match value '2' in FoundFiles.obj 09:54 Provavelmente estava compilado como 2010, e o nível de depuração dos iterators da STL padrão mudou entre versões. Estranhamente as LIBs debug possuem o infixo _DB_, enquanto em release é _RL_. Por isso o ifdef que o dema colocou. Aparentemente a compilação em Debug exige as DLLs de runtime do Magik; em release não. 13:04 Precisa ter os composite e outras ferramentas na pasta Scua2000, além do arrow.png para fazer o composite.

= 2015-07-15
:date: 2015-07-15

Os Himalaias se formaram com o choque da Índia com a Ásia.

= 2015-07-18
:date: 2015-07-18

Registrar um assembly .NET como um componente COM: gacutil /i assembly e regasm assembly /tlb:meutlb

= 2015-07-21
:date: 2015-07-21

--Beecher HK (1955). The powerful placebo. J Am Med Assoc, 159 (17): 1602--1606. ---Levine JD, Gordon NC, Bornstein JC, Fields HL (1979). Role of pain in placebo analgesia. Proceeding of Natural Academy of Sciences USA, 76 (7): 3528--3531. ---Benedetti F, Arduino C, Costa S, Vighetti S, Tarenzi L, Rainero I, Asteggiano G (2006). Loss of expectation-related mechanisms in Alzheimer's disease makes analgesic therapies less effective. Pain 121 (1-2): 133--144. ---Kaptchuk TJ, Kelley JM, Conboy LA, Davis RB, Kerr CE, Jacobson EE, Kirsch I, Schyner RN, Nam BH, Nguyen LT, Park M, Rivers AL, McManus C, Kokkotou E, Drossman DA, Goldman P, Lembo AJ (2008). Components of placebo effect: randomized controlled trial in patients with irritable bowel syndrome. British Medical Journal, 336 (7651): 999--1003.

= 2015-07-27
:date: 2015-07-27

Testando alguma coisa... eu ainda acredito que o DayToDay versão "write-only" é limitado, mas pode ser revisto para busca, além de termos um lugar onde todos os textos vão estar centralizados. Seria isso uma forma de centralizar todo o conhecimento "buscável"? Podemos, por exemplo, colocar tudo o que foi feito na seman aqui e durante a geração do relatório jogar nos issues do Jira. O Jira que se Vira, mas ainda teremos uma fonte confiável de busca instantânea (mesmo que não-publicável, ou ou publicável em um campo tipo "journal" para o Kindle). 12:51 Houve problemas (GPF) ao chamar métodos com um SAFEARRAY como parâmetro out da interface. Foi descoberto que ao herdar a interface de IUnknown em vez de IDispatch (como está sendo feito) as chamadas passam a funcionar. 12:52 Após iniciar estimativa do serviço de comunicação USB e enviar o esforço básico para o primeiro entregável a prioridade alterou para as chamadas .NET de uma interface COM. 18:29 Orange is the New Black, apesar do título ultrapassado, ainda se mantém acima de sua irregular média. Digo irregular porque a série, apesar de possuir picos dramáticos e temáticos bem definidos, também possui os seus vales. Ou seja: se quiser aproveitar o que a série tem de bom, vai ter que aguentar muito lenga-lenga de mulher. Essa terceira temporada "surpreende" por seus ataques incessantes e cada vez mais incômodos da religião e de outros temas que flertam nervosamente com um esquerdismo até natural, vindo de um programa de TV que lida com detentas de um sistema presidiário mais do que o suficiente para manter seus "clientes" satisfeitos. Será, mesmo? A todo o momento somos lembrados que isto não é Oz, que as pessoas ali são mulheres, o que muda todo o contexto do que ocorre com essas pessoas. Elas podem até ter cometidos seus pequenos delitos e assassinatos, mas nunca parecem acusadas de nada que preste. Exceto Piper. A loirinha sem açúcar de Taylor Schilling merece um destaque como o instrumento por trás das babaquices do roteiro, incluindo um discurso inflamado -- um ponto alto -- a respeio de sua mais nova ideia: a venda de calcinhas sujas para pervertidos. Cansado das suas velhas artimanhas, a série não se acanha de usá-las para o bem da linguagem televisiva, ainda que travestida de algo cool/cult. Quem ganha é o público que adora uma novela, e com razão: a cada nova temporada o elenco principal parece querer se reinventar, e realiza um show para poucos. É até difícil destacar alguém em um casting tão uniforme. Porém, sejamos honestos: se OitNB quiser se comparar -- ou sequer referenciar -- obras como Breaking Bad, acho bom se preparar para situações realmente desafiadoras, e não uns tapinhas em uma transexual. Isso só vai trazer fãs de movimentos minoritários fanáticos (ainda mais agora, que já acabaram de assistir Sense8). 19:23 VsVim é um plugin muito legal de Vim para VisualStudio. Melhorou bastante desde meu último uso.

= 2015-07-28
:date: 2015-07-28

Não penso que Ayn Rand quis dizer "seguir o próprio ego", mas perseguir sua própria felicidade, o que me parece algo absoluto para toda existência humana. Como consequência torna o auto-sacrifício imoral. É verdade que o homem ainda não atingiu tamanha racionalidade, e Rand culpa os filósofos altruístas que criaram um mundo onde se sacrificar por algo se tornou padrão. Por isso que temos governos, religiões ou qualquer outra disposição coletiva que inibe o indivíduo de perseguir sua felicidade. A esperança do Objetivismo, se é que podemos colocar assim, é que todos os homens usem a racionalidade de que são dotados para atingir a felicidade própria. - Em "Será que consigo pegar os meus comentários do YouTube?" Conclusão sobre o sistema fodástico de navegação do daytoday: whatever. 09:54 O ScuaUninstallCustom, cópia descarada do CryptWiz, não tem a parte que mantém uma senha de contra-número do CD de contingência. Ou seja, não existe nada disso de usar a senha antiga que falei para o Carlos nesse caso. 13:17 O problema do MagicNumber do UninstallCustom parece ser que o SID é usado na geração do MN. Bom, se o cliente vai formatar o servidor e instalar outro, temos um problema, pois os Uninstall já instalados vão levar em conta o SID já mantido no resource. 15:22 Quando se mexe com C++ em múltiplos fontes logo vem aquela bagunça do versionamento e do compartilhamento de código. LIBs, DLLs, COMs (de Component Object Model, da Microsoft). É difícil a partir de um binário saber quais os fontes envolvidos em sua construção, a não ser que você os amarre através de um sistema automatizado de build onde todos os binários devem ser obrigatoriamente compilados (e suas dependências, claro). Porém, há maneiras mais descentralizadas de se trabalhar. Alguém poderia simplesmente colocar a versão em cada CPP e atualizá-la, assim como comentários de histórico, toda vez que alguma mudança for feita: /** Estou começando esse meu CPP. * * @desc Esse CPP fará mágicas nunca antes tentadas, * e portanto tende a ser perigoso para os padawans * mais chegados em um coletor de lixo. * * @version 0.0.1 * * @remark Estou usando Version Semantics logo acima. */ OK, esse já é um modelo interessante, embora totalmente descartável se você já usa um sistema de build atrelado a um controle de fonte, já que você automaticamente já terá um número mágico para relacionar seus binários: o revno de seu commit (ou seus commits, no caso de mais de um repositório). Uma versão um pouco mais... "binária", seria inserir uma string no próprio fonte com essa versão, e talvez até o nome de seu módulo/lib/etc: static const char* LIB_VERSION = "minhalib 0.0.1"; Dessa forma, por pior que seja a situação do controle de seus binários, sempre haverá a possibilidade de procurar a string lá dentro. strings-minha-lib.png Ops, esqueci que nesses compiladores modernos __o que você não usa não será incluído no binário final__. Isso quer dizer que se quisermos que essas strings de identificação de dependências apareça no binário compilado precisamos pelo menos dar a impressão de que ele esteja sendo usado: (continua) 19:59 Construído como um clássico fortemente inspirado em Super-Homem de Richard Donner, o debut de Sam Raimi peca por imitação enquanto acerta em todo o resto. "Com grande poder vem grandes responsabilidades" diz menos sobre o garoto picado por uma aranha e mais sobre o homem que o dirige. Lançado há mais de 13 anos, a estreia de super-heróis solos (antes houve os X-Men) veio com um formato ainda a ser polido. Porém, o drama dos personagens, esse que falta tanto hoje em dia, esse é o que mais faz sentido e o que é mais explorado. Uma pena, portanto, que os atores não estejam em sua melhor forma. Tobey Maguire é a persona corretíssima para o papel, mas apenas com sua cara de tolo e não para todo o resto (como o drama de ter perdido o tio em uma obra do destino). Kirsten Dunst é a namoradinha da Am 23:03 Mais uma remodelada no saite. Tênis Verde, óbvio.

= 2015-07-30
:date: 2015-07-30

Carlos, estou enviando uma nova versão do RsSyncFile e dos binários do server. Foram feitas várias mudanças para se adequar a um modelo fácil de realizar testes de estresse. Nenhum bug foi encontrado, mas houveram mudanças significativas para aumentar a velocidade de transferência e processamento dos arquivos, a saber: - Empacotamento no cliente de todos os XMLs e BINs prontos em um único zip. - Processamento no server de todos os XMLs e BINs prontos em um único insert (foi testado com cerca de 9000 inserts para verificar possibilidade de timeout, que não ocorreu). Para o teste, foram criados scripts que replicam os arquivos Template.bin e Template.xml para 19.602 arquivos em uma estrutura de 99 instâncias do RsSyncServer rodando em paralelo na mesma máquina. Como os scripts estão em Python, estou enviando a estrutura já pronta, mas ela pode sempre ser refeita executando os arquivos Scripts\files.py e shortcuts.py. A pasta compactada deve ser extraída para C:. A batch de instalação cria o serviço ScuaSyncFileServerStress, que escuta em uma porta diferente da versão para produção para poder testar sem necessidade de desinstalar a instalação oficial. Lembrando que TODOS os binários estão configurados para rodar em 127.0.0.1:6667 como server. É possível, contudo, configurar o script shortcuts.py para instalar em outras máquinas e rodar mais 99 instâncias (ou mais), de forma a fazer testes mais pesados. Um último detalhe que é importante entender do RsSyncFile: ele foi criado para funcionar como o antigo e ser rodado pelo SsLogin, mas é muito mais flexível que isso, o que quer dizer que várias opções de seu funcionamento estão hard-coded no fonte, com exceção da pasta onde estão os XMLs. A opção /del deverá ser passada, mas com ela ou não os arquivos serão apagados no sucesso do envio. 18:11 Pepper Potts (Gwyneth Paltrow) guarda o primeiro coração nuclear de Stark como prova de que ele tem um coração. Ironicamente, o primeiro Homem de Ferro também prova que a franquia tinha coração e lógica em suas primeiras duas horas, estruturados de uma forma que jamais veríamos novamente nas novas aparições do gênio/bilionário/herói. Criando uma história convincente no estilo O Senhor das Armas e se aproveitando disso para tornar a fantasia e a aventura mais palatável para um público menos ingênuo, a criação do herói dentro daquela caverna escura a partir de materiais que seriam usados para fabricar um dos mísseis da sua empresa bélica não deixa de ser significativa. Aliás, significados não faltam na primeira aventura do herói, que consegue a proeza de tornar suas próximas e medíocres experiências cinematográficas mais empolgantes (ainda que na verdade não sejam). Isso acontece porque o roteiro escrito a oito mãos (e mais oito para criar os personagens) consegue amarrar a fantasia com algumas pontas de realidade (o peso de sua armadura ajuda a pousar sem cair) e ainda fazer algumas referências sutis (S.H.I.E.L.D.) e até metafóricas (Jon Favreau, o diretor do filme, é o motorista/guarda-costas de Stark). O mais curioso é que o filme se perde em alguns momentos justamente no que se tornou o carro-chefe dos filmes da Marvel desde então: mostrar a ação pelo simples prazer de "porque sim". Como se explica que o vilão vá especificamente atrás de Potts sabendo que há pelo menos meia-dúzia de agentes com ela que muito provavelmente já sabem de todo o esquema montado? Falar sobre Robert Downey Jr. já é chover no molhado. O ator conseguiu a proeza de trazer dignididade em uma figura que usa vermelho brilhante e que nas horas vagas é um Batman futurista cujo Alfred é uma voz de computador. Consegue convencer em apenas quinze minutos de filme que não há nada pelo qual ele mereça viver, mas a simples constatação desse fato acaba o tornando um ser humano mais ciente de suas capacidades financeiras e intelectuais e como ela pode ser o que ele gostaria de ser, e não um legado (mal) construído pelo sucessor de seu pai. Homem de Ferro não precisou de muito para se tornar um ícone pop contemporâneo. Uma trilha sonora pesada que faça sentido com o teor da história, referências e pontas facilmente criadas e inseridas de forma inteligente, e pronto: a Marvel pode manter toda sua farofa em um formato palatável até para os cinéfilos mais exigentes. Precisa pedir mais?

= 2015-07-31
:date: 2015-07-31

Criando novo repositório para o daytoday. 10:42 ![Uma exceção que acontece quando o .NET tenta carregar uma DLL com o formato "errado" (win32 vs x64); parece um problema mais sério]({{ site.baseurl }}/public/images/screenshots/exception-load-invalid-format-dot-net.png). 11:48 Email de Ricardo Ribeiro com ZIPs de 24/jul (4 dias atrás): Wanderley Boa Tarde Segue anexo o código com a alteração solicitada. O erro de compilação se dá por uma dll que esta faltando que também esta em anexo easy123 12:18 Olá, Ricardo. Achei a referência correta agora. A configuração do Multivendor.Middleware.BLL.csproj estava apontando para um path inexistente. Agora que você enviou a DLL achei o local correto. Favor alterar no controle de fonte de vocês: diff --git a/Multivendor.Middleware.BLL/Multivendor.Middleware.BLL.csproj b/Multivendor.Middleware.BLL/Multivendor.Middleware.BLL.csproj index c302ddb..260973d 100644 --- a/Multivendor.Middleware.BLL/Multivendor.Middleware.BLL.csproj +++ b/Multivendor.Middleware.BLL/Multivendor.Middleware.BLL.csproj @@ -35,7 +35,7 @@ </PropertyGroup> <ItemGroup> <Reference Include="Easytech.Multivendor.SecurityPacket"> - <HintPath>..\..\..\Users\ivan.ferraz\Documents\Visual Studio 2012\Projects\Easytech.Multivendor.SecurityPacket\Easytech.Multivendor.SecurityPacket\bin\De + <HintPath>..\Multivendor.TestUI\bin\Debug\Easytech.Multivendor.SecurityPacket.dll</HintPath> </Reference> <Reference Include="log4net, Version=1.2.13.0, Culture=neutral, PublicKeyToken=669e0ddf0bb1aa2a, processorArchitecture=MSIL"> <HintPath>..\packages\log4net.2.0.3\lib\net20-full\log4net.dll</HintPath>

= 2015-08-02
:date: 2015-08-02

Teste Qualquer semelhança é mera coincidência Sim, esse é um teste para post. 10:48 Este é um novo post Porque vivo testando essas coisas 10:50 Teste de post Mais um teste 10:51 Teste de post Seria bom se eu conseguisse transformar o título em algo mais... nome de título. 10:56 Teste de post Agora se eu é... colocar acneto áááá 10:57 Teste de post Meu primeiro post gerado automagicamente pelo daytoday e publicado pelo Jekyl que é um serviço aqui na minha máquina. Ipi, ipi... hurra! 11:01 Novas ideias Esse modelo de "título, linha em branco, espaço" funciona muito bem, pois divide os "tweets" de textos mais extensos que podem virar posts. Também é uma ideia interessante usar o markdown e se aproveitar da estrutura que ele fornece. Por exemplo: ```cpp int main() { cout << "Esse é um exemplo de código" << endl; } ``` Ou inserir imagens, como ![Essa aqui](/images/essa-aqui.png) E por aí vai a valsa. 17:16 Testando tweets 17:18 Teste de tweet Mais um E mais um com outra linha E mais um Com espaço entre linhas 17:28 TIL É possível alterar a ordem do loop de posts no Jekyll usando a seguinte construção: ![](images/changing-for-loop-order.png). 17:35 Teste Mais um teste 17:36 Quem diria que ia ser tão fácil? 18:18 É possível inserir um [link](www.caloni.com.br) diretamente no formato _markdown_ (e outras coisas, como __negrito__). 22:17 E mais uma vez um tweet. Animado com esse negócio de atualizas instantâneo. 22:35 Testando artigo DayToDay Ele tem que ter a categoria certa. 22:37 Teste com nome errado Estava colocando a data duas vezes no nome do arquivo. 22:51 Minha Vida de Cachorro Esse é um filme sueco da década de 80 que, cultural ou não, prima pela beleza da pureza dos olhos de uma criança e ao mesmo tempo pode chocar os adultos e seus filtros morais. Por isso peço: se quiser aproveitar de verdade esse filme, não se deixe levar por julgamentos levianos a respeito de sexualidade ou o politicamente correto que infecta nossa criatividade e nossas relações humanas. Veja com os mesmos olhos dessa pequena criança sueca e tudo estará bem. A vida do pequeno Ingemar (Anton Glanzelius) não é nada fácil. Tendo uma mãe doente e sem um pai presente, seu irmão mais velho até que não o perturba tanto, mas Ingemar já tem seus próprios problemas, sendo incapaz de beber um copo de leite na frente de outras pessoas. A visão do diretor Lasse Hallström, prioriza os sentimentos de Ingemar e seus iguais, mas não deixa de levar em conta o quanto a impressão que o garoto tem dos adultos em sua volta é vital para seu amadurecimento. O mais fascinante é seu relacionamento com suas companhias femininas. Próximo da mãe é uma garota convencional, a namoradinha de infância. Na cidade dos irreverentes tios, uma menina que se finge de menino para poder jogar futebol. E para fechar o círculo, uma colega de seu tio, uma mulher voluptuosa desejada pela cidade e que protagoniza um pedaço interessante da história envolvendo arte e pudor. Arte e pudor, aliás, é o que é esbanjado em Minha Vida de Cachorro. Apesar da narração em _off_ do próprio Ingemar realizando comparações entre desconhecidos sobre os quais lê no jornal -- destes, o mais recorrente é a pequena cachorra Laika que foi enviada para o espaço pelos russos e ficou lá para morrer de fome -- o mais importante aqui é no visual e nas metáforas visuais (como uma luta de boxe envolvendo um nocaute e uma "finalização" envolvendo seu xará mais jovem). Lúdico em sua passagem, mais longo do que poderia, Minha Vida de Cachorro é um filme para degustar sem se preocupar muito com a trama e mais com o sentimento da época.

= 2015-08-03
:date: 2015-08-03

Sobre debates no SESC Santos Esse fds participei de uma rápida ida e volta para Santos para participar de um dia com dois debates de um evento organizado pelo meu editor no [CinemAqui](www.cinemaqui.com.br), o Vinicius Carlos Vieira. Com um início atribulado por conta da nossa carona, uma taxista que também é artista plástica e que condenava sua situação atual e flertava com a ideia de uma possível oportunidade de virar caminhoneira e viajar o país, talvez o melhor da viagem tenha sido conhecer meu parceiro das críticas em Sampa, o Eduardo Sandrini. Sua lógica e suas opiniões acerca de diversos filmes, além do sempre bom papo sobre Cinema, talvez tenham sido o ponto alto do dia. Disse talvez porque o debate em que ele participou, o primeiro, sobre crítica na internet, atingiu alguns temas até que relevantes, como o desafio atual da mídia impressa -- e, claro, da mídia virtual -- em conseguir atrair a atenção de um público cada vez mais alheio à cultura e à arte. Disse talvez também porque, embora instigante, o debate logo denotou seu objetivo paralelo em se tornar uma plataforma de publicidade. No caso, do saite Judao. Nada contra, aliás. Não o conhecia, dei meus 15 minutos (talvez menos) de visita, e foi legal. Bom saber que existe. Não me levem a mal, não sou desses nerds de HQs, games ou Cinema como plataforma de materialização de sonhos nerds (de HQs). Logo, não sou o público-alvo. Mesmo assim, achei no mínimo estranho um saite que evita comentários, no melhor estilo censura, preferindo deixar as discussões para o lado das redes sociais (que, pelo visto, são quase inexistentes). A ideia de divergir não parece agradar a linha editorial da equipe, e é de respeitar a tentativa de higienizar a opinião (não que fosse louvável). Mas divago. A questão mercadológica das notícias e da opinião para as massas foi o ponto forte, além da participação de um jornalista da Tribuna dos "velhos tempos". Tudo isso me pareceu bem novo e em um ambiente em que não estou acostumado. Sobre o Hype nerd, minhas ressalvas são talvez piores. Eu ter aprendido que, além da confusa noção de que o capitalismo é colocado como um bicho à parte, ficar com a noção de que é esperado de geradores de conteúdo cultural por algum motivo que eles estejam alheios ao mundo real, ou boa parcela dele, me parece desonesto. O tal politicamente correto foi citado, e eu até tinha algumas ideias sobre o assunto, embora não me parecesse correto cortar o efusivo colaborador do Judão. De certa forma, o segundo debate foi superficial em todos os seus meandros, embora o mediador tivesse tentado provocar com perguntas até que interessantes, embora meio repetitivas. Essa questão do capitalismo contra o sei-lá-o-quê-mas-que-precisa-de-dinheiro-também talvez tenha ficado mal explicada por falta de tempo ou elaboração, mas também pode ser um trauma do pessoal de humanas, que estava acostumado há quinze anos atrás, mas hoje vejo com estranheza. Male/male, uma experiência diferente. Havia dito, para o Eduardo, se não me engano, que experiências diferentes são positivas. Hoje, passado o "hype", fico com minhas dúvidas. 22:50 Relatório das reuniões de hoje na Midas Reuniões não muito animadoras na Midas sobre fazermos a parte de um terceiro em processar arquivo csv de transações de POSs (Point of Sales, inicialmente apenas máquina registradora dos mercados, agora cartão e talvez celular). Atualmente a solução não atende e há um risco de auditoria e uma possibilidade de entrar no mercado a 8 cents por transação. Talvez funcione bem por mensalidade, mas deve ser cobrado um valor que justifique o investimento nesse novo mercado. A segunda reunião foi menos animadora ainda, sobre a opção que a AM/PM nos deu de virar sócio trabalhando de graça. Herdar o prejuízo de processo trabalhista não parece promissor.

= 2015-08-04
:date: 2015-08-04

Visita na ABTA desse ano A novidade ficou por conta do Gianni, que tentou fazer a ponte do Ricardo da Ali (e a General Manager dos EUA, Kiet) com a Century, já que os dois andam brigados. ![](/images/abta-2015-ali.jpg) E experimentei um ótimo sorvete de limão siciliano da Dona Mazza, essa uma receita realmente da bisavó da dona. ![](/images/abta-2015-dona-mazza.jpg) Pegamos também o cartão da Gisele: ![](/images/abta-2015-dona-mazza-cartao.jpg) No final, depois do Gianni ir embora, teve um gringo que fabrica soluções em QT em cima de Box: ![](/images/abta-2015-ect.jpg) A Doris, uma chinesa pequena e simpática, de saia branca e óculos grande, nos apresentou a empresa que pode ser nossos clientes para desenvolver essa ponte com os designers. ![](/images/abta-2015-mktech.jpg) Tem também essa tal de Coship, que não conheço muito bem. ![](/images/abta-2015-coship.jpg) Por fim, um dia cheio de cartões e contatos. Ideia: mandar o futuro folder para todo mundo, até com quem não conversamos. Vai que... 20:16 Por que as startups brasileiras precisam de outsourcing Não é novidade que uma boa ideia, na área de informática, muitas vezes não precisa de apenas boas intenções. Na verdade, acho que quase nunca. Saber com quem se fala, ter os contatos certos e o investidor-chave, simplesmente não irão trazer sucesso a nenhuma empresa se esta não conseguir sequer engatinhar tecnologicamente e mostrar que seu _core business_ vale a pena. Para isso que empresas como a Bit Forge estão começando a desenvolver software sob o modelo catalisadora de startups. E como funciona? Basicamente quando uma startup tem uma ideia inovadora, mas não sabe como conseguir ter uma demo básica, mínima e fundamental de forma rápida, simples e indolor, para que mostre aos potenciais clientes e investidores, ela precisa ligar para o nosso escritório e fechar um contrato de desenvolvimento inicial. O que é feito a partir daí é uma análise enxuta de requisitos, definição de escopo mínimo e o custo inicial para que a ideia saia do chão e crie as primeiras asinhas. A partir daí a empresa já tem uma solução funcional que pode ser demonstrada. Depois disso, com o sucesso dos testes no mercado, essa nova startup já pode contratar os programadores iniciais que irão dar manutenção em um sistema que acabou de nascer através de um treinamento da catalisadora -- no caso, nós -- ou, caso o mercado ainda precise de mais inputs, uma nova rodada de desenvolvimento e/ou uma manutenção básica que irá trazer estabilidade para a solução enquanto ela cresce de maneira orgânica. Em suma: você só paga até onde conseguir validar sua ideia. O que, convenhamos, sai bem mais barato do que contratar uma equipe, alugar um escritório ou, dependendo da complexidade de sua ideia, investir em _head hunters_ que irão tentar encontrar talentos dispostos a despender tempo para seu projeto.

= 2015-08-05
:date: 2015-08-05

O contrato da GAS diz que o valor é 12,5k. ![](/images/contrato-gas.png). 10:10 Vendo Notebook Samsung Notebook Samsung 550P5CAD1 com Processador Intel® Core¿ i7 3630QM, 8GB de Memória, 1TB de HD, 15.6", Tela de 15.6", 6 MB L3 Cache, (L1 256 KB, L2 1MB), NVIDIA® GeForce® GT 630M Graphics (Optimus¿ technology) com 2 GB DDR3 de memória dedicada. Usado por 1 ano e meio / 2 anos. Motivo: o HD é bem lerdinho e me fez perder as paciência na compilação de cada dia. Talvez comprando um HD novo já resolva e o resto voa baixo. Preço camarada de R$ 1.500,00 antes de ofertar no ML e comerem minha alma. Fotos: ![](/images/notebook-samsung1.jpg) ![](/images/notebook-samsung2.jpg) ![](/images/notebook-samsung3.jpg) ![](/images/notebook-samsung4.jpg) ![](/images/notebook-samsung5.jpg) ![](/images/notebook-samsung6.jpg) ![](/images/notebook-samsung7.jpg) ![](/images/notebook-samsung8.jpg) ![](/images/notebook-samsung9.jpg)

= 2015-08-06
:date: 2015-08-06

Magic Mike XXL Continuação que pretende sempre fazer uma cena de reencontro com todo mundo do filme original que reaparece. Abraços, beijos e nada a acrescentar (nem um "ei, você engordou!"). Mike (Channing Tatum) está construindo seu sonho de móveis sob encomenda, já tem um funcionário, mas recebe a visita na cidade da velha gangue sem Dallas, o Mestre de Cerimônias original interpretado pela alma do filme anterior, Matthew McConaughey (Mike era o corpo). Como está separando da mulher, resolve ir em uma convenção de strippers com a galera e fazer o último show. Acabou a história. O resto são sequências inspiradas em video-clipes de boy bands dos anos 90, de onde surge uma das melhores sequências do ano envolvendo Backstreet Boys, uma garrafa de água e doritos. Protagonizada por Joe Manganiello, que está excelente e quase conduz o filme (quisesse o roteiro irregular de Reid Carolin). Tentando soar picante e uma diversão unicamente para mulheres -- e a sessão em que eu estava como único homem no meio de algumas dezenas de meninas, garotas e senhoras comprova isso-- Magic Mike recauchutado demonstra que o politicamente correto chegou aos palcos, onde vemos gordinhas se lambuzando e se derretendo por homens que nunca terão de graça. Engraçado como não perceber o óbvio: antes eram velhas, agora são gordas. Combinou melhor com o clima natureba dessa _road trip_? Criando suspense para o show final todo o tempo, a duração de duas repetidas horas soa demais, mesmo que eu entenda que não sou o público-alvo. A objetificação do homem, ou melhor dizendo, dos seres humanos, é um tema adulto demais para cuecas pontudas.

= 2015-08-07
:date: 2015-08-07

Life After Beth Esse é um horror/thrash-drama com grandes dificuldades em dizer quando devemos sentir algo e quando devemos dar risada. Seu momento máximo envolve as montanhas, um rádio e um fogão. Zumbis ainda podem render diferentes tons de filmes, mas nunca passarão de homenagens indidentais a George Romero. No caso dessa estreia dirigida por Jeff Baena, a dupla Aubrey Plaza (Parks and Recreation) e Dane DeHaan (Poder sem Limites) fazem os papéis de Beth e Zach. Ambos brigaram e se separaram logo antes de Beth falecer. Como é de se esperar pelo "ótimo" trocadilho do título (Life After Beth, em vez de Death, morte), a jovem ressurge dos mortos e seus pais tentam mantê-la em sua vida como antes, embora Zach insista em trazer à tona o fato dela ter morrido. Tentando sugerir que os pais já estão cientes do comportamento agitado e agressivo dessa versão pós-morte de sua filha, e por isso evitem seu contato com o mundo exterior -- como levá-la ao hospital, por exemplo -- os cansativos diálogos a respeito de como lidar com a situação fazem menos sentido do que a própria ressurreição, que já foi vista e revista em tantos outros filmes que não é mais uma surpresa. Portanto, se torna um alívio quando finalmente as coisas saem dos trilhos, e onde finalmente pode-se notar um pouco de interpretação de Aubrey Plaza, que até então se contentava em virar os olhos no seriado que a trouxe à tona, Parks and Recreation, e outro de seus trabalhos medianos, Sem Segurança Nenhuma. Dane DeHaan já é um achado, e interpreta de forma competente o jovem e estupefato Zach, mantendo uma dupla interessante com o pai da menina, o igualmente interessante John C. Reilly. Já os personagens secundários, como a família distante e distoante de Zach, são mais uma distração do que algo relevante, servindo apenas como um pretexto ou explicação de por que o jovem se sente mais próximo da família da garota. O diretor estreante Jeff Baena, por insegurança ou não, usa constantemente a câmera na mão, o que se torna uma escolha adequada na maioria das cenas e proporciona uma visão pré (e até pós) apocalíptica apropriada. No entanto, onde o clima funciona bem, não faz mais do que repetir outros trabalhos do Cinema e TV. Onde não funciona, a culpa é do seu próprio roteiro sem muita movimentação ou ideias interessantes. De qualquer forma, não se pode negar que toda a sequência envolvendo um fogão quase que paga por toda a experiência. Quando chegamos a esse ponto dá vontade de que o que estamos vendo naquele momento tivesse um significado maior do que a mera comicidade universal, destacada da história. Infelizmente, é apenas um filme de zumbis com um final idiota demais para lembrar que havia um drama na história.

= 2015-08-09
:date: 2015-08-09

Visita de treinamento na Midas Pegamos as instruções dos problemas com a Rosa Fumie, da CardTrue. Basicamente temos que tratar um arquivo de entrada e integrar com o itaú (no futuro). ![](/images/cartao-rosa-fumie-cardtrue.jpg)

= 2015-08-11
:date: 2015-08-11

Uber Is Serving New York¿s Outer Boroughs More Than Taxis Are The Debate On Uber¿s Impact In New York City Is Far From Over 10:08 Barulho da Igreja Acontece na Rua Riga, 448. 16:52 "A democracia é um erro estatístico, porque na democracia decide a maioria e a maioria é formada de imbecis." - Jorge Luis Borges 17:09 A Maldição do Demônio Acabei assistindo este pequeno clássico de terror italiano em inglês (na Netflix americana), mas pouco se perde quando vemos que o visual arrebatador de sombras e efeitos até que competentes (ainda hoje) consegue subverter o sensual para o escatológico com uma facilidade que parece torná-los indissociáveis. Quer mais terror que isso? Contando a história da maldição de uma bruxa (Barbara Steele) e uma descendente do inquisidor que a amaldiçoou e a matou com a famigerada máscara do diabo -- uma construção cheia de pregos na parte de dentro martelada no rosto da vítima --, o filme conta a historia de vingança contra essa família depois que o Doutor Thomas Kruvajan (Andrea Checchi) acidentalmente deixa pingar gotas de sangue dentro do túmulo da tal bruxa, fazendo-a voltar à vida. Cheio de momentos que oscilam entre a calma completa e o terror instantâneo, a história nunca deixa-nos tomar fôlego o suficiente para entender o que está acontecendo, e quando o ritmo de um filme dos anos 60 faz isso, me imagino na situação de um espectador da época, umas mil vezes mais atordoado. Aliás, considerado na época extremamente pesado -- seja pelas cenas escatológicas quanto pela beleza e sensualidade estonteantes de Barbara Steele -- Black Sunday foi proibido no Reino Unido (aliás, o que não era na época?) e censurado nos EUA. No entanto, alavancou a carreira do diretor Mario Bava e de Barbara. Chegou a ser votado em 2004 como um dos 100 momentos de filmes mais aterrorizantes (não consegui encontrar qual exatamente, mas tenho uma vaga impressão). 19:46 SCUA-92 Mudanças no DataSvr 19:47 Mudanças no DataSvr Para o #SCUA-92 a próxima tarefa de suporte é colocar modificação no banco no início e no fim do sincronismo do DataSvr conforme email do Carlos: Precisamos customizar o DataSVR conforme conversamos, abaixo seguem especificações. Customizaçao do DataSVR para que grave uma sinalização de início e fim do processamento do DataSvr. Dados para customização Tabela: sec_lock_data_svr Campo: is_locked Valores: 1 início do processo e 0 final do processo Campo: data_inicio - Data do início do processo Campo: data_fim - Será preenchido somente no final do processo, enquando o DataSVR estiver e execução o campo data_fim será nulo. Script para criar tabela create table sec_lock_data_svr ( cod_lock int not null identity(1,1), is_locked bit not null, data_inicio datetime, data_fim datetime ) De acordo com o Carlos, os valores devem ser alterados durante o sincronismo de usuários e grupos do DataSvr, quando essas linhas de log aparecem: Synchronizing SID to SQL database **** SIDs synchronized to SQL database **** Queries adaptadas do mostrado pelo Carlos para criar nova linha na tabela com data/hora inicial e is_locked como 1 e ao final da operação setar o is_locke para 0 e o data_fim, lembrando que é esperado que apenas um DataSvr esteja sendo executado e com acesso a essa tabela nesse banco. insert into sec_lock_data_svr (is_locked, data_inicio) values (1, (select getdate())) update sec_lock_data_svr set is_locked=0,data_fim=(select getdate()) where cod_lock in (select top(1) cod_lock from sec_lock_data_svr order by cod_lock desc) Finalizado, mas falta verificar com o Fernando se a versão do CTree implica em algo novo no build. 22:51 1984 O que é ser humano? Embora essa questão se torne vital nos últimos minutos de 1984, ela permeia toda a história desenvolvida visualmente no filme e que é pesadamente baseado na literatura clássica de George Orwell. Sua visão de "futuro" distópico, influenciada por uma guerra autoritária e desumana, se torna um tema grandioso demais para se justificar apenas como um "filme de política". É, antes de tudo, um filme sobre nossa própria existência. Usando a fotografia pálida de Roger Deakins (Operação Skyfall), um azul melancólico predominante que só perde para o cinza massivo das paredes internas e externas das construções, e até do ar e das nuvens, surgindo como uma versão (ainda mais) deprimente de Londres, o filme retrata a realidade da Oceania, um país cujas fronteiras são constantemente postas em xeque por outros dois países que alternam a posição de inimigo eterno conforme os jornais históricos são reescritos. Winston (John Hurt) é um dos encarregados em realizar essas trocas diárias de informação, que lidam com os fatos mais triviais -- como alterar a foto de um campeão de xadrez -- até dados econômicos, como a quantidade de ração distribuída para a população. A realidade aqui é deturpada ao máximo, como em toda boa distopia, mas deixa escapar comparações óbvias e relevantes nos dias de hoje, como a internet e suas mudanças no ritmo do segundo, ou como a informação dentro da notícia passa a valer menos do que ela mesma. E quantas vezes a mentira inocente ganha status de verdade, e até de sabedoria? Onde além dos jornais, que anseiam por vender notícias nem que tenham que fabricá-las, até órgãos oficiais se protegem da má imagem relativizando dados matemáticos (e qualquer semelhança com IBGE e seus comparsas não é mera coincidência). Definindo com exatidão todas as informações-chave do romance de Orwell, o filme dirigido pelo irregular Michael Radford (O Mercador de Veneza e o _remake_ americano de Elsa & Fred) consegue fluir sua narrativa e o romance de Winston e Julia ao mesmo tempo revelando de passagem momentos icônicos da literatura. Ou seja, como adaptação, consegue o mesmo que tantos filmes da Marvel que a garotada dos gibis compara e considera ou não fiel, além de suas merecidas homenagens. Aqui a homenagem é fugir o menos possível das ideias por trás do livro, pois estas merecem ser degustadas não só pelos memoráveis diálogos, que estão aqui da forma como foram concebidos, ou simplesmente pela arte do áudio-visual transformando uma experiência profunda em duas horas de pura tortura e sofrimento psicológico. A figura pálida e tímida criada por John Hurt é absolutamente genial, pois consegue através da falta de expressão, e com ajuda de micro-expressões, entregar um Winston Smith idêntico ao original sem fazê-lo perder a oportunidade de vê-lo em ação dizendo as falas que imortalizaram seu personagem, como as duas referentes à vizinha proletária estendendo o varal. Suas observações perspicazes a respeito da beleza da senhora revelam que apesar de se comportar como todos os outros, sua inteligência e sua história de vida o colocam acima da mediocridade da sociedade idealizada na figura do Grande Irmão, um rosto que sempre é exibido em todas as telas gigantes de TV obrigatoriamente presentes em todas as casas dos burocratas. A própria comparação de vida entre os funcionários de estado e o proletariado já é sinal de que o sistema já foi pensado em doutrinar os mais perspicazes através de joguetes psicológicos e monitoração constante, e domar o gado de maneira mais grosseira e violenta (pois como é dito duas vezes, eles já são tratados e considerados animais). Suzanna Hamilton entrega uma Julia que todos nós esperávamos, mas que subverte a relação do casal apenas de forma periférica, o que tudo bem, já que não é o foco central da trama. Sendo o rosto belo no meio de uma multidão, ainda assim Michael Radford consegue um bom elenco secundário e extras que se confundem, o que é ótimo para a visão de gado que o filme tenta mostrar. E o que dizer a interpretação meticulosa de Richard Burton como O'Brien, o burocrata de alto escalão? Surgindo praticamente na metade do filme, embora apareça em momentos pontuais sem ser apresentado até então, a Burton consegue inserir toda a frieza do método estatal em sugar a alma de seus contraventores, repetindo diálogos longos em tom monótono, mas que ao mesmo tempo revelam uma certo tom de invencibilidade argumentativa, o que de fato se torna. Conseguindo manter sua textura dramática pelo visual e seu tom filosófico pelos "perigosos" pensamentos de Winston, 1984 é uma obra-prima tanto nas interpretações quanto em seus aspectos técnicos. Saber que foi filmado exatamente durante a época em que a história se passa no livro quando este era o "futuro", a experiência ainda ultrapassa a quarta parede em pelo menos tematicamente soar como um aviso sobre sempre estarmos alertas para governos que se lançam à empreitada da guerra e com isso controlam cada vez mais a vida de seus cidadãos. Maior homenagem que esta, acho difícil imaginar.

= 2015-08-12
:date: 2015-08-12

Talvez alguns erros em C++ nunca receberão o tratamento adequado para newbies, já que o que dizer quando você cria um novo método e esquece o escopo e acaba chamando um método antigo da classe, mas ambos possuem o mesmo nome (sobrecarga)? O compilador vai dizer que o método possui os parâmetros errados. Que nó na cabeça do programador é necessário para que ele entenda isso? 11:36 Mês de Agosto... Agosto do Freguês... ![](/images/alonstar.png).

= 2015-08-13
:date: 2015-08-13

Exemplo em C++ de acesso ao Middleware Olá, Ricardo. Segue em anexo o projeto remodelado para facilitar o uso pelo cliente em C++. Se trata de uma DLL chamada Multivendor.dll seguida de seu .lib e os headers públicos contidos na sub-pasta Multivendor (IKO7MV.h, IMWMC.h e Multivendor.h). Na pasta UseMultivendor há o projeto de exemplos de uso dos métodos mais complicados que envolvem o retorno de uma estrutura ou uma lista. O projeto compila e funciona a partir do Visual Studio 2003 e pode ser aberto por qualquer versão mais nova que o Wizard irá atualizar o projeto. Em anexo também o doc atualizado com os exemplos em C++ dos já colocados na parte do VB6, além de um passo-a-passo de onde está e como abrir o projeto de exemplos em C++. Um problema que tivemos foi com a ABI C++ que tornou inviável passarmos um std::vector entre DLL e EXE, o que nos obrigou a usar uma interface simplista de lista que deve ser destruída após o uso. Isso irá nos evitar dores de cabeça do cliente, além de ter sua compatibilidade aumentada para qualquer compilador C++ do Windows, não limitado ao Visual Studio. 15:32 Sobre a instalação do ScuaSinc: Olá, Carlos. Respondendo à sua pergunta de como o ScuaSinc é instalador, vi no script do instalador que ele é executado com o parâmetro -Service, o usual para os serviços do Security. Para desinstalar, o comando é -UnRegServer.

= 2015-08-14
:date: 2015-08-14

Anotações da saga da compilação do novo CTree *Fernando*: Não me lembro ao certo, mas fizemos uma bela manobra técnica para colocar em funcionamento. Se me lembro bem, eu substituí apenas as pastas LIB e INCLUDE. *Enrico Visconti/FCBRA/FAIRCOM*: Segue anexo o utilitário MTMAKE com a opção de Visual Studio 2003 habilitada novamente para o build de 32 bits: [attachment "mtmake.zip" deleted by Almir Fernandes/FCBRA/FAIRCOM] Segue as opções que você deve escolher pra gerar a nossa biblioteca standalone multi-threaded: - Supported Platform: (1) MS-Windows Vista/XP/NT (x86); - Compiler: (5) Visual C/C++ 2003 (v7.x, c13.x) - 32bit; - Type of Make: (1) Visual C++ Project; - Type of Makefile: (1) c-tree Plus; - Check the directories and confirm: [N]; - Configuration: (2) Stand Alone c-tree Plus; - Type of c-tree Library: (4) Multithreaded Stand Alone; - Unicode option: [N]; - Type of library: (1) Dynamic Link Library (DLL); - Components: (1) Utilities and Libraries; - Confirm; *Fernando*: Fiz o build aqui, mas obtive o seguinte erro: Linking... .\ctreestd.def(2) : warning LNK4017: DESCRIPTION statement not supported for the target platform; ignored Creating library obj\Debug\ctreestd.lib and object obj\Debug\ctreestd.exp ctclib.obj : error LNK2019: unresolved external symbol _gmtime_s referenced in function _ctrt_gmtime_r .\bin\Debug/ctreestd.dll : fatal error LNK1120: 1 unresolved externals Vocês conseguiram compilar aí? *Fernando*: Sim, a dll foi gerada e pudemos linkar com nossos projetos. Entretando, quando colocamos essa nova DLL, nos cai um Access Violation no colo. Estou olhando o dump gerado pelo WER pra tentar ententer melhor o problema. Talvez vocês possam nos dar uma dica de onde estamos errando. *Fernando*: Até onde pude ver, é algo relacionado a um critical section. Parece que dependendo do tipo de compilação, essa entidade pode ser um mutex ou pode ser um critical section. Isso foi o que obtive do WinDbg até agora: 0:000> kb *** Stack trace for last set context - .thread/.cxr resets it ChildEBP RetAddr Args to Child WARNING: Stack unwind information not available. Following frames may be wrong. 0012fb5c 7c901046 00146140 100d6591 10146140 ntdll!RtlpWaitForCriticalSection+0x5b 0012fb78 100d666e 10145afc ffffffff 0012fb94 ntdll!RtlEnterCriticalSection+0x46 0012fb88 1007d0ec 10145afc 0012fba0 1007e7cc ctreestd!mbThrdMutexGet+0xe [x:\lng\c-treeace\faircom\v10.3.0\win32\source\msc.w32\ctsnta.c @ 827] 0012fb94 1007e7cc 10145afc 0012fbb8 100e234c ctreestd!ctThrdMutexGet+0xc [x:\lng\c-treeace\faircom\v10.3.0\win32\source\ctftrd.c @ 119] 0012fba0 100e234c 00002688 00000001 00000002 ctreestd!ctserl+0x1c [x:\lng\c-treeace\faircom\v10.3.0\win32\source\ctftrd.c @ 953] 0012fbb8 0041c6e4 00000001 00000002 7c80b741 ctreestd!SETOPS+0x1c [x:\lng\c-treeace\faircom\v10.3.0\win32\source\cttrad.c @ 7172] 0012fdf4 00407a08 00000000 7c80b741 00142387 DataSvr!SsCTree::ScuaInit+0xe4 [x:\securitysuite.64x\libraries\ssdatabase\util.cpp @ 143] 0012ff18 00460069 00400000 00000000 00142387 DataSvr!WinMain+0x19 0012ffc0 7c816037 00540048 00500054 7ffda000 DataSvr!WinMainCRTStartup+0x185 [f:\vs70builds\3077\vc\crtbld\crt\src\crtexe.c @ 390] 0012fff0 00000000 0045fee4 00000000 00000000 kernel32!RegisterWaitForInputIdle+0x49 Essa chamada ocorre logo depois do InitISAM conforme mostra o fonte a seguir: Err = InitISAM(100, 50, 200); SetOperationState(OPS_UNLOCK_ADD, OPS_STATE_ON); Talvêz isso ajude... *Zé*: Você poderia me encaminhar o último email enviado ao Fernando na sexta-feira? Aproveitando você saberia me dizer o que são esses erros do CTREE: WaitForConnection returned 0x4000, 0x00000000 WaitForConnection returned 0x4002, 0x00000000 *Almir Fernandes (Faircom)*: Ciceri, bom dia. Apenas para te posicionar. Estamos verificando como solucionar esta questão de compilar a biblioteca com o VS 2003. Vamos retornar assim que possível. Se for necessário eu tenho todo o diretório com LIB que foi disponibilizado pela FAIRCON a versão atual é a 10. Lembrando que apenas compilamos com esta versão os componentes server, o cliente é compilado automaticamente com o buld na versão 6. *Fernando*: Sim. Lembro-me que colocamos tudo nesta pasta antiga para não ter que modificar todos os projetos por conta da situação emergencial que enfrentávamos na época. Se ainda não tivemos tempo para retificar isso, talvez essa seja uma boa oportunidade que colocar as coisas em seu devido lugar. Como por exemplo criar uma variável de ambiente que aponte para a versão de uso e usar essa variável nos projetos. Assim, tudo ficaria mais simples numa futura mudança de versão. 09:41 Guia muito completo sobre como entrar e sair do Aeroporto de Galeão no Rio. 12:09 Instalando Sqlite3 no ODBC para Windows 64 Para 64 sempre tem os truques. Nesse caso o truque é baixar uma versão da DLL em 64 bits, renomear para sqlite3.dll e copiar para o system32 (onde ficam as DLLs de 64 bits, sacou? Com isso só precisa executar os instaladores de ODBC que apenas copiam essa DLL para o ODBC da máquina e pronto. 13:03 Criando uma base do Security no Sqlite Por que ninguém nunca pensou nisso? ```sql create table objetos ( id int, nome varchar(255) ); create table relationamentos ( id1 int, id2 int ); create table rotas_de_acesso ( objeto int rota varchar(255), prioridade int, permissoes varchar(255) ); create table rotas_de_auditoria ( objeto int, rota varchar(255), operacoes varchar(255) ); create table diretivas ( id int, nome varchar(255), operacao varchar(255) ); create table diretivas_por_objeto ( objeto int, diretiva int ); ```

= 2015-08-16
:date: 2015-08-16

Evento 12 CCPPBR no Rio gravado no YouTube 14:15 CCPPBRRio12 Esse foi o segundo encontro do nosso grupo no Rio de Janeiro, Cidade Maravilhosa, Cidade do Bixcoito de Polvinho. E foi o primeiro encontro a ser exibido em streamming e gravado para o YouTube, graças ao suporte da RioSoft, uma organização que incentiva o mercado de desenvolvimento de software no Brasil, e onde foi realizado o evento. Esse é o nosso segundo encontro no ano e mais um imenso sucesso, dessa vez graças aos hercúleos esforços de Pedro Lamarão e o nosso host e palestrante mais do que bem-vindo André Tupinambá. Dessa vez tivemos duas palestras sobre EFL, uma ideia interessante de um framework mobile leve, com a presença dos palestrantes *Larry Lira* e *Felipe Almeida*. Em seguida, pós-almoço, foi minha vez de apresentar meu _script_ que indexa PDBs com repositórios Git e toma proveito do mecanismo de carregamento de fontes do WinDbg, seguido por um passo-a-passo de Rodrigo Strauss, que escreveu código (quase) completamente do zero, mostrando como boost::asio pode ser tão simples (ou tão complicado) quanto abrir um socket no Windows (só que com templates e lambdas, bem melhor!). E por fim, Tupinambá salva o dia com mais uma palestra sobre _performance_, um tema obrigatório que quase ficou sem representantes. Ufa! Na verdade, esse não foi o fim. Para os que já frequentam nossos encontros, parte integrante do evento é o tradicional ChoPP pós-palestras, onde os temas são convertidos em discussões etílicas, e onde as métricas séries da GPU acabam virando elucubrações viajantes em física quântica. 18:31 Um velho desafio brasileiro E, olhe a ironia, me mandou este texto: Um velho desafio brasileiro A importância da reforma agrária para o futuro do país A má distribuição de terra no Brasil tem razões históricas, e a luta pela reforma agrária envolve aspectos econômicos, políticos e sociais. A questão fundiária atinge os interesses de um quarto da população brasileira que tira seu sustento do campo, entre grandes e pequenos agricultores, pecuaristas, trabalhadores rurais e os sem-terra. Montar uma nova estrutura fundiária que seja socialmente justa e economicamente viável é dos maiores desafios do Brasil. Na opinião de alguns estudiosos, a questão agrária está para a República assim como a escravidão estava para a Monarquia. De certa forma, o país se libertou quando tornou livre os escravos. Quando não precisar mais discutir a propriedade da terra, terá alcançado nova libertação. Com seu privilégio territorial, o Brasil jamais deveria ter o campo conflagrado. Existem mais de 371 milhões de hectares prontos para a agricultura no país, uma área enorme, que equivale aos territórios de Argentina, França, Alemanha e Uruguai somados. Mas só uma porção relativamente pequena dessa terra tem algum tipo de plantação. Cerca da metade destina-se à criação de gado. O que sobra é o que os especialistas chamam de terra ociosa. Nela não se produz 1 litro de leite, uma saca de soja, 1 quilo de batata ou um cacho de uva. Por trás de tanta terra à toa esconde-se outro problema agrário brasileiro. Até a década passada, quase metade da terra cultivável ainda estava nas mãos de 1% dos fazendeiros, enquanto uma parcela ínfima, menos de 3%, pertencia a 3,1 milhões de produtores rurais. "O problema agrário no país está na concentração de terra, uma das mais altas do mundo, e no latifúndio que nada produz", afirma o professor José Vicente Tavares dos Santos, pró-reitor da Universidade Federal do Rio Grande do Sul. Em comparação com os vizinhos latino-americanos, o Brasil é um campeão em concentração de terra. Não sai da liderança nem se comparado com países onde a questão é explosiva, como Índia ou Paquistão. Juntando tanta terra na mão de poucos e vastas extensões improdutivas, o Brasil montou o cenário próprio para atear fogo ao campo. É aí que nascem os conflitos, que nos últimos vinte anos fizeram centenas de mortos. O problema agrário brasileiro começou em 1850, quando acabou o tráfico de escravos e o Império, sob pressão dos fazendeiros, resolveu mudar o regime de propriedade. Até então, ocupava-se a terra e pedia-se ao imperador um título de posse. Dali em diante, com a ameaça de os escravos virarem proprietários rurais, deixando de se constituir num quintal de mão-de-obra quase gratuita, o regime passou a ser o da compra, e não mais de posse."Enquanto o trabalho era escravo, a terra era livre. Quando o trabalho ficou livre, a terra virou escrava", diz o professor José de Souza Martins, da Universidade de São Paulo. Na época, os Estados Unidos também discutiam a propriedade da terra. Só que fizeram exatamente o inverso. Em vez de impedir o acesso à terra, abriram o oeste do país para quem quisesse ocupá-lo - só ficavam excluídos os senhores de escravos do sul. Assim, criou-se uma potência agrícola, um mercado consumidor e uma cultura mais democrática, pois fundada numa sociedade de milhões de proprietários. Com pequenas variações, em países da Europa, Ásia e América do Norte impera a propriedade familiar, aquela em que pais e filhos pegam na enxada de sol a sol e raramente usam assalariados. Sua produção é suficiente para o sustento da família e o que sobra, em geral, é vendido para uma grande empresa agrícola comprometida com a compra dos seus produtos. No Brasil, o que há de mais parecido com isso são os produtores de uva do Rio Grande do Sul, que vendem sua produção para as vinícolas do norte do Estado. Em Santa Catarina, os aviários são de pequenos proprietários. Têm o suficiente para sustentar a família e vendem sua produção para grandes empresas, como Perdigão e Sadia. As pequenas propriedades são tão produtivas que, no Brasil todo, boa parte dos alimentos vêm dessa gente que possui até 10 hectares de terra. Dos donos de mais de 1.000 hectares, sai uma parte relativamente pequena do que se come. Ou seja: eles produzem menos, embora tenham 100 vezes mais terra. Ainda que os pequenos proprietários não conseguissem produzir para o mercado, mas apenas o suficiente para seu sustento, já seria uma saída pelo menos para a miséria urbana. "Até ser um Jeca Tatu é melhor do que viver na favela", diz o professor Martins. Além disso, os assentamentos podem ser uma solução para a tremenda migração que existe no país. Qualquer fluxo migratório tem, por trás, um problema agrário. Há os mais evidentes, como os gaúchos que foram para Rondônia na década de 70 ou os nordestinos que buscam emprego em São Paulo. Há os mais invisíveis, como no interior paulista, na região de Ribeirão Preto, a chamada Califórnia brasileira, onde 50.000 bóias-frias trabalham no corte de cana das usinas de álcool e açúçar durante nove meses. Nos outros três meses, voltam para a sua região de origem - a maioria vem do paupérrimo Vale do Jequitinhonha, no norte de Minas Gerais. A política de assentamento não é uma alternativa barata. O governo gasta até 30.000 reais com cada família que ganha um pedaço de terra. A criação de um emprego no comércio custa 40.000 reais. Na indústria, 80.000. Só que esses gastos são da iniciativa privada, enquanto, no campo, teriam de vir do governo. É investimento estatal puro, mesmo que o retorno, no caso, seja alto. De cada 30.000 reais investidos, estima-se que 23.000 voltem a seus cofres após alguns anos, na forma de impostos e mesmo de pagamentos de empréstimos adiantados. Para promover a reforma agrária em larga escala, é preciso dinheiro que não acaba mais. Seria errado, contudo, em nome da impossibilidade de fazer o máximo, recusar-se a fazer até o mínimo. O preço dessa recusa está aí, à vista de todos: a urbanização selvagem, a criminalidade em alta, a degradação das grandes cidades. ![](/images/Screenshot (186).png) 18:37 Regras do Tio Bill _Serviriam para o Brasil, não?_ Aqui estão alguns conselhos que Bill Gates recentemente ditou em uma conferência em uma escola secundária sobre 11 coisas que estudantes não aprenderiam na escola. Ele fala sobre como a "política educacional de vida fácil para as crianças" têm criado uma geração sem conceito da realidade, e como esta política têm levado as pessoas a falharem em suas vidas posteriores à escola. Muito conciso, todos esperavam que ele fosse fazer um discurso de uma hora ou mais... 'Bill Gates falou por menos de 5 minutos, foi aplaudido por mais de 10 minutos sem parar, agradeceu e foi embora em seu helicóptero a jato... Regra 1: A vida não é fácil: - acostume-se com isso. Fantasia e preguiça tem limite! Regra 2: O mundo não está preocupado com a sua auto-estima. O mundo espera que você faça alguma coisa útil por ele ANTES de sentir-se bem com você mesmo. Regra 3: Você não ganhará R$ 20.000 por mês assim que sair da escola. Você não será vice-presidente de uma empresa com carro e telefone à disposição antes que você tenha conseguido comprar seu próprio carro e telefone. Regra 4: Se você acha seu professor rude, espere até ter um Chefe. Ele não terá pena de você. Tem que se virar, ou rua. Regra 5: Vender jornal velho ou trabalhar durante as férias não está abaixo da sua posição social. Seus avós têm uma palavra diferente para isso: eles chamam de oportunidade. Você chama de vergonha e orgulho. Regra 6: Se você fracassar, não é culpa de seus pais. Então não lamente seus erros, aprenda com eles. Regra 7: Antes de você nascer, seus pais não eram tão críticos como agora. Eles só ficaram assim por pagar suas contas, lavar suas roupas e ouvir você dizer que eles são "ridículos". Então antes de salvar o planeta para a próxima geração querendo consertar os erros da geração dos seus pais, tente limpar seu próprio quarto e por em prática seu próprio esforço. Regra 8: Sua escola pode ter eliminado a distinção entre vencedores e perdedores, mas a vida não é assim. Em algumas escolas você não repete mais de ano e tem quantas chances precisar até acertar. Isto não se parece com absolutamente NADA na vida real. Se pisar na bola, está despedido... RUA!!! Então, faça certo da primeira vez! Regra 9: A vida não é dividida em semestres. Você não terá sempre os verões livres e é pouco provável que outros empregados o ajudem a cumprir suas tarefas no fim de cada período. Regra 10: Televisão NÃO é vida real. Na vida real, as pessoas têm que deixar o barzinho ou a gandaia e ir trabalhar. Regra 11: Seja legal com os CDFs (aqueles estudantes que os demais julgam que são uns babacas). Existe uma grande probabilidade de você vir a trabalhar PARA um deles. ___________________________________________________ Bill Gates é dono da maior fortuna pessoal do mundo e da Microsoft, a única empresa que enfrentou e venceu a Big Blues (IBM) desde a sua fundação, em meados de 1900.... 18:55 Julika Achei uma foto com o endereço dela: ![](/images/3E2B~1.BMP)

= 2015-08-17
:date: 2015-08-17

Banco local sqlite funcionando com rotas de acesso e auditoria. Testadas mudanças imediatas nesse banco e levxd entende as regras do driver perfeitamente. Possível problema futuro: quando é enviado para o driver regras vazias, ele parece manter a anterior. 22:47 Hoje passei o dia (ou pelo menos a maioria dele) tentando ver qual a maneira mais rápida de manter a compilação de tantos fontes da Scua. O resultado foi que migrei com uma cópia do working directory simples os repositórios do Bazaar para o Git/BitBucket. Agora todos os issues estão sendo linkados.

= 2015-08-18
:date: 2015-08-18

O DataSvr conseguiu ser compilado para 2010 junto com todas as LIBs porque a maioria delas foram migradas para uma única pasta e adicionadas diretamente no projeto. 11:56 Problema no tamanho das regras no registro Como visto no fórum da Microsoft, o tamanho pode ser um problema a ser lidado no cache das novas regras. A recomendação é gravar apenas o path do arquivo e gravar a informação em um arquivo. 20:59 Traduzindo diretivas de acesso Houve um problema com o tamanho do registro, com que os três tipos de regras já atingiu um limite além do razoável. Pesquisando na internet vi que a melhor saída seria usar arquivo apontado pelo registro. Já que é pra ser assim, voltaremos a gravar na pasta Cache arquivos individuais, seguindo a mesma estrutura do registro. Além disso, está sendo trabalhado um modelo simples de envio e tradução de diretivas baseada em script Python. A ideia é que cada diretiva já contenha o código para habilitá-la. O problema atual é fazer a limpeza das diretivas de forma conhecida. A limpeza deverá ser feita antes de aplicar novas diretivas e após o logoff do usuário (apenas para aquele usuário). 22:35 O usuário default faz mais sentido estar as diretivas para limpar, pois não existem policies default, e mesmo que exista, será setado após ele (não sei ainda se faz sentido).

= 2015-08-19
:date: 2015-08-19

Desnecessário (ou incapaz) de limpar no logoff, pois a chave do registro é desmontada. Talvez tenhamos que fazer algo na desinstalação. 13:33 Ideia: se der um Ctrl+C mais demorado gera um DayToDay. 16:54 SCUA-92 Mais um erro do tamanho do arquivo. Dessa vez estava multiplicando um valor que já estava alto, zerando. 20:41 O Estranho Caso do PDB Mal-Aformado Era uma vez, há 13 anos atrás, um tal de Visual Studio .NET, que iria trazer a felicidade para nós, meros mortais usuários de programinhas em C com ponteiro pra lá e ponteiro pra cá. Agora a Microsoft traria para o pessoal do "baixo nível" a mais nova novidade do verão: uma IDE lenta, bugada e... bonita? Bem, para os que estavam acostumados com o Visual C++ 6.0, nada foi mais incômodo do que esperar carregar o programa de manhã para conseguir finalmente compilar. Ajustadas as expectativas, os projetos foram aos poucos migrados para aquela nova forma de configurar EXEs, DLLs, LIBs e OCXs. E eis que alguém, muito provavelmente eu mesmo, naquele momento de inspiração, criei a seguinte configuração para a geração dos PDBs, os símbolos para depurar programas no Windows: ![](/images/vc2003-output-pdb-wrong.png) Faz sentido, não? Afinal de contas, o PDB costuma ter o nome do projeto, e ele já está setado até em outro lugar para gerar com o mesmo nome. Nada de novo no _front_. ![](/images/vc2003-linker-output-pdb-right.png) Até aí tudo bem. Aliás, tudo ficou muito bem por estranhos 13 anos. Até que alguém decidiu migrar para o já não tão novo Visual Studio 2013! ![](/images/visual-studio-2013-resistindo.png) E tudo correu muito bem por algumas horas... talvez 13. Até que a depuração de repente parou de funcionar. ![](/images/no-symbols-loaded.png) Será o benedito? Ou o co-piloto? ![](/images/eh-vc-satanas.png) Pesquisando nos fóruns da vida, antro dos desesperados, achei/lembrei de um comando muito útil no WinDbg que não apenas diz se os símbolos estão "mismatch", ou seja, os símbolos ou o PDB não está combinando com o EXE, mas também por quê. Bom, para saber se está mismatch é aquela fórmula de bolo: ``` ntdll!LdrpDoDebuggerBreak+0x2b: 77e13bad cc int 3 0:000> .symfix No downstream store given, using C:\Tools\DbgTools(x86)\sym 0:000> !sym noisy noisy mode - symbol prompts on 0:000> .reload /f Module.exe SYMSRV: C:\Tools\DbgTools(x86)\sym\Module.pdb\7CD3DD6A80254CE29E8A2E8D7C26BF1B2\Module.pdb not found SYMSRV: http://msdl.microsoft.com/download/symbols/Module.pdb/7CD3DD6A80254CE29E8A2E8D7C26BF1B2/Module.pdb not found DBGHELP: C:\Users\Caloni\Projects\Project\Source\_Output\bin\Debug\Module.pdb - mismatched pdb DBGHELP: Couldn't load mismatched pdb for C:\Users\Caloni\Projects\Scua\Source\_Output\bin\Debug\Module.exe *** WARNING: Unable to verify checksum for Module.exe *** ERROR: Module load completed but symbols could not be loaded for Module.exe DBGHELP: Module - no symbols loaded ``` Para saber o que está errado, o famigerado **!IToldYouSo** ![](/images/i-told-you-so.jpg) ![](/images/itoldyouso-vim.png) Mano, como assim?!?!? Eu acabei de compilar esse binário, eu já apaguei 15 vezes as pastas de Debug e Release, eu já rebootei mais do que o Windows me obriga a rebootar por causa das falhas de segurança. Pois, então, desesperançado, crio um projeto novo para comparar as configurações, e voltamos 13 anos atrás, naquele fatídico dia, e entendo por que o nome do PDB temporário não é igual. Bom, na verdade não entendo, mas intuo que tenha alguma relação: ![](/images/intermediate-pdb.png) ![](/images/intermediate-and-final-pdb.png) E, de fato. Solução? Copie as configurações usuais do "novo" Visual Studio comparando com o velho. Abaixo a chamada do suporte em inglês, se alguém achar o mesmo problema em algum fórum e quiser "espalhar a palavra". ``` Just got stuck in the same problem, but in a C++ source that has 13 years, where its first solution was in VS 2003. Comparing the Project Properties in C/C++, Output Files, Program Database File Name, I found out that the project was pointing to the same file path that Linker, Debugging, Generate Program Database File, when the normal situation is to generate a vc120.pdb. Comparing with a new project, the "right" value can't be $(OutDir)$(TargetName).pdb (ou ProjectName), but $(IntDir)vc$(PlatformToolsetVersion).pdb. That solved the problem. I hope solve another one's problem as well =) []s ``` ![](/images/forum-pdb.png) Minha próxima tarefa, aparentemente, é ver como sendo sócio da [BitForge](www.bitforge.com.br) e da [Intelitrader](www.intelitrader.com.br), e mesmo tendo já atualizado meu perfil MVP há anos, continuo sendo funcionário da UOL Diveo/Broker =/ 21:44 Manos Negras Malbec Esse Manos Negras tem um quê de oleosidade, uma cor elegante, um seco não absurdo. Um aroma quente, mas gosto não tanto.

= 2015-08-20
:date: 2015-08-20

Why is capitalism superior to socialism? Exemplo de um economista sobre uma região "socialista". Vale a pena dar uma olhada.

= 2015-08-21
:date: 2015-08-21

InterlockedIncrement Depois de recompilar toda a galera que o ActiveMQ depende (apr não sei das quantas) surge um unresolved external para o apr_atomic. 15:19 SEQUENCE Estou procurando uma forma de documentar meu entendimento do mecanismo da ScuaAud com o ActiveMQ, e parece que o melhor até agora é uma mistura de Doxygen com esse tal de [SEQUENCE](), que é um programa em java distribuído como apenas um .jar. O autor do artigo que explica como usá-los de maneira conjunta da maneira mais simples possível simplesmente detonou.

= 2015-08-22
:date: 2015-08-22

ActiveMQ e seus exemplos escondidos Parando na parte em que por algum motivo o ScuaLog não gera o evento com o path e dependemos do que vem depois do pipe para gerar mensagens para o ActiveMW. Porém, o exemplo da Apache está funcionando. É só envio de um XML, mesmo, nada de mágico. 15:08 Numa Escola de Havana (CinemAqui) Uma sociedade onde o filho cuida da mãe drogada (e que se prostitui aparentemente a troco de nada), é explorado pelo suposto pai e ainda precisa seguir o que os adultos lhe dizem o que fazer, pois como se diz, uma criança "nunca deveria estar fazendo essas coisas". Pois adivinhe só? Em Numa Escola em Havana, o governo não se importa com que uma criança trabalhe, mas impede que um pai sustente sua família por morar no distrito errado. Terceiro longa do diretor/roteirista cubano Ernesto Daranas, Numa escola de Havana parece possuir traços As pombas e os cães, presos para servir ao propósito de seu dono. Se isso não tem relação nenhuma com Cuba e os cubanos, o filme é ingênuo demais. A trilha sonora é lúdica, pois se trata da história de uma criança que deixou de ser, mas mantém em seu pano de fundo o barulho estridente da marcha, sinal de um país em uma eterna revolução. Cinquenta anos se passaram para demonstrar que a revolução, no longo prazo, é contra seu próprio povo. É um filme frenético, quase sempre com uma câmera na mão tremendo, os personagens vistos por inteiro. Tem seu tom novelístico e algumas frases galhofas ("enquanto eu for professora dos meus alunos..."), mas nada que prejudique muito a imersão naquele universo fantasioso, onde regras ultrapassam o bom senso, mas de uma maneira sutil demais para soar caricato. Em uma Escola não quer afastar nenhum dos lados da questão, quer antes abrir diálogo. Assim como hoje vemos o país da liberdade de aproximando do ditador cinquentenário. É um ótimo momento para o Cinema explorar essa dualidade de perto. Padre fala mal sobre os santos negros e ela tem a liberdade de não ir à missa. A fotografia é gloriosa, bela, límpida, mas mostra uma realidade de prédios e carros antigos e uma realidade cheia de pó do passado. Os trens, representando tanto o progresso quanto o risco, quando olhados de frente são o progresso daquela nação, lento, cheio de curvas e barulhos (curioso que fale de trens, como Atlas Shurged). A resolução de tela é larga no máximo, para curtirmos aquela paisagem surreal. No final, resta dizer às autoridades competentes: você não entendeu nada, não é mesmo? Como poderia? Quando uma imagem de santa é deliberadamente colocada no mural de uma sala de aula por uma aluna, isso vira caso de inspeção nacional. Quem pretende tapar a realidade cada vez mais castigada pelas regras ditadas de cima? A interpretação de Chala é sóbria e ao mesmo tempo se revela acertada, com sua expressão sempre séria grita ao espectador que esse não é um Carrossel cubano, está mais para um Cidade de Deus. É hora de mudar, e isso está claro na mente mais antiga da escola, uma pessoa que passou por toda a história de Cuba comunista. Infelizmente, algumas pessoas ainda não entenderam. A comodidade de seus postos exige que elas não entendam. É assim que elas levam feijão para o prato todos os dias, de uma forma mais desprezível que ganhar dinheiro com briga de cães. 16:26 Numa Escola de Havana Numa Escola de Havana é o trabalho quase que libertário do diretor/roteirista Ernesto Daranas. Ele se beneficia dos frutos em elencar uma equipe de atores competentes e inseri-los em uma história de libertação em pleno coração do comunismo nas Américas. Sutil do começo ao fim, pode parecer que é um filme cujo ponto de vista depende de quem estiver assistindo. Porém, basta observar a cena inicial, em que o pequeno Chala (Armando Valdes Freire) cuida dos seus animais presos, fontes de seu sustento e de sua mãe, que ainda

= 2015-08-24
:date: 2015-08-24

A Separação Esse filme foi o vencedor do Oscar de melhor filme estrangeiro, além de indicado a melhor roteiro original. Ele também está aí para provar como falso esse preconceito de "filme iraniano" como sinônimo de filme parado, difícil, do tipo que só os críticos gostam. Sua história é simples e contada de maneira sensível. Simin (Leila Hatami) é uma mulher decidida a sair do país, pois acredita que terá melhores condições de criar sua jovem filha (Sarina Farhadi). No entanto, seu marido (Peyman Moaadi) tem que cuidar de seu pai com Alzheimer (Ali-Asghar Shahbazi), e a única solução possível parece ser a separação do casal. O processo, no entanto, que parecia uma briga comum, acaba ganhando contornos de uma novela mexicana quando em uma briga com a moça que contratara para ajudá-lo (Razieh) ele é acusado de fazê-la perder seu bebê de cinco meses. A câmera de Asghar Farhadi -- o diretor, roteirista e produtor -- passeia pelos personagens capturando fragmentos de expressões que passam despercebidos dos personagens principais. Para nós, espectador, ele quer mostrar não só o drama, mas o impacto gerado em cada pessoa envolvida, e muito mais as perifericamente envolvidas, como a filha do casal e seu avô. Farhadi não se esquece da religião como um ingrediente poderoso, que se une às diferenças de classes entre as duas partes em conflito para gerar um microcosmos de detalhes culturais que passariam despercebidos se não estivessem completamente inseridos na história. O filme não é lento, mas ritmado e que flui a todo o momento. Como um bom filme de tribunal, sempre que um novo detalhe é revelado fica difícil tomar um lado, e será uma coisa normal se você ficar trocando de opinião constantemente durante o embate, já que não há mocinhos e bandidos facilmente identificáveis, e a única coisa honesta de fazer é prestar o máximo de atenção para cada possibilidade, um passatempo tão arrebatador quanto a luta de seus personagens em vencer.

= 2015-08-25
:date: 2015-08-25

WiFI GAS: 0WKDX7G8 (qualquer rede). 09:45 Erro de certificado Olá, Ricardo. Estou recebendo o seguinte erro de compilação por conta do certificado necessário para compilar a solução Multivendor. Isso não é um problema se eu retirar, como tenho feito, mas seria ideal testar a comunicação entre os módulos com os binários como devem ser. 1>------ Build started: Project: Multivendor.Library, Configuration: Debug Any CPU ------ 1>C:\Program Files (x86)\MSBuild\12.0\bin\Microsoft.Common.CurrentVersion.targets(2718,5): error MSB3325: Cannot import the following key file: MultivendorLibrasyKey.pfx. The key file may be password protected. To correct this, try to import the certificate again or manually install the certificate to the Strong Name CSP with the following key container name: VS_KEY_4E355A4B6C7BA080 1>C:\Program Files (x86)\MSBuild\12.0\bin\Microsoft.Common.CurrentVersion.targets(2718,5): error MSB3321: Importing key file "MultivendorLibrasyKey.pfx" was canceled. ========== Build: 0 succeeded, 1 failed, 1 up-to-date, 0 skipped ========== Há um certificado de teste ou como me passar a senha para instalá-lo? []s 10:07 Resolvido o problema de chaves criando uma nova. 14:25 Código para pegar rapidamente a arquitetura do PE ```py import struct Archs = {} Archs[0x014c] = "x86" Archs[0x0200] = "Intel Itanium" Archs[0x8664] = "x64" def GetPEArchitecture(pePath): f = open(pePath, 'rb') dosHeader = f.read(64) newHeader = struct.unpack("<L", dosHeader[60:65])[0] dosHeader += f.read(newHeader - 64) ntHeader = f.read(6) arch = struct.unpack("<H", ntHeader[4:6])[0] f.close() return Archs[arch] ``` 14:38 Exceção no Multivendor: Pode ser que não exista uma pasta c:\logs.

= 2015-08-27
:date: 2015-08-27

Problema no DataSvr Houve uma inversão de ids grupo vs usuário em um commit de março pelo Demetrius, mas o binário que existe no Bradesco é de janeiro. Porém, pode ser que o fonte tenha sido usado para gerar o binário antes do commit em si, já que o Dema começou a fazer commits quando assumimos o projeto. ![](/images/datasvr-objid1-objid2-winmerge.png) 08:41 Como o idioma auçoriano (ou dialeto) é tão diferente! 09:31 Conversão de bases de gente grande ``` 2015-08-27 09:02:16 296C.24EC 00000000 SqlToSqlite Connecting to SQL... 2015-08-27 09:02:16 296C.24EC 00000000 SqlToSqlite Converting... 2015-08-27 09:02:16 296C.24EC 00000000 SqlToSqlite select cod_objeto, cod_tipo_objeto, txt_login from sec_objeto 2015-08-27 09:02:18 296C.24EC 00000000 SqlToSqlite select OK 2015-08-27 09:02:18 296C.24EC 00000000 SqlToSqlite delete OK 2015-08-27 09:02:18 296C.24EC 00000000 SqlToSqlite inserting... 41393 2015-08-27 09:02:36 296C.24EC 00000000 SqlToSqlite insert OK 2015-08-27 09:02:36 296C.24EC 00000000 SqlToSqlite select * from sec_objeto__objeto 2015-08-27 09:03:38 296C.24EC 00000000 SqlToSqlite select OK 2015-08-27 09:03:38 296C.24EC 00000000 SqlToSqlite delete OK 2015-08-27 09:03:38 296C.24EC 00000000 SqlToSqlite inserting... 1819482 2015-08-27 09:21:21 296C.24EC 00000000 SqlToSqlite relationships OK 2015-08-27 09:21:23 296C.24EC 00000000 SqlToSqlite Conversion OK! ``` 18:08 M Máquina de teste na Scua 172.11.1.160 suporte.adm $eg@$cu@11

= 2015-08-28
:date: 2015-08-28

DataSvr sincronizando corretamente na base gigante O último DataSvr (10.0.0.8) passou com sucesso por dois sincronismos na base maior da Scua. Por algum motivo ainda não explicado, a inversão que eu e o Thiago observamos entre os ids de grupo e usuário estava certa. A base CTree dessa máquina não foi reconstruída, mas usada a que foi gerada pelo último teste do Carlos. Para evitar conflito com as configurações de log que vem ocorrendo, foi criado um novo parâmetro LogFileMaxSizeMB que será usado para os novos binários, incluindo o DataSvr compilado. É o tamanho máximo do arquivo de log em MB (padrão 10). ```ini [Options] LogFileMaxSizeMB=10 ``` O log atual do DataSvr irá parar de gerar tantas linhas para se focar em números de adicionados e removidos. O log verbose voltou a ser ativável por configuração (Options, LogVerbose=1). ```ini [Options] LogVerbose=1 LogFileMaxSizeMB=2000 ``` Outra modificação para facilitar o diagnóstico é que a cada novo sincronismo os relacionamentos serão exportados em dois arquivos csv na pasta Scua2000, CTreeRelationshipIds.txt e SqlRelationshipIds.txt. Segue em anexo o último log do sincronismo na base maior de teste. 10:48 Objetivismo Sincero Posso ser racista? Claro que pode. Isso chama liberdade de expressão. Preciso ceder lugar para idosos no ônibus? Se não tiver a fim, nem a pau! Posso abortar de 6 meses? Poder abortar com três, seis, nove e ainda pede truco! Manda esse inquilino seu pro olho da rua. Posso matar? Você mesmo? Vá em frente. O resto não lhe pertence, então, não. Posso atirar em alguém que invadiu minha propriedade? Limite de 15 tiros na cabeça, 150 no corpo. Acima disso pode parecer que não é legítima defesa? Posso deixar de pagar impostos? Só se você quiser. Parece que quase ninguém quer hoje em dia. Posso andar com meus bens valiosos pela rua? Assuma o risco. Qualquer problema, esteja pronto para dar uma tiros. Posso criar um Twitter e falar o que quiser nele? O que você é, um banana? 13:02 As configurações Static/Dynamic DLL do MSVC não possuem macros para ser configurado no projeto. Por isso faz mais sentido colocar essas diferenças no nome da configuração (DebugStatic, ReleaseStatic). E por fim, faz sentido colocar como sufixo final a versão do ToolSet (VC100) porque... 13:03 Quando um projeto depende de uma LIB, ele pode usar a macro $(Configuration) no path do Linker sem estar ciente de sua própria configuração, pois basta colocar o sufixo para cada projeto (Ex: DataSvr precisa rodar no 2003, precisa ser VC2010, logo usa o sufixo, e é estático). 13:04 Por enquanto faz sentido a versão do último compilador não ter essa definição, já que é automático (criou projeto novo, pronto, o Debug/Relese são desse Visual Studio). 17:09 Política no CinemAqui Falaremos sobre Cidadão Kane, para já começar bem? Talvez um arco entre Kane e Frank Underwood, de House of Cards. Talvez dar exemplos de filmes que não são sobre política, para demonstrar como todo o Cinema e seus diretores respiram opiniões políticas, já que no mundo é impossível ser neutro. 17:45 Minha URL Slug tá funcionando E consegue se virar para tirar os acentos, caracteres especiais e coisas do tipo do título. 17:48 Faltou o espaço Agora sim! 22:38 O Pequeno Príncipe Direção de Arte com elementos quadrados, em comparação com casa do velho. O caos tem até lugar no clichê de parar a destruição do avião. Homenageia o original, expande, atualiza. Trilha sonora baseada no cantarolar.

= 2015-08-29
:date: 2015-08-29

O Pequeno Príncipe Chegou um momento em O Pequeno Príncipe, "remake" do livro homônimo e os filmes que fizeram sobre ele, em que eu não me conformei com a perfeição narrativa, estética e temática do filme. Queria porque queria encontrar pelo menos um errinho, uma falta de ritmo, um diálogo mais ou menos. Nada. Foi tudo em vão. O Pequeno Príncipe filme é uma obra-prima não apenas em ser fiel ao conteúdo original, mas em atualizá-lo e expandi-lo, usando para isso uma abordagem completamente cinematográfica, se aproveitando do AUDIO e do VISUAL para trazer sua mensagem no formato que a Sétima Arte entende, e não uma simples adaptação _ipsis literis_ do livro de Saint-Exupéry. Dessa forma, usar a história de uma menina que é forçada a ter uma rotina adulta por sua solitária mãe para conseguir uma vaga em uma disputada escola, não é nada mais do que projetar a essência de O Pequeno Príncipe -- e, portanto, invisível -- em torno de uma nova heroína, essa mais ativa, dona de seu destino, que tem por objetivo resgatar seu Pequeno Príncipe interno, essa criança disposta a viver para sempre em sua mente. Da mesma forma, o velhinho aviador é não só uma figura carismática por representar o caos naquela realidade obsessivamente calculada e ordenada, mas também por representar a essência do próprio Saint-Exupéry (que era um aviador). Aliás, os novos personagens do filme são tão simbólicos quanto no livro original, e é por isso que nenhum deles tem nome. É a menina, o aviador, a mãe... Recriando a história original através da imaginação da menina, que se disfarça de papel tridimensional e é um exemplo único e maravilhoso de _stop motion_ (dentro de um filme feito por computador), os dois mundos se convergem tematicamente, e visualmente mantém a distância necessária pelo tempo necessário. Nada é por acaso em O Pequeno Príncipe, e tudo que é maravilhoso parece existir quase que por acaso. É a mágica da alma de criança em um filme com um tema adulto o suficiente para inspirar crianças (internas ou externas) de qualquer idade.

= 2015-08-31
:date: 2015-08-31

Erro de xmlconfig.xml pela última vez Esse maldito tenta fazer de tudo com ele, menos gerar um limpinho do zero. Por isso, [voilà](/files/xmlconfig.xml).

= 2015-09-01
:date: 2015-09-01

Usando pela primeira vez o header mutex da C++11... que emoção! :D

= 2015-09-02
:date: 2015-09-02

CTagsAuto Como o Git pelo jeito não se dá bem com link simbólico do Windows, vou ter que reformular a varredura de tags. Já achei e adaptei um vbs para não aparecer mais a tela preta do ctags. Basta chamar o wscript.exe passando ele e nada mais aparece. ![](/images/task-scheduler-ctagsautovbs.png) ```vbs Set WshShell = CreateObject("WScript.Shell" ) WshShell.Run chr(34) & "ctagsauto.bat" & Chr(34) & Chr(32) & "%homepath%\Source default", 0 Set WshShell = Nothing ``` E a minha bat, just for the record, é a seguinte: ```bat @echo off if not exist %homepath%\vim mkdir %homepath%\vim if not exist %homepath%\vim\tags mkdir %homepath%\vim\tags set tagdirname=%2 set tagdirnamenew=%tagdirname%.new set filelist=%homepath%\vim\ctagsauto.txt if not exist %homepath%\vim\tags\%tagdirnamenew% mkdir %homepath%\vim\tags\%tagdirnamenew% if not exist %homepath%\vim\tags\%tagdirname% mkdir %homepath%\vim\tags\%tagdirname% if exist %homepath%\vim\tags\%tagdirnamenew%\tags del %homepath%\vim\tags\%tagdirnamenew%\tags set dirname=%1 echo Tagging como %tagdirnamenew% arquivos em %dirname% para copiar em %tagdirname% pushd %dirname% if exist %filelist% del %filelist% echo Indexing files... dir /b /s *.cpp *.c *.cc *.h *.py >> %filelist% grep -v " " %filelist% > %filelist%.tmp move /Y %filelist%.tmp %filelist% echo Tagging files... ctags --tag-relative=yes --recurse -a -f %homepath%\vim\tags\%tagdirnamenew%\tags -L %filelist% --c++-kinds=+p --python-kinds=-i --fields=+iaS --extra=+q popd copy /Y %homepath%\vim\tags\%tagdirnamenew%\tags %homepath%\vim\tags\%tagdirname%\tags set tagdirname= set tagdirnamenew= set dirname= set filelist= ``` Vai que eu perco ela um dia... 09:34 testes: Como colocar categorias automaticamente Agora com o regex que eu fiz isso deve ser meio indolor. Basta colocar um [a-z] com dois pontos e voilà! 10:50 empresa: Erro de link compilando com boost Precisa baixar os binários pré-compilados. ![](/images/vboost_156_32_msvc12.png) Depois copiar para: ![](/images/boost_156_32_msvc12_folder.png) 20:00 Manual Agorista, para fugir do estado.

= 2015-09-04
:date: 2015-09-04

FTP da Scua Configuração a ser inserida no FileZilla: ```xml <Server> <Host>177.126.170.202</Host> <Port>21</Port> <Protocol>0</Protocol> <Type>0</Type> <User>admin_scua</User> <Pass>$eg@$cu@14</Pass> <Logontype>1</Logontype> <TimezoneOffset>0</TimezoneOffset> <PasvMode>MODE_DEFAULT</PasvMode> <MaximumMultipleConnections>0</MaximumMultipleConnections> <EncodingType>Auto</EncodingType> <BypassProxy>0</BypassProxy> <Name>FTP-SCUA</Name> <Comments></Comments> <LocalDir></LocalDir> <RemoteDir></RemoteDir> <SyncBrowsing>0</SyncBrowsing>FTP-SCUA </Server> ``` (Ele fica no %appdata%\FileZilla, sitemanager.xml). E depois de conectar, ir para /scua_ftp 17:28 Testes de estresse no DataSvr Senhores, Vendo os logs gerados nos processos de teste do Bradesco, percebi que as únicas chamadas feitas para o DataSvr recorrentes são do SyncDB pedindo o tamanho do buffer para obter os IDs relacionados a um usuário e em seguida os IDs (após o SyncDB alocar a memória e chamar o DataSvr novamente). Baseado nisso fiz um teste de estresse no próprio DataSvr, setando os seguintes campos no SecServ.ini: [Options] SyncStressTest=100 SyncStressTestMaxUsers=1000 Onde SyncStressTest é o número de threads paralelas que irão ficar continuamente fazendo essas duas chamadas para o componente do DataSvr e SyncStressTestMaxUsers é o número máximo de usuários que serão usados no processo. Esses usuários são pegos da própria CTree/SAM para chamar a função do DataSvr. Durante os testes na .29 da Scua ainda não aconteceu nada de errado, mas acho que essa versão seria interessante como teste antes de atualizar em produção qualquer nova versão do DataSvr. Como o problema do ambiente lá é falta dos testes dos clientes fazendo sincronismo toda hora, essa versão do DataSvr emula o estresse no DataSvr. Por enquanto é o que foi feito. Seria interessante fazer um teste desses no cmzsec de backup, que é o ambiente-alvo. O próximo passo é fazer esse teste pela rede em um executável à parte, pois é capaz que quem esteja sendo estressado é a rede, e não o DataSvr em si, já que pelos dumps a memória parece normal. 17:42 cinema: Carga Explosiva - O Legado Após a morte do meu pai, uns 3/4 anos atrás, se tornou mais fácil para mim detectar aquele sentimento que une um ser humano e seu rebento (isso pelo menos do lado do rebento).

= 2015-09-08
:date: 2015-09-08

sprint: Serializar chamadas e respostas ao device USB Este item ficou um pouco mais longo com o estudo do uso das bibliotecas C++11 para tornar a solução não apenas portável, mas mais simples de entender e com bem menos código. Estão sendo feitos testes com o uso das libs <thread>, <mutex>, <conditional_variable> e <future>. 07:05 sprint: Interface .NET: Connect/Disconnect As horas deste esforço são na verdade muito mais dos estudos do EASYTECH-20, já que é este que conterá boa parte da funcionalidade que está sendo testada de uma thread enfileirando requisições de todas e afunilando a escrita e as respectivas leituras. O resultado final será muito positivo, compensando o tempo gasto atualmente. 07:19 Ops, acho que desenvolvimento@bitforge.com.br não existe ainda. ![](/images/desenvolvimento-at-bitforge-error). 07:22 O que acontece quando digito no formato várias linhas? Será que vira um post? 09:55 filosofia: Objetivismo ou Subjetivismo? A questão se torna mais profunda com esse [ensaio de Ben Best](), que me parece um ótimo ponto de início aos estudos filosóficos de Rand. 16:36 suporte: Erro de "No mapping between account names" Mapeando o erro do NT quando ele não acha um SID. ``` SyncDB { DataSvr.RefreshUser { SAM.GetRealSidFromUser { NT.LookupAccountName(DOMAIN\USER) { } NT.LookupAccountName(USER) { } SCUA.LogDomainError() -> ERROR_TRUSTED_RELATIONSHIP_OR_FAILURE_ERROR_NONE_MAPPED { SCUA.Log(Warning: The trust relationship between this workstation and the primary domain failed [user: %s]) { } SCUA.Log(Warning: No mapping between account names and security IDs was done [user: %s]) { } } } } } ``` 19:17 desenv: Serialização de escrita/leitura em uma única thread Depois de realizar diversos testes com os mecanismos de serialização e execução assíncrona do C++11 (mutex, thread, conditional_variable, future, promise, async) cheguei em um formato com poucas linhas de código e funcionamento estável com início e fim bem definidos. Isso será importante ao exportar as funções de inicialização e término da biblioteca dinâmica, que deverá ser chamada pelos usuários da DLL. O próximo passo é realizar o POC com escrita e leitura em arquivos (atualmente apenas _hard-coded_ e na tela). Passado este teste, poderemos passar para a conexão e desconexão de fato, onde será possível fazer a comparação com a solução atual em .NET. A ideia é trocar a classe .NET atual por um wrapper que irá carregar a DLL e redirecionar as chamadas diretamente. Isso não retira as camadas de named pipe do Multivendor ainda, mas já permite uma troca transparente do código. 19:21 suporte: Detecção da situação de corrompimento Hoje foi feita uma conferência com o Zé, Erik, Carlos e outros para tentar desvendar a situação em que o banco aparentemente corrompe no Bradesco. Uma das conclusões que chegamos é que a deleção de um usuário no RefreshUser causaria a deleção errada de um grupo, e isso tiraria as regras de todos os usuários. Pelo log analisado e pelo dump _raw_ do SidInfo antes e depois da mudança foi possível constatar que o grupo foi de fato apagado. No entanto, ao rodar o RefreshAllUsersAndGroups a situação se normaliza, voltando inclusive as regras do grupo. Isso poderá ser usado para gerar uma versão paliativa o Bradesco, em que a deleção de objetos ocorra apenas no evento de RefreshAllUsersAndGroups, ou seja, o sincronismo de todos os IDs, usuários e grupos do AD, agendado para a noite. O login comum (RefreshUser) não apagaria mais objetos. Amanhã ficou de ser feito um teste no Bradesco. Caso o problema ocorra em uma máquina/cliente, a execução do RefreshAllUsersAndGroups e o relogon dessa máquina/cliente deveria normalizar o problema.

= 2015-09-09
:date: 2015-09-09

Usando BitCoins - Cartão Bitcoin Brasil - Advcash - Wagecan - Xapo - E-coin - ANX - Bit-X - SatoshiTango - Bitplastic (anônimo) - Nanocard (da ccdek) - Cryptopayme - Gyft - OneBit: Tap & Pay anywhere with Bitcoin - Comparativo do Andre Horta - Para pagar boletos com Bitcoin - Mais uma opção - Corretoras de Bitcoin no Brasil e no mundo 13:40 Jira não permite edição de filtros por todo mundo, apenas o dono. Já tem um ticket aberto, mas ainda nada. ![](/images/jira-rights-edit-filters.png). 18:06 desenv: Tail para arquivos binário e texto Foi através do POC de leitura de arquivos que foi possível melhorar o funcionamento e verificar os principais pontos de atenção na hora de testar e documentar funcionamento da camada C++ e a melhor forma de testar a comunicação com .NET. A próxima tarefa será justamente parametrizar o funcionamento do Communicator, a classe responsável por conectar/desconectar com o Device, enviar e receber mensagens de maneira ordenada. Através disso poderemos integrar já com a solução MultiVendor (TestUI), onde infelizmente só faltará termos dados reais, que precisam ser encriptados. De qualquer forma, estamos avançando no ponto em que uma interação maior com a equipe EasyTech talvez seja necessária. Após essa tarefa e a integração com a camada .NET estiver pronta, os testes de conexão reais podem iniciar.

= 2015-09-10
:date: 2015-09-10

suporte: Canais 56, 58, 59, 60 ficaram sentados, de acordo com o Bruno. 12:39 suporte: Como acessar o firewall dos nossos clientes É simples. O domínio rodrigostrauss.zzzz.io e o intelitrader-suporte.zzzz.io serão usados para essa função. O rodrigostrauss deve ser ativado por quem quer que seja através deste linque. Pronto! Agora esse domínio aponta para seu IP! =) 12:57 suporte: Análise dos picos no market data da Título Erros de atualização do book (ou exceção) aconteceram muito mais nos canais 54, 56 e 60. _Obs.: É possível que tenha passado alguma mensagem ou campo desconhecido, ainda que improvável, já que os papéis estão com todos os dados íntegros._ ``` C:\Temp\UMDF_TITULO_2015-09-10>grep "ERROR ON BOOK UPDATE" -c *.log 001_20150910.log:13 002_20150910.log:0 003_20150910.log:1002 004_20150910.log:0 005_20150910.log:5 006_20150910.log:0 007_20150910.log:38 008_20150910.log:86 009_20150910.log:0 010_20150910.log:66 UMDF2_051_20150910.log:0 UMDF2_052_20150910.log:830 UMDF2_053_20150910.log:1 UMDF2_054_20150910.log:1125 UMDF2_055_20150910.log:0 UMDF2_056_20150910.log:3439 UMDF2_057_20150910.log:4 UMDF2_058_20150910.log:99 UMDF2_059_20150910.log:0 UMDF2_060_20150910.log:2683 C:\Temp\UMDF_TITULO_2015-09-10>grep "ERROR" -c *.log 001_20150910.log:19 002_20150910.log:6 003_20150910.log:1008 004_20150910.log:6 005_20150910.log:11 006_20150910.log:6 007_20150910.log:44 008_20150910.log:124 009_20150910.log:6 010_20150910.log:72 UMDF2_051_20150910.log:6 UMDF2_052_20150910.log:883 UMDF2_053_20150910.log:58 UMDF2_054_20150910.log:1134 UMDF2_055_20150910.log:55 UMDF2_056_20150910.log:3445 UMDF2_057_20150910.log:10 UMDF2_058_20150910.log:105 UMDF2_059_20150910.log:6 UMDF2_060_20150910.log:2703 ``` Erros no snapshot (carrousel) indicam a perda de mensagens por falta de processamento em tempo hábil. ``` C:\Temp\UMDF_TITULO_2015-09-10>grep -i "carrousel" -c *.log 001_20150910.log:208 002_20150910.log:646 003_20150910.log:183 004_20150910.log:389 005_20150910.log:55 006_20150910.log:363 007_20150910.log:39 008_20150910.log:104 009_20150910.log:44 010_20150910.log:260 UMDF2_051_20150910.log:696 UMDF2_052_20150910.log:982 UMDF2_053_20150910.log:3371 UMDF2_054_20150910.log:787 UMDF2_055_20150910.log:717 UMDF2_056_20150910.log:902 UMDF2_057_20150910.log:991 UMDF2_058_20150910.log:544 UMDF2_059_20150910.log:201 UMDF2_060_20150910.log:143 ``` 22:27 cinema: A Estranha Famíllia de Igby Uma comédia estranhona que começa meio morna demais, parecendo justamente parecer apenas isso -- estranhona --, mas que depois de sua introdução sem ritmo nos apresenta de verdade seus personagens, sua história, sua essência.

= 2015-09-11
:date: 2015-09-11

cinema: Narcos Assisti os três (quatro?) primeiro episódio de Narcos, a série da Netflix produzida por José Padilha (Tropa de Elite) e que dirigiu o piloto.

= 2015-09-12
:date: 2015-09-12

caloni: É o fonte, idiota! Saiu um artigo recente no The Old New Thing (thanks Strauss pelo tuíte) que fala sobre não misturar runtimes do C de diferentes versões do compilador (especialmente se essas versões estão separadas pelo tempo em nada mais nada menos que dezenove anos!). 15:08 cinema: Web Hot American Summer e Unbreakable Kimmy Schmidt: a facilidade de mediocrizar comédias pastelões A Netflix é uma empresa, e como toda empresa ambiciona o lucro.

= 2015-09-13
:date: 2015-09-13

cinema: Quando Estou Com Marnie Mais um dos filmes dos estúdios Ghibli (em que um dos fundadores é Hayao Miyazaki) que já estreou há mais de um ano no Japão e aqui custa a aparecer uma distribuidora decente.

= 2015-09-14
:date: 2015-09-14

email: Reunião de Alinhamento Olá, Senhores. Possuímos uma versão da DLL de comunicação com o device já com os seguintes itens: - Interface .NET: SendMessageWithReply - Interface .NET: Interface de comunicação .NET - Comportamento: Simulação do device por arquivo - Thread da fila: Read/Write - Thread da fila: Comunicação entre threads - Thread da fila: Open/Close - Serializar chamadas e respostas ao device USB Ainda falta os eventos de conexão e desconexão do device, mas acho que seria produtivo agendarmos uma reunião essa semana para entregar a DLL, explicar o código, fazer os testes locais e alinhar as próximas tarefas. Posso sugerir quarta-feira de manhã? []s 11:37 Migrado o domínio da qualityhostonline para o Google. Pagarei um valor um pouquinho acima, mas tenho um storage confiável e um gerenciador de emails instantâneo. O domínio caloni.com.br agora está nas mãos da GitHub Pages e oficialmente não tenho mais nada a ver com eles. Agora aos poucos o negócio é migrar meus dados pessoais para a nova conta, que me dá 30GB. É o suficiente, acredito eu. Daí cancelo a conta que havia aberto de 100GB (por não suportar domínio) e é isso. 11:42 Testando novamente meu daytoday. Parece que esse negócio de ter linhas em brancos me incomoda, mesmo. Bom, espero não incomodar mais =) 12:16 politica: Ambiente ancap e ondas eletromagnéticas Poxa, cara, várias perguntas legais. Estou falando sério =) Vou tentar responder nas limitações do meu tempo e conhecimentos, mas já adianto para esclarecimento que minha visão é totalmente jusnaturalista, e não utilitarista, OK? "Atualmente, o espectro é propriedade do estado, e ele concede faixas do espectro para que empresas privadas o explorem." Com exceção da coerção, o estado nada mais é que uma gigantesca empresa. Essa função de distribuir ondas, portanto, pode ser função de uma empresa. Nada de novo até aí. "Tenha em mente que o espectro é um recurso natural renovável, porém finito e extremamente raro/precioso. Está em constante alta-demanda." Sim, mais ou menos como substâncias raras e úteis como ouro (petróleo não é renovável). Importante o que você disse sobre a demanda constante, isso implica que seu preço tende a possuir poucas oscilações. No entanto, tenha também em mente que estamos falando de algo virtual. Faixas de espectro é um conceito tão abstrato quanto bitcoins. "Num regime ancap, as faixas do espectro seriam consideradas "propriedade privada"?" Pela sua própra definição de bem escasso, a resposta é sim. Podemos imaginar essas faixas como auto-estradas naturais que não são reproduzíveis. Sua utilidade não é ela em si, mas sua função: transportar informação. Porém, mais uma vez, a questão ainda está no conceito de banda, não no meio físico em si. "Num regime ancap, qual direito a propriedade privada teria prioridade? O meu direito sobre a minha terra ou o direito de outra pessoa sobre a transmissão em sua faixa do espectro?" Você quer dizer ondas eletromagnéticas passando por cima de uma propriedade de terceiro? O mesmo direito de ondas sonoras ou de luz: nenhum. "Ah, isso quer dizer que alguém pode bloquear propositadamente minhas ondas e prejudicar minha transmissão". Sim, pode. Você está passando sobre a propriedade do sujeito. Ou é feito um acordo entre todos os proprietários para essa transmissão (ou entre os "incomodados" e "espertinhos") ou há o risco da transmissão ser prejudicada. "Se eu quisesse transmitir numa faixa do espectro alocada a outra pessoa, mas dentro da minha propriedade?" Faixas de espectro podem ser vendidas, mas isso não dá direito do comprador sobre todas as propriedades por onde ela passsa. Isso te dá todo o direito de usar a faixa de espectro que quiser da maneira que quiser dentro de sua propriedade. "Se eu quiser proibir todas as ondas de rádio geradas pelo homem na minha propriedade? Como fica?" Mais uma vez, você está no seu direito de propriedade. Cada um com seus problemas =) """ Considerando uma situação hipotética, em que trocamos o regime atual para um anarco-capitalismo. O que aconteceria se uma empresa colocasse um AP wireless (2.4GHz) com 5W de potência de irradiação disponível para consumidores domésticos, ao invés dos 100mW que a regulação estatista restringe? Se eu quiser transmitir na faixa de micro-ondas, com uma potência de irradiação de mais de 500W (Forno de micro-ondas), quem vai me impedir?¿ """ Ninguém vai te impedir de transmitir nada, exceto se passar por essas propriedades onde os donos querem proibir tudo =) O problema reside apenas quando a sua informação/onda prejudica fisicamente a propriedade de terceiros, como um som muito alto, uma luz muito alta, e ondas de micro-ondas que irão fritar os cérebros dos proprietários em volta =P Muito legal essas questões. Parabéns. []s 13:04 "A comparação entre uma faixa do espectro e bitcoins é bizarra, e você mesmo a contradiz mais além no seu comentário. O espectro é um meio, o bitcoin (informação) é um fim." Sim, ficou bizarro. No entanto, entenda que o espectro não é um meio, é apenas uma definição abstrata. Só será meio quando houver transmissão, que é quando é possível verificar fisicamente sua influência. Já o bitcoin em si não está em lugar algum, mas fisicamente está descentralizado em X servidores físicos. Uma coisa é o que a informação do bitcoin significa, outra coisa é a energia elétrica e o espaço físico necessário para manter os servidores. Suas considerações após este comentário são pertinentes do ponto de vista estatal, e é por isso que é tão fácil convencer as pessoas que o estado é um mal necessário. No entanto, ancap é justamente sobre o poder nas mãos dos indivíduos, o que quer dizer que, sim, uma pessoa classe média com seu apê/casa de 100 metros quadrados pode influenciar sinais de banda de mega-corporações, e elas não podem fazer uso da força estatal, então teriam que entrar em acordos com essas pessoas, e daí é possível extrapolar e imaginar como o poder dessas mega-corporações começa a se fragmentar =) Sobre o efeito das ondas na salubridade das pessoas, eu acho que fui claro: isso é agressão, e há todo o direito de defesa dessas pessoas. Mas por favor não imagine que a defesa é sair atirando nas pessoas. A maioria dos espantalhos que montam sobre o ambiente ancap é que tudo será resolvido na bala. Por fim: "A questão do espectro é interessante, pois é um dos setores em que o estado é quem garante que não exista a ocorrência de monopólios." A regulação do estado é justamente um monopólio. Se alguém fizer como no seu exemplo da pessoa em sua casinha, terá sua propriedade agredida pelo estado para garantir a tal regulamentação. Isso não proíbe que existam empresas que verifiquem a viabilidade técnica de transmissão de uma faixa de banda em alguma localidade (isso não é regulamentar), mas não será um país continental como o Brasil. Regular para um continente é loucura. Gera monopólios forçados da mídia. 14:00 "A única forma de usarmos de maneira racional os recursos naturais, é de forma cooperativa." Exatamente, e essa forma se chama capitalismo. OK, eu sei que você não quis dizer isso =) Seria muito bom se fosse simples assim, de forma centralizada, poder explorar os recursos de maneira racional, mas a soma de cálculos necessários para utilizar os recursos naturais de maneira ótima é tão complexo, tão complexo, que existe até um termo para isso em economia: "problema do cálculo econômico". Esse cálculo é tão complexo que a humanidade não conseguiu ainda criar uma teoria que resolvesse isso. Mas tentaram. Foi pedido a um economista russo, em plena época da Revolução Soviética, que bolasse uma fórmula para distribuir os alimentos de forma ótima entre a população (eu tinha anotado em algum lugar o nome dele, mas não sei onde deixei; sorry). Russo como ele é, ele perdeu um bom tempo tentando desvendar este cálculo. Sua conclusão? O sistema de precificação do capitalismo é o mais perfeito nesse sentido, pois é auto-ajustável e consegue lidar com a informação descentralizada. 15:55 desenv: Interface .NET: SendMessageWithReply Foi desenvolvido um mecanismo com duas threads: uma que envia mensagens enfileiradas e outra que recebe mensagens e as repassa ao próximo da fila. O núcleo implementado está na classe DevComm::Communicator. Isso funciona da seguinte maneira:

= 2015-09-15
:date: 2015-09-15

cinema: Que Horas Ela Volta? "Que Horas Ela Volta" tem a virtude de conseguir se tornar um filme essencial para a discussão contemporânea e ao mesmo tempo se entregar a uma cartilha retrógrada que é usada a cada momento como combustível para uma esquerda brasileira (igualmente retrógrada) com sede de vingança e miopia de caráter.

= 2015-09-16
:date: 2015-09-16

desenv: Interface .NET: Interface de comunicação .NET ## Estratégias de Implementação Para possibilitar a comunicação com .NET e outras linguagens de maneira harmoniosa, foi necessário usar as técnicas mais básicas do C/C++ para que não houvesse problemas futuros. Dessa forma, os buffers de entrada e saída para envio e recebimento de mensagens do device USB são alocados e desalocados através de duas funções exportadas na própria DLL: DeviceCommAllocMemory e DeviceCommFreeMemory. Abaixo como exemplo o código em .NET da função mais complexa, DeviceCommSendMessageWithReply: ```cs public byte[] SendMessageWithReply(byte[] _message) { var ret = new byte[64]; IntPtr message, receivedMessage; int messageReceivedSize = 64; if (DLL.DeviceCommAllocMemory(out message, _message.Length) == 0) { if (DLL.DeviceCommAllocMemory(out receivedMessage, 64) == 0) { Marshal.Copy(_message, 0, message, _message.Length); if (DLL.DeviceCommSendMessageWithReply(message, _message.Length, receivedMessage, ref messageReceivedSize) == 0) { Marshal.Copy(receivedMessage, ret, 0, messageReceivedSize); } DLL.DeviceCommFreeMemory(receivedMessage); } DLL.DeviceCommFreeMemory(message); } return ret; } ``` ## Logs Além disso, para possibilitar juntar os logs da aplicação cliente com as operações que ocorrem no lado servidor foi exportada a função DeviceCommSetLogger que recebe um ponteiro de função que pode ser feito em .NET como um delegate: ```cs class DeviceComm { unsafe public delegate void Logger(string line); [DllImport(@"Multivendor.Middleware.DeviceComm.dll", CallingConvention = CallingConvention.Cdecl)] public static extern int DeviceCommSetLogger(Logger logger); private DLL.Logger logger = new DLL.Logger(WriteLog); public DeviceComm() { InitializeLog4Net(); DLL.DeviceCommSetLogger(logger); } } ``` Do lado C++, tanto o logger quanto a classe de comunicação com o device são estáticas, mas a comunicaçao precisa ser iniciada e finalizada pelas funções exportadas DeviceCommConnect e DeviceCommDisconnect. Por fim, é possível enviar configurações diferentes para teste e detalhes de implementação configuráveis. Inicialmente criado para testes via arquivo, a função DeviceCommConfigure **deve ser chamada antes** do Connect para que sejam criadas outras classes de envio e recebimento (no exemplo criado, que leia e escreva em um arquivo e não no device). ## Dependências A DLL é dependente das bibliotecas do SDK da Microsoft, disponível em qualquer Visual Studo, Setupapi.lib e Hid.lib. 08:35 desenv: Comportamento: Simulação do device por arquivo Para testes sem o device envolvido, foi exportada a função DeviceCommConfigure que recebe 08:45 desenv: Serializar chamadas e respostas ao device USB Como foi visto na documentação do mecanismo DeviceCommSendMessageWithReply, as filas de entrada e saída do device na DLL de comunicação estão isoladas e possuem duas threads para manipulá-las: de escrita no device e de leitura no device. ![](/images/send-message-with-reply.png) A escrita para o device é feita em lote através da função API Win32 WriteFile, com pausa de até 100 millisegundos entre a fila esvaziar e um novo elemento ser inserido. Todos os dados enfileirados são enviados um seguido do outro, e as respostas são enfileiradas da mesma maneira através da leitura em sequência. Talvez seja necessário fazer o ajuste fino desse mecanismo de acordo com o comportamento do device. Pode-se determinar um tamanho fixo de mensagem (os 64 bytes do protocolo USB). Também deve ser necessário estipular um timeout no comportamento de resposta. Do contrário, as threads que não receberem resposta ficarão presas para sempre. 20:35 cinema: A Pele de Vênus Finalmente chega no Brasil "A Pele de Vênus", filme de 2013 do diretor Roman Polanski e que lembra bastante Lua de Fel ao falar das complexidades da relação entre os sexos, principalmente sobre dominação de um sobre outro.

= 2015-09-17
:date: 2015-09-17

desenv: Vou escrever alguma coisa sdkfjshf sdfdsjf sdfkfj [] 12:39 dlfkjsdlfk sldfkjsl lsdkfj 18:57 cinema: Sete Oportunidades Seven Chances é um filme de uma hora de Buster Keaton que mais uma vez consegue a proeza de contar uma história datada, fútil e banal da maneira mais prosaica, mais hilária e mais movimentada possível.

= 2015-09-18
:date: 2015-09-18

cinema: As Três Idades Three Ages é o primeiro longa-metragem de Buster Keaton, um dos comediantes mais geniais do início do Cinema, se não um dos mais geniais do Cinema em si.

= 2015-09-19
:date: 2015-09-19

cinema: Terror in Resonance Esse aparentemente é um seriado de uma temporada apenas, com cada um de seus onze episódios com cerca de 20 minutos ou menos, dando no final das contas um filme de pouco mais de três horas com os famigerados cortes e padrões de mídia japonesa.

= 2015-09-20
:date: 2015-09-20

cinema: Advantageous Este filme possui um conceito interessante com pouco substrato.

= 2015-09-21
:date: 2015-09-21

Nova reforma no DayToDay. Agora tudo está integrado com o blogue, inclusive partidas de xadrez, o próprio log do daytoday, e anotações do kindle. Os relatórios podem melhorar, mas tenho que ver em como isso vai ajudar. 10:59 "Detached head means you are no longer on a branch." (StackOverflow) - That makes a LOT of sense now =) 11:19 Rodando o VBS que o Zé mandou para o inventário com os seguintes parâmetros ele executa como silent: ``` PCeXVista.vbs /PC:SUSE /FOUT:3 /VREL:2 /TREL:1 /SDX:2 ``` PC é o nome do computador. FOUT é a saída do relatório (1 é html, 2 é mht, 3 é xml (esse!), 4 é txt e 5 csv. VREL é a visualização do relatório (2, não). TREL são as informações do relatório (1 consolidado). SDX é um tal de directx mode, que eu coloco não (2). 11:51 email: Projeto de inventário Zé/Flávio Zé, dei uma olhada no VBS. É muita coisa e não faz sentido migrar. O que podemos fazer nesse esquema de execução remota é pegar a solução do RPC (que se instala automaticamente como o PsExec) e embutir o script para executá-lo através do EXE. Daí pegamos o XML gerado e enviamos usando a solução do RsSyncFile via socket, que na verdade é o projeto SendRemoteFile da Intelitrader. A solução de instalar remoto é um fonte antigo que eu usei para a Scua na época que era prestador full time, e ele está sob licença de open source, então não há nenhum problema em usarmos. O SendRemoteFile (e o ReceiveRemoteFile por tabela) pertencem à Intelitrader/BitForge, e precisamos cobrar as 20 horas já gastas na solução. Como a Scua já tinha um contrato de horas vocês já saíram ganhando o reúso para o RsSyncFile, mas não posso fazer a mesma coisa com o Flávio. Então a sugestão é oferecermos a ele 30 horas de serviço, sendo 20 sobre o código já escrito e 10 para juntar todo ele em um executável que faça todo o serviço, lembrando que não é um projeto fechado, apenas horas de consultoria, podendo haver necessidade de mais horas. O valor/hora nosso de tabela é 350, mas para manter a expectativa de negócio podemos baixar para 320, totalizando 9.600. Parece razoável para uma conversa com ele? É preciso lembrar que ele vai levar um executável com instalação remota estilo PsExec, um executador de VBScripts e que ainda envia resultados pela rede para um servidor centralizado. []s 11:55 empresa: Tabela de Preços Essa é nossa tabela de preços sugerida pelo Strauss e que para mim continua atual e válida. " Minha sugestão é cobrar de acordo com a antecedência e planejamento R$ 600,00 - menos de 24 horas de aviso prévio R$ 450,00 - menos de uma semana R$ 350,00 - mais de uma semana de antecedência Menos que 350 em projetos e contratos longos, de acordo com a negociação " 15:27 O vbscript não grava txt nem xml, não foi implementado. Porém, parece fácil de fazer. Dei uns ajustes no txt e foi até que legal (embora em unicode). Vou fazer o mesmo com o xml e não deve passar de umas 6 horas. 20:10 cinema: Um Homem com uma Câmera Man With a Movie Camera, ou Chelovek s kino-apparatom, provavelmente é o filme experimental mais conhecido pelos cinéfilos, talvez por ter sido recomendado e elogiado por críticos do mundo todo.

= 2015-09-22
:date: 2015-09-22

desenv: Problema no GetVersion para Windows 10 Resolvido. Atualmente nessa fase de transição há duas estruturas de fontes duplicadas: uma legada e a outra criada pela BitForge. A legada é formada por vários repositórios Bazaar no mesmo diretório raiz que correspondem a diferentes produtos do cliente. São eles, por ordem de compilação: Framework, Inventory, HDEncryption, SecuritySuite. Na criada pela BitForge essa estrutura se mantém, mas há apenas um repositório Git mantido no BitBucket. A estrutura legada está disponível, uma vez que você se autentica na VPN da Scua, em bzr://172.11.1.15, mantida por um serviço criado a partir do processo bzr funcionando como server e permitindo writes (commits). A pasta real está no mesmo IP, na máquina e:\fontes\bzr_repository. Além da pasta SecuritySuite, há uma outra pasta (e repositório) chamada SecuritySuite9 que contém a versão 9 desse produto (a SecuritySuite é a versão 10). Frequentemente temos que mexer nessa versão em específico, pois alguns clientes da Scua ainda a usam. Portanto, sempre é bom perguntar qual versão deve ser mexida ;). Já a versão 10 da estrutura legada, assim como o Framework, Inventory e HDEncryption se encontram atualizados no novo repositório e devem ser mantidos a partir dele. A estrutura legada existe apenas para manter o histórico e permitir consulta e a compilação da versão 9. # Compilação A compilação legada funciona rodando o script Build/build.bat direto desta pasta em um prompt de comando. Isso irá rodar todos os projetos mapeados na batch na ordem em que as dependências sempre estejam compiladas antes. O funcionamento padrão é compilar a versão Release, mas há outros parâmetros (rode com /? para saber quais). Durante o tempo em que os projetos foram mantidos por apenas um desenvolvedor, este modelo foi mantido, mas não necessariamente tudo estará compilando normalmente, então eventuais ajustes deverão ser feitos sempre que necessário. A compilação nova ainda não está completa, mas reúne todas as bibliotecas, espalhadas no modelo legado em mini-libs, para uma única lib. Essa mudança foi feita para evitar perder muito tempo procurando e compilando dependências, uma vez que estamos em uma fase de transição em que a ideia é sempre que possível, compilar os binários para o Visual Studio 2013 (e futuramente os mais novos). Porém, nem todos os projetos funcionam corretamente, ou possuem dependências que não compilam corretamente. Nesse caso, mantém-se projetos legados em torno do fonte para a compilação (quase toda a base de fontes compila no VS 2003, mas durante a evolução e criação de novos projetos outras versões foram inseridas, como 2005, 2008 e 2010). É importante manter o ambiente com as versões do VS instaladas, pelo menos para C++. No modelo novo as bibliotecas usadas por todos está sendo reunida no projeto Build/Libraries. O projeto está em VS2013 e contém diferentes bibliotecas unidas em uma só. Há diferentes modos de compilação dentro do projeto para VS2010, estático (sem dependência de DLL), etc. Todos os projetos que dependem de uma versão diferente da última (Debug/Release) devem seguir a mesma nomenclatura de saída para conseguir encontrar as dependências a partir desta. Por exemplo, um projeto que depende da versão estática do VS2010 precisa nomear sua configuração como ReleaseStaticVC100 (ou Debug), pois na saída do Libraries.lib e outras dependências do Lng (adiante) irão estar em uma pasta com esse nome. # Lng Todas as libs de terceiros estão centralizadas em uma pasta que deve estar na raiz com o nome Lng. As libs estão todas em _Output em diferentes pastas de acordo com a configuração, e os fontes estão com seus projetos e versões nomeados no raiz do Lng. 17:22 Protocolo Vivo para atendimento sobre portabilidade: 2015349974483

= 2015-09-23
:date: 2015-09-23

Aprendendo Assembly 64 bits. 15:50 Protocolo para mudança de cadastro na Vivo é 20153154578563. 15:58 Agora o protocolo para o 10615 é 2015154606808 16:35 Agora o protocolo do 10315, que estou voltando: 20153154802774 16:51 Tenho que enviar para a Caixa Postal 31231 copia simples rg cpf cep 01309-970 A/C Augusta para atualizar o cadastro da Vivo. Ligar novamente para 10315 após 7 dias úteis. 19:26 cinema: Plano 9 do Espaço Sideral É este o "pior filme de todos os tempos", como foi votado no livro do crítico Michael Medved? É óbvio que não.

= 2015-09-24
:date: 2015-09-24

Também sou desenvolvedor de software. Não faz muito sentido essa ideia de que alguém vai estudar mais, otimizar mais o código, já que ele está protegido mesmo. Tudo que eu tenho que fazer é patentear e, se tiver medo de ser copiado mesmo assim, mantê-lo fechado. Em um ambiente livre de PI, os trabalhadores intelectuais não poderiam fazer apenas o feijão com arroz, pois isso todo mundo faz. No fundo a PI é uma ode à mediocridade, pois ninguém precisa melhorar/inovar quando se está protegido de pessoas mais criativas/habilidosas que você. 07:29 Um bom livro para ler no futuro é Contra a Propriedade Intelectual, ou Agains Intellectual Property, disponível no IMB para download. 07:32 Erros mais comuns dos comentários : - No capitalismo todos são idiotas e gastam milhões em pesquisa e no dia seguinte o concorrente rouba tudo. - Todo mundo só pensa em lucro! Por isso mesmo é melhor o estado proteger esse lucro com PI. - O que vou fazer sem PI se ganho dinheiro controlando minha mediocridade? Vou ter que inovar sempre? - É melhor deixar a pessoa morrer do que vender um órgão para ela. - Mais algum? 09:42 desenv: Problema com equipamentos de rede no Windows 10 Resolvido o problema do no do SO, porém verificamos novos com problemas com o WINDOWS10 e com maquinas com HD SSD: Equipamentos com WINDOWS 10: Não pegou corretamente os COMPONENTES DE REDE ![](/images/problema-rede-windows10.png) O correto seria como aparece no arquivo .MHT em anexo no item CENTRO DE CONECTIVDADE Detecção de Unidades Logicas (em qualquer SO que tenha HD SSD) No passado o Fernando fez um implementação para pegar o TIPO de DRIVE (PATA, SATA, SATA II) acredito que isso esteja dando problemas em máquinas com HD SSD e com isso falha a detecção de unidades logicas. 18:00 cinema: O Preço da Fama No começo de "O Preço da Fama" somos avisados de que a história se baseia em fatos verídicos.

= 2015-09-25
:date: 2015-09-25

cinema: Man Up Comédia despretenciosa (e britânica, vale afirmar) sobre uma mulher insegura em conseguir um companheiro pela sua insegurança, apesar de sua família e sua mãe sempre tentarem suportá-la.

= 2015-09-26
:date: 2015-09-26

Agora o protocolo do 10315, que estou voltando: 20153154802774

= 2015-09-27
:date: 2015-09-27

cinema: C.O.G. Uma experiência religiosa ou uma auto-descoberta sexual? Uma visão romântica de nossas diferenças de princípios ou um drama que tenta soar engraçado? Se sentindo com múltiplas personalidades, C.O.G. pode muito bem se apresentar como uma visão religiosa do mundo, pois usa a maçã como uma espécie de símbolo do pecado (e da tentação) e mantém em sua história uma estrutura esquizofrênica tão conhecida dos religiosos mais fanáticos.

= 2015-09-28
:date: 2015-09-28

cinema: Teste Era um filme muito legalzinho.

= 2015-09-29
:date: 2015-09-29

desenv: Função de callback do timer do LED do Controller ``` void vTimerLEDCallback( xTimerHandle pxTimer ) { if(GET_SERIAL_NUMBER == TRUE) { classIHM.ledToggle(LED_RED); } else { if((IsBufferEmpty(nonVolatileMemoryGroups.Group1.SystemCryptoKey, 32) == 0) || (memcmp(nonVolatileMemoryGroups.Group1.SeedCryptoKey, nonVolatileMemoryGroups.Group1.SystemCryptoKey, 32) == 0)) { VolatileMemoryGroups.Group0.sBitsStateDevice.bitAuthenticated = FALSE; classIHM.ledOn(LED_RED); // classIHM.ledToggle(LED_RED); } else if(VolatileMemoryGroups.Group1.sStreamBypass1.stream != 0 || (VolatileMemoryGroups.Group1.sStreamBypass2.stream != 0) && VolatileMemoryGroups.Group0.sBitsStateDevice.bitAuthenticated == TRUE ) { classIHM.ledToggle(LED_GREEN); } else { VolatileMemoryGroups.Group0.sBitsStateDevice.bitAuthenticated = TRUE; classIHM.ledOn(LED_GREEN); xTimerStop(xTimerBypass, 0); VolatileMemoryGroups.Group1.sStreamBypass1.stream = 0; VolatileMemoryGroups.Group1.sStreamBypass1.lenght = 0; VolatileMemoryGroups.Group1.sStreamBypass2.stream = 0; VolatileMemoryGroups.Group1.sStreamBypass2.lenght = 0; } } ``` 11:09 email: Problema na conectividade com o TCP recovery Senhores, aparentemente os IPs de recovery BMF&Bovespa estão inacessíveis na máquina do InteliMarket. Pode rodar os comandos abaixo nas máquinas da solução EZMarket? Estamos testando inicialmente os canais 001 (BMF) e 051 (Bovespa). (...) De acordo com o email com as sessões TCP, a data de execução está marcada para amanhã, mas pelo menos a conectividade deveria estar funcionando: ![](/images/titulo-recovery-email-data-execucao.png) Acho que podemos questionar a bolsa. []s 11:30 Problema aparentemente resolvido. A rota para o IP estava saindo para a internet. O Thiago resolveu adicionando uma rota. 11:51 Feita análise da situação na [Título/Easyinvest](/uploads/analise-titulo-recovery.txt). Depois de consertado o telnet pelo Thiago, resta os logouts que estamos levando. 11:53 Será que dá para embutir o log? <iframe src="/uploads/analise-titulo-recovery.txt"></iframe> 18:48 2015-09-29 19:06:08 00:17:19 cinema: Shortbus Um _indie_ por natureza, apresentado em uma Nova Iorque de maquete com textura surreal, colorido todo o tempo com uma extensa e agradável trilha sonora, protagonizado por atores em sua maioria completos desconhecidos e, para salpicar ainda mais, recheado de cenas de sexo reais, por casais, trios e grupos inteiros.

= 2015-09-30
:date: 2015-09-30

2015-09-30 10:30:27 00:07:58 email: Erro no registro do Multivendor Olá, Ricardo. Sim, costumo colocar breakpoint justamente nessa função. Só que dessa vez ele não retorna nada. Estou enviando um vídeo de como estou realizando o registro e dos LEDs. Além dos logs, claro. []s 18:43 2015-09-30 19:12:47 00:28:48 cinema: O Grande Chefe Uma comédia pautada no absurdo, mas que ancora suas situações em neuroses realistas de colegas de uma empresa desde sua fundação.

= 2015-10-01
:date: 2015-10-01

links: Como assinar um assembly .NET sem ter o fonte Às vezes você precisa fazer isso, como agora, que tenho que usar o Easytech.Multivendor.SecurityPacket.dll para compilar o Middleware assinado para conseguir que ele tenha um strong name e assim eu possa adicionar pelo gacutil e assim criar uma tlb. 18:18 2015-10-01 18:38:33 00:19:45 cinemaqui: A Possessão do Mal Você já conhece a história: câmeras espalhadas pela casa; acontecimentos estranhos que vão aumentando a cada noite; os especialistas na arte de se comunicar com espíritos.

= 2015-10-02
:date: 2015-10-02

2015-10-02 09:13:29 00:02:35 Coloquei critical sections por fora da própria LIB do CTree da Scua, e adicionei uma porrada de threads adicionando e apagando objetos. Rodou por meia-hora sem problema algum. A questão é: se eu paro o processo no meio é batata: a base corrompe! Se eu paro de forma "comportada", nunca dá problema. Ou seja: não dá para evitar que a base corrompa, mesmo que avaliemos o que pode ser melhorado, pois sempre haverá a possibilidade de algum capotamento não planejado explodir com a base. Talvez corrigir esse corrompimento? 13:34 2015-10-02 13:35:52 00:01:07 A solução para o corrompimento será: ou postergamos o add/delete sempre (e testar para ver se corrompe mesmo assim) ou mantemos duas cópias dos arquivos: read e write. 14:08 Notei também que a listagem do SidInfo é muito louca com várias threads, mas com apenas uma o número de objetos se mantém. Ou seja, nem multhreading o bagulho é. 16:35 2015-10-02 17:45:10 01:09:30 cinemaqui: Beira-Mar Beira-Mar é aquele lugar onde terra e mar são confundidos, e onde geralmente há uma praia.

= 2015-10-04
:date: 2015-10-04

2015-10-04 21:41:12 00:28:33 cinema: Uma Aventura Lego Eis um filme que constrói sua história em um universo de bonecos e peças montáveis que juntos somam todos os clichês possíveis e imagináveis do gênero aventura.

= 2015-10-05
:date: 2015-10-05

Testando daytoday Talvez com mais de uma linha dê pau? 07:21 Segunda escrita do dia. Também com mais de uma linha. 07:22 Coloquei critical sections por fora da própria LIB do CTree da Scua, e adicionei uma porrada de threads adicionando e apagando objetos. Rodou por meia-hora sem problema algum. A questão é: se eu paro o processo no meio é batata: a base corrompe! Se eu paro de forma "comportada", nunca dá problema. Ou seja: não dá para evitar que a base corrompa, mesmo que avaliemos o que pode ser melhorado, pois sempre haverá a possibilidade de algum capotamento não planejado explodir com a base. Talvez corrigir esse corrompimento? 07:23 Coloquei critical sections por fora da própria LIB do CTree da Scua, e adicionei uma porrada de threads adicionando e apagando objetos. Rodou por meia-hora sem problema algum. A questão é: se eu paro o processo no meio é batata: a base corrompe! Se eu paro de forma "comportada", nunca dá problema. Ou seja: não dá para evitar que a base corrompa, mesmo que avaliemos o que pode ser melhorado, pois sempre haverá a possibilidade de algum capotamento não planejado explodir com a base. Talvez corrigir esse corrompimento? 07:24 Coloquei critical sections por fora da própria LIB do CTree da Scua, e adicionei uma porrada de threads adicionando e apagando objetos. Rodou por meia-hora sem problema algum. A questão é: se eu paro o processo no meio é batata: a base corrompe! Se eu paro de forma "comportada", nunca dá problema. Ou seja: não dá para evitar que a base corrompa, mesmo que avaliemos o que pode ser melhorado, pois sempre haverá a possibilidade de algum capotamento não planejado explodir com a base. Talvez corrigir esse corrompimento? 07:25 Coloquei critical sections por fora da própria LIB do CTree da Scua, e adicionei uma porrada de threads adicionando e apagando objetos. Rodou por meia-hora sem problema algum. A questão é: se eu paro o processo no meio é batata: a base corrompe! Se eu paro de forma "comportada", nunca dá problema. Ou seja: não dá para evitar que a base corrompa, mesmo que avaliemos o que pode ser melhorado, pois sempre haverá a possibilidade de algum capotamento não planejado explodir com a base. Talvez corrigir esse corrompimento? 14:46 Instalando WarSaw no Ubuntu, agora, como um pacote .deb. ![](/images/warsaw-ubuntu.png) 14:31 2015-10-05 17:05:41 02:33:49 desenv: Problemas de conflito na base ctree ## Condições dos testes Toda essa análise foi baseada no projeto DataSvrStressTest, que conseguiu simular o corrompimento da base ctree através das operações comuns do DataSvr: 1. Listagem de objetos: WorkerThreadDumpSidInfo -> FirstRecord/NextRecord; 2. Adição de novo objeto: WorkerThreadAdd -> AddSid -> SaveRecord -> ReWriteRecord; 3. Exclusão de objeto: WorkerThreadDelete -> RemoveRecord -> DeleteRecord; 4. Atualização de todos objetos: WorkerThreadRefresh -> ClearIDOnAllDatabases -> RemoveRecordT -> DeleteRecord. ## Resultados iniciais Ao criar diversas threads dessas quatro operações no mesmo executável, em algum momento uma exceção interna ao ctree ocorria e a partir desse momento a base estava inacessível, apresentando erro na abertura. A única combinação que não corrompe a base são múltiplas threads da operação 1 (Listagem de objetos), já que ela não envolve escrita no banco. Porém, mesmo assim, através dela foi possível constatar que o estado interno do ctree usado não permite operações multithreading. Enquanto rodando com uma única thread a base usada no teste logava o total de objetos, com múltiplas threads os valores estavam sempre errados e muito abaixo do total: ``` Log com múltiplas threads: DATA HORA PID THREAD OBJETOS 2015-10-05 14:55:03 B25C.B350 00000000 DataSvrStressT 4700 objects 2015-10-05 14:55:03 B25C.86EC 00000000 DataSvrStressT 2636 objects 2015-10-05 14:55:03 B25C.8A58 00000000 DataSvrStressT 2339 objects 2015-10-05 14:55:03 B25C.B770 00000000 DataSvrStressT 2245 objects 2015-10-05 14:55:03 B25C.C194 00000000 DataSvrStressT 2928 objects 2015-10-05 14:55:03 B25C.B7BC 00000000 DataSvrStressT 5034 objects 2015-10-05 14:55:03 B25C.A61C 00000000 DataSvrStressT 5183 objects 2015-10-05 14:55:03 B25C.BFB8 00000000 DataSvrStressT 3951 objects 2015-10-05 14:55:03 B25C.8A58 00000000 DataSvrStressT 2487 objects 2015-10-05 14:55:03 B25C.B770 00000000 DataSvrStressT 3660 objects 2015-10-05 14:55:03 B25C.B350 00000000 DataSvrStressT 2855 objects 2015-10-05 14:55:03 B25C.8750 00000000 DataSvrStressT 2394 objects 2015-10-05 14:55:03 B25C.C448 00000000 DataSvrStressT 2378 objects 2015-10-05 14:55:03 B25C.8750 00000000 DataSvrStressT 4524 objects 2015-10-05 14:55:03 B25C.C208 00000000 DataSvrStressT 2188 objects 2015-10-05 14:55:03 B25C.87B0 00000000 DataSvrStressT 2030 objects 2015-10-05 14:55:03 B25C.AB3C 00000000 DataSvrStressT 3778 objects Log com thread única rodando várias vezes: DATA HORA PID THREAD OBJETOS 2015-10-05 14:56:49 BC20.BA58 00000000 DataSvrStressT 35965 objects 2015-10-05 14:56:49 BC20.BA58 00000000 DataSvrStressT 35965 objects 2015-10-05 14:56:49 BC20.8864 00000000 DataSvrStressT 35965 objects 2015-10-05 14:56:49 BC20.8864 00000000 DataSvrStressT 35965 objects 2015-10-05 14:56:49 BC20.8864 00000000 DataSvrStressT 35965 objects 2015-10-05 14:56:49 BC20.8864 00000000 DataSvrStressT 35965 objects 2015-10-05 14:56:49 BC20.8864 00000000 DataSvrStressT 35965 objects 2015-10-05 14:56:49 BC20.8864 00000000 DataSvrStressT 35965 objects 2015-10-05 14:56:49 BC20.8864 00000000 DataSvrStressT 35965 objects 2015-10-05 14:56:49 BC20.8864 00000000 DataSvrStressT 35965 objects 2015-10-05 14:56:49 BC20.8864 00000000 DataSvrStressT 35965 objects 2015-10-05 14:56:49 BC20.8864 00000000 DataSvrStressT 35965 objects 2015-10-05 14:56:49 BC20.87E4 00000000 DataSvrStressT 35965 objects 2015-10-05 14:56:50 BC20.87E4 00000000 DataSvrStressT 35965 objects 2015-10-05 14:56:50 BC20.87E4 00000000 DataSvrStressT 35965 objects ``` Mesmo assim, o "teste de capotamento", que consistem em parar o processo no meio da execução (como se alguma exceção tivesse ocorrido) nunca corrompeu a base apenas com a operação 1, incluindo múltiplas threads. Já com a adição de novos objetos, por exemplo, havia exceção dentro do ctree com múltiplas threads -- o que corrompia a base. Às vezes nem era claro essa exceção, pois apenas exibia o erro 114 ao deletar e se via que estava corrompido na próxima execução. Após análise da função envolvida (vide acima), foi possível chegar em uma versão do código em que não havia mais o corrompimento, desde que o programa fosse terminado corretamente (sem o "teste de capotamento"). Com o "teste de capotamento", no entanto, a base continuava corrompendo. ## Resolução do corrompimento por exceção interna do ctree O problema nas funções de adição e de exclusão parece ser o uso do mutex global várias vezes, permitindo que duas threads efetuassem a mesma operação de forma cruzada, ou seja, uma iniciava antes da outra terminar. Esse era o código atual para a adição (a exclusão é semelhante): ``` // OBTENÇÃO DO MUTEX WaitForSingleObject(m_hPhysicalAccess, INFINITE); __try { RetErr = AddRecord(Keyno, Data); } __finally { // LIBERAÇÃO DO MUTEX ReleaseMutex(m_hPhysicalAccess); } if(RetErr == KDUP_ERR) { bUpdate = TRUE; DataTemp = new char[ReadSizeData]; memcpy(DataTemp, Data, ReadSizeData); // OBTENÇÃO DO MUTEX (NOVAMENTE NA MESMA FUNÇÃO) WaitForSingleObject(m_hPhysicalAccess, INFINITE); __try { RetErr = GetRecord(Keyno+1, DataTemp, DataTemp); } __finally { // LIBERAÇÃO DO MUTEX ReleaseMutex(m_hPhysicalAccess); } if(RetErr == NO_ERROR) { ``` ``` Log após corrompimento da base ctree: DATA HORA PID THREAD OBJETOS 2015-10-05 15:56:29 6D88.5D9C 00000000 DataSvrStressT 0 objects 2015-10-05 15:56:29 6D88.EC14 00000000 DataSvrStressT 0 objects 2015-10-05 15:56:29 6D88.EAAC 00000000 DataSvrStressT 0 objects 2015-10-05 15:56:29 6D88.E51C 00000000 DataSvrStressT 0 objects 2015-10-05 15:56:29 6D88.5D9C 00000000 DataSvrStressT 0 objects 2015-10-05 15:56:29 6D88.EC14 00000000 DataSvrStressT 0 objects 2015-10-05 15:56:29 6D88.EAAC 00000000 DataSvrStressT 0 objects 2015-10-05 15:56:29 6D88.E51C 00000000 DataSvrStressT 0 objects 2015-10-05 15:56:29 6D88.EAAC 00000000 DataSvrStressT 0 objects 2015-10-05 15:56:29 6D88.EAAC 00000000 DataSvrStressT 0 objects 2015-10-05 15:56:29 6D88.E51C 00000000 DataSvrStressT 0 objects 2015-10-05 15:56:29 6D88.E51C 00000000 DataSvrStressT 0 objects 2015-10-05 15:56:29 6D88.EAAC 00000000 DataSvrStressT 0 objects 2015-10-05 15:56:29 6D88.E51C 00000000 DataSvrStressT 0 objects 2015-10-05 15:56:29 6D88.EAAC 00000000 DataSvrStressT 0 objects 2015-10-05 15:56:29 6D88.EAAC 00000000 DataSvrStressT 0 objects ``` O código novo obtém o mutex e que funciona (sem o "teste do capotamento") obtém o mutex e libera o mutex apenas uma vez. Em testes extensivos não foi mais verificado o problema. Com o "teste do capotamento" o problema ocorre praticamente a todo o momento. ## Sugestão de correção da listagem Para corrigir essa deficiência do ctree em não suportar múltiplas threads a listagem foi cacheada em memória. O primeiro FirstRecord varre toda a tabela atual e guarda em memória. As próximas listagens fazem a varredura em memória, não mais recorrendo ao disco/arquivo. Com isso todas as listagens passaram a retornar o número de objetos correto. ### Evolução Nesse modelo não está prevista a atualização do banco. Conforme o Zé colocou, uma das soluções possíveis é postergar o delete no banco para o final do dia. Tendo em vista que já foi corrigida a listagem, sugiro continuarmos com essa solução para a adição e remoção de objetos. Já foi feito o suporte dessas operações em memória, além a geração de logs de transações (em arquivo SidInfoLog.dat), mas ainda faltam os seguintes itens: - Leitura do log de transação no restart do serviço / início de outros programas. - Commit das transações no disco (por programa externo ou durante início do DataSvr, mas não pode ser feito durante o seu funcionamento normal, com o risco de corrompimento). - Limitar mudança apenas para SidInfo (atualmente vale para todas as tabelas, mas não há sentido de adicionar essa complexidade no momento). Tempo estimado: 6/8 horas com testes. 21:36 2015-10-05 22:21:42 00:44:50 cinema: Samurai X 1: O Filme - "Me mate", - "Morra".

= 2015-10-06
:date: 2015-10-06

2015-10-06 14:54:29 00:13:29 desenv: Cacheamento de mudanças no ctree e commit pelo DataSvr ## Mudanças As seguintes mudanças foram efetuadas após a análise de corrompimento no comportamento da leitura e escrita do ctree local pelo DataSvr: - Leitura do log de transação no (re)start do serviço - Commit das transações no disco - Limitar mudança apenas para SidInfo Além disso, o DataSvr foi parametrizado para integrar a solução, além de ter sido gerado um UnitTest para verificar se o funcionamento básico corresponde ao esperado, e parametrizado também o StressTest para possibilitar testes em outras bases pelo suporte, além de ser uma ferramenta apartada para a realização do commit. Pela ferramenta DataSvrStressTest, se executada sem parâmetros, ela exibirá a seguinte saída: ``` DataSvrStressTest v. Oct 6 2015 14:40:45 How to use: --count Number of times to run the test --list Number of threads to list objects --add Number of threads to add objects --del Number of threads to del objects --refresh Number of threads to refresh objects --cache Use new cache solution --commit-before Commit old transaction log --commit-after Commit transaction log after tests ``` Onde as opções --count, --list, --add, --del, --refresh e --cache dizem respeito aos testes de estresse no modo cacheamento (é possível testar sem o cacheamento omitindo o parâmetro --cache). Os parâmetros --commit-before e --commit-after realizam o commit das operações no ctree. Sem esses dois parâmetros, tudo que é alterado no ctree fica apartado em um arquivo de log, o SidInfoLog.dat. Durante o commit, esse arquivo é renomeado para SidInfoCommit.dat e todas as mudanças são gravadas para o SidInfo.dat (é importante lembrar que esse método de cacheamento está ativado apenas para o SidInfo, que contém os logins e ids dos objetos). Exemplos de uso para teste de estresse: ``` Uma thread para cada operação rodando 5 vezes: DataSvrStressTest.exe --cache --count 5 --list 1 --add 1 --del 1 --refresh 1 Uma thread para cada operação rodando 100 vezes: DataSvrStressTest.exe --cache --count 100 --list 1 --add 1 --del 1 --refresh 1 Apenas teste de listagem com 10 threads (testar 7 vezes): DataSvrStressTest.exe --cache --count 7 --list 10 Teste de estresse com commit após a operação com 10 threads cada operação (realizar o estresse 3 vezes): DataSvrStressTest.exe --cache --count 3 --list 10 --add 10 --del 10 --refresh 10 --commit-after Teste de estresse com commit após e antes da operação com 10 threads cada operação (realizar o estresse 3 vezes): DataSvrStressTest.exe --cache --count 3 --list 10 --add 10 --del 10 --refresh 10 --commit-after --commit-before ``` ## Uso no DataSvr Foram criados novos parâmetros no SecServ.ini para ativar o cacheamento e o commit. São eles: ``` [Options] DataSvrCacheCTree=1 DataSvrTimeCommit=23:00 ``` O DataSvrTimeCommit é equivalente ao DataSvrTime, pois indica o horário em que o commit deve ser realizado (o padrão são 23 horas em ponto). O commit só é feito se o valor DataSvrCacheCTree for diferente de zero (como está no exemplo). _ __IMPORTANTE__: O CTreeNT não está ciente desse comportamento do DataSvr, mas como ele apenas lê o banco, não deve haver maiores consequências exceto que ele não conseguirá enxergar adições e exclusões de objetos antes do commit._ Caso queira ativar apenas o cacheamento sem o commit, coloque um horário inválido em DataSvrTimeCommit. Ex: ``` [Options] DataSvrTimeCommit=25:00 ``` Dessa forma o commit nunca será feito. Essa configuração pode ser usada caso seja desejável fazer o commit através do DataSvrStressTest, da seguinte forma: ``` DataSvrStressTest.exe --cache --count 1 --commit-after ``` 16:46 2015-10-06 17:03:19 00:16:31 cinema: Lunar Três anos.

= 2015-10-07
:date: 2015-10-07

2015-10-07 19:23:42 00:43:50 cinema: Deus da Carnificina Deus da Carnificina só funciona tão bem porque essas quatro pessoas que participam de um embate infindável continuam até o fim sendo elas mesmas, ou se utilizando de quatro personalidades tão comuns, tão detectáveis.

= 2015-10-08
:date: 2015-10-08

2015-10-08 09:16:29 00:10:31 caloni: A eterna questão do map::iterator É toda vez. Sem exceção (e sem trocadilho). Toda vez que decido iterar através de um map, não sei direito qual que é o bendito elemento que vou receber. No momento, a STL não me parece ajudar, nem lambda, nem nada. Map é um bicho de três cabeças, e a terceira cabeça é melhor não saber onde fica. 18:31 2015-10-08 19:05:50 00:34:05 cinema: Ida O universo em torno de Ida torna a vida tão depressiva que até passar o resto dos dias em um convento não parece uma ideia tão ruim.

= 2015-10-09
:date: 2015-10-09

Se não tiver nada aqui, se não conseguir marcar o dia-a-dia (daytoday), fica difícil encontrar um parâmetro que as coisas estão se movendo, ou coisas estão sendo feitas. 07:41 Pelas contas da contabilidade dá para gerar relatório do faturamento anual e por tipo de contrato (produto, consultoria). Também é possível calcular margem atual tirando todos os gastos. 07:59 2015-10-09 08:01:26 00:01:30 Add Comment: ADM-60 - Fui tentar novamente, estão de greve. Passei no HSBC só para ser bem atendido, a taxa básica (com DOCs, etc) parece ficar em torno de 84 reais. Mandei o email para o cara, mas ele ainda não respondeu. 21:05 2015-10-09 21:30:53 00:25:35 desenv: Configurando o primo com InsertShadowCopyToDatabase ### Introdução A configuração do primo para o aplicativo que insere os arquivos XML recebidos no banco SQL (InsertShadowCopyToDatabase) segue o mesmo princípio de qualquer processo que se queira executar de tempos em tempos, sabendo que esse tipo de processo executa uma ação e vai embora, sendo criado um novo processo constantemente. #### Pontos de atenção - Inicialmente é necessário observar pelo log do serviço (sub-pasta __logs__) como a execução dos processos e os processos em si estão se comportando. Qualquer anormalidade (tempo entre execuções, número de arquivos sendo inseridos por vez, erro na execução, erro na conexão SQL) pode ser facilmente verificado apenas olhando o log. ![](/images/primo-pasta-log.png) - Os argumentos usados para a execução do processo encontram-se todos no arquivo de configuração do primo, __server.primo__. ![](/images/primo-server.primo.png) - A parte mais rápida e fácil de analisar um problema em um programa executado pelo primo é olhar diretamente pelo __Process Explorer__ quais os parâmetros exatos de execução e executá-lo na linha de comando. ![](/images/primo-process-explorer-parametros.png) ![](/images/primo-process-explorer-parametros-teste.png) ![](/images/primo-process-explorer-parametros-teste-execucao.png) - A tag __EachXSeconds__ pode ser usada para diminuir a frequência com que o processo roda, podendo controlar a número de execuções por minuto. - O novo parâmetro __--file-limit__ do InsertShadowCopyToDatabase possibilita limitar o número de arquivos máximo que serão usados para executar um insert no SQL, podendo fazer o ajuste mínimo que a base aguenta. - O próprio primo pode ser verificado pela linha de comando. Basta rodá-lo passando o server.primo como parâmetro. ![](/images/primo-execucao-linha-de-comando.png) - Todo e qualquer problema que envolver configuração, execução do primo e seus processos deve necessariamente ser enviado por email com a análise do ambiente conforme colocado neste documento, log das execuções, versões dos binários e o arquivo de configuração do primo. 21:57 2015-10-09 22:18:00 00:20:32 cinemaqui: Eu Estava Justamente Pensando em Você O amor está no ar, mas seus portadores estão com dúvidas existenciais, são espertos demais para senti-lo ou sofrem da doença do século: ansiedade.

= 2015-10-11
:date: 2015-10-11

2015-10-11 15:42:09 00:34:17 cinema: The Nightmare Este documentário com cheiro de History Channel e seus canais auxiliares de balelas acompanha os testemunhos de várias pessoas cujo histórico de vida não sabemos quase nada, exceto que todos eles compartilham de visões durante a noite em que estão dormindo e acordados ao mesmo tempo, incapazes de se mexer.

= 2015-10-13
:date: 2015-10-13

Rodrigo Souza Lemes Entendo tudo isso, e faz sentido nesse conjunto mais amplo que chamamos de sociedade. Aliás, acreditei por um bom tempo nisso. Porém, se eu sou eu -- mesmo sendo fruto do tempo e espaço onde passo a existir ¿ -- isso quer dizer que minhas decisões podem ir de encontro à visão de Marx e de qualquer outro (estado), ou seja, posso tomar decisões diametralmente opostas ao que a "sociedade" exige. Se não posso, então eu não sou eu, pois não respondo por mim. Porém, só o fato de eu contestar a visão de Marx faz com que apenas um dos dois esteja certo: ou pessoas não são dotados de individualidade (eu não sou eu) e devem seguir o processo determinístico de formação da sociedade ideal, ou pessoas são indivíduos antes de serem sociedade (eu sou eu), e portanto se alguém monta uma estrutura social que vai contra o que um ou mais indivíduos desejam, é uma agressão justificada. 07:37 links: Encapsulando USB em pacotes IP De acordo com o saite do projeto: "USB/IP Project aims to develop a general USB device sharing system over IP network. To share USB devices between computers with their full functionality, USB/IP encapsulates "USB I/O messages" into TCP/IP payloads and transmits them between computers. Download the latest version, or check it out by Subversion."

= 2015-10-14
:date: 2015-10-14

Juliano, da GAS Financeiro, ligou explicando que eles não conseguiram realizar a transferência porque os bancos estão de greve, e uma opção seria o boleto bancário. Ele está no 61 3349 1188.

= 2015-10-15
:date: 2015-10-15

2015-10-15 11:37:44 00:05:53 email: FW: [KO7] Desalocação de memória Pela descrição do problema parece que ele não está usando a camada C++ feita para abstrair esses detalhes que lidam com SAFEARRAY. Se ele preferir, usar da forma exata como está em Exemplo_GetUnregisteredDevices e Exemplo_GetRegisteredDevices do projeto Multivendor\Exemplos\CPP\UseMultivendor vai garantir a desalocação correta, pois é feita uma tradução para uma lista abstrata que é desalocada internamente pela DLL. Agora, se ele quer realmente chamar direto e lidar com SAFEARRAY, ele pode copiar o método GetRegisteredDevices da classe CMWMC (Multivendor\Exemplos\CPP\Multivendor\CMWMC.cpp), que usa a função SafeArrayDestroy para desalocar a lista, mas antes faz uma caminhada bem complexa através dela para conseguir os elementos. Já o status do sprint atual girou em torno do POC do Device USB com uma tela de demonstração. A tela está pronta e funcional, bastando a DLL Multivendor.Middleware.DeviceComm.dll estar na mesma pasta do MultivendorUI.exe. Ambos os projetos ficam na sub-pasta Multivendor.Middleware.DeviceComm (estou enviando em anexo os fontes mais a compilação Debug). Houve uns erros de início e fim nas comunicações que levou um tempo para acertar. Foram retiradas as camadas intermediárias em aplicativo de POC, ajustado o início e fim de transmissão/conexão bem comportada (sem crash/travamento por conta de threads rodando) e os callbacks no método Connect agora são assíncronos. A ideia é ter todos os eventos (log, arrived, removed) nesse callback. No momento há apenas o callback de log. ![](/images/easytech-multivendor-poc-devicecomm.png) Houve também um erro de leitura do device relacionado à leitura assíncrona por ReadFile, mas que parece ser um estado da minha VM Windows 7, pois após um reboot ele voltou ao normal. O envio de bytes zerado não gera nenhuma resposta do device. Como não há toda a regra de negócio no aplicativo, talvez seja melhor copiar os bytes que deverão ser enviados no aplicativo. Dessa forma ele não precisa conhecer nada da lógica. Isso é possível com a criptografia atual ou há uma maneira preferível? Os próximos passos serão adicionar a opção de enviar uma configuração customizada e alterar o estado da thread de conexão para sempre se manter ativa e avisar o usuário da DLL dos eventos de arrived/disconnect. 21:35 2015-10-15 21:49:13 00:13:53 cinemaqui: Peter Pan Há algo de mágico na direção de arte de Peter Pan, uma versão Live Action contando uma história estilo "Origins" do menino que não quer crescer.

= 2015-10-16
:date: 2015-10-16

2015-10-16 10:44:17 00:20:03 cinema: Eu Matei Minha Mãe Xavier Dolan é um menino prodígio que, desde os cinco anos atua e desde os vinte se envolve com direção e roteiro de seus fimes de temática adolescente com uma abordagem intensamente poética.

= 2015-10-18
:date: 2015-10-18

2015-10-18 21:43:19 00:01:02 clip: qdaytoday (Debugging) - Microsoft Visual Studio Testando e aprovando

= 2015-10-21
:date: 2015-10-21

1. Neoliberalismo não existe. As ideias de Mises, Friedman e cia são as mesmas de Adam Smith, Locke, etc. Como chamar de outro nome o mesmo pensamento econômico? Por acaso há então um neo-socialismo pós-fracasso soviético? 2. Se por neoliberalismo você considera que exista um estado, a resposta à questão se "neoliberalismo" e socialismo são a mesma coisa é sim. Dentro da ótica do economista Hans Hoppe, só são possíveis de existir dois arquétipos econômico: o socialismo e o capitalismo, sendo que todos os sistemas atuais misturam ambos. O modelo capitalista define uma pura proteção da propriedade privada, livre associação e troca entre as pessoas. Tudo que diverge dessa linha geral é socialismo. 3. Ninguém deu o nome de neoliberalismo ao liberalismo senão os socialistas, que quiseram com isso descaracterizar alguns ideais liberais, como a liberdade individual, e tomá-los para si como ideologia de esquerda.O movimento que "acusa" liberais de serem neo-liberais é mentiroso, mau-caráter e canalha. 4. A crise de 29 foi o resultado nefasto mais conhecido de práticas socialistas encabeçadas pelo governo norte-americano. Ao expandir o crédito e inflar a base monetária, o sistema de preços da economia deu sinais ao mercado que havia espaço para mais produção, sendo que a Europa já não precisava de tantas importações pós-primeira guerra e o mercado interno havia atingido seu limite, pois o consumo já estava dando sinais de esgotamento. Quando houve o crash, a economia deu sinais de recuperação em cerca de três semanas, mas o new deal acabou por terminar o desastre da intervenção governamental, mais uma vez alterando o sistema de preços e condenando mais de uma década de endividamento e parco crescimento. 14:35 2015-10-21 14:37:18 00:01:41 desenv: Como Gerar um ISO novo do CD de Contingência Primeiro leia o manual de customização do RescueCD. Depois aplique para o ISO baixado, tomando o cuidado de copiar os binários hde para a pasta bin. E depois dê uma olhada no trac da Scua para ver como gerar novos binários pelo fonte. 15:32 Estimar restante do esforço para terminar projeto Login 16:18 2015-10-21 16:47:02 00:28:51 cinemaqui: Goosebumps: Monstros e Arrepios O escritor R.

= 2015-10-22
:date: 2015-10-22

Problema da compilação do SsLogin era o ctreestd.lib na pasta do Lng. O grande (algumas centenas de KB) estava sendo usado para o novo ctree, mas é o pequeno (algumas dezenas) que deve ser usado na versão client.

= 2015-10-23
:date: 2015-10-23

Entregar SsLogin com a nova police de desabilitar cmd Aplicar regras locais em ambiente de teste SsLogin compilado dá erro de usuário não encontrado no ctree Correção de compilação O problema era a versão do ctreestd.lib Implementação do novo policy Escrita em registro Escrita em CURRENT_USER Teste em Release

= 2015-10-24
:date: 2015-10-24

2015-10-24 09:54:13 00:39:40 cinemaqui: Dheepan A Sri Lanka é uma ilha bem ao sul da Índia.

= 2015-10-25
:date: 2015-10-25

2015-10-25 15:55:41 00:09:12 cinema: Advanced Style A partir do blogue do fotógrafo Ari Cohen quando Saul volta à sala de autópsia e encontra companhia e 2) quando ele encontra seu rabino, em meio ao caos das "horas extras noturnas" (o que talvez indique que estamos próximos da derrota alemã, quando a velocidade do genocídio foi acelerada). Com um final enigmático pelo seu simbolismo "au passant", muitos sairão do cinema inquietos por uma resolução mal acabada. Porém, estes perderam o fio da meada em seguir a história convencional de "pai que quer salvar filho no além-túmulo". Você pode assistir o filme assim, e ele funciona bem 99% do tempo com essa história (exceto o final). Porém, perceba como, mesmo se admitirmos a versão oficial da história, há algo que merece ser analisado em um homem que se preocupa mais com os mortos do que com a própria vida, e dica: não é heroísmo. O filme tem muitos momentos "olhe para esse homem", e talvez o mais aterrorizante é que olhamos para ele e não vimos nada, exceto uma obsessão cega pela sua crença. O que pode ser confundido com mais um filme denunciando a crueldade nazista, no fundo quase não a mostra, preferindo focar na loucura de uma religião, que ambígua como ela é, pode manter viva a esperança de algo melhor ao mesmo tempo que sacrifica os vivos que ainda preferem viver o aqui e agora. Acho que qualquer semelhança com críticas ao conflito do Oriente Médio deve ser analisada com cuidado, mesmo não parecendo muito longe da verdade. 13:12 cinema: O Filho de Saul Esse filme consegue nos convencer a assisti-lo simplesmente com uma simples premissa: olhe para esse homem e veja o que ele faz.

= 2016-01-30
:date: 2016-01-30

2016-01-30 09:40:49 00:01:01 O Chicão achou uma ferramenta que reescreve a história do git para permitir manter o histórico com rename. 17:18 2016-01-30 17:30:05 00:11:18 filosofia: Pedintes Tudo na vida, em uma sociedade civilizada (ignore governos), é uma troca de valores, goste você ou não, e sejam ele à base de dinheiro ou não. Mesmo quando o assunto é um pedinte de rua estamos falando da troca de dois tipos de valores, um "monetizado" (as moedas que ele pede) e um valor que é intangível (o tempo perdido do transeunte que é abordado). Por estes dois valores existe uma troca voluntária acontecendo, onde a pessoa pode escolher ajudar ou não quem está pedindo. Há vários motivos pelos quais a pessoa pode querer ajudar, e todos são egoístas ou deveriam ser, no sentido que a pessoa sai ganhando algo mais valioso do que deu. Você pode ajudar porque vai se sentir bem depois, ou se sentir uma pessoa mais bondosa, que doou um pouco de atenção a uma pessoa necessitada. Isso é ótimo! Você também pode ajudar porque sentiu uma conexão com o pedinte, seja pela sua história de vida, aparência ou alguma coisa que ele falou. E isso é ótimo, também! Ambos saem ganhando, ou seja, a situação ficou um pouquinho melhor para a humanidade; houve criação de riqueza. Seja riqueza humana de quem doa, pois recebe aquele algo intangível mas que tem valor, e riqueza monetária para o pedinte, que recebeu atenção e dinheiro (ou comida). No entanto, se você ajuda porque "é o certo a ser feito", no sentido que você acata o que as pessoas dizem o que é certo, mesmo sem acreditar realmente nisso, e não se sente bem depois de realizar o ato, sinto informá-lo, mas você é vítima do comportamento altruísta, o maior mal que assola a humanidade. Quando faz isso, você se diminui frente à voz da coletividade, vira um indivíduo irrelevante, desprovido de sua individualidade para obedecer o que outros lhe dizem ser o desejo "de todos" (o que é mentira, já que não é o seu). Por outro lado, você, pedinte, que se esforça para entregar algo de valor em troca de atenção e dinheiro/recursos. Seja um sorriso, ou sua simpatia, sua elegância, que tem uma boa história para contar ou uma atitude de respeito por si mesmo, uma boa apresentação, eu lhe digo: você é virtuoso. Sua virtude reside em reconhecer que você é seu bem mais valioso, tão valioso que você consegue se vender para outras pessoas. E isso é ótimo para os negócios! Se você quiser se manter como pedinte, provavelmente continuará tendo sucesso, e se tiver vontade de se dedicar a atividades mais recompensadoras, galgando aos poucos os diferentes tipos de trabalho requisitados pela humanidade, você irá ainda mais longe. Digo isso pois analisando a situação de miséria que se encontra, é possível reconhecer uma virtude imensa: sendo pedinte de rua, sem o reconhecimento de quase ninguém que passa por você, você continua sendo ótimo no que faz. Agora, se você é um pedinte carrancudo, com cara de cachorro sem dono, fedido por opção, mal-educado e que não troca atenção por trocados, mas pede naquela postura de quem tem o direito de receber algo, porque lhe disseram que é o certo a se fazer, porque lhe convenceram que você pode aproveitar a culpa e a vergonha das pessoas e que não deve a ninguém nada em troca, então você é um péssimo pedinte e um péssimo ser humano. De quebra, ou será um pedinte vivendo às custas do altruísmo alheio, uma aberração que se submete ao comportamento mais maléfico do ser humano, ou irá "subir na vida" baseado na pena e no mal estar dessa sociedade que se sente culpada por usufruir de seu próprio trabalho. Você, caro pedinte, é um explorador da culpa injustificada das pessoas, um parasita do que há de pior em nossa cultura. Mesmo quando deixar de pedir na rua, continuará sendo um pedinte em espírito. O pedinte não saiu do indivíduo, continua lá na hora de conseguir alguma coisa por vias maléficas. Para nos livrar desse mal, sejamos, portanto, mais humanos, mais bondosos e mais compreensivos com a pessoa a qual mais nos interessa que seja valorizada, e feliz nesse processo: nós mesmos. Seja você médico, advogado, empresário, trabalhador, pedinte ou até mesmo funcionário público, todos têm a capacidade de dar algo em troca, e receber no lugar algo mais valioso. Isso é gerar riqueza entre as pessoas, trocando e multiplicando valores, sejam esses afetivos, monetários ou outros formatos. Sejamos mais valiosos para produzir mais valor, não importando o que somos, mas onde queremos chegar e por qual caminhos desejamos percorrer. Cada um rumo à sua felicidade individual. 20:02 2016-01-30 20:13:16 00:10:31 cinema: A Casa dos Contos de Fadas Eleanor's Secret é uma animação francesa desenhada como se fossem ilustrações de um livro.

= 2016-01-31
:date: 2016-01-31

2016-01-31 10:38:01 00:16:30 "Como podemos garantir a aplicação dessa restrição ao governo?" Essa é a pergunta de um milhão em barras de ouro =) "Esses serviços continuariam existindo, mas não seriam implementados através de um monopólio territorial." Se estivermos falando de uma sociedade guiada por uma moral objetiva, há, sim, o monopólio da força, que deve ser usado apenas para defender cidadãos contra a iniciação da força e fazer valer as leis que dela derivam (proteção de propiedade privada). Sobre a justiça, ficou meio nebuloso. "E parece achar que retaliação seria bem vista pelo libertarianismo." Essa é a maior crítica ao anarcocapitalismo. O texto diz claramente que é ingênuo esperar que, uma vez que exista um governo guiado por uma moral objetiva, automaticamente todos seus habitantes atingirão a razão iluminada e deixarão de usar a força. Para alguns grupos (extremistas religiosos), o uso da força é, sim, bem-vindo. "Pelo que entendo, matar é sempre errado...." Também acho. Pelo menos no cenário que você descreveu. "Como que privar as pessoas da decisão do que deve ser feito com uma parte da produção delas (impostos) pode ser conciliada com Objetivismo?" Não pode. Em uma entrevista à Playboy, fica bem claro a posição de Ayn Rand a respeito de impostos (embora sua solução possa ser impraticável, mas como ela mesmo disse, é um assunto completo e, eu concordo, seria uma das últimas reformas): PLAYBOY:: Se a força só pode ser usada em retaliação contra o uso da força, o governo tem direito, por exemplo, de coletar impostos ou de obrigar o alistamento militar? RAND: Em princípio, eu acredito que a taxação deva ser voluntária, como tudo o mais. Porém, a implementação dessa ideia é uma questão bastante complexa. Eu posso apenas sugerir certos métodos, mas não insistiria que eles fossem respostas definitivas. Uma loteria estatal, por exemplo, usada em muitos países da Europa, é um bom método de taxação voluntária. Existem outros. Os impostos devem ser contribuições voluntárias aos serviços apropriados do governo, aqueles necessários às pessoas e que portanto todos estariam e deveriam estar dispostos a pagar - da mesma forma que pagam por diversas formas de seguros. Mas, claro, esse é um problema para o futuro distante, para um tempo em que o homem estará prestes a implementar um sistema social plenamente livre. Seria a última, não a primeira reforma na qual se pensar. Quanto à questão do alistamento obrigatório, é injusto e inconstitucional. É uma violação dos direitos fundamentais do homem, do direito humano à própria vida. Nenhum homem tem o direito de enviar outro homem para lutar e morrer por sua causa - pela causa daquele que envia. Um país não tem direito de forçar os homens à servidão. Exércitos devem ser estritamente voluntários; e, como hão de dizer as autoridades militares, exércitos voluntários são os melhores. "Eu defendo o Objetivismo e o Anarcocapitalismo, e as incoerências que vejo não estão aí...¿" Também defendo ambos. Só acho que há uma crítica relevante aí do objetivismo para os ancaps: a moral não é subjetiva em um modelo racional. 12:03 2016-01-31 12:07:19 00:03:55 Pensando agora, os commits do DayToDay podem ser feito quase que mecanicamente, mas antes disso, posso rever o que foi feito e comentar por aqui, servindo como gancho para a próxima semana/iteração. Por exemplo: A Mitiko está usando a chave do Office 2007 do MSDN no Dell dela. Estava lendo o DayToDay e percebi algumas críticas antigas, antes do início do CineTênisVerde (talvez use no saite, é um filme a mais). Comecei a ler Advanced Windows Debugging e já aprendi uns macetes interessantes em torno do que já sabia. Há uma ferramenta chamada LeakDiag (Leak Diagnosis Tool) que também pode servir para diagoniscar leaks de memória. 12:09 2016-01-31 12:20:48 00:11:43 Mario Hewardt e Daniel Prava também ressaltam que todo programador sério não deveria deixar de conhecer o Application Verifier, pois ele coloca à prova um aplicativo em situações que não ocorreriam normalmente. Um parâmetro interessante é o tamanho da stack trace database (-tracedb) porque o sistema pode estar tão ocupado que o limite default passa facinho. Aqui ele explica que o CDB é uma aplicação console, e o NTSD é uma aplicação GUI que cria seu próprio console (o que permite que ele não crie a console se for necessário, ou seja, fique invisível). Isso pode ser um problema para depurar processos de sistemas, pois o console se perde facilmente. Ele fala também que os comandos dot do depurador são meta-comandos, e que os comandos de extensões podem ser usados sem escopo da DLL onde estão desde que não haja conflito. Havendo conflito, é preciso especificar. É interessante saber que dá pra chamar uma função de DLL não carregada ainda, pois ele carrega automaticamente (sem precisar chamar o .load). Você pode desatachar um kernel debugger usando Ctrl+B, mas se desconectar com o target rodando, ele pode travar aguardando uma resposta (daí os congelamentos quando fechamos o WinDbg em uma sessão de debug). Porém, diz também que o WinDbg saindo por Alt+F4 é equivalente ao Ctrl+B. Sei... Falando da depuração de user e kernel mode usando kd e ntsd trabalhando em conjunto, diz que uma maneira de ir dentro do kd é lançar um brek, mas para ganhar controle novamente do depurador de user mode é necessário usar um aplicativo chamado breakin.exe passando o PID do processo. Ou chamar pelo kd o comando !bpid <pid>, já que ele coloca um breakpoint quando o processo user mode está ativo novamente. 12:21 2016-01-31 12:22:52 00:01:25 Essa semana foi bem focada no merge da Scua. Agora tudo está no git, incluindo o histórico do Bazaar, que deu um trabalho homérico de inserir em um branch à parte. Também foram geradas as NFs apressadinhas do mês e conversado com a contabilidade da GAS para criar o boleto de cobrança. Espero que a partir daí esteja tudo OK. 12:36 Essa semana pela Caloni fiz o RAIS 2015 e as atualizações semanais de sempre. Entrei em contato com a assistência técnica da Arno, mas sem muito sucesso. 16:13 2016-01-31 16:15:30 00:01:31 Não consegui atualizar BMF. Deu "Erro ao ler arquivo datas.dat". Ainda não sei o que é isso, mas baixei os fontes novamente para ver se consigo dar uma olhada com mais calma. ![](/images/jgrafix-atualizacao-bmf-erro-ler-data.png) 19:45 Uma dica muito boa sobre como tornar o Jekyll multilíngua.

= 2016-02-01
:date: 2016-02-01

Contato da Arno sobre o Liquidificador: Tel. 11 2060 9777 (falei com Ariane), protocolo 859368. 11:13 O endereço da Autorizada é na Costa Aguiar, 2655.

= 2016-02-02
:date: 2016-02-02

cinemaqui: A Ovelha Negra O tema de A Ovelha Negra é sobre a família, mas vamos aprendendo isso aos poucos, em um ritmo das estações simplesmente admirável, acompanhamos A Ovelha Negra como uma história de rivalidade entre dois criadores de ovelhas.

= 2016-02-05
:date: 2016-02-05

cinemaqui: Reza a Lenda Uma pena que esse filme já esteja saindo de cartaz e passado despercebido do grande público, fora uma declaração megalomaníaca de seu diretor, que vem em conjunto com Alê Abreu (diretor de O Menino e o Mundo), seguindo uma tendência recente de ufanismo nos cineastas nacionais, afirmando este filme ser o "Mad Max brasileiro".

= 2016-02-06
:date: 2016-02-06

2016-02-06 09:16:21 00:09:06 cinema: Reza a Lenda Esse filme é um faroeste brasileiro, e não "o Mad Max brasileiro", como queria seu idealizador, o diretor Homero Olivetto.

= 2016-02-07
:date: 2016-02-07

2016-02-07 19:47:27 00:25:07 cinema: Making a Murderer Filmado por um período de 10 anos, Making a Murderer é um documentário que assume a posição do réu Steven Avery, que foi preso por 18 anos por um crime que não cometeu e que, posto em liberdade, precisa se defender novamente de mais uma acusação de um crime hediondo.

= 2016-02-08
:date: 2016-02-08

2016-02-08 15:30:03 00:23:32 cinema: Jackie Brown Para os fãs de Tarantino, Jackie Brown não é nenhuma novidade, exceto que aqui o roteiro é adaptado do romance de Elmore Leonard, o que quer dizer que as referências do chamado "Universo Tarantino", onde todos os seus filmes se encontram, não faria sentido aqui.

= 2016-02-09
:date: 2016-02-09

Há alguma coisa com o script de atualização do ToDoList que zoa o sistema de importação de novos módulos no script de atualização global. Agora que fiz o do daytoday (que copia as últimas 100 linhas para um arquivo de log) ele ficou dando erro de não encontrar o módulo. 12:41 Mapa da CET de todas as ciclovias disponíveis em SP. 15:22 2016-02-09 15:51:19 00:28:51 cinema: Trumbo Bryan Cranston vive aqui um personagem bem diferente de seu Walter White na série que o tornou conhecido, Breaking Bad.

= 2016-02-10
:date: 2016-02-10

2016-02-10 08:07:33 00:01:11 E agora vamos testar a feature de ontem. 08:07 Testando digitação de mais de uma entrada. 08:08 Deve funcionar perfeitamente. 19:30 2016-02-10 20:13:52 00:23:33 cinema: Cassino Vindo de Martin Scorsese (Lobo de Wall Street, Taxi Driver, Touro Indomável), esse parece o Bons Companheiros -- que ele também dirige -- versão longa.

= 2016-02-12
:date: 2016-02-12

Sobre o token: vai ter que ir na agência, mas qualquer coisa mandar email para apoioaempresa@bradesco.com.br a.c.Valéria. 15:18 2016-02-12 17:13:58 00:24:46 cinemaqui: A Garota Dinamarquesa Quantas vezes uma pessoa aguenta receber o diagnóstico errado do problema de sua vida e perceber que está apenas se enganando em um mundo que não está pronta para recebê-la? É possível até deduzir a essência da história contada em A Garota Dinamarquesa, mas muito mais difícil senti-la.

= 2016-02-13
:date: 2016-02-13

2016-02-13 12:13:43 00:01:45 bitforge: Um pequeno teste Não é sempre que se torna tão fácil escrever posts pela bitforge. Talvez até um screenshot se torne algo automático e fácil de criar: ![](/img/blog/screenshot-inicio.png) Dessa forma, não me intimidarei em criar meu próximo post técnico (talvez sobre o BitForge Usb) já no blogue da BitForge.

= 2016-02-15
:date: 2016-02-15

2016-02-15 22:03:49 00:01:28 leituras: Anarchism vs. Objectivism by Harry Binswanger Um texto bem longo e denso. Um desafio e tanto resumi-lo ¿. Em primeiro lugar, é necessário entender que não há opção de não impor uma moral. Uma moral é sempre um requisito de uma sociedade civilizada, ou até a maneira de um indivíduo se relacionar com o mundo. Dessa forma, um governo constituído de uma forma objetiva ainda irá impor a moralidade que se defende de agressão. A questão de agências de segurança é isso: são instituições que irão promover uma moral pelo uso da força. Um governo também é isso, só que movido pela filosofia objetiva de seus cidadãos. Se estes não possuem racionalidade de constituir um governo assim, como ocorreu com os EUA, como eles poderiam patrocinar agências de segurança melhores que isso? Recai a questão do rei filósofo de Platão. As massas são incapazes de escolher a melhor filosofia, então os militares forçam essa filosofia. Mas a questão continua: as massas e os militares não saberiam qual filosofia suportar. Agências de segurança não competem em um mercado, pois este mercado não existiria em um ambiente onde há troca de tiros. Pense em agências de segurança não como coletivo, mas indivíduos. Se um usa a força contra o outro, não há competição, apenas o uso da força. Criar um governo é separar a força do capricho. Todos os seus cidadãos devem concordar em abrir mão do uso da força por capricho, e apenas seguir a filosofia objetiva sob a qual a sociedade em que vive é fundada. A própria esquerda pode achar que o acúmulo de capital é coerção e instituir uma agência de segurança para fazer valer sua moral pela força. E todo uso da força é monopolista. Não há competição (a não ser que considere uma guerra uma competição, mas de forma alguma isso pode ser considerado voluntário). Não usar força, nem como retaliação, seria a única forma de anarquismo coerente. Ex: se eu atiro de volta em quem me atira, estou impondo minha moral de não haver força iniciada sobre mim. A solução anarquista consistente é apenas convencer racionalmente a não atirar em mim, o que é pacifismo. Não há imposição de moral em um governo. O que ele faz é garantir a liberdade de seus cidadãos agirem virtuosamente se assim o quiserem, mas nunca forçá-los. Ele faz isso em nome da moram, mas sem impô-la. Se é moralmente defensável que um homem de defenda, também o é juntar com outros homens e fazer o mesmo por procuração: um governo objetivista. A diferença entre um governo e uma agência de segurança é que um governo está agindo sob um controle objetivo. Dessa forma, anarquistas que são contra um governo são na verdade inimigos do objetivismo, pois querem ter o "direito" de usar força sob capricho. O argumento que governos crescem naturalmente. O motivo: filosofia errada. São as ideias dos homens que guiam seu governo. 22:04 leituras: Libertarianism and Moral Disintegration - Joseph Rowlands A questão aqui é que o libertarianismo não possui uma base moral para extrair o princípio ético e político da não-agressão. Dessa forma, um libertário deve aceitar essa regra sem ser uma escolha consciente, uma conclusão lógica da racionalidade. Em vez de ser um guia moral, o PNA vira uma regra aceita e que, uma vez que interfira nos desejos egoístas do indivíduo, se torna um empecilho. Se for seguida sem ser aceita de forma consciente, portanto, obedecê-la vira uma forma de altruísmo (sacrifício pelos outros sem razão). Por último, não há virtudes em seguir uma vida moral, por atingir uma virtude moral. Não existe certo e errado no libertarianismo, apenas o proibido. 22:05 leituras: Your Dog Owns Your House - Anthony de Jasay De maneira a surpreender o leitor, Anthony de Jasay traduz o pensamento socialista em um texto a respeito de como alguém deve sua casa a todos os envolvidos direta, indireta e historicamente, desde o cachorro que a protege até Cristóvão Colombo, por ter descoberto a terra onde ela está. Depois discute esse mesmo conceito aplicado a outras propriedades e frutos do trabalho de alguém. Na segunda parte do texto ele desmistifica a falácia. Primeiro desmente esse nonsense que é existir um ente chamado sociedade, com desejos e racionalidade. Depois, lembra a todos que as trocas entre indivíduos que houve na construção da casa já foram pagas por algum tipo de valor, monetário ou não. Para finalizar, destrincha a última defesa esquerdista: de que essas trocas são efetuadas de maneira desigual em nível de informação. A defesa é incisiva: se não é possível determinar o nível de desigualdade em trocas voluntárias, é descabido corrigir esse processo usando trocas coercitivas, pois daí sim não haverá nem como estabelecer que durante a troca houve uma contagem de valores (desiguais ou não). Conclui estabelecendo que trocas voluntárias, diferente das coercitivas, é a única que não utiliza um mecanismo imoral para atingir um objetivo moral. 22:06 O [Library of Economics and Liberty]() parece um repositório bem interessante de artigos, livros e pensamentos liberais, libertários, anarquistas.

= 2016-02-16
:date: 2016-02-16

2016-02-16 15:14:53 00:01:41 Analisando problema do travamento da chamada COM na TecBan. Pela pilha do dump do processo de teste feito em VB6, apesar do erro de unwinding do WinDbg, ele demonstra pelo endereço de retorno na pilha da chamada ao RPC que o chamador é o próprio executável, não o módulo intermediário deles: ``` 0e 0012f400 77e8a83b 0000000c 00000014 0012f468 rpcrt4!ObjectStublessClient+0x8b (FPO: [Non-Fpo]) 0f 0012f410 00405598 00176d54 0012f444 0012f474 rpcrt4!ObjectStubless+0xf WARNING: Stack unwind information not available. Following frames may be wrong. 10 0012f468 73471ce3 0015fae0 0012f484 00402e46 SecDevTester+0x5598 11 0012f484 73471fe4 00402e46 0012f540 00000002 msvbvm60!IID_IVbaHost+0x23703 0:000> lm start end module name 00400000 0040b000 SecDevTester (no symbols) 00f40000 01205000 xpsp2res (no symbols) 10000000 10008000 t0hooks C (export symbols) t0hooks.dll 5dd60000 5ddce000 sysfer (export symbols) sysfer.dll 73420000 73573000 msvbvm60 (export symbols) msvbvm60.dll ``` 15:28 2016-02-16 15:41:40 00:03:49 Como você obtém pela pilha client RPC o PID e TID do processo e thread server para onde está endereçada a mensagem: 1. Olhe os parâmetros da pilha em ole32!CRpcChannelBuffer::SendReceive2+0xc1. 2. Use o comando dd poi(<primeiro-parametro> + 18) + 8 l2 3. O primeiro DWORD é o PID destino da mensagem. 4. O segundo DWORD é o TID destino da mensagem. 16:21 2016-02-16 16:24:59 00:02:56 Pela análise do PID destino da mensagem enviada via RPC pelo SecDevTester, o processo destino não é o Middleware, mas um processo intermediário que está sendo usado pela TecBan. ![](/images/easytech-tecban-windbg-analise-chamada-com-rpc-pid-destino.png) Processo VB SecDevTester: ``` 0:000> kvn # ChildEBP RetAddr Args to Child 00 0012eca8 7c90df4a 7c809590 00000002 0012ecd4 ntdll!KiFastSystemCallRet (FPO: [0,0,0]) 01 0012ecac 7c809590 00000002 0012ecd4 00000001 ntdll!ZwWaitForMultipleObjects+0xc (FPO: [5,0,0]) 02 0012ed48 7e4195f9 00000002 0012ed70 00000000 kernel32!WaitForMultipleObjectsEx+0x12c (FPO: [Non-Fpo]) 03 0012eda4 7752ebd6 00000001 0012edec 000003e8 user32!RealMsgWaitForMultipleObjectsEx+0x13e (FPO: [Non-Fpo]) 04 0012edcc 7752ecfd 0012edec 000003e8 0012edfc ole32!CCliModalLoop::BlockFn+0x80 (FPO: [Non-Fpo]) 05 0012edf4 7760179e ffffffff 0016cb8c 00170fc4 ole32!ModalLoop+0x5b (FPO: [Non-Fpo]) 06 0012ee10 776011a6 00000000 00000000 00000000 ole32!ThreadSendReceive+0xa0 (FPO: [Non-Fpo]) 07 0012ee2c 7760108a 0012eef4 0016cb8c 0012ef50 ole32!CRpcChannelBuffer::SwitchAptAndDispatchCall+0x13d (FPO: [Non-Fpo]) 08 0012ef0c 7752edaa 0016cb8c 0012f020 0012f010 ole32!CRpcChannelBuffer::SendReceive2+0xc8 (FPO: [Non-Fpo]) 09 0012ef28 7752ed53 0012f020 0012f010 0016cb8c ole32!CCliModalLoop::SendReceive+0x1e (FPO: [Non-Fpo]) 0a 0012ef94 7752cdb2 0016cb8c 0012f020 0012f010 ole32!CAptRpcChnl::SendReceive+0x6f (FPO: [Non-Fpo]) O PID deveria ser b58: 0:000> dd poi(0016cb8c+18)+8 l2 0016c588 00000b58 00000b5c ``` ![](/images/easytech-tecban-windbg-analise-chamada-com-rpc-pid-middleware.png) Processo do Middware: ``` 0:000> ~ . 0 Id: 128.13c Suspend: 0 Teb: 7ffdf000 Unfrozen 1 Id: 128.15c Suspend: 0 Teb: 7ffde000 Unfrozen 2 Id: 128.160 Suspend: 0 Teb: 7ffdd000 Unfrozen ``` 16:27 2016-02-16 16:28:51 00:01:06 Além disso, a DLL COM do Middleware não está carregada no processo do VB: ![](/images/easytech-tecban-windbg-analise-chamada-com-rpc-modules-vb.png)

= 2016-02-17
:date: 2016-02-17

2016-02-17 14:45:58 00:19:14 Instaladores dentro da pasta SecuritySuite/Install: ## BradOutputGen O BradOutputGen é um aplicativo MFC que gera pacotes personalizados para o Bradesco. Essa é a tela inicial: ![](/images/scua-brad-output-gen.png) O código possui muitas pastas específicas dentro da %programfiles%, como a dependência do Package for the Web 4 e a pasta BradOutputGen, com muitas ramificações e arquivos. Se não houver um desses arquivos ou pastas, todo o procedimento falha. Deve ser feito um trabalho de engenharia reversa para melhorar esse procedimento. ## Custom\Bradesco\BradescoPatch Um aplicador de patchs feito em console que possui código para uma atualização hard-coded. Não parece tão antigo, pois já considera o SyncDB2.exe. ## Custom\Bradesco\BradOutputGen Projeto do InstallShield 8 e que aparentemente monta a bagunça que será utilizada no BradOutputGen aplicativo MFC (ver acima). De acordo com o description.txt do projeto: Projeto de instalador para agrupar e criar os arquivos. Para gerar o pacote do BradOutputGen.exe ---------------- Instalador customizado que instala o gerador de pacotes para o Bradesco. Os componentes (arquivos) para gerar o instalador se encontram na pasta: D:\Install Files\Bradesco\ Subpastas: ScuaBradConf Contem os arquivos de grupos e diretivas junto com o arquivo com o numero da midia (que deve ser atualizado). ScuaSrcBradesco Por enquanto a pasta BaseUpd nao esta sendo utilizada. Source contem o instalador para servidores do Bradesco. Source\SETUP contem os instaladores Client do SecuritySuite para 9x e NT (que seria a 2000). Compilando e gerando o pacote corretamente após obter arquivos na pasta d:\install files\bradesco, a execução pede uma senha (ainda não descobri por quê): ![](/images/scua-install-shield-brad-output-gen-setup-type-password.png) ## Install\Client O cliente/servidor do SecuritySuite, versão atual. Um projeto do InstallShield 5.5. ## Install\Client9 Mesmo projeto da pasta Client, mas para versão 9 do SecuritySuite. Agora ambos podem ser compilados no repositório/branch master do git. ## ScuaInst\Ishield Um projeto chamado AltCred, para qual o Rafa fez um instalador no Install Shield 5.5. ## Install\Server Parece o instalador padrão do SecuritySuite, mas possui detalhes que lembram o Custom do Bradesco (BradOutputGen, etc), pois ele lê o arquivo BuildNT.txt para obter informações da mídia: ``` SetSetupIniFile(g_szDir ^ "BuildNT.txt"); SK5Log("Versão do LOG lida do arquivo BuildNT.txt - " + szVersion); ReadSetupIniValueString("Midia", "numero", szVersion, NO); SSDBMGR.StartDatabase(); SSDBMGR.WriteMediaVersion(szVersion); SSDBMGR.FinishDatabase(); ``` A função WriteMediaVersion do SSDBMGR contém comentários com informações extremamente relevantes para o que está tentando-se fazer para controlar a instalação das mídias do Bradesco: ``` /** Em instalações maiores (e.g. Bradesco) o conjunto de regras e arquivos usados em uma atualização constitui uma "mídia". Essa mídia é controlada por uma versão que é escrita no servidor de banco de dados do SecuritySuite para ser replicado nas estações afim de controle de atualizações. @param mediaVersion String que especifica a versão da mídia. */ ``` O problema é que, pelo script e pelo código, deduz-se que essa versão está sendo escrita no banco de dados da pasta Scua2000\Files nas instalações da Mídia e dessa versão Server, e esse banco não deve estar sendo usado como base para instalações nas máquinas. Tenho que levantar com o Zé qual o procedimento de instalação da mídia e nas agências. 17:01 2016-02-17 17:30:18 00:28:33 cinemaqui: What Happened, Miss Simone? "What Happened, Miss Simone" é uma coletânea de depoimentos, entrevistas, colagens de fotos e performances que, a despeito de seguir uma ordem cronológica certinha, consegue se tornar uma montanha-russa de emoções e pensamentos acerca da vida da artista e ativista Nina Simone.

= 2016-02-18
:date: 2016-02-18

2016-02-18 22:24:03 00:12:20 cinemaqui: O Abraço da Serpente O Abraço da Serpente é uma viagem cósmica através da descendência de todos os homens.

= 2016-02-19
:date: 2016-02-19

2016-02-19 06:31:08 00:01:56 Maneira mais rápida de gerar uma chave RSA: ``` openssl genrsa ``` Salvando isso em um arquivo, basta então executar: ``` openssl rsa -in meuarquivo -pbout ``` E ele irá gerar a chave pública correspondente à privada. Aprendi no saite do Jira. O openssl está no meu cygwin, mas funciona. 06:31 reuniao: Reunião administrativa Na reunião de ontem houve vários tópicos. Alguns que eu anotei no Jira: Identidade visual da empresa (ADM-136) Conversei com uma designer que irá cobrar 300 reais para criar um logo e texto baseados no original, além de uma paleta de cores e o cartão de visitas. O logo e texto deverão ser entregues em vetorial. Assinatura dos instaladores Conseguir um certificado digital para que nossos instaladores rodem como sendo de uma empresa de verdade (com o nome na assinatura, etc). Pagamento por hora Serão pagos 90 reais a hora para os sócios-funcionários da BitForge, sempre atrelado ao pagamento do contrato referente aos serviços. Ficou decidido que serão dados dois meses e meio para equlibrar as horas entre os sócios e feita nova reunião para bater o martelo a esse respeito. Até lá será dividido o faturamento em três partes iguais e feito as transferências, tanto no dia 10 quanto no dia 20. Divisão societária Gianni com 40%, Strauss e Caloni com 30%. Porém, divisão dos lucros será feita 33.3% cada um. Possível problema com a GAS Depois que for desfeita a sociedade, a Intelitrader terá um contrato com a GAS, mas continuará pagando os antigos sócios (talvez possa ser resolvido com acordo pós-societário?) 16:17 2016-02-19 16:26:02 00:08:29 cinemaqui: 50 Tons de Preto 50 Tons de Preto é a maneira mais eficiente de criticar o sexismo de seu primo que deveria ser levado a sério, 50 Tons de Cinza.

= 2016-02-20
:date: 2016-02-20

2016-02-20 17:02:33 00:01:05 leituras: Em Defesa de Rothbard: As Recentes Falhas Libertárias ao Criminalizar o Aborto Os argumentos libertários contra a proibição do aborto revelam algumas idiossincrasias do pensamento libertário. Entre eles, o não-tão óbvio conceito que não existe de fato direito à vida. Todos os direitos partem do que não pode ser feito e há no fundo apenas o direito à propriedade e deles derivam todos os outros direitos, como o da não-agressão injustificada e da inalienabilidade da vontade humana ("contratos de escravidão" são uma contradição já no termo, pois uma vez que o contratado queira sair do acordo ele deve ser livre para o fazê-lo). No caso do aborto, portanto, não há a questão se o feto é um indivíduo ou não. Isso não importa para o argumento. Podemos considerar que sim em qualquer momento, da concepção ao final da gestação, e não fará diferença. Lembrando que ele é um indivíduo Outra coisa é que o debate é teórico, uma vez que na prática as únicas vítimas do ato fariam parte da família da mãe, e basta eles perdoarem o ato e não se constitui mais um crime (a máxima de não existir crime sem vítima). O texto também retira a insensatez do contrato implícito que haveria entre o feto e a mãe. Na falta de evidências para isso, tudo não passa de capricho. Se tanto vale haver ou não um contrato, a Navalha de Ocam permite-nos escolher que não há (solução mais simples). E mesmo que houvesse o contrato, ele só pode ser firmado entre indivíduos de posse de suas faculdades mentais, e não é o caso do feto. Pais têm direitos de não alimentar seus filhos (e consequentemente abrir mão de sua guarda) e portanto o mesmo vale para um feto. A consequência da morte do feto após o aborto não interfere na validade do ato, assim como expulsar alguém de casa e fora dela haver o risco de morte. Se o dono da casa fosse obrigado a manter seu convidado, isso seria análogo à escravidão, onde a vontade do indivíduo foi alienado. Da mesma forma que a vontade não pode ser alienada, a vontade da mãe também não, o que lhe dá direito de se arrepender.

= 2016-02-22
:date: 2016-02-22

2016-02-22 18:21:36 00:01:41 cinemaqui: Amor em Sampa Há algo de muito brega, amador e piegas nessa comédia romântica que, seguindo os passos de Simplesmente Amor, tenta relacionar diferentes relacionamentos, e seguindo os passos de Nova Iorque Eu Te Amo, tenta relacionar todos eles em torno de uma cidade (nesse caso, a megalópole São Paulo).

= 2016-02-23
:date: 2016-02-23

Sobre o instalador da mídia, o Zé falou: A senha é bradscua ou scuabrad, mas este instalador é para instalar o gerador do instalador da Midia. Não utilizamos a muito tempo este cara, apenas copiamos o que chamamos de STUPSCUA (Que é o installshield que é o que roda a instalação no servidor de agencia) para nosso conjunto de pastas para geração do instalador da Midia. Ou seja, a ideia é modificar a partir desse StupScua e daí ir testando os diferentes cenários na atualização. 10:50 Lembrando do modelo de contagem de tempo por tarefa que fazia: poucos minutos para cada tarefa. Isso meio que define uma unidade de tempo. Pensando melhor, essa pode ser uma forma de se manter focado (mesmo que a estimativa não esteja sendo feita). 15:26 2016-02-23 16:21:41 00:17:51 Analisando os dumps de sexta-feira, dessa vez com o suposto processo intermediário, TBKO7. De acordo com a pilha, o processo-destino possui o pid 0x2d8, ou 728 em decimal. ``` 0:000> ~*kvn . 0 Id: 122c.1230 Suspend: 0 Teb: 7ffdf000 Unfrozen # ChildEBP RetAddr Args to Child 00 0012eca8 7c90df4a 7c809590 00000002 0012ecd4 ntdll!KiFastSystemCallRet (FPO: [0,0,0]) ... 08 0012ef0c 7752edaa 0016cb8c 0012f020 0012f010 ole32!CRpcChannelBuffer::SendReceive2+0xc8 (FPO: [Non-Fpo]) ... 39 0012fff0 00000000 004015d8 00000000 78746341 SecDevTester+0x15e2 0:000> dd poi(0016cb8c+18)+8 l2 0016c588 000002d8 000002cc ``` Esse é o mesmo PID do processo TBKO7C~1.EXE, de acordo com a lista de processos no pacote de dumps. ![](/images/easytech-analise-windbg-lrpc-sendreceive2-pid.png) Nas threads do dump desse processo há uma thread (0x1ac) que está com a pilha indicando que uma resposta foi enviada. Isso é detectado pela chamada da API NtReplyWaitReceivePortEx (Advanced Windows Debugging, 2007): ``` 2 Id: 2d8.1ac Suspend: 0 Teb: 7ffdd000 Unfrozen # ChildEBP RetAddr Args to Child 00 00fdfe14 7c90daaa 77e765e3 000000e8 00fdff74 ntdll!KiFastSystemCallRet (FPO: [0,0,0]) 01 00fdfe18 77e765e3 000000e8 00fdff74 00000000 ntdll!NtReplyWaitReceivePortEx+0xc (FPO: [5,0,0]) 02 00fdff80 77e76caf 00fdffa8 77e76ad1 001534f0 rpcrt4!LRPC_ADDRESS::ReceiveLotsaCalls+0x12a (FPO: [Non-Fpo]) 03 00fdff88 77e76ad1 001534f0 00000000 0012f85c rpcrt4!RecvLotsaCallsWrapper+0xd (FPO: [Non-Fpo]) 04 00fdffa8 77e76c97 00162200 00fdffec 7c80b729 rpcrt4!BaseCachedThreadRoutine+0x79 (FPO: [Non-Fpo]) 05 00fdffb4 7c80b729 00164bd0 00000000 0012f85c rpcrt4!ThreadStartRoutine+0x1a (FPO: [Non-Fpo]) 06 00fdffec 00000000 77e76c7d 00164bd0 00000000 kernel32!BaseThreadStart+0x37 (FPO: [Non-Fpo]) ``` Não há nenhuma thread enviando mensagens via LPC/RPC, o que poderia indicar a espera de resposta do Middleware. Chamo a atenção para uma thread com uma pilha particularmente longa e não repetida, que indica que este pode ser um processo .NET ou misto e que há alguma chamada COM que parece ter acontecido: ``` . 0 Id: 2d8.2cc Suspend: 0 Teb: 7ffdf000 Unfrozen # ChildEBP RetAddr Args to Child 00 0012e454 7c90d21a 7c8023f1 00000001 0012e488 ntdll!KiFastSystemCallRet (FPO: [0,0,0]) 01 0012e458 7c8023f1 00000001 0012e488 00000000 ntdll!NtDelayExecution+0xc (FPO: [2,0,0]) 02 0012e4b0 79f2c9f3 00000064 00000001 6a54857a kernel32!SleepEx+0x61 (FPO: [Non-Fpo]) 03 0012e4e4 7a051b4e 00000064 00000001 7a12c0dd mscorwks!EESleepEx+0xa3 (FPO: [Non-Fpo]) 04 0012e4f0 7a12c0dd 7a38cf40 00000064 00000001 mscorwks!CExecutionEngine::ClrSleepEx+0xd (FPO: [3,0,0]) 05 0012e500 7a0e12b8 00000064 00000001 6a5484a2 mscorwks!ClrSleepEx+0x13 (FPO: [2,0,0]) 06 0012e53c 7a07e09e 00000064 6a548442 00000000 mscorwks!Thread::UserSleep+0x63 (FPO: [Non-Fpo]) 07 0012e5dc 018b1cca 00000000 00000000 00000000 mscorwks!ThreadNative::Sleep+0xce (FPO: [Non-Fpo]) WARNING: Frame IP not in any known module. Following frames may be wrong. 08 0012e658 79f1ef33 00000000 01e41634 0012e6fc 0x18b1cca 09 0012e70c 79f1ed6a 0017ef50 0012e914 0012e97c mscorwks!COMToCLRWorkerBody+0x208 (FPO: [Non-Fpo]) 0a 0012e768 79f1ec81 0017ef50 0012e914 0012e97c mscorwks!COMToCLRWorkerDebuggerWrapper+0x37 (FPO: [Non-Fpo]) 0b 0012e93c 014cac35 0017ef50 0012e97c 6a4c0c03 mscorwks!COMToCLRWorker+0x164 (FPO: [Non-Fpo]) *** WARNING: Unable to verify checksum for TBKO7Ctrl.exe *** ERROR: Module load completed but symbols could not be loaded for TBKO7Ctrl.exe 0c 0012e964 00404324 00412278 003a3de8 00000001 0x14cac35 0d 0012eaa4 004016f0 003a3de8 0012ed44 0012eb44 TBKO7Ctrl+0x4324 0e 0012eb40 77e799f4 003a2448 0012ed44 02020202 TBKO7Ctrl+0x16f0 0f 0012eb5c 77ef421a 004016bb 0012eb70 00000002 rpcrt4!Invoke+0x30 10 0012ef60 77ef5ea5 001aff40 00165468 0016a048 rpcrt4!NdrStubCall2+0x297 (FPO: [Non-Fpo]) 11 0012efb8 771329af 001aff40 0016a048 00165468 rpcrt4!CStdStubBuffer_Invoke+0x3f (FPO: [Non-Fpo]) 12 0012efdc 77600c15 001b3c80 0016a048 00165468 oleaut32!CUnivStubWrapper::Invoke+0xc5 (FPO: [Non-Fpo]) 13 0012f01c 77600bbf 0016a048 0016de10 0016f92c ole32!SyncStubInvoke+0x33 (FPO: [Non-Fpo]) 14 0012f064 7752ad31 0016a048 001b0c18 001b3c80 ole32!StubInvoke+0xa7 (FPO: [Non-Fpo]) 15 0012f13c 7752ac56 00165468 00000000 001b3c80 ole32!CCtxComChnl::ContextInvoke+0xe3 (FPO: [Non-Fpo]) 16 0012f158 7752b771 0016a048 00000001 001b3c80 ole32!MTAInvoke+0x1a (FPO: [Non-Fpo]) 17 0012f184 77600e1f 0016a048 00000001 001b3c80 ole32!STAInvoke+0x4a (FPO: [Non-Fpo]) 18 0012f1b8 77602df3 00169ff0 00165468 001b3c80 ole32!AppInvoke+0x7e (FPO: [Non-Fpo]) 19 0012f28c 77600dd6 00169ff0 00165c90 00000400 ole32!ComInvokeWithLockAndIPID+0x2c2 (FPO: [Non-Fpo]) 1a 0012f2b8 7752b7ab 00169ff0 00000400 001566e8 ole32!ComInvoke+0x60 (FPO: [Non-Fpo]) 1b 0012f2cc 7752b5e1 00169ff0 0012f34c 7752b54e ole32!ThreadDispatch+0x23 (FPO: [Non-Fpo]) 1c 0012f2e4 7e418734 00080288 001562c0 0000babe ole32!ThreadWndProc+0xfe (FPO: [Non-Fpo]) 1d 0012f310 7e418816 7752b54e 00080288 00000400 user32!InternalCallWinProc+0x28 1e 0012f378 7e4189cd 00000000 7752b54e 00080288 user32!UserCallWinProcCheckWow+0x150 (FPO: [Non-Fpo]) 1f 0012f3d8 7e418a10 0012f3fc 00000000 0012f418 user32!DispatchMessageWorker+0x306 (FPO: [Non-Fpo]) 20 0012f3e8 7752f2d0 0012f3fc 00000000 0012f4d8 user32!DispatchMessageW+0xf (FPO: [Non-Fpo]) 21 0012f418 7752f1ef 00080008 00000001 0000000e ole32!CCliModalLoop::PeekRPCAndDDEMessage+0x4c (FPO: [Non-Fpo]) 22 0012f448 7752f28f 00080008 00000102 0012f4d8 ole32!CCliModalLoop::FindMessage+0x2d (FPO: [Non-Fpo]) 23 0012f494 7752f23e 80010115 80010115 00000000 ole32!CCliModalLoop::HandleWakeForMsg+0x3b (FPO: [Non-Fpo]) 24 0012f4a8 77557237 0012f790 00001388 0012f4d4 ole32!CCliModalLoop::BlockFn+0x8b (FPO: [Non-Fpo]) 25 0012f51c 79f27b88 00000002 00001388 00000001 ole32!CoWaitForMultipleHandles+0xcf (FPO: [Non-Fpo]) 26 0012f53c 79f27acf 00000000 00001388 00000001 mscorwks!NT5WaitRoutine+0x51 (FPO: [Non-Fpo]) 27 0012f5a8 79f27a33 00000001 0012f790 00000000 mscorwks!MsgWaitHelper+0xa5 (FPO: [Non-Fpo]) 28 0012f5c8 79f17493 00000001 0012f790 00000001 mscorwks!Thread::DoAppropriateAptStateWait+0x28 (FPO: [Non-Fpo]) 29 0012f64c 79f1732f 00000001 0012f790 00000001 mscorwks!Thread::DoAppropriateWaitWorker+0x144 (FPO: [Non-Fpo]) 2a 0012f69c 7a07b49c 00000001 0012f790 00000001 mscorwks!Thread::DoAppropriateWait+0x40 (FPO: [Non-Fpo]) *** WARNING: Unable to verify checksum for mscorlib.ni.dll 2b 0012f7a0 793d424e 00000000 00000000 01442524 mscorwks!WaitHandleNative::CorWaitOneNative+0x14e (FPO: [Non-Fpo]) 2c 0012f848 79f1ef33 00000000 01e43a98 0012f8ec mscorlib_ni+0x31424e 2d 0012f8fc 79f1ed6a 0017ef50 0012fb04 0012fb6c mscorwks!COMToCLRWorkerBody+0x208 (FPO: [Non-Fpo]) 2e 0012f958 79f1ec81 0017ef50 0012fb04 0012fb6c mscorwks!COMToCLRWorkerDebuggerWrapper+0x37 (FPO: [Non-Fpo]) 2f 0012fb2c 014cac35 0017ef50 0012fb6c 6a4c0c03 mscorwks!COMToCLRWorker+0x164 (FPO: [Non-Fpo]) 30 0012fb54 004038ff 00411e7c 003a3dc8 00000001 0x14cac35 31 0012fd94 0040324b 00000113 00000001 00000000 TBKO7Ctrl+0x38ff 32 0012fdac 004036ba 0007028c 00000113 00000001 TBKO7Ctrl+0x324b 33 0012fdf4 7e418734 003a3dc8 00000113 00000001 TBKO7Ctrl+0x36ba 34 0012fe20 7e418816 003a3dd0 0007028c 00000113 user32!InternalCallWinProc+0x28 35 0012fe88 7e4189cd 00000000 003a3dd0 0007028c user32!UserCallWinProcCheckWow+0x150 (FPO: [Non-Fpo]) 36 0012fee8 7e418a10 0012ff10 00000000 0012ff34 user32!DispatchMessageWorker+0x306 (FPO: [Non-Fpo]) 37 0012fef8 0040543f 0012ff10 000b2628 00000000 user32!DispatchMessageW+0xf (FPO: [Non-Fpo]) 38 0012ff34 00407a11 00000000 00000000 000207a4 TBKO7Ctrl+0x543f 39 0012ffc0 7c817077 000b2628 0089f0cc 7ffd9000 TBKO7Ctrl+0x7a11 3a 0012fff0 00000000 00407932 00000000 78746341 kernel32!BaseProcessStart+0x23 (FPO: [Non-Fpo]) ``` No processo do Middleware há uma thread (0x2e8) que também está respondendo uma mensagem RPC. No entanto, como não há traços de quem está enviando, fica difícil de entender o fluxo. Para obter as mensagens envolvidas no estado do travamento um dump de kernel completo possibilitaria observar as estruturas internas do LPC, como ID da mensagem, que é único no sistema. ``` 8 Id: 128.2e8 Suspend: 0 Teb: 7ffae000 Unfrozen # ChildEBP RetAddr Args to Child 00 03a9fe14 7c90daaa 77e765e3 0000035c 03a9ff74 ntdll!KiFastSystemCallRet (FPO: [0,0,0]) 01 03a9fe18 77e765e3 0000035c 03a9ff74 00000000 ntdll!NtReplyWaitReceivePortEx+0xc (FPO: [5,0,0]) 02 03a9ff80 77e76caf 03a9ffa8 77e76ad1 001ba200 rpcrt4!LRPC_ADDRESS::ReceiveLotsaCalls+0x12a (FPO: [Non-Fpo]) 03 03a9ff88 77e76ad1 001ba200 7c900000 0099fae0 rpcrt4!RecvLotsaCallsWrapper+0xd (FPO: [Non-Fpo]) 04 03a9ffa8 77e76c97 001a2948 03a9ffec 7c80b729 rpcrt4!BaseCachedThreadRoutine+0x79 (FPO: [Non-Fpo]) 05 03a9ffb4 7c80b729 001acf70 7c900000 0099fae0 rpcrt4!ThreadStartRoutine+0x1a (FPO: [Non-Fpo]) 06 03a9ffec 00000000 77e76c7d 001acf70 00000000 kernel32!BaseThreadStart+0x37 (FPO: [Non-Fpo]) ``` 18:51 2016-02-23 19:09:49 00:17:33 cinema: O Menino e o Mundo O Menino e o Mundo é uma animação sobre os olhos de um menino enxergando o mundo.

= 2016-02-25
:date: 2016-02-25

Sobre Easytech: ontem encontrei o Reinaldo na entrada e conversei quase uma hora com ele. ele marcou uma reunião de tarde com o Ivan e nós dois para discutir o nosso posicionamento técnico, que levou suas 2 horas. agora que o Reinaldo ficou impressionado com meu conhecimento de windbg, ele ficou mais a par de que nós devemos ser mais incisivos em algumas decisões e mudanças do multivendor, e eu falei das threads, da criptografia e tudo mais com o ivan (depois a sós), e ele foi bem político e já delineou um plano onde eu irei posicionar a equipe (vulgo Ricardo) sobre as melhores práticas de cada ponto. 09:10 Um formato que nós validamos (porque já está acontecendo) foi nossa operação TecBan, em que o Ricardo agora se mostrou bem mais interessado em entender como as coisas funcionam. eu falei pro Ivan que é isso que precisamos da equipe dele. 09:11 O formato em questão é entregar código/análise e conhecimento.

= 2016-02-26
:date: 2016-02-26

2016-02-26 11:35:28 00:03:26 Analisando o problema do Selenium, fiz um teste simples acessando a página do UOL usando Idle para Python interativo e sem proxy já revelou o mesmo problema. Ambiente Windows 10 64 bits. ![](/images/gas-selenium-ie-acessando-uol-error.png) O teste original acessando o saite do bb não revelou esse problema. Ou seja, já temos um caso que é fácil distinguir quando dá certo e quando dá errado o uso do Selenium: ![](/images/gas-selenium-ie-acessando-bb-ok-uol-error.png) A árvore de processos usando o Selenium no esquema montado é Python => WebDriver => IE. ![](/images/gas-selenium-procexp-processes.png) 11:43 Testes em Chrome e Firefox sem proxy não revelaram nenhum erro. Com o IE o erro persiste mesmo com a instância padrão via Python (webdriver.Ie()). 12:30 Temos o código-fonte do Selenium no GitHub, caso seja necessário "descer o nível". Por enquanto, vamos focar no comportamento da caixa preta. 12:48 Testando com C# a exceção lançada foi a mesma: janela não encontrada: ![](/images/gas-selenium-dotnet-get-url-error.png) 13:48 2016-02-26 13:52:09 00:02:42 Embaixo de todas as camadas, a função IESession::ExecuteCommand é responsável por efetuar o envio das mensagens de janela para o browser que irá realizar as ações pedidas. ![](/images/gas-ie-key-function.png) Em alguns momentos, apesar da resposta ao SendMessage aparentemente fucionar, isso gera uma exceção no Selenium, ou de falta de Janela ou impossibilidade de alcançar o browser: ![](/images/gas-selenium-getbrowser-error.png) Será necessária uma análise mais atenta dentro desse código.

= 2016-02-27
:date: 2016-02-27

Uma documentação que parece bem completa sobre a API do Kernel Linux. 11:58 2016-02-27 12:17:57 00:17:04 cinema: Em Nome do Pai Em Nome do Pai é daquelas pérolas baseadas em fatos reais que funciona pelo emocional, mas também é um trabalho intimista que adentra o suficiente no lamaçal da "justiça" estatal para conseguir identificar o que critica sem desmerecer nossa inteligência.

= 2016-02-29
:date: 2016-02-29

Problema da ferramenta de leitura da versão da mídia OK: era a versão do Faircom na compilação (projetos VS2003 estão usando a Faircom 6, mas 2010 em diante a Faircom 10). 11:35 2016-02-29 12:36:53 00:04:49 O StupScua é o instalador do InstallShield que gera a estrutura de pastas do servidor do Bradesco e roda o instalador do Security Server na própria máquina, atualizando a versão. Depois ele importa os grupos e atualiza a versão da mídia. Uma ideia é renomear a pasta Files para a data/hora de execução e gerar uma pasta nova. O Zé disse que podemos fazer isso, o sincronismo vai acusar retorno de backup. 15:14 Mesmo conectando no endpoint correto, a comunicação com o Windows 10 parece ter problemas. 19:21 2016-02-29 19:35:06 00:06:44 cinema: Clown Quando Eli Roth (O Albergue) está envolvido, seja como diretor ou, no caso, produtor e ator, pode esperar cenas de violência gráfica de muito mal gosto.

= 2016-03-01
:date: 2016-03-01

2016-03-01 09:27:34 00:04:44 howto: Como Emitir e manter as NFs da Intelitrader A planilha de contabilidade da Intelitrader contém o histórico das NFs emitidas, com os links para os PDFs exportados e o login/senha para novas emissões. ![](/images/intelitrader-contabilidade.png) Há colunas que listam a data que as próximas NFs serão emitidas, valor dos impostos a ser pagos, comissões e qual parcela do contrato. ![](/images/intelitrader-contabilidade-planilha.png) Através do login/senha é possível entrar no sistema do Simples para emissão de NFs. ![](/images/intelitrader-contabilidade-emissao-nf.png) Uma vez emitida a NF, gerar o PDF e colocar na pasta de NFs, obtendo o link para esse documento e colando na planilha de NFs. ![](/images/intelitrader-contabilidade-nfs.png) ![](/images/intelitrader-contabilidade-getlink.png) ![](/images/intelitrader-contabilidade-copylink.png) 15:13 2016-03-01 15:32:09 00:16:40 cinemaqui: Tudo Vai Fica Bem O diretor Win Wenders (Pina) faz em "Tudo Vai Ficar Bem" um trabalho intimista e sutil em um ritmo que não deve agradar a muitos.

= 2019-02-27
:date: 2019-02-27

Inserindo mais uma linha de log para teste.

2019.02.27 00.14 Hoje comecei a mexer no tiodb para entender seu mecanismo e assim modificar a interação com Python, mas a compilação falhou por causa do nuget. O erro no caso já é antigo e havia encontrado uns anos atrás: quando um vcxproj está em uma pasta diferente do sln o path dos pacotes nuget não se ajusta. Editei pelo vim o vcxproj e funcionou, exceto por outro bug: conflito entre as dependências do nuget e do vcpkg, já que havia atualizado o projeto para Visual Studio 2017 (que já adiciona a dependência do boost por padrão). A solução deve ser retirar um deles. 15.01 Hoje tentando compilar o daytoday (atualizado para VS2017) para alterar a saída do arquivo para utf8 verifiquei dois problemas que são a solução: 1) incluir os headers sempre com o prefixo wtl/ (como todas as libs já no vcpkg) e 2) ignorar o atlthunk.lib, que já não é mais necessário. Tudo compilando. 23.23 Fazendo algumas modificações para o daytoday como o formato da data/hora e o título da aplicação. Ainda esbarrando na compilação para fazer funcionar a conversão para UTF8 do texto.
= 2019-02-28
:date: 2019-02-28

Consegui converter para utf8 com apenas C++11! Existe uma classe nova de armazenadores para unicode. Dica: melhor partir de wide string em C para utf8, o trabalho é feito em duas linhas de código (criar o converter e usá-lo). Também há um bug de linker (não encontrada uma variável id) no VS2015 se for usar.

= 2019-03-03
:date: 2019-03-03

Corrigida a abertura do arquivo de log no daytoday. Por algum motivo o ShellExecute com a string "open" não funcionava, mas depois de uma pesquisa na web descobri o "edit", que funciona.

= 2019-03-05
:date: 2019-03-05

Ontem acho que terminei a faxina do vimrc voltando os settings que me são caros (mas agora estão comentados). Também matamos o Dragão do End primeiro destruindo a lâmpada que fica em cima das torres. Hoje devo escrever o review de Uma Aventura Lego 2 e tentar avançar na análise da documentação do LogonControl que o Zé pediu (talvez faça algum treinamento rápido da Sales Force antes). E podemos ganhar mais badges no Minecraft, com ou sem as meninas.

= 2019-03-06
:date: 2019-03-06

Ontem ganhei o badge de ter cinco matilhas e arrumei um detalhe de rc na compilação do LogonControl. Tentei concluir um treinamento da Sales Force, mas deu mais trabalho que o esperado. Escrevi o review de Uma Aventura Lego 2, mas não como gostaria (preciso voltar à prática da escrita). Hoje emito as NFs e continuo o projeto do LogonControl. O Jimmy deve entrar em contato para retomar o assunto do risco.

= 2019-03-08
:date: 2019-03-08

Já passou dois dias e ainda estou vendo como conectar com sucesso via o COM ADO em qualquer banco (já tentei sqlite, SQL Server e Postgres). O Jimmy pediu uns dados e hoje enviei para ele o contrato assinado via Sedex (chega segunda). Minha próxima tarefa no Minecraft é domesticar um gato, o que eu já consegui, mas agora devo ganhar um presente dele de manhã (é esse o badge, por mais estranho que pareça). Escrevi o review da cabine de quinta e de Avatar. Depois de ler um pouco Kael me inspirei a tentar ir mais a fundo na percepção e não ficar só na superfície dos filmes, mas o que eles significam interiormente. PS: Escrevi mais um artigo sobre debug remoto e fiz strogonoff. Duas vezes.

= 2019-03-09
:date: 2019-03-09

Ontem consegui finalmente configurar uma conexão no ODBC usando SQL Server (o uso de login/senha deve ser habilitado no próprio SQL Server Management Studio clicando nas propriedades do servidor) e também funciona no Windows 10 com o driver ODBC de sqlite (mas lembro que na VM não); próximo passo dessa task é testar na VM em ambos os casos e encerrar o projeto TestADO com essas observações. No Minecraft saí com a tia para ganhar o "passar um dia inteiro debaixo da água", mas fiz ela morrer porque não parei quieto, explorando o lugar cheio de zumbis e escuro (agora devemos construir mais coisas para voltar). Comecei a assistir Evangelion em seus dois primeiros episódios e parece interessante, principalmente com a piada recorrente da jovem madura em poses sensuais morando com um garoto. 19:32 E hoje, crianças, aprendi que se você usar o ODBC 64 bits em um Windows 7 64 bits você vai ter problemas de erro 0x80004005 (erro desconhecido) ao tentar conectar em algum banco configurado por ele. Se usar o 32 bits (o odbcad32.exe da pasta wsyswow64) tudo volta a funcionar. Foda, não?

= 2019-03-13
:date: 2019-03-13

Interessante como os textos vão se acumulando naturalmente, mesmo eu tendo virtualmente texto para escrever todos. Já escrevi Cães de Aluguel, mas agora vi Maligno ontem e à noite o BDB do Amadeus (versão do diretor). E como anteontem já havia visto também Capitã Marvel e ainda estava nesse texto Maligno e Amadeus ficaram para hoje junto de outra cabine, Um Ato de Esperança. Bom, basicamente essa é minha rotina esses dias. Cobrei o Zé e o Jimmy a respeito dos trabalhos (procedures do SQL e meu note).

= 2019-03-14
:date: 2019-03-14

Ontem escrevi todos os textos: Maligno, Ato de Esperança e Amadeus. Não ficaram muito bons. Ato de Esperança deve ter me esgotado intelectualmente. Senti um pouco de estafa mental na hora de criar os textos, mas posso estar me cobrando seriedade demais. Ontem assistimos Thelma & Louise e para mim é ainda melhor que quando vi em 2015. Hoje não há nada para fazer exceto uma entrega de bike na Saúde, então estou devaneando com CMake e vendo se o VS Code é a solução para todos os builds. Pretendo fazer a entrega e só.

= 2019-03-16
:date: 2019-03-16

Estou doente e não há muita coisa para fazer de trabalho. Fiz o treinamento da Sales Force e um teste de programação de uma entrevista para a Irlanda (que me chamou para agendar uma entrevista com alguém, mesmo). Daí o Elias do grupo C/C++/42/BR mostrou como ele ficou na frente em um desafio de programação usando Pascal e comecei a tentar traduzir o código dele para C++. Agora eu estou fazendo minha própria versão baseada no código dele. É daqueles problemas IO bound onde tem que ler um json gigante e processar as informações. Uma dica importante que aprendi ontem: se você abrir/mapear o arquivo apenas para leitura, e evitar qualquer tipo de escrita, ele sairá voando. #ficadica

= 2019-03-17
:date: 2019-03-17

Consegui fazer o tal programa que bate o do Elias. O Sérgio testou na máquina dele e ficou 50% mais rápido. Foi enviado para testes na máquina do cara que cuida dos builds. Fiz ajuste fino até com o Visual Studio profiler e ele me indicou um ponto onde troquei por unordered_map e ficou o dobro da velocidade (ele usa hash para buscar as chaves). Isso me levou o dia inteiro novamente. Vimos Missão Impossível e hoje vimos o 2 (o primeiro é muito bom; o segundo, farofa). Fiz mais um exercício do grupo de programadores. Estou melhor da gripe. Interessante como se passou apenas umas 30 a 40 horas. Talvez eu faça mais algum exercício. Amanhã tem cabine e depois mais nada. Tenho que agendar a entrevista com o pessoal da Irlanda.

= 2019-03-18
:date: 2019-03-18

Já é noite, mas estou sentando no computador agora. Fui na cabine do documentário sobre a vida de um playboy, almocei com a Mitiko no Karaguê e à tarde fui beber cerveja com o Gianni no O'Malleys de sempre (discutimos filosofia e filmes). Já cobrei o Thiago da Scua sobre o SQL, ele está enrolado, e avisei o Zé. Amanhã tem visita na Easynvest para eu ver finalmente meu note. Ainda preciso escrever sobre esse filme de hoje e MI:III, que assisti novamente ontem em DVD com a Mitiko e que continua para mim o melhor da série: ele leva a sério o gênero de ação.

= 2019-03-20
:date: 2019-03-20

Fui na Easynvest pegar meu note e começar a programar o risco nele. Foi legal. Revemos Relatos Selvagens em BDB (sensacional ainda) e comecei a fuçar de novo no código do desafio5 porque o pessoal ficou comentando.

= 2019-03-22
:date: 2019-03-22

Os últimos dias foram um pouco corridos. Principalmente ontem, quando fui em uma cabine (Dumbo), almocei com a Mitiko e segui para a Easynvest para conhecer o cara do risco. Fiquei conversando com o Jimmy até tarde depois de acharmos uns problemas na implementação do envio de uma ordem a preço de mercado (coisas de acumular e desacumular valores no new order e report/reject/cancel). Já aprendi um pouco sobre o fluxo de tickets, eles usam o slack e que esse ano renda variável tem que decolar. Esqueci meu guarda-chuva na recepção do 14o. e não sei onde foi parar, pois quando fui buscar o pessoal já tinha ido embora. O meu guarda-chuva bom =/ 14:14 Hoje devo lançar as horas de ontem e escrever o review de Dumbo. Hoje já fiz a entrevista com o pessoal de Dublin. Foi alguém da equipe que me deu a tarefa de fazer um strcmp e depois um find do elemento faltante de uma sequência (ficamos um bom tempo nesse, todo o resto da 1h e meia de entrevista). O rapaz depois me explicou um pouco sobre os times e linguagens usadas.

= 2019-03-30
:date: 2019-03-30

Uau, eu realmente demoro para voltar a logar no daytoday. Esse é um mistério. Ainda não sei se é melhor logar ou não. Essa semana eu fui em várias cabines, uma por dia, a maioria do É Tudo Verdade. Quis aproveitar já que é a última semana. Fui de bike em duas delas, no MIS (finalmente fui para lá). Também trabalhei remotamente pela Easynvest fazendo as coisinhas antes da alavancagem e fui na quinta para uma reunião sobre todo o risco. Agora estou usando o note deles para ir viajar e fazer as coisas de lá, como emitir notas, etc.

= 2019-03-31
:date: 2019-03-31

Malas e dinheiro prontos para viajar para a Patagônia. Amanhã, primeiro-de-abril, partimos, e chegamos dia 2 a Calafate para ficar até dia 8 quando iremos a Bariloche e seguindo dia 10 para Neuquém, onde finalmente estão os vinhos.

= 2019-04-02
:date: 2019-04-02

San Julio carne punto pra bem meio seca e taça de Malbec Mendoza Zahan aromático, mas o frisante que deram na fila da espera me deixou bêbado demais para avaliar. Meio caro (200 reais) ou Argentina não é mais a mesma.

= 2019-04-03
:date: 2019-04-03

La Zorra Taproom tem ambiente despojado de cervejarias artesanais, mas a cerveja é levada a sério. O American IPA tem amargor e corpo honestos, o Weiss um salgado e leveza sóbrias e o Stout, diferente do soco no estômago da Colorado, é educado, mas esquecível. A salsicha enrolada em repolho deles é invenção interessante, mas com textura estranha, e o hambúrguer não tem nada de mais, fora o fato de ser bem feito. Custo médio. 18:42 Mi Rancho tem carne de panela pouco temperada, mas bem molinha. Acompanha um risoto amarelo e a salada deles é meio murcha, mas decente. O Malbec servido como vinho patagônico foi um da bodega Del Fin Del Mundo, um Ventus 2018, que como todo Malbec jovem vem com um buquê e sabor frutado agradável, mas nesse caso sem muita personalidade. A atendente nos deu um chorinho para ambas as taças para esperarmos pela sobremesa, um vulcão de doce de leite meio passado com uma bola de sorvete de vinho (bem arrumado o prato). El Calafate é um local onde não entendem muito bem o portunhol ou português, pois a maioria dos turistas fala inglês, e por gastar em dólar e euro os passeios ficam um pouco caros, como para as geleiras, acesso às passarelas e de barco, dois dias por 600 reais a pessoa.

= 2019-04-04
:date: 2019-04-04

Ontem caldo de abóbora no Viva La Pepa com creme meio aguado mas gostoso apesar de doce. Vem com cúrcuma e curry a gosto e pãezinhos. A Mitiko gostou do cobierto, pedaços de cenoura com maionese (vamos experimentar com as meninas). O caldo dela não é tão bom, o alho poró foi batido junto e criou uma gosma de vômito com fibras. Do lado achamos um sorvete de dulce de letche com gosto de doce de leite (diferente do de BaAs que era muito doce), mas com um gosto amargo também. Eu acho que harmonizou bem. Os alfajor estão bem aquém, das fábricas daqui. Um com super dulce super seco e o outro com quase nada de dulce. 20:07 Hoje museu do gelo na periferia de Calafate foi bem legal pelo segundo vídeo da sessão de cinema e pela paisagem em volta (difícil errar as fotos). Hoje voltamos para a cervejaria La Zorra porque os restaurantes ainda estavam fechados próximo das 17h e comemos umas papas fritas com cheddar e bacon (panceta). Experimentei a Belgian Dubber deles, que não é surpreendente, mas é competente, além do pint da Scotch no Happy Hour (por 8 reales) que também é bem competente e equilibrada. 22:27 Parrilla no La Parri campeão. Chef mantém uma churrasqueira, atende os clientes e os serve. O ojo de bife no punto do chef impecável. Os pratos todos têm quantidade para um e vem com o corte argentino, batatas ao forno e vegetais (além de uns pães). O vinho é servido em uma garrafa com um litro ou um litro e meio de um bom Malbec de Mendoza. O chef gosta de papear, mantém uma clientela conhecida, mas pelo menos na baixa temporada sem muito movimento.

= 2019-04-07
:date: 2019-04-07

Dois passeios de geleira. O primeiro por terra tem passarelas em torno da mais acessível de todas, Perito Moreno, cujo explorador homenageado tem uma linda história contada pela guia. É possível percorrer todos os cantos do local através de uma região elevada bem na sua frente e ver partes do gelo se desprender na água. Atrás do paredão de gelo são 30 kg de um caminho de gelo até as montanhas de onde a neve se origina e se compacta ao longo dos anos. As geleiras estão sempre em movimento, essa dois metros por dia, e eventualmente ela se encontra com o continente e forma um dique natural entre as águas que vai aos poucos sofrer erosão e explodir. Esse fenômeno está ocorrendo de dois em dois anos. Quando fomos já havia explodido. Outra geleira menos acessível pode-se conhecer ao norte de catamarã, uma viagem de uma a duas horas. No começo por ir contra as correntezas pode-se ficar enjoado, portanto recomendo não comer nada (fiquei de jejum a viagem inteira), mas depois da metade da viagem as coisas ficam mais calmas. Esses são passeios que atraem velhos e o por água é bem turístico, com dezenas de pessoas tentando tirar foto das atrações. 10:59 Repetimos La Parri e a cerveja do La Zorra é salvação quando tudo está fechado para uma pizza com ramon crudo. A tira de assado do La Parri é bem gordurosa. O dono/chef faz o que todo argentino que sabe fazer parrilla faz: compra a carne no açougue, descongela no micro-ondas e bota na churrasqueira. Ontem à noite experimentamos La Cantina aqui do lado, que serve tortillas (que chama piadinas) e toca blues, mas comemos chorizo de frigideira e um chope local, razoáveis (um IPA diferente). O ambiente é agradável e mais moderno que os outros. 13:31 Olivia diz ser um "coffee shop", mas tem decoração lúdica, mesas e cadeiras pequenas e frequentado por famílias com crianças (a taxa de natalidade da região é um nascimento por dia com quase 30k habitantes). Seu café é 100% arábica daqueles meio azedos e ácidos que servem na região dos Jardins em São Paulo. A massa dos pães é fresca e macia, o queijo especial deles cheira a mortadela e o waffle com sorvete de maçã e canela é uma combinação perfeita, acima da média. O atendimento na hora que fomos, cerca das 12 de um domingo, foi bem lento, mas valeu a espera. 21:29 Isabel Cocina ao Disco é restaurante pomposo que toca música brasileira com serviço frio, mas tem algo que vale a pena: cordeiro ao caçador, uma espécie de ensopado que vale a pena comer depois de andar 8km pela costa da cidade e no seu deserto.

= 2019-04-09
:date: 2019-04-09

Chimi Bar em Bariloche tem chope artesanalmente ok com comidinha bem ok. Mas é barato (parece lugar que a juventude mochileira passa). Já o bar do tio tem comida de bairro, até que bem feita, mas nada de mais.

= 2019-04-11
:date: 2019-04-11

O melhor churrasco até agora na Patagônia foi em um lugar chamado Huacho em Bariloche. Pequeno e vazio na hora do almoço (de noite é badalado), foram servidos dois dos mais lindos e suculentos ojos de bife para compartilhar, com alhos assados ao lado e chimichurri batido. Antes como entrada pãezinhos com legumes curtidos. Tudo feito na lenha, e apenas na lenha, como a atendente fez questão de explicar, com um certo orgulho. "É o estilo patagônico." Bom, ao experimentar a carne posso dizer que é o único estilo de fazer parrilla onde se sente as diferenças da parte chamuscada com as menos passadas, e onde o sabor da carne se mistura com da própria lenha em uma mistura não apenas suculenta, mas cheia de sutilezas que apenas um churrasco bem feito pode evocar. Acompanhado com uma Pale Ale de uma microcervejaria local feita com lúpulos aromáticos e água cristalina. 00:23 À noite no Huacho experimentamos um salmão grelhado junto com legumes, com resultados mistos entre cebola, berinjela, abobrinha e abóbora. 00:27 Primeira noite em Neuquen não parecia nada gastronômica, mas achamos um bar com cerveja artesanal bonzinho, com atendimento um pouco confuso, mas com comidinhas aceitáveis e uma maionese de jalapeno picante na medida. A tábua de degustação era de seis copos de 100 ml, suficiente para ter a noção que a cerveja é básica, ok. E que uma delas tem cheiro de sorvete italiano de máquina que remete a infância. 15:26 Almoço em "casa" (Neuquen, Argentina) com ojo de bife em frigideira convencional e papas cozidas e fritas. A carne se manteve suculenta e enquanto quente com fibra não seca, mas ao esfriar o resultado não é tão bom. De qualquer forma é muito melhor que um contra filé brazuca. #xupahue

= 2019-04-12
:date: 2019-04-12

Restaurante árabe no meio da cidade. Faraon o nome. Na entrada sabemos que é o dono, um tiozinho com cara de turco, gastando tempo com seus amigos. A atendente, uma Venezuelana que fugiu do país sozinha pelo aeroporto de Manaus e tenta manter contato com os pais, apesar deles estarem sem eletricidade nem água. O cardápio é um conjunto de pratos frios e quentes, com os já conhecidos molhos árabes e o pãozinho feito no estilo argentino. Esse é daqueles lugares que perguntam se vai gelo no vinho. Pedimos a degustação para apenas um e dividir. O preço é alto pela comida, e apenas alguns pratos vão chamar a atenção, o resto será bem ok.

= 2019-04-13
:date: 2019-04-13

Viagem de trem para o bairro vizinho custa um real, mas não tem nada lá. A bodega que dizia ter era na última rua depois de atravessar a rodovia e depois de passar por uns barracos com uns cachorros. Quase perdemos um rim. Depois rolê foi um sorvete na heladeira e voltar pra cidade grande. O câmbio daqui não troca dólares com um risquinho, mas real amassado e rasurado tudo bem. Hoje à noite orquestra sinfônica de Neuquen com teatro espanhol lotado de velhos. Depois bora pro bar com cerveja artesanal ruim e bruschetta mal montada.

= 2019-04-14
:date: 2019-04-14

Ótimo passeio privado pelas bodegas da região. O nosso guia, Juan Manoel, é muito simpático e informativo sobre a região, sobre a troca de maçãs e peras por frutas vermelhas por causa da crise, e dicas do que fazer, como o passeio paleontológico. Fomos na bodega Malma primeiro, comprei seis garrafas gran reserva, quatro de um blend sensacional. A guia da bodega fez uma apresentação espontânea da pequena Malma e uma degustação livre. Del Fin del Mundo seria a próxima, mas houve um acidente: um homem caiu dentro de um dos tanques! Ele ficou em estado grave e a bodega fechou por questões de segurança. Não era pra ser. Então fomos para a Schroeder para almoçar e fazer a visita, muito rápida, mas com informações interessantes sobre o processo da vinícola e a descoberta de uma espécie nova de dinossauro no terreno da bodega (que levou o nome da família). Depois para compensar fomos à casa de Té com frutos vermelhos e negros totalmente orgânicos e plantados do lado.

= Ontem andamos 12km
:date: 2019-04-16

Ontem andamos 12km descendo a cidade para o passeio da costa, que é belíssimo, com água transparente, e comemos no La Toscana, um ojo de bife que diz ser ao ponto, mas é bem passado, batatas "ahumadas" bem temperadas e pesadas, e uma entrada com queijo brie derretendo por dentro e casca intensa e abóbora grelhada. De noite eu fiz a carne, o angosto ao ponto, só que de verdade, e a Mitiko uma salada criativa com nachos. Dia seguinte fomos ver o maior dinossauro carnívoro já encontrado (única espécie), com os fósseis originais e uma réplica montada. Haviam outros dinos em El Chocon, além de uma hidrelétrica (que diferente de Itaipu que impressiona pela altura, essa impressiona pela largura). Por fim cinema com documentário sobre cantor panamenho e cervejaria Ohaum (algo assim) com um hambúrguer meio industrial prensado, mas ótimas cervejas. A Pale Ale aromática e a IPA premiada amarga, mas com sabor intenso.

= Fomos às compras de vinhos
:date: 2019-04-16

Hoje fomos às compras de vinhos. Passamos primeiro no Carrefour e achamos vinhos de Mendoza e de Neuquem. Depois almoçamos novamente no La Toscana pedindo um cordeiro (bem grelhado, mas não é meu favorito) e na volta paramos na melhor heladeria da cidade e em seguida passamos em uma wine store que fica no caminho, e lá comprei mais 4 garrafas da região.

= 2019-04-19
:date: 2019-04-19

Ontem voltamos, com horário certinho para fazer a integração dos vôos. Experimentamos o transfer entre aeroportos, mas ele demora mais de uma hora e meia, então fica o alerta. Primeira refeição br foi o japonês do Little Tokyo. Hoje, dia sem chuva, 27 a máxima, cabine pra ir e uma vontade irresistível de andar de bike, uni tudo e fui em cima da hora. Foi muito bom. Vi Mormaço, drama brasileiro sobre desapropriações de uma diretora que sabe o que faz. Na volta fui comprando coisas para meu pão de queijo, pois vai ser final de semana prolongado com as meninas. Chamei a mãe e tomamos chá enquanto mostrava as fotos da viagem. Nas minhas leituras li no livro de Linux sobre o padrão das funções de I/O e me veio à mente várias vezes sobre a arquitetura Windows (e como ele herdou conceitos que poderia usar direto do POSIX). Reli mais um pouco sobre o Agora, sobre os breves momentos que se chega nele antes da transformação, e lembrei de mim. Sobre cinema voltei com aquele conjunto de ensaios e aprendi que Eisenstein e sua montagem tinha crenças linguísticas, mas foi rechaçado em análises mais científicas. Além disso Bazin fala da mise en scene como construção de significados, pela profundidade do campo, disposição e movimentação dos atores, e como é muito mais poderoso que montagem. Ao mesmo tempo Godard evita a profundidade como forma de mostrar a burguesia como algo raso e rejeitado pelo espectador (ou seja, o cineasta usa linguagem por ideologia). Fascinante como isso se uniu à minha forma de ver Mormaço, mas infelizmente não consegui terminar o texto, devaneando demais na net. 14:42 A energia como a conhecemos deriva de flutuações quânticas e cuja soma total é igual a zero. Parece contraditório, mas não é. Imagine que a soma total de energia do universo seja zero e em dado momento o valor energético do campo quântico oscila "criando" duas partículas com valores 1 e -1. A soma continua zero, mas agora essas partículas interagem. Extrapole isso para trilhões, quatrilhões de partículas e eventualmente surgiu uma configuração que deu origem à soma das interações que observamos cuja configuração básica observamos como as forças fundamentais da natureza (gravidade, eletromagnetismo, etc). Ainda assim, toda energia uma vez observada antes do início das partículas somavam zero. A conclusão que podemos tirar disso até o momento é que existe um modelo físico que demonstra que nosso universo pode ter surgido do "nada" (sem energia inicial necessária).

 
= Starting at Venn
:date: 2023-06-09
:tags: tag_venn
 
The plan for today was to analyze Outlook network communication (if possible inside and outside SE) and work a way to emulate Outlook server IPs or exchange inside VM to generate a "Contacting Server" message by letting the server being "slow". I was interested too in to compare another apps that use network as Chrome.

However, I spend another bunch of time trying to activate Office in DLP. First it was the credentials conflict observed in production, which I resolved by using the local administrator with no Microsoft Account associated. But after I succeeded into this step, the next behavior was the sign in window closing repeteadly as I typed Venn'a account, as if something was breaking after press the Send button and Office started the process over again. I still have to analyze this.

But that was a happy crush analysis day, because Alex Osipov sent me an Outlook memory dump when it frooze just in the beginning of the process. I asked for one because it could be useful to this analysis and the actual bug of this issue cannot be easily reproduced.

I analyze this dump and discovered that the main window thread was waiting for a critical section used by a part of the Office code called `OsfIdentityManager` when calling the function `EnsureInit`. The code responsible for acquire the lock is associated with the name `OsfLock`. The same cs was trying to be acquired by another thread. Looking at another similar threads it seems a group of worker threads starting at the entry `mso20win32client!CIOPort::ThreadProc`. Bellow is the result of the `!cs` command in WinDbg:

```
DebugInfo          = 0x00000195b9ce4f00
Critical section   = 0x0000019581b2d590 (+0x19581B2D590)
LOCKED
LockCount          = 0x2
WaiterWoken        = No
OwningThread       = 0x0000000000018e9c
RecursionCount     = 0x1
LockSemaphore      = 0xFFFFFFFF
SpinCount          = 0x00000000020007d0
```

The moment the dump was generated the thread that had acquired this cs was inside the same function `OsfIdentityManager::EnsureInit` and several frames above was calling the native API `ntdll!NtQueryFullAttributesFile`, when I discovered that this application is using [Microsoft Application Virtualization (App-V)](https://learn.microsoft.com/en-us/windows/application-management/app-v/appv-getting-started) based on the hook it was installed:

```
. 58  Id: 661c.18e9c Suspend: -1 Teb: 0000003c`34078000 Unfrozen
      Start: mso20win32client!CIOPort::ThreadProc (00007ff8`70ba3ef0)
      Priority: 0  Priority class: 32  Affinity: fffff
 # Child-SP          RetAddr               Call Site
00 0000003c`382fedc8 00007ff9`089c52a8     ntdll!NtQueryFullAttributesFile+0x14
01 0000003c`382fedd0 00007ff9`089b9483     AppVIsvSubsystems64!vfs_query_full_attributes_request::pass_through+0x28
02 0000003c`382fee00 00007ff9`089b384b     AppVIsvSubsystems64!AppV::VFS::Filesys::virtualize_nt_query_full_attributes+0xc3
03 0000003c`382ff050 00007ff9`089b61fe     AppVIsvSubsystems64!vfs_hooks::NtQueryFullAttributesFile+0xeb
04 0000003c`382ff100 00007ff9`7774849f     AppVIsvSubsystems64!vfs_hooks::hooked_NtQueryFullAttributesFile+0x2e
05 0000003c`382ff130 00007ff8`70b957c0     KERNELBASE!GetFileAttributesExW+0x9f
06 0000003c`382ff230 00007ff8`70b95779     mso20win32client!MsoGetFileAttributesW+0x20
...
```

> Virtual applications are installed on centrally managed servers and delivered to users as a service in real time and on an as-needed basis. Users launch virtual applications from familiar access points and interact with them as if they were installed locally.

Considering that that is the thread that is locking the cs that is freezing other two threads, including the main window thread, I believe that somehow there is a connection with the delivery service from the App-V with the Outlook slowliness when opening or perhaps in other moments where a unavailable module is requests. Results from the web have the usual troubleshooting sugestions as restore Office installation, run in safe mode and disable AppData network redirection.

Two main commands used in WinDbg for the analysis was `!uniqstack` to show the... unique stacks in the process, and `!cs`, to show all critical sections and its states.

I am not sure if this issue is related with the "Contacting the server forever" message, but could be a good next step to see if the machines where this message appeared are using the App-V technology as well.
 
= 2023-06-10
:date: 2023-06-10
 
Esta é minha previsão dos itens que restam para a Scua, fora o sincronismo do SQL Server, que fica no aguardo das procedures que devem ser chamadas.

.Auditoria
 - Enviar regras de auditoria junto das de acesso 4h
 - Logar evento de logon e logoff 8h

Previsão: 19/06

.Diretivas
 - Inserir componente que aplica diretivas 4h
 - Traduzir diretivas de volta ao formato ctree 4h
 - Comparar com registro do scua antigo e fazer ajustes 8h
 - Resetar registro em logoff e desinstalação 4h

Previsão: 03/07
 
= Study about hooks and network inside Container
:date: 2023-06-14
:tags: tag_venn
 
I studied a little more about the hooks and network communication inside containererized apps using the Confluence documentation and Workplace source code. I found the bootstrap parts related to Workplace Starter and the driver communication. I tried to activate Office in DLP again, but the signin loop continued. I even recorded the WireShark and Proceess Monitor logs and was starting to try to activate outside of SE to compare logs and... it succeeded outside! I wasn't aware of this approach or this time worked.

Anyway, now the issue is no more Office activation, but Outlook start, because when adding my company email in the welcome screen after some seconds it is failing. I tried inside and outside SE with similar results.

I started to analyze the Outlook logs for the ROADMAP-68699 in temp folder and AppData when my network in vm started to become very slow, even logged out from Workplace. I discovered the ping was returning "General failure" for external IPs and even for `127.0.0.1`. Then I logged out to Workplace to make some test and `IRQL_NOT_LESS_OR_EQUAL` BSOD occurred. This is the same VM from the same BSOD that initiate this issue, except it occurred in another scenario, even though could be the same logging out operation, since when waking up the vm the logout by timeout was in action.

I also noticed that the system cpu usage was having some tops, what in Process Explorer could be translated to interrupts (I am not sure though).

After the reboot the ping worked again normally. After logging to Workplace the ping issue occurred again.

I am uploading this status also to 68699, since it is more related to that issue, but reporting my status in analysis here as well.
 
= Testing the installation from scratch
:date: 2023-06-14
:tags: tag_venn
 
Testing the installation of the version 4.0.8565.21801 from scratch again and the network issue repeated. I read about the versioning numbers and create a tool to keep up with what would be the today version and read about the deploy process. I noticed that I am using the git repository `Workplace.Container.Windows`, that is different from the build repository `OS33.Workplace.Windows` (saw in the pipeline). I was checking out if the artefacts are delivery with symbol files, but no. So now I am cloning the right repository to understand how the Workplace knows about the correct installed version and if there is a way to exchange versions easily. My objective is to test older versions to see if it is a recent change that created this behavior in my VM.

But that could take some time now, since the right repository seems bigger, or my connection is slower.

 
= Summary of issues related to Outlook server communication message
:date: 2023-06-17
:tags: tag_venn

Issue 68699 and 68713 occurred more when mouse over email with long thread and emails with embedded imgs.

## Issue 68713

 - The message stays for long time, more than 1 minute (until 2 minutes), and occurs during the day.
 - It was 100% reproducible in 68713 with first time emails from Jira; after the first it is super fast.
 - The channel was Alpha, WPW version was 4.0.8468.10919, WCC version was 1.0.8468.15499.
 - Win11 Pro 22H2 x64 was the original env with user alex.venn and it was replicated in Win10 x64 machine.

The following rules could had fixed the issue:

```
"rules":{
  "ipc":{
    "com": {
      "classes": [
      {
        "id": "38E441FB-3D16-422F-8750-B2DACEC5CEFC"
      }
      ]
    },
      "namedObjects": {
        "objects": [
        {
          "name": "*a9f09e13-ac1b-47f6-b030-740497841fab*"
        }
        ]
      }
  }
},
...
```

 - Apparently after Workplace Container update the issue was no more reproducible under any circunstance.
 - The issue 68713 was closed March 29th.

## Issue 68699

 - Issue 68699 was open March 7th.
 - The channel was Preview, WPW version was 4.0.8459.17700, component version was 1.0.8460.23924.
 - Win11 Pro 10.0.22623 was the original env with user rmatalon and still no reproducible in VM.

Title: The Elusive Nature of Software Bugs: Unraveling the Challenges in Solving Non-Reproducible Issues
Author: ChatGPT

Abstract:
Software bugs are an inherent part of the development process, often causing frustration and delays. While some bugs are straightforward to identify and resolve, others prove to be elusive, especially when they are not easily reproducible. This article delves into the intricacies of non-reproducible bugs, exploring the challenges they present and the strategies employed to overcome them. By understanding the nature of these bugs and adopting effective debugging techniques, developers can enhance their problem-solving skills and minimize the impact of such issues on software development projects.

Introduction
Software bugs are defects or flaws that disrupt the expected behavior of an application, compromising its functionality, performance, or security. Bugs can arise due to various factors, such as coding errors, incorrect assumptions, hardware limitations, or external dependencies. While some bugs manifest consistently and can be easily reproduced, others exhibit a non-reproducible nature, making them significantly more difficult to identify and solve.

The Elusive Nature of Non-Reproducible Bugs
Non-reproducible bugs, also known as intermittent bugs or heisenbugs, are characterized by their intermittent occurrence, making it challenging to determine their root causes. These bugs often manifest themselves only under specific conditions, such as certain inputs, environmental factors, or timing issues. Consequently, reproducing the bug becomes a significant hurdle for developers, as it may not appear consistently during testing or debugging sessions.

The Impact of Non-Reproducible Bugs
Non-reproducible bugs can have severe consequences, both for end-users and software development teams. From the end-users' perspective, these bugs can lead to unexpected crashes, data corruption, or incorrect outputs, resulting in a poor user experience and diminished trust in the software. For development teams, non-reproducible bugs can cause extensive debugging efforts, delayed release cycles, increased costs, and even damage to the reputation of the organization.

Challenges in Debugging Non-Reproducible Bugs
4.1 Limited Information: Non-reproducible bugs often lack sufficient information to pinpoint their root causes. Inconsistent error logs, sporadic stack traces, and ambiguous error messages hinder the debugging process, making it difficult for developers to establish a clear path towards a solution.

4.2 Environmental Factors: Non-reproducible bugs can be influenced by various environmental factors, such as different operating systems, hardware configurations, network conditions, or concurrent processes. Tracking down these bugs requires meticulous analysis of these factors and their potential impact on the bug's manifestation.

4.3 Timing Issues: Many non-reproducible bugs occur due to timing dependencies, where the correct sequence of events or timing conditions must align to trigger the bug. These bugs often require intricate understanding of the codebase, including how different components interact and how time-sensitive operations are handled.

4.4 Heisenberg Effect: The very act of observing a non-reproducible bug can alter its behavior, leading to the "Heisenberg effect." This effect can make the bug disappear temporarily or exhibit different symptoms, making it even more challenging to capture and analyze.

Strategies for Debugging Non-Reproducible Bugs
5.1 Capturing Additional Information: Developers can employ various techniques to gather more information when the bug occurs. These include enabling detailed logging, capturing stack traces, leveraging debugging tools, or using remote debugging to inspect the application in real-time during intermittent occurrences.
5.2 Reproduction Scenarios: Although non-reproducible bugs are challenging to replicate, identifying potential scenarios that might trigger the bug can aid in narrowing down the root cause. Analyzing specific inputs, user interactions, or system states that were present during bug occurrences can provide valuable insights.

5.3 Test Case Minimization: By systematically eliminating irrelevant test case factors and isolating the core components involved in the bug manifestation, developers can create minimal test cases that focus solely on reproducing the bug. This approach helps reduce the complexity and increases the chances of capturing the bug in a controlled environment.

5.4 Logging and Instrumentation: Implementing extensive logging and instrumentation within the codebase can provide developers with a detailed trail of events leading up to the bug occurrence. By analyzing these logs, developers may uncover patterns or anomalies that shed light on the root cause.

5.5 Collaboration and Knowledge Sharing: Non-reproducible bugs often require a collaborative effort from the development team. Sharing experiences, insights, and potential reproduction scenarios among team members can accelerate the debugging process and foster a collective understanding of the bug. Leveraging online forums, bug tracking systems, or specialized debugging communities can also provide valuable input from external experts.

5.6 Version Control and Code Reviews: Non-reproducible bugs can sometimes be attributed to changes in the codebase or interactions between different versions of libraries or dependencies. Maintaining a robust version control system and conducting thorough code reviews can help identify potential code changes that may contribute to the bug's appearance.

Best Practices for Preventing Non-Reproducible Bugs
While it may not be possible to completely eliminate non-reproducible bugs, developers can adopt best practices to minimize their occurrence and impact:
6.1 Thorough Testing: Implementing comprehensive testing strategies, including unit testing, integration testing, and regression testing, can help identify and fix bugs at an early stage. Additionally, adopting techniques like stress testing, boundary testing, and fuzz testing can help uncover edge cases and potential intermittent issues.

6.2 Code Reviews and Static Analysis: Conducting regular code reviews and leveraging static analysis tools can help detect potential coding errors, incorrect assumptions, or areas of the codebase that may lead to non-reproducible bugs. These practices promote code quality and reduce the chances of introducing elusive issues.

6.3 Documentation: Maintaining detailed documentation that captures the system architecture, dependencies, and known issues can provide valuable guidance when debugging non-reproducible bugs. Documentation should include troubleshooting steps, potential workarounds, and any known patterns or scenarios that may lead to the bug's manifestation.

6.4 Error Handling and Logging: Implementing robust error handling mechanisms and meaningful logging can significantly aid in diagnosing non-reproducible bugs. Well-crafted error messages, proper exception handling, and logging critical information can provide developers with valuable clues when troubleshooting intermittent issues.

6.5 Continuous Integration and Deployment: Employing continuous integration and deployment pipelines with automated testing can help catch potential non-reproducible bugs early in the development cycle. Automating the build and testing process minimizes the chances of introducing issues caused by environmental differences or code interactions.

Conclusion
Non-reproducible bugs pose a unique set of challenges for software developers, often requiring meticulous investigation, collaboration, and strategic debugging techniques. By understanding the elusive nature of these bugs and adopting effective debugging strategies, developers can enhance their problem-solving skills and minimize the impact of non-reproducible issues on software development projects. Through thorough testing, collaboration, and the implementation of best practices, developers can mitigate the occurrence of non-reproducible bugs and deliver more reliable and robust software systems.
 
= About the Outlook issue
:date: 2023-06-19
:tags: tag_venn
 
About the Outlook issue, here is a new strategy for today: try to reproduce with the appointed version in the issue.

It could be a still existing bug without current symptoms because some change after the faulty version is masquerading this behavior. Or could be a bug that should happen again in future versions because we are unaware of what "fixed" it. In both cases it is mandatory to know for sure what are the proper conditions to the bug shows up. A step by step reproducible is desired.

So how to return a previous version? To compile every binary and exchange it?

I tried to follow the pipeline from [release procedure](https://os33corp.atlassian.net/wiki/spaces/DTDLP/pages/2327871706/How+to+deploy+Workplace+for+Windows), but I discovered in the process that these components are all csharp and there is some issues trying to build locally (I could start a pipeline version from the issue version, though).

My next tentative was to build the Workplace.Container.Windows repository and update all binaries. In the process I discovered a Demo project that I believe it will be useful in a clear machine to run the low level mechanism and test different versions. I am going to try to use it instead of dealing with the official install.

The first thing to do is to copy the output folder from demo project and run `demo.cmd` script. Then you need to choose if you want to install or uninstall (choose install) and after that a test signin is made with the credentials present in app.config. I filled the correct credentiais for my user at DLP and it started to run.

However I got stuck in this loop:

```
Mount Drive. Letter: X, Path: C:\ProgramData\Workplace\FakeDrive. Unc: \Device\HarddiskVolume3\ProgramData\Workplace\FakeDrive
Starting container session
Info: Starting container service
Info: Starting container service through service manager.
Info: Session 66f395d5-3264-4e40-b1fe-6a4752f65b9a was added to storage
Info: Creating new container session
Info: Key-exchange (Workplacecreate-container-session)
Info: Key-exchange (Workplacecreate-container-session) completed
Verbose: IpcClientLogger. SendRequestAsync. Endpoint: Workplacecreate-container-session. Request started: 2023-06-19 18:07:58.903. Elapsed time: 00:00:03.6443244
Info: Received container's response
Info: Container requested service token for dlp-virtual-disk-service scope. Request: get-service-token (994c5c83-a1c7-4370-ad5e-335095ecd565)
Warning: Workplace.Container.Api.Common.Exceptions.WorkplaceContainerServiceException: Workplace Container has been terminated during waiting for session confirmation
   at Workplace.Container.Api.WorkplaceContainerManager.VerifySessionConfirmed()
   at Workplace.Container.Api.Common.Utilities.ConditionAwaiter.<Wait>d__0.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at Workplace.Container.Api.WorkplaceContainerManager.<>c__DisplayClass30_0.<<StartContainerCreateSession>g__StartCreateImpl|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Workplace.Container.Api.WorkplaceContainerManager.<>c__DisplayClass30_0.<<StartContainerCreateSession>g__StartCreateImpl|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Workplace.Container.Api.Common.Utilities.RetryExecution.<InfiniteRetryWhileErrorAsync>d__2.MoveNext()
Info: Starting container service
Info: Starting container service through service manager.
```

 
= About the Outlook issue 2
:date: 2023-06-20
:tags: tag_venn
 
About the Outlook issue, here is a new strategy for today: try to reproduce with the appointed version in the issue.

It could be a still existing bug without current symptoms because some change after the faulty version is masquerading this behavior. Or could be a bug that should happen again in future versions because we are unaware of what "fixed" it. In both cases it is mandatory to know for sure what are the proper conditions to the bug shows up. A step by step reproducible is desired.

So how to return a previous version? To compile every binary and exchange it?

I tried to follow the pipeline from [release procedure](https://os33corp.atlassian.net/wiki/spaces/DTDLP/pages/2327871706/How+to+deploy+Workplace+for+Windows), but I discovered in the process that these components are all csharp and there is some issues trying to build locally (I could start a pipeline version from the issue version, though).

My next tentative was to build the Workplace.Container.Windows repository and update all binaries. In the process I discovered a Demo project that I believe it will be useful in a clear machine to run the low level mechanism and test different versions. I am going to try to use it instead of dealing with the official install.

The first thing to do is to copy the output folder from demo project and run `demo.cmd` script. Then you need to choose if you want to install or uninstall (choose install) and after that a test signin is made with the credentials present in app.config. I filled the correct credentiais for my user at DLP and it started to run.

However I got stuck in this loop:

```
Mount Drive. Letter: X, Path: C:\ProgramData\Workplace\FakeDrive. Unc: \Device\HarddiskVolume3\ProgramData\Workplace\FakeDrive
Starting container session
Info: Starting container service
Info: Starting container service through service manager.
Info: Session 66f395d5-3264-4e40-b1fe-6a4752f65b9a was added to storage
Info: Creating new container session
Info: Key-exchange (Workplacecreate-container-session)
Info: Key-exchange (Workplacecreate-container-session) completed
Verbose: IpcClientLogger. SendRequestAsync. Endpoint: Workplacecreate-container-session. Request started: 2023-06-19 18:07:58.903. Elapsed time: 00:00:03.6443244
Info: Received container's response
Info: Container requested service token for dlp-virtual-disk-service scope. Request: get-service-token (994c5c83-a1c7-4370-ad5e-335095ecd565)
Warning: Workplace.Container.Api.Common.Exceptions.WorkplaceContainerServiceException: Workplace Container has been terminated during waiting for session confirmation
   at Workplace.Container.Api.WorkplaceContainerManager.VerifySessionConfirmed()
   at Workplace.Container.Api.Common.Utilities.ConditionAwaiter.<Wait>d__0.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at Workplace.Container.Api.WorkplaceContainerManager.<>c__DisplayClass30_0.<<StartContainerCreateSession>g__StartCreateImpl|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Workplace.Container.Api.WorkplaceContainerManager.<>c__DisplayClass30_0.<<StartContainerCreateSession>g__StartCreateImpl|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Workplace.Container.Api.Common.Utilities.RetryExecution.<InfiniteRetryWhileErrorAsync>d__2.MoveNext()
Info: Starting container service
Info: Starting container service through service manager.
```

I stopped in this issue, managed to replace the Api assemblies by local building and learned that demo can install a version in program files, install the container service and start/stop it. The service was stopping because of a last error of not finding the id session (the guid that is created).

Meanwhile the guys answered about my deadline. Alex Osipov confirmed that the issue could be closed because it is not reprocible for a while, waiting just for a final answer from the reporter.
 
= About the Outlook issue 3
:date: 2023-06-21
:tags: tag_venn
 
## Introduction

Trying to understand how Outlook manages the default profile I created two profiles in my computer without Workplace using a personal account `wcaloni@outlook.com`. I named the profiles `Outlook` (actually Outlook itself name this first profile as a default) and the second profile `Caloni2`. In SE the first profile is also `Outlook` and I created a second one named `CaloniSE`.

01_manage_profiles.png

The profile manager is another executable called `olcfg.exe`. When changing the default profile it changes the registry entries `DefaultProfile` and `PickLogonProfile`. I noticed another relevant value calle `LastLoggedOnProfile`. More about that bellow.

 - `HKCU\Software\Microsoft\Office\16.0\Outlook\DefaultProfile`
 - `HKCU\Software\Microsoft\Exchange\Client\Options\PickLogonProfile`
 - `HKCU\Software\Microsoft\Office\16.0\Outlook\LastLoggedOnProfile`

02_procmon_changing_outlook_profile.mp4

The same operation was made inside SE and apparently those values are being set normally.

03_w4w_manage_profiles.png

## Process Monitor sessions

I logged 7 procmon sessions about outlook behavior and filtered those sessions for "profile" (case insensitive) to compare and find some anomalous behavior in the case of opening outlook in SE. Bellow are some key records from those logs.

### 01_LogfileOutlookSEChoseProfileScreen

This is the first time opening Outlook after started W4W with two profiles. The registry values `ProfileBeingOpened` are `Caloni2` (not `Caloni2SE`) and the select profile window is shown.

04_outlook_splash_screen_chose_profile_close.png

```
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsData\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 16, Data: Caloni2"
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsDataPreviousSession\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 16, Data: Caloni2"
```

### 02_LogfileOutlookSEChoseProfileScreen2

Second time opening Outlook in the same W4W session; just pressed close in chose profile window; didn't enter the main window. The same registry values are scanned with unsurprinsingly the same result.

```
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsData\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 16, Data: Caloni2"
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsDataPreviousSession\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 16, Data: Caloni2"
```

### 03_LogfileOutlookSEChoseProfileEnterMainWindow

Third time opening Outlook in same W4W session, but this time choosing the profile `Caloni2SE`, setting it as default profile and consequently entering the main window.

05_outlook_splash_screen_chose_profile_ok.png

The registry value `ProfileBeingOpened` is still `Caloni2`, but at some moment the `DefaultProfile` is set to `Caloni2SE`.

```
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsData\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 16, Data: Caloni2"
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\DefaultProfile","SUCCESS","Type: REG_SZ, Length: 16, Data: Caloni2"
...
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\DefaultProfile","SUCCESS","Type: REG_SZ, Length: 16, Data: Caloni2"
"OUTLOOK.EXE","RegSetValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\DefaultProfile","SUCCESS","Type: REG_SZ, Length: 20, Data: Caloni2SE"
```

### 04_LogfileOutlookSEEnterMainWindow

Fourth time opening Outlook in same W4W session, entering main window directly; the choose profile screen doesn't show. The value `ProfileBeingOpened` is already `Caloni2SE`. However, still in `Diagnostics` there are still in `ProfileBeingOpened` the value `Caloni2`, but only in `BootDiagnosticsDataPreviousSession`.

```
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsData\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 20, Data: Caloni2SE"
"OUTLOOK.EXE","RegSetValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsDataPreviousSession\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 20, Data: Caloni2SE"
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\DefaultProfile","SUCCESS","Type: REG_SZ, Length: 20, Data: Caloni2SE"
...
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsDataPreviousSession\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 16, Data: Caloni2"
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsData\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 16, Data: Caloni2"
"OUTLOOK.EXE","RegSetValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsDataPreviousSession\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 20, Data: Caloni2SE"
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsDataPreviousSession\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 16, Data: Caloni2"
"OUTLOOK.EXE","RegSetValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsDataPreviousSession\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 20, Data: Caloni2SE"
```

### 05_LogfileOutlookSEEnterMainWindow2

Fifth time opening Outlook in same W4W session and entering main window; no change at all. The same pattern of changing `Caloni2` entries for `Caloni2SE` is seen.

```
"OUTLOOK.EXE","RegQueryValue","HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList\Default","BUFFER OVERFLOW","Length: 12"
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Profiles\Caloni2SE\66164611ef58974c9a321ef56cce396b\001f3001","SUCCESS","Type: REG_BINARY, Length: 74, Data: 4D 00 69 00 63 00 72 00 6F 00 73 00 6F 00 66 00"
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsData\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 20, Data: Caloni2SE"
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsDataPreviousSession\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 16, Data: Caloni2"
"OUTLOOK.EXE","RegSetValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsDataPreviousSession\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 20, Data: Caloni2SE"
```

### 06_LogfileRestartW4WOutlookSEChoseProfileScreen

Restarted W4W session and opening Outlook for the first time; chose profile screen appeared again; just pressed close; didn't enter the main window.

```
"OUTLOOK.EXE","RegQueryValue","HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList\Default","BUFFER OVERFLOW","Length: 12"
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsData\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 20, Data: Caloni2SE"
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsDataPreviousSession\ProfileBeingOpened","BUFFER OVERFLOW","Length: 12"
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsDataPreviousSession\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 16, Data: Caloni2"
"OUTLOOK.EXE","RegSetValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsDataPreviousSession\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 20, Data: Caloni2SE"
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsData\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 20, Data: Caloni2SE"
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsDataPreviousSession\ProfileBeingOpened","BUFFER OVERFLOW","Length: 12"
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsDataPreviousSession\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 16, Data: Caloni2"
"OUTLOOK.EXE","RegSetValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsDataPreviousSession\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 20, Data: Caloni2SE"
```

### 07_LogfileRestartW4WOutlookSEChoseProfileScreen2

Second time opening Outlook in same W4W session; chose profile screen still appearing.

```
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsData\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 16, Data: Caloni2"
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsDataPreviousSession\ProfileBeingOpened","BUFFER OVERFLOW","Length: 12"
"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\Diagnostics\BootDiagnosticsDataPreviousSession\ProfileBeingOpened","SUCCESS","Type: REG_SZ, Length: 16, Data: Caloni2"
```

## About LastLoggedOnProfile

I find interesting that there was no occurrence of the registry value `LastLoggedOnProfile` in the first log, but after the second one it is shown as not found in each subsequent procmon session. However, no search for this value inside `Office\16.0\Outlook` key is successful. This could be the (partial) answer why Outlook can't open the last logged on profile, if this value is updated correctly outside SE, but since this value is not found even when there is no choose profile screen, it is still undefined behavior.

```
grep LastLoggedOnProfile *.CSV
02_LogfileOutlookSEChoseProfileScreen2.CSV:"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\LastLoggedOnProfile","NAME NOT FOUND","Length: 12"
03_LogfileOutlookSEChoseProfileEnterMainWindow.CSV:"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\LastLoggedOnProfile","NAME NOT FOUND","Length: 12"
04_LogfileOutlookSEEnterMainWindow.CSV:"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\LastLoggedOnProfile","NAME NOT FOUND","Length: 12"
05_LogfileOutlookSEEnterMainWindow2.CSV:"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\LastLoggedOnProfile","NAME NOT FOUND","Length: 12"
06_LogfileRestartW4WOutlookSEChoseProfileScreen.CSV:"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\LastLoggedOnProfile","NAME NOT FOUND","Length: 12"
07_LogfileRestartW4WOutlookSEChoseProfileScreen2.CSV:"OUTLOOK.EXE","RegQueryValue","HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook\LastLoggedOnProfile","NAME NOT FOUND","Length: 12"
```


## Workaround to fix (temporarily) Outlook default profile

Starting another set of procmon sessions I looked for any reference to the profile `Caloni2SE` when setting it. The first session showed that the key `HKU\USER-GUID-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook` had the `DefaultProfile` changed to `Caloni2SE` after setting it as the default.

So I restarted W4W session and after that reading the registry before starting Outlook again the value was `Caloni2` instead. In order to fix the default profile for Outlook I changed this value to the correct profile `Caloni2SE`. Doing that the first instance of Outlook does not ask for profile selection.

```
reg query HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook /v DefaultProfile

HKEY_USERS\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook
    DefaultProfile    REG_SZ    Caloni2

reg add HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook /v DefaultProfile /t REG_SZ /d Caloni2SE
Value DefaultProfile exists, overwrite(Yes/No)? y
The operation completed successfully.

reg query HKU\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook /v DefaultProfile

HKEY_USERS\1a308537-2fba-4b37-9334-1f6f0d437a0d-WorkplaceUser\Software\Microsoft\Office\16.0\Outlook
    DefaultProfile    REG_SZ    Caloni2SE
```

After restarting W4W the value `Caloni2` is set again in the registry, indicating probably that:

 - Some process is setting this value to the old value;
 - The registry hive is not being updated and it is restoring the old value.

Either case I now have to do some research about how this part of Workplace works (my next step).
 
 
= Nonsigned installer for Workplace
:date: 2023-06-22
:link: https://downloads.os33dev.net/non-signed/clients/windows/WorkplaceInstaller.exe
:link: https://tfs.os33.net/DefaultCollection/Portal/_build?definitionId=634
:link: https://tfs.os33.net/DefaultCollection/Portal/_git/OS33.Workplace.DevTools?path=%2FWorkplaceCopier
:repost: 2024-01-09
:tags: tag_venn
 
Trying to figure out how installation and update for the dev work, mainly because the lastest version currently has some issues about loading or login, I saved [the thread](https://vennetians.slack.com/archives/CQJL2C4BF/p1686818603199649) where Ivan Sizov tell about the tool WorkplaceCopier.

Usually the issues about using dev version from the components is when you have Workplace Update.exe running signed and workplace.exe built on your machine unsigned. This is a problem. In order to make this work you should install unsigned version of Workplace on your machine.

WorkplaceCopier copies unsigned files to the program files and reinstalls the container. So everything becomes unsigned and works well. Demo won't do that, because it just installs/uninstalls the container but not the w4w. WorkplaceCopier copies w4w files to program files then pulls sources for the container, build them then run Demo to install container.

However, now there is a nonsigned installer for Workplace that keeps the Updater nonsigned able to keep dev versions. I am using this version to try to setup the VM and debug the registry manipulation.

PS: There is also a pipeline to build a nonsigned version.

 
= How not to reproduce the bug
:date: 2023-06-22
:tags: tag_venn

Setting up the same scenario in my VM I was able to avoid the eternal select profile situation. In order to do that was to create the second Outlook profile in SE and after that create the second profile outside SE. This way the default profile seems to be rightly selected.

Another thing I noticed was that Outlook is aware of profiles outside SE. I tried to add a third profile with the same name ouside SE and it showed me an error of existing profile. After that the second time I opened the profile manager the profile outside SE was showing in the list.

I install Office and Workplace again following the Outlook profile creation first outside SE and could reproduce the same bug.

As a second workaround, I discovered that if launching olcfg.exe outside SE and selecting default profile as the original Outlook inside SE the choose profile screen does not show if the default profile is also Outlook.

However, selecting the inexistent profile outside SE Caloni2SE and restarting Workplace Outlook select the original profile Outlook. It does not show the choose profile screen either, but because the default profile defined outside SE is also found inside SE (hypothesis).

Now I have the bug reproducible inside a VM. The next step must be to be able to (finally) to build and run components of the solution in my machine. I am having some issues about that, but I believe that with what I have read in Slack about nonsigned updates and app config I could set up the DLP components successfully.
 
= Meeting with Alex Sedunov and Mihail Moldovan
:date: 2023-06-23
:tags: tag_venn tag_unittest
 
Today I participated in a meeting with Alex Sedunov and Mihail Moldovan. Mihail was having some issues to perform registry automated tests and I am supposed to help him. The meeting was to show the project using python and the robot framework and the pipelines. There was a weird bug in the build where demo.exe stays hanged for 1 hour outputing a log.

In the end Mihail sent me the links and we will continue on Monday 11am. So I was put my issues on hold and started to try to run demo.exe in my vm, clean install.

It started to show this error of closing session again.

Microsoft Windows [Version 10.0.22621.1848]
(c) Microsoft Corporation. All rights reserved.

C:\Temp\Debug>demo
Should Install (n|y) ?
y
Installing version 1.0.8571.25227...
Should Uninstall (n|y) ?
n
Login under user from app.config
Mount vhdx c:\ProgramData\Workplace\Container\ContainerDemoVHDX\wcaloni.dlp_Workplace.vhdx on path c:\ProgramData\Workplace\Container\ContainerDemoVHDX\wcaloni.dlp-MountPoint
Feature flags:
BfdEnabled = True
ContainerHelperEnabled = True
ExplorerLaunchEnabled = True
ConnectivityMonitoringEnabled = True
SimpleOfflineEnable = True
DisableAADWAM = False
HookClipboardEnabled = False
HookClipboardV2Enabled = True
HookAntiScreenEnabled = True
HookDisablePrintersEnabled = False
HookHidePrintDialogEnabled = False
HookFileDialogEnabled = True
HookDragAndDropEnabled = False
HookRecentFilesEnabled = True
HookIpv6Enabled = True
HookDnsRpcEnabled = True
HookNamedObjectIsolationEnabled = True
ComProxyEnabled = True
WindowNotificationsEnabled = True
HookWinRtEnabled = True
MessageWindowIsolationEnabled = True
ContainerHelperForAllEnabled = True
ToastNotificationEnabled = True
HookFileRedirectionEnabled = True
HookSystemDragAndDropAllowed = False
AllowWorkplaceDriveInContainerOnly = True
RegistryRedirectionEnabled = True
ReadOnlyFileSystemEnabled = True
FileRedirectionEnabled = True
RegistryProtectionEnabled = True
NetworkRedirectionEnabled = True
DnsRedirectionEnabled = True
AADBrokerPluginNetworkRedirectionEnabled = True
SingleInstanceEnabled = False
LocalRoutesEnabled = True
GlobalProtectWorkaroundEnabled = False
RememberDeletedRegistryKeys = True
CrashOnWrongRegistryOperation = False
SecurityAttributesWorkaroundEnabled = False
DrivePathProtectionEnabled = False
ContainerProtectionEnabled = True
RegistryForceAccessCheckEnabled = True
HideBitlockerManagementEnabled = True
ExternalVpnEnabled = True
HookAppStartAfterRebootAllowed = True
HookPrinterListFilterEnabled = True
DnsCacheEnabled = True
GatewayDnsEnabled = True
WebCacheEnabled = True
LocalZoneProfileVhdxEnabled = True
PowerThrottlingManagerEnabled = True
LockContainerSessionEnabled = True
ForceInstallWorkplaceBrowserExtension = True
ApplicationInsightsLoggerEnabled = True
ApplicationInsightsPerformanceCollectorEnabled = True
CompactVhdxEnabled = True
BorderTransparencyDetectionEnabled = True
VennDiskEnabled = True
LZOneDriveEnabled = False
BoxDriveEnabled = False
DisableProtectedViewEnabled = False
DebugModeEnabled = False
FakePrinterEnabled = False
ShellChangeNotifyHook = True
VennLocalMachineHiveCleanupEnabled = True
WorkplaceDriveOnVennDiskEnabled = True
ThirdPartyFileSystemsEnabled = True
BadgeTopmostEnabled = True
ConcurrentInvertedProtocolEnabled = True
SystemTrayIconBorderEnabled = True

Rules:
{
  "file": [
    {
      "name": "onedrive for business folder allow",
      "path": [
        "%userprofile%\\OneDrive",
        "%userprofile%\\OneDrive - os33",
        "%userprofile%\\OneDrive - dlp"
      ],
      "insideContainer": true,
      "action": "no-action"
    }
  ]
}
Mount Drive. Letter: X, Path: C:\ProgramData\Workplace\FakeDrive. Unc: \Device\HarddiskVolume3\ProgramData\Workplace\FakeDrive
Starting container session
Info: Starting container service
Info: Starting container service through service manager.
Info: Session dcf2024c-5cf9-4e37-9043-ba5f4fe54d07 was added to storage
Info: Creating new container session
Info: Key-exchange (Workplacecreate-container-session)
Info: Key-exchange (Workplacecreate-container-session) completed
Verbose: IpcClientLogger. SendRequestAsync. Endpoint: Workplacecreate-container-session. Request started: 2023-06-23 13:51:02.200. Elapsed time: 00:00:02.6873968
Info: Received container's response
Info: Container requested service token for dlp-virtual-disk-service scope. Request: get-service-token (1d74953e-b9a1-434d-912e-938f4e2c2ea8)
Info: Container requested service token for dlp-policy-service scope. Request: get-service-token (e43a18fa-7ba6-47a8-ae9a-5fac8481e1e7)
Info: Container requested service token for dlp-gateway-service scope. Request: get-service-token (d47a1f9d-21b9-41b6-8f76-899d828aa69d)
Info: Container requested service token for dlp-activity-service scope. Request: get-service-token (d3ca7cc4-3088-4fd7-9ff4-068473992afc)
Info: Container requested service token for dlp-policy-service scope. Request: get-service-token (0cd7c3c9-642b-4083-9e0b-4f2f0db3e71a)
Info: Container disconnect error occurred, stop current session
Info: Session dcf2024c-5cf9-4e37-9043-ba5f4fe54d07 was removed from storage
OnCloseContainerSession method is not implemented in Demo app.
Warning: Workplace.Container.Api.Common.Exceptions.WorkplaceContainerSessionNotFoundException: SessionId dcf2024c-5cf9-4e37-9043-ba5f4fe54d07 is not found
   at Workplace.Container.Api.Common.ClientApplicationSession.ClientSessionService.GetSession()
   at Workplace.Container.Api.WorkplaceContainerManager.VerifySessionConfirmed()
   at Workplace.Container.Api.Common.Utilities.ConditionAwaiter.<Wait>d__0.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at Workplace.Container.Api.WorkplaceContainerManager.<>c__DisplayClass30_0.<<StartContainerCreateSession>g__StartCreateImpl|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Workplace.Container.Api.WorkplaceContainerManager.<>c__DisplayClass30_0.<<StartContainerCreateSession>g__StartCreateImpl|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Workplace.Container.Api.Common.Utilities.RetryExecution.<InfiniteRetryWhileErrorAsync>d__2.MoveNext()

Now I am going to test with lastest version (the repo was tagged with the last production version I think) and a issue about communicating with driver appeared.

Failed to connect to communication port. PortName = (\WorkplaceContainerDriverPort). HRESULT = -2147024809

Andrey Bisikalo helped me with that remembering that the DisableDigitalSignatureValidation must be set in the registry. After that and restarting the machine all went well. Until try to launch application (more on that later).

So demo "working" now. What solved:

 - Update git to master;
 - Set manually DisableDigitalSignatureValidation in the registry;
 - Restart machine (because driver was already started).

Now launching applications is giving some error. Workplace Starter is crashing and generating some dump files. Had some trouble analyzing the dump because the symbol didn't seem to match.

After redoing the test with zeroed machine I made a second test of running chrome and it worked. Just notepad is crashing starter (that I noticed).
 
= Running registry tests locally
:date: 2023-06-28
:tags: tag_venn tag_unittest
 
Yesterday I achieved to run registry tests locally to observe what is going wrong with them. I got 3 failures, and some skips, but more to that later. 

In order to setup the environment I made some things I am not sure how to do it again. There is references to binaries in specific paths that must be available in pipeline and locally need to be created manually. Here are some of the steps to get things working.

```
mkdir c:\Git
mkdir c:\Git\Workplace.Container.Windows
mkdir c:\Git\Workplace.Container.AcceptanceTests
mkdir c:\Git\Workplace.Container.Windows\Workplace.Container
mkdir c:\Git\Workplace.Container.AcceptanceTests\TestTools
mkdir c:\Git\Workplace.Container.Windows\Workplace.Container\Demo
mkdir c:\Git\Workplace.Container.AcceptanceTests\TestTools\InternalAgent
mkdir c:\Git\Workplace.Container.Windows\Workplace.Container\Demo\bin
mkdir c:\Git\Workplace.Container.AcceptanceTests\TestTools\InternalAgent\bin

subst d: c:\
mkdir c:\Projects
mkdir c:\Projects\os33
mkdir c:\Projects\os33\sources
mkdir c:\Projects\os33\sources\Workplace.Container.AcceptanceTests
mkdir c:\Projects\os33\sources\Workplace.Container.AcceptanceTests\TestTools

rm -fr F:\Repos\Workplace.Container.AcceptanceTests\PythonTestFramework\git\Workplace.Container.Windows
xcopy /Q /E /I /Y F:\Repos\Workplace.Container.Windows\.git F:\Repos\Workplace.Container.AcceptanceTests\PythonTestFramework\git\Workplace.Container.Windows\.git
pushd F:\Repos\Workplace.Container.AcceptanceTests\PythonTestFramework\git\Workplace.Container.Windows
git config core.longpaths true
git co .
xcopy /Q /E /I /Y F:\Repos\Workplace.Container.Windows\Workplace.Container\Demo\bin\Debug F:\Repos\Workplace.Container.AcceptanceTests\PythonTestFramework\git\Workplace.Container.Windows\Workplace.Container\Demo\bin\Debug
popd
```

The test I was doing was to run the single command from the powershell script that runs a robot script.

```
python -m robot -v C_USER:user -v C_PASS:pass --xunit test_result.xml robot\tests\reg.robot
```

I was thinking into analyzing one of them to see how it is working, but not sure about the next step into this issue. Before I receive some feedback to next steps I am going to follow the initial steps from the issue (ROADMAP-68197), like trying to see how the first documented test succeeded.
 
= Running only one test
:date: 2023-06-28
:tags: tag_venn tag_unittest
 
Running only one test (R00001) with the intended user and getting the results I stuck on the same issue running the whole batch, that is when the test is trying to delete the registry key and the key does not exists. There is some logic in all the tests around the same key.

```
python -m robot -v C_USER:at_wo_file.dlp -v C_PASS:<password> --xunit test_result.xml -t "R00001 NO_RULES - external agent reads inside registry value - enabled registry protection - should be denied" robot\tests\reg.robot
```

reg-robot-single-test-failed-delete-reg-key.png

Following the request from Alex Sedurov a big change that has to be done in the tests would be to use GUIDs as keys and values inside the root test key. Doing this each test case will only manipulate its own keys and values, avoiding conflicts. Besides, using this strategy does not need to delete keys except for the test. The initial setup could clean the registry, but not in each test case.

So the next step I going to work is to modify the first use case and adjust the following one to mantain its own keys and values based on generated GUIDs.
 
= Changing R00001 NO_RULES
:date: 2023-06-29
:tags: tag_venn tag_unittest
 
Today I changed with the first test described in Confluence ("R00001 NO_RULES - external agent reads inside registry value - enabled registry protection - should be denied") using an UUID as key, value and data. The test is passing locally. I replicate to R00002, but still have to solve some issues comparing strings. The behavior is working, though.

```
R00001 NO_RULES - external agent reads inside registry value - enabled registry protection - should be denied
    [Tags]  R00001  reg  no_rules
    SkipIfNotUser  ${USER_FILE_ACCESS_DISABLED_REG_PROT_ENABLED}
    ${key} =      Generate Unique ID
    ${value} =    Generate Unique ID
    ${data} =     Generate Unique ID
    ${path} =     Set Variable          HKCU\\ContainerAt\\${key}
    Write internal registry key         ${path}                     ${value}              ${data}
    ${result} =   Read internal registry key                        ${path}
    Should Be Empty                     ${result['stderr']}
    Should Not Be Empty                 ${result['stdout']}
    ${result} =   Read external registry key                        ${path}
    Should Be Empty                     ${result.stdout}
    Should Contain                      ${result.stderr}         ${REG_ERROR_NOT_FOUND}
```

robot-test-r00001-passed.png

The "Generate Unique ID" keyword is a simple UUID generator put in base.resource.

```
Generate Unique ID
    ${uuid}=    Evaluate    uuid.uuid4()    modules=uuid
    [Return]  ${uuid}
```
 
= Reproduce the issue in my VM Win11
:date: 2023-06-30
:tags: tag_venn tag_unittest
 
I was trying to reproduce the issue in my VM Win11 and took some hours. It seems that W4W somedays is slower than other days. Today was a slow one. I even made an memory/CPU upgrade to the VM :).

I got some errors about Outlook opening profile and about signin with Venn account.

But at last I could see some behavior that seemed to be the one. I recorded a video.

outlook_pdf_edge.mp4

I assume the hanging page until 7:19 was because the slow PCG (connection was good) and the gray screen until 7:55 was the same. However, from 7:56 to 8:34 seems to be the "delay before the initial load".

About the network, the PCG failed to connect from 8:57 to 10:37, and that was why I waited to make the Chrome test, that revealed to be much faster than opening the same PDF with Edge under the same network status (there were some seconds of wait, though).

The version that I tested first in my VM is the same I am using in my real machine: 4.0.8579.25004. I am going to try to reproduce it in real one now.
 
= VM reasonably reproducible
:date: 2023-06-30
:tags: tag_venn tag_unittest
 
In my VM is reasonably reproducible, even just closing the browser and opening the same 2MB PDF from Outlook inside SE over and over again, more than 50% of the time.

It was observed that it happens more before an instance of Edge is already running, and if there is one already running, happens more before the process WorkplaceBrowserHelper.exe for the browser is initiated.

In the VM there is also some slowliness just to start Edge inside SE. However, after the browser is availabel and WorkplaceBrowserHelper.exe is already running opening a PDF from email attachment is fast. There an exception, though, when all windows from Edge are closed but still there are edge processes running in background, and even with WorkplaceBrowserHelper.exe already running the PDF loading is equally slow. In this background instance it is possible to terminate WorkplaceBrowserHelper.exe process and there are still slowliness, what could evidence that is not something related to the extension, but Edge initialization itself.

Still doing some tests, and I need to understand better the components related to Edge navigation (and how this differ from Chrome).
 
= Finished the refactory
:date: 2023-07-03
:tags: tag_venn tag_unittest
 
Finished the refactory of the documented tests in Confluence. I added the tag confluence to those tests and ran them locally and manually in my VM. The following tests are broken and I don't know why:

 - R00005: Containerized app should write to registry and external app to read; error: key not found.
 - R00007: Containerized app should try to write and get access denied; error: it succeeds to write.

Nevertheless, I commited and upload this branch. The next step is to check it running in the pipeline.
 
= Reverted my changes
:date: 2023-07-05
:tags: tag_venn tag_unittest
 
I reverted my changes made in the refactory branch and created a PR just for documentation (no changes to main branch). Mihail made a new version using tags to identify registry changes that conflicts with my changes. Since that could solve the issue and he is much more experienced to this project I am declining my changes and focus on the broken tests, since now I understand the dynamics.

My next step will be to get the failed tests from last pipeline log and to run manually in VM to understand if could be environment or not (as suspected by Mihail).
 
= Deleting nonexistent registry key
:date: 2023-07-06
:tags: tag_venn tag_unittest
 
Detected two possible errors in R00001 and fixed it, what seems to fix R00002 as well.

The first error was related when deleting nonexistent registry key. The test is not supposed to fail if trying to clean a nonexistent registry key, so the new version checks if it the key exists before to try to delete it. That change was inside the resources folder.

The second and specific to R00001 error was a difference between what was documented in Confluence and the implementation. Accordingly to Confluence documentation, "the value doesn't exist for app running outside LZ", so the new check is looking for "not found" error instead of "access denied" error.

Running R00003 a Demo error occurred, what can be related to some executions in pipeline where the InternalAgent does not execute properly in test setup:

```
[Reg.robot] [2023-07-05 16:01:40.396] - Waiting 18 / 90 seconds for [1 "InternalAgent.exe"] to start
Info: Container disconnect error occurred, stop current session
Info: Session 2e11a6a2-35b5-4fac-9a44-81fc4e9f0181 was removed from storage
OnCloseContainerSession method is not implemented in Demo app.
Warning: Workplace.Container.Api.Common.Exceptions.WorkplaceContainerServiceException: Workplace Container has been terminated during waiting for session confirmation
   at Workplace.Container.Api.WorkplaceContainerManager.VerifySessionConfirmed()
   at Workplace.Container.Api.Common.Utilities.ConditionAwaiter.<Wait>d__0.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at Workplace.Container.Api.WorkplaceContainerManager.<>c__DisplayClass31_0.<<StartContainerCreateSession>g__StartCreateImpl|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Workplace.Container.Api.WorkplaceContainerManager.<>c__DisplayClass31_0.<<StartContainerCreateSession>g__StartCreateImpl|0>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Workplace.Container.Api.Common.Utilities.RetryExecution.<InfiniteRetryWhileErrorAsync>d__2.MoveNext()
[Reg.robot] [2023-07-05 16:01:43.505] - Waiting 19 / 90 seconds for [1 "InternalAgent.exe"] to start
```

Administrator CWindowsSystem32cmd.exe - powershell.txt

 
= Daily with the Team
:date: 2023-07-06
:tags: tag_venn tag_unittest
 
Today was my first daily with the team. Philip organize the daily by filtering the tickets assigned to each member and asking for a status. My turn was the first and I had no status of any ticket assigned to me, since I was working with Mihail to solve the reg tests.

Now I have an assignment to do in this issue: to list 5 next steps with estimates. This is a ticket that is consuming a long time to be concluded.

Talking privately with Mihail he is kind of lost, because some broken tests don't make sense. I proposed to him to get this ticket alone and let him with another one to spare.

I am executing those tests locally and trying to keep the pipeline running to see the lastest status of the tests, to analyse them and fix them. Some are logic errors and the fix is easy, but some there are environment influence, such as the state of the registry, and the fix take more than 10 minutes. Running the tests (pipeline or locally) is the more time consuming for this task, and it is very frequent the environment get stuck.

So my next steps I believe will be as follow:

 - Get log from all tests running in pipeline and locally.
 - Analyze the possible 20 tests that are breaking.
 - For each broken test spot the error and describe a solution.
 - Apply the solution for all broken tests.
 - Get log from all tests running in pipeline and locally again.
 - Compare the first logs to the last ones.

In order to do that I estimate 1 day to take both logs (first and final) and 1h for each failed test, what total around 3 days.

So the estimate to conclude those next steps are 4 days.

It is important to consider that it is very frequent the tests break for reasons non related to the test logic, but related to the Demo environment. The fixed tests could take this in consideration, but in some cases there is no control of the running environment and this must be considered out of range for this issue and treated in another issue.

Today I ran the tests locally and in the pipeline and they broke as usual. However, it is not clear how is the registry status in the pipeline environment, so I turn the focus to the local environment and discovered that the test user credentials in app.config for the Demo is not being updated, since the test batch is based on rebuild the demo, but my VM does not have Visual Studio installed.

I even started to install VS, but I saw this will going to be a slow strategy. So I started to read the code around demo execution and configuration to change the test to just edit the config to the current user being tested. I came up with two codes to change that: in PowerShell and in Robot Framework.

Imagine this XML:

```
<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <appSettings>
    <add key="Host" value="host" />
    <add key="Port" value="port" />
  </appSettings>
  ...
```

How to change XML values using Power Shell:

```
$app_config=$args[0] # app config path
$host=$args[1] # first value
$port=$args[2] # second value
$content = Get-Content $app_config | Out-String
$content = $content -replace 'key="Host" value=".*"', ('key="Host" value="' + $host + '"')
$content = $content -replace 'key="Port" value=".*"', ('key="Port" value="' + $port + '"')
$content = ([xml]$content).save($app_config)
```

How to change XML values using Robot Framework:

```
*** Settings ***

Library  XML


*** Keywords ***

Change App Config
    [Documentation]  Change host and port from app config
    [Arguments]  ${host}  ${port}

    ${xml}=    Parse Xml    ${APP_CONFIG_PATH}
    Should Not Be Empty  ${xml}
    Set Element Attribute    ${xml}    value    ${host}    .//appSettings[1]/add[1]
    Set Element Attribute    ${xml}    value    ${port}    .//appSettings[1]/add[2]
    Save Xml    ${xml}    ${APP_CONFIG_PATH}
```

I used the robot code, since it seems that demo is execute by there.

My next step in this discovery is to know from where Python is running demo in order to update the final app.config, and not the project one.
 
= Call with Alex Sedunov and Mihail Moldovan
:date: 2023-07-07
:tags: tag_venn tag_unittest
 
After the call with Alex Sedunov and Mihail Moldovan I understood that my help to this issue is not related to the test implementation, but about the infrastructure of the test, such as if Demo.exe, containers and InternalAgent is running properly.

About that we have two main issues, 1) InternalAgent is not available in 90 seconds after started and 2) Demo.exe highjacks Robot Framework output and keeps logging stats.

So for those issues my next steps are:

 - Download diagnostics logs from the pipeline to analysis;
 - Analyze crash dump found inside at least one;
 - Discover why Demo.exe is refusing to end in some cases;
 - Look for scenarios where Demo.exe could be stuck into logging stats.

I believe the estimation for those tasks will be of about 2 days.
 
= Found a crash dump for InternalAgent.exe
:date: 2023-07-07
:tags: tag_venn tag_unittest
 
Collected diagnostics from 2023-07-07 in WIN11-DLP and found a crash dump for InternalAgent.exe from 2023-06-21. The exception was related to pipe connection.

```
STACK_TEXT:  
000000f9`3a92e8e0 00007ffc`5293d1c2 System_Core_ni!System.IO.Pipes.NamedPipeClientStream.Connect+0xc2
000000f9`3a92e970 00007ffc`008f8813 Workplace_Ipc_Core!Unknown+0x43
000000f9`3a92e9d0 00007ffc`008db86a Workplace_Ipc_Core!Unknown+0x25a
```

Tried to catch the CLR stack using [SOS extension](https://learn.microsoft.com/en-us/dotnet/core/diagnostics/sos-debugging-extension), but I would need to load symbols for a specific assembly.

```
OS Thread Id: 0x14fc (0)
        Child SP               IP Call Site
000000F93A92A2A8 00007ffc7ef24754 [HelperMethodFrame: 000000f93a92a2a8]
000000F93A92A390 00007FFC008B1098 InternalAgent.exe!Unknown
000000F93A92C508 00007ffc600078b1 [HelperMethodFrame: 000000f93a92c508]
000000F93A92C5F0 00007FFC008F8F3C Workplace.Ipc.Core.dll!Unknown
000000F93A92C660 00007FFC008DB998 Workplace.Ipc.Core.dll!Unknown
000000F93A92E7F8 00007ffc600078b1 [HelperMethodFrame: 000000f93a92e7f8]
000000F93A92E8E0 00007FFC5293D1C2 System.IO.Pipes.NamedPipeClientStream.Connect(Int32)
000000F93A92E970 00007FFC008F8813 Workplace.Ipc.Core.dll!Unknown
000000F93A92E9D0 00007FFC008DB86A Workplace.Ipc.Core.dll!Unknown
000000F93A92EA60 00007FFC008DB101 Workplace.Ipc.Core.dll!Unknown
000000F93A92EAB0 00007FFC008DB000 Workplace.Ipc.Core.dll!Unknown
000000F93A92EB00 00007FFC008DAF1E Castle.DynamicProxy.AbstractInvocation.Proceed()
000000F93A92EB50 00007FFC008DAD79 SOS Warning: Loading symbols for dynamic assemblies is not yet supported
<unknown method>
000000F93A92EBB0 00007FFC008B0EDD InternalAgent.exe!Unknown
000000F93A92EEF8 00007ffc600712c3 [GCFrame: 000000f93a92eef8]
```

However, it is safe to assume that the point of code of the exception is the `Pipes.NamedPipeClientStream.Connect` call.

I collected the test log from that day and it shows IPC errors. By example:

20230621_log.html

```
[File.robot] [at_w_file.dlp] [F002 SMOKE - internal agent read write inside file] [base.resource] encountered the following exceptions: [CommunicationClient.py] failed to get a connection to [InternalAgent.exe] through [Agent.py]
```

Interestingly enough, there was no dump file in the artifacts available in that day. There was a diagnostics zip in the next day, the third execution from 2023-06-22, and there it was the same crash dump collected 2023-07-07.

That was the only dump found in main pipeline. There was no diagnostics package in any working pipeline from this ticket, so the next step in the investigation is to download and analyze test logs from the registry pipeline to observe a pattern when Demo does not run properly.
 
= Analyzing test logs from the registry pipeline
:date: 2023-07-07
:tags: tag_venn tag_unittest
 
My next step was download and analyze test logs from the registry pipeline to observe a pattern when Demo does not run properly.

I collected all `log.html` from the pipeline executions from this week, converted the report to a single `logs.txt` test file and lookup for errors and its frequency.

logs.zip
singlelogtxt.zip

The most frequent ones are related to dependency error `ModuleNotFoundError: No module named 'dotnet'` and a loop where the file `InternalAgent.log` file was not found (this error is not systemic, it occured in few runnings).

There is one error caused by Demo/InternalAgent execution, `CriticalError [InternalAgent.exe] was started, but failed to get instance of test agent from subthread of [CommunicationClient.py]`. It occured 13 times this week.

```
grep -i error logs.txt | sed "s/^[0-9:.]\+/00:00:00.000/" | "\Program Files\Git\usr\bin\sort.exe" | uniq -c | "\Program Files\Git\usr\bin\sort.exe" -nr

154 ModuleNotFoundError: No module named 'dotnet'
118 FileNotFoundError: [Errno 2] No such file or directory: 'C:\\ProgramData\\Workplace\\Container\\InternalAgent.log'
100 00:00:00.000KEYWORD BuiltIn . Should Contain ${result['stderr']}, ${REG_ERROR_ACCESS_DENIED}, InternalAgent.exe should have failed with ${REG_ERROR_ACCESS_DENIED}.
 85 Message:        Test execution stopped due to a fatal error.
 53 ' does not contain 'ERROR: Access is denied.'
 53 ' does not contain 'ERROR: Access is denied.'
 52 00:00:00.000KEYWORD BuiltIn . Should Contain ${result.stderr}, ${REG_ERROR_ACCESS_DENIED}
 46 Message:        InternalAgent.exe should have failed with ERROR: Access is denied..: 'ERROR: The system was unable to find the specified registry key or value.
 46 00:00:00.000    FAIL    InternalAgent.exe should have failed with ERROR: Access is denied..: 'ERROR: The system was unable to find the specified registry key or value.
 44 00:00:00.000    FAIL    'ERROR: The system was unable to find the specified registry key or value.
 32 Test Execution Errors
 26 00:00:00.000KEYWORD BuiltIn . Should Contain ${result['stderr']}, ${REG_ERROR_ACCESS_DENIED}
 26 00:00:00.000KEYWORD BuiltIn . Should Contain ${result.stderr}, ${REG_ERROR_NOT_FOUND}
 16 00:00:00.000KEYWORD BuiltIn . Should Contain ${result['stderr']}, ${REG_ERROR_NOT_FOUND}
 13 00:00:00.000KEYWORD base . CriticalError [InternalAgent.exe] was started, but failed to get instance of test agent from subthread of [CommunicationClient.py].
  8 00:00:00.000    FAIL    FileNotFoundError: [Errno 2] No such file or directory: 'C:\\ProgramData\\Workplace\\Container\\InternalAgent.log'
  8 00:00:00.000    FAIL    'ERROR: Delete request is partially completed.
  7 Message:        'ERROR: The system was unable to find the specified registry key or value.
  7 ' does not contain 'ERROR: The system was unable to find the specified registry key or value.'
  7 ' does not contain 'ERROR: The system was unable to find the specified registry key or value.'
  6 00:00:00.000    FAIL    ModuleNotFoundError: No module named 'dotnet'
  6 00:00:00.000    FAIL    'ERROR: Illegal operation attempted on a registry key that has been marked for deletion.
  5 00:00:00.000KEYWORD BuiltIn . Fatal Error ${prefix} ${message}
  4 Message:        'ERROR: Delete request is partially completed.
  3 Message:        'ERROR: Illegal operation attempted on a registry key that has been marked for deletion.
```

Looking for "InternalAgent" returned other 15 occurrences with slighly different texts.

```
5 [Reg.robot] [at_w_file.dlp] [InternalAgent.exe] was started, but failed to get instance of test agent from subthread of [CommunicationClient.py].
5 20230703 00:00:00.000   WARN    [Reg.robot] [at_w_file.dlp] [InternalAgent.exe] was started, but failed to get instance of test agent from subthread of [CommunicationClient.py].
5 00:00:00.000    FAIL    [Reg.robot] [at_w_file.dlp] [InternalAgent.exe] was started, but failed to get instance of test agent from subthread of [CommunicationClient.py].
```

That confirms that the main issue should be the IPC between Demo and InternalAgent, what could be a timing issue. Before to move to the next 2 final steps in this investigation -- discover why Demo.exe is refusing to end in some cases and look for scenarios where Demo.exe could be stuck into logging stats -- I believe that should be productive try to reproduce it locally by starting and stopping several Demo sessions running single test cases.

However, before that, I am going to analyse the logs from my machine from the day when "Workplace Container has been terminated during waiting for session confirmation". Just in case.
 
= Incluir o usuário bradesco em todos os grupos
:date: 2023-07-09
:tags: tag_scua
 
Comando para incluir o usuário bradesco em todos os grupos da Scua:

```
net localgroup /add NOME_DO_GRUPO
net localgroup NOME_DO_GRUPO bradesco /add
```

 
= Past log analysis
:date: 2023-07-11
:tags: tag_venn tag_unittest

Analyse the logs from my machine from the day when "Workplace Container has been terminated during waiting for session confirmation".

I analyzed the logs from my machine since I started to run the tests locally and specially the day (2023-07-05) when "Workplace Container has been terminated during waiting for session confirmation". There was no significant error found in the logs related to IPC, except these lines in `Container/Workplace.Ipc.log`:

```
Workplace.Ipc Error: 0 : 2023-07-05 17:52:03.072 [5] Error: System.IO.IOException: The pipe is being closed.

   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   at System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(AsyncCallback callback, Object state)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl(Func`3 beginMethod, Func`2 endFunction, Action`1 endAction, Object state, TaskCreationOptions creationOptions)
   at System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(CancellationToken cancellationToken)
   at Workplace.Ipc.Core.Transport.NamedPipes.Direct.NamedPipesDirectServerTransport.<ServerThreadStartAsync>d__14.MoveNext()
```

What is odd is that there is only a single trace of the error, but I remember getting the same error multiple times when I was tryint to do a live analysis of the problem.

Anyway, I am going forward to the more promising last steps, that are:


## Reproduction

At some time I could reproduce locally the timeout trying to exit demo in the tear down tests:

```
[Reg.robot] [2023-07-10 19:32:45.169] - >>> Tried [exit] command, but after [30 seconds] "Demo.exe" was still running!
```

I searched for this kind of error in recent pipeline logs that I downloaded from the last 3 days and found some:

```
grep -r "was still running" | grep -o "^logs_[0-9]\+" | sort.exe -u
```

 - [Run #713151](https://tfs.os33.net/DefaultCollection/Portal/_build/results?buildId=713151&view=results)
 - [Run #713155](https://tfs.os33.net/DefaultCollection/Portal/_build/results?buildId=713155&view=results)
 - [Run #713256](https://tfs.os33.net/DefaultCollection/Portal/_build/results?buildId=713256&view=results)
 - [Run #713479](https://tfs.os33.net/DefaultCollection/Portal/_build/results?buildId=713479&view=results)
 - [Run #714066](https://tfs.os33.net/DefaultCollection/Portal/_build/results?buildId=714066&view=results)
 - [Run #714094](https://tfs.os33.net/DefaultCollection/Portal/_build/results?buildId=714094&view=results)
 - [Run #714098](https://tfs.os33.net/DefaultCollection/Portal/_build/results?buildId=714098&view=results)
 - [Run #714116](https://tfs.os33.net/DefaultCollection/Portal/_build/results?buildId=714116&view=results)

This warning apparently occurs in the final test, soon before the results are published. I am not sure if that means the possibility of other Demo instances still running between the tests, since the tear down operation always run in each python instance.

There is also logs about IPC timeout in `ProgramData/Workplace/InternalAgentClient`, such as:

```
2023-07-10 22:07:02.026 - [ERRO] - [1:6768:1] - 
	Exception: Workplace.Ipc.Core.Exceptions.IpcTransportException: The operation has timed out. ---> System.TimeoutException: The operation has timed out.
   at System.IO.Pipes.NamedPipeClientStream.Connect(Int32 timeout)
   at Workplace.Ipc.Core.Transport.NamedPipes.Direct.NamedPipesDirectClientTransport.SendRequest(Byte[] data)
   at Workplace.Ipc.Core.Client.IpcClient.SendRequest(IpcRequest ipcRequest, Type resultType)
   --- End of inner exception stack trace ---
   at Workplace.Ipc.Core.Client.IpcClient.HandleException(Exception e)
```

This could indicate the same issues ocurring in pipeline.


## Fixes/improvements

I noticed InternalAgent was starting the command it received by named pipe twice, one before to attach stdout/stderr events to delegators. I assume this is wrong and removed the first start. Now the process only start after the outputs are being monitored.

I also changed the single wait for the command for a incremental one to log the progress and have some tips on how much time is taken to each command to run.

Finally, In order to discover why Demo.exe is refusing to end in some cases I started reproduce locally and while that was putting more logs in InternalAgent, specially around execution of commands and when it is ready to receive commands. I also changed the single wait for commands in a second by second wait to log something while waiting.


## Next steps

My suggestion for next steps investigating or giving us more clearance of what is going on would be:

 - Collect logs from `ProgramData\Workplace` as artifact in the pipeline to capture InternalAgent specific logs of execution.
 - Put more logs on the spots where it is not clear what the process was doing when the bug happened.
 - Make more tests locally to debug the environment (I can help with documenting how I setup my own).

I would also test for some time the InternalAgent version that logs when it is exiting. I suspect `Console.ReadKey()` could be triggered inadvertently.


= Mount the local pipeline
:date: 2023-07-11
:tags: tag_venn tag_unittest

My plan for today was to mount the local pipeline for the tests as near as possible to the real pipeline, and I believe I did. For that I needed to temporarilly break compatibility with the main pipeline, a small difference in the paths where the components are located.

Here are the steps. In a local environemnt without development tools you can create a `C:\Temp` and a `C:\Git` folders. Copy repo `Workplace.Container.AcceptanceTests` to `C:\Git` with binaries compiled. Set the InternalAgent.exe as read only to avoid the test script to delete it. Create another subfolder `C:\Git\Git` and copy the Workplace.Container.Windows repo with only the Demo component structure and binaries compiled.

I also checked some bugs in my new version of InternalAgent that was showing a exception (fixed in PR).

I believe now I can let the tests running in loop and see if I could reproduce the failures that are happening in pipeline. While that I am thinking about to review the flow into the code and try to gave us more information about each step. Enable the logs is a major part in this task.

PS: I am getting a Disk Cleanup Setting in Windows 11 VM during the tests showing up. I don't stopped to see what this happens and if this could happen too in the working pipeline (cc @Mihail).

disk_cleanup_window.png

TIL When https git credential expire in Windows it need to be updated on Windows. The password is stored in windows credential manager and needs to be updated. Open command prompt and enter the following command to view the list of stored passwords: `rundll32.exe keymgr.dll,KRShowKeyMgr`.


= InternalAgent timeout happens around 10 minutes 
:date: 2023-07-12
:tags: tag_venn tag_unittest

In the tests today with the new InternalAgent.exe version the IPC timeout happens around 10 minutes after the first test (same batch). It is pretty easy to reproduce in the batch mode from the pipeline.

```
C:\ProgramData\Workplace\Container\InternalAgentClient_2023-07-12
2023-07-12 12:34:18.337 - [INFO] - [1:7964:3] - ### Application started. Version = 1.0.8543.35416. Local time = 2023-07-12T09:34:18. UTC time = 2023-07-12T12:34:18. Time shift = -3 hours.
2023-07-12 12:34:18.415 - [INFO] - [1:7964:3] - Initialize id = 141d1dac-4bd9-4d95-85ee-226658d71b30, pipeName = 3d31122e-4fe9-4af9-9efd-806f996a0201
2023-07-12 12:38:36.468 - [INFO] - [1:6628:3] - ### Application started. Version = 1.0.8543.35416. Local time = 2023-07-12T09:38:36. UTC time = 2023-07-12T12:38:36. Time shift = -3 hours.
2023-07-12 12:38:36.512 - [INFO] - [1:6628:3] - Initialize id = e4de51b8-3a35-4fdb-8a32-aad68613499b, pipeName = fe42332a-929d-4441-92c7-08ed0d236703
2023-07-12 12:43:37.843 - [ERRO] - [1:6628:1] - 
	Exception: Workplace.Ipc.Core.Exceptions.IpcTransportException: The operation has timed out. ---> System.TimeoutException: The operation has timed out.
   at System.IO.Pipes.NamedPipeClientStream.Connect(Int32 timeout)
   at Workplace.Ipc.Core.Transport.NamedPipes.Direct.NamedPipesDirectClientTransport.SendRequest(Byte[] data)
   at Workplace.Ipc.Core.Client.IpcClient.SendRequest(IpcRequest ipcRequest, Type resultType)
   --- End of inner exception stack trace ---
   at Workplace.Ipc.Core.Client.IpcClient.HandleException(Exception e)
```

At the time when happened I was seeing the screen and InternalAgent was not present, but it was some seconds before, what seems to me a crash. That's the InternalAgent log:

```
C:\ProgramData\Workplace\Container\InternalAgentClient_2023-07-12
2023-07-12 12:43:27.507 - [INFO] - [1:11916:13] - stderr: 
2023-07-12 12:43:27.585 - [INFO] - [1:11916:18] - Launch command: C:\Windows\System32\cmd.exe /c "mkdir "V:\AppData\Local\deny_rule\outside" "
2023-07-12 12:43:27.585 - [INFO] - [1:11916:18] - Launching command...
2023-07-12 12:43:28.611 - [INFO] - [1:11916:18] - Command launched
2023-07-12 12:43:30.182 - [INFO] - [1:11916:7] - Data received from stderr: A subdirectory or file V:\AppData\Local\deny_rule\outside already exists.
2023-07-12 12:43:30.247 - [INFO] - [1:11916:13] - Finished reading data from stdout
2023-07-12 12:43:30.247 - [INFO] - [1:11916:7] - Finished reading data from stderr
2023-07-12 12:43:30.253 - [INFO] - [1:11916:18] - Command exited
2023-07-12 12:43:30.253 - [INFO] - [1:11916:18] - exitcode: 1
2023-07-12 12:43:30.253 - [INFO] - [1:11916:18] - stdout: A subdirectory or file V:\AppData\Local\deny_rule\outside already exists.

2023-07-12 12:43:30.253 - [INFO] - [1:11916:18] - stderr: 
2023-07-12 12:47:51.161 - [INFO] - [1:9792:1] - ### Application started. Version = 1.0.0.0. Local time = 2023-07-12T09:47:51. UTC time = 2023-07-12T12:47:51. Time shift = -3 hours.
2023-07-12 12:47:51.206 - [INFO] - [1:9792:1] - Starting Internal Agent...
2023-07-12 12:47:53.006 - [INFO] - [1:9792:1] - Start listening pipe 04331ca1-3bb8-4476-a5e0-5727cb26bf6d
2023-07-12 12:48:14.984 - [INFO] - [1:9792:4] - Launch command: C:\Windows\System32\cmd.exe /c "reg query "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run""
```

There are another exceptions mixed up with the IPC in client log, but I am not sure if it should happen as part of the test or it should be captured as part of the test. The IPC exception, however, is the one that must not occur during the tests.

```
  C:\ProgramData\Workplace\Container\InternalAgentClient_2023-07-12
  2023-07-12 12:49:16.634 - [ERRO] - [1:10280:1] - 
	Exception: System.ArgumentException: Requested value 'SOFTWARE\Microsoft\Windows\CurrentVersion\Run' was not found.
   at System.Enum.TryParseEnum(Type enumType, String value, Boolean ignoreCase, EnumResult& parseResult)
   at System.Enum.Parse(Type enumType, String value, Boolean ignoreCase)
   at TestAgent.InternalAgentClient.RegistryRead(String hive, String key, String valueName)
```

There are no crash dumps captured this time, but InternalAgent closed anyway. Since we do not have information about why I am going to put more logs around the command execution.

However, before that I started to debug the IPC communication step by step and could reproduce the timeout issue. Could be a timing issue between Demo starting and InternalAgent try to create the pipe.

Anyway, I was trying to create a FakeDemo to use it as a proof that the issue was around robot+python+pipe but it seems to be easy to reproduce a timeout.

The next step I was trying to do was to replace the nuget assemblies from the IPC to the debug version, but I still had no success doing that.

= Guidra: What a decompiler!
:date: 2023-07-13
:tags: tag_venn tag_reversing

Today I got a lot of interesting information about reversing and debugging skills in this decade to Windows. First, Guidra: What a decompiler! Created by the NSA, it allows to decouple binaries in a much easy interface. And it is open source!

Second, the article of Adam Chester (from the blog XPN Sec) uses a Power Shell module called NtObjectManager that can be used to extract information from object types into NT objects. There is a lot of functions in this module.


= Traduz diretivas de acesso do cache e aplica
:date: 2023-07-16
:tags: tag_scua

Aproveitei o mecanismo de tradução que já existe na ScuaGImp para importar para os bancos de dados para preencher a estrutura de diretivas e utilizei o mesmo caminho já usado para aplicar essas diretivas. Pelo log do componente que aplica diretivas é possível ver que elas foram sincronizadas no cache, traduzidas para a estrutura legada do CTree e aplicadas uma a uma.

No entanto, aparentemente isso não surtiu efeito, e eu acredito que deva ter relação com em qual conta que o processo que aplica as regras deva rodar.

A próxima tarefa é escarafunchar em como hoje são aplicadas as regras e bolar uma solução para o NewLogin, o que deverá envolver execução em uma ou mais contas distintas (SYSTEM e usuário, por exemplo).


= Catching LPC messages
:date: 2023-07-17
:tags: tag_venn tag_reversing

Trying to catch LPC messages in a Windows 11 VM I discovered that LPC is a thing of the past. Windows 7 and newer versions of the OS implement its sucessor, the ALPC (Advanced or Asynchronous LPC). The main difference from this implementation is its (obviously) asynchonicity. In WinDbg the `!lpc` command does not work anymore and should be replace by `!alpc` undocumented command, except the usage print when you just press the command.

I learned a lot by reading the article "[Offensive Windows IPC Internals 3: ALPC](https://csandker.io/2022/05/24/Offensive-Windows-IPC-3-ALPC.html)" by csankder, inclusive found a [Process Monitor](https://github.com/zodiacon/ProcMonXv2) that uses the Event Tracing for Windows (ETW) instead of a device driver and captures ALPC events. I used this tool to see if `WWAHost.exe` uses it and it does. It is possible to capture this events when adding a new email in Outlook.

process_monitor_wwahost_alpc_events.png

Despite the main message detail of an ALPC messages MessageID there is a stack trace for each event, which can be useful to explore. I don't know if there is a simple way to summarize those stack traces, though, what could be harsh to read. There are around 9k messages in a email creation process.


= Troubleshooting session with Alexander Chermyanin
:date: 2023-07-17
:tags: tag_venn tag_reversing

There was a troubleshooting session with Alexander Chermyanin. Everything starts with logging in with an AAD account and to know how apps outside SE access and control this account. The COM class responsible for that should be WebAccountProvider. A list of tools that could help us with COM reversing were provided:

 - https://github.com/tyranid/oleviewdotnet
 - https://github.com/silverf0x/RpcView
 - https://github.com/zodiacon/ALPCLogger

There are also parts in our system to hook and capture RPC, ALPC, WinRT and COM events. We just need to search for them in the code and probably make use of them.

 - [WinRTProtection.cpp](https://tfs.os33.net/DefaultCollection/Portal/_git/Workplace.Container.Windows?path=%2FWorkplace.Container.Hook%2FWorkplace.Container.Hook.Lib%2FWinRtProtection.cpp)
 - [ComProxyService.cs](https://tfs.os33.net/DefaultCollection/Portal/_git/Workplace.Container.Windows?path=%2FWorkplace.Container%2FWorkplace.Container.Helper%2FCom%2FComProxyService.cs&version=GBmaster&line=465&lineEnd=466&lineStartColumn=1&lineEndColumn=1&lineStyle=plain&_a=contents)
 - [RpcControlProtection.cpp](https://tfs.os33.net/DefaultCollection/Portal/_git/Workplace.Container.Windows?path=%2FWorkplace.Container.Hook%2FWorkplace.Container.Hook.Lib%2FRpcControlProtection.cpp&version=GBspike%2Fuwp-launcher&line=523&lineEnd=524&lineStartColumn=1&lineEndColumn=1&lineStyle=plain&_a=contents)

The plan to follow with this issue is to schedule troubleshooting sessions between me and Gabriel to acelerate the discovery. However, the very first step is independent, because envolves to use Venn AAD account (DLP or prod) to reproduce the account leakage to system settings. It has to be AAD because MS web accounts follows a distinct path we need, and using dlp account is the easiest way because there is already an AAD configured for that.

So I configured a Windows 10 with Office, OneDrive and Teams installed without account configured. Any previous configured account was removed and made reboot of computer. Despite sometimes being stuck into showing emails and accounts in the settings, when showing it was empty, and Teams and OneDrive as well.

no_account_in_system_settings.png

My first test was a sanity check: without Workplace just login with a personal account into Teams and in the Email and Accounts Settings the new email shows up, as it should be.

The next test was to go back the snapshot, install Workplace prod and inside SE to launch Teams to enter the company account. After install the Teams app is disable in my account, so I restarted the computer just in case and disabled the autorun to the computer starts without Teams. A BSOD during restart happens. Does not seem to be workplace's fault and a dump file was not generated despite being enable to do it.

bsod.png

After restart I see that Workplace has to prepare something in the background for Teams to work. The messages while waiting Teams are "Waiting to be copied over..." and "Preparing app for launch in LocalZone". After some minutes Teams is available to launch. Just to be sure I restarted the computer again to take a snapshot in this main state, before adding any accounts to the system.

teams_installing_workplace.png

So I started Teams again in SE and typed the company account. Teams seemed to have restarted once. I recorded the moment when I tried to enter the account again, but this time it worked. And odd enough my AAD from Venn didn't appeared in system settings. Teams froze one time and to make sure I restarted it again until functional and no account in the system settings yet. So I consider the production version has managed somehow to avoid account leakage outside SE when activating Teams.

activating_teams_account_system_settings_empty.mp4

My next test was to activate Microsoft Office, since OneDrive is unavailable and would be the faster test. However, the sign in option was in loop once I type the email account, just like my first issue when I started to analyze my Outlook activation in onboarding. I knew from the past experience that this issue could be related to an existing account registered in the system, since the case was solve when we deleted every account in the system and restarted Workplace.

But in this case there was no account being shown in the system settings, despite sometime before there was one. So to make sure the settings were clean even not showing anything I made another test by creating a new local user in the system and logging in in that account. However, the same loop issue happened.

I believe I am walking in circles here, since some system issues is avoiding me to get to the core test for this research.

PS: Testing with DLP version and DLP account signing to Teams and no credentials saved as well.

teams_no_cred_saved.png

TIL this command lists the credentials saved: `dsregcmd.exe /status`.


= Showing Gabriel Teams abnormal signin
:date: 2023-07-18
:tags: tag_venn tag_reversing

## SE Teams

In a meeting with Gabriel I tried to show him the situation reproduced yesterday, where Teams can be sign in and no trace of saved credentials outside SE, but the app kept freezing and Workplace showed the message "Microsoft Teams is open in your personal space. To use it in your workspace, we'll close and reopen it". It is not the first time this happens, but that time happened a lot and I was unable to replicate. Besides, in this machine the signin was already made, but Workplace was unable to save it to the next session.

microsoft_teams_is_open_in_your_personal_space.png

My next step was to eliminate the Workplace variable by trying to reproduce the situation commented the day before using Demo. I updated the lastest version in master, rebuild it and ran Demo in a clean machine with the driver sign verification off. When running Teams a new error occurred about the file `windowsudk.shellcommon.dll` not found. Indeed it was not in the system and it is a WinRT DLL as I searched in my real machine.

windowsudk.shellcommon.dll.png

windowsudk.shellcommon.dll.mp4

I took a step back and try to reproduce this same error in Workplace, so I installed Workplace DLP over Demo and got the same DLL not found situation. However, for some reason, after that error Teams continued loading until the "Personal space" error.

personal_space.mp4

I got back to the snapshot where I could successfully to be signed in using the test account `dev@dlp.os33dev.com` without credentials saved in the system, but after the Workplace signed me out for timeout I was unable to signin again, and Teams started to show the DLL not found error, which I believe could be some Microsoft update side effect, since this error starting to show today.

windowsudk.shellcommon.dll_inside_workplace.png

I am starting to thing to the next step a way to do analysis of AAD credentials without using Workplace, but to do that I need an AAD server with a valid account to signin (not Microsoft Account). Is that possible?


== Azure AD Internals

Learning how AAD PRT are generated and managed I found [AADInternals](https://aadinternals.com/aadinternals/#join-aadintdevicetoazuread-j), a powershell module with tools and hacks. I was able to register a device using the domain `strhldv2os33devsb.onmicrosoft.com` and a test account.

```
PS C:\WINDOWS\system32> Get-AADIntAccessTokenForAADJoin -SaveToCache
Logging in to Microsoft Services
Enter email, phone, or Skype: as-dlp-team@strhldv2os33devsb.onmicrosoft.com
Password: **********************
AccessToken saved to cache.

Tenant                               User                                          Resource
------                               ----                                          --------
fea14491-6973-45ea-9176-e3bf1b391f91 as-dlp-team@strhldv2os33devsb.onmicrosoft.com 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9


PS C:\WINDOWS\system32> Join-AADIntDeviceToAzureAD -DeviceName "Testing for AAD discovery" -JoinType Register
Device successfully registered to Azure AD:
  DisplayName:      "Testing for AAD discovery"
  DeviceId:         5af528ec-0cc9-4c2b-a0b2-fa6eec0b42e7
  AuthUserObjectId: d4fc34d9-e5d4-4705-86d7-37f676f56341
  TenantId:         fea14491-6973-45ea-9176-e3bf1b391f91
  Cert thumbprint:  0534CF5F27B858070F901F990F6C88E53C494C96
  Cert file name :  "5af528ec-0cc9-4c2b-a0b2-fa6eec0b42e7.pfx"
Local SID:
  S-1-5-32-544
Additional SIDs:
  S-1-12-1-2097466945-1079147815-3130615702-1053687655
  S-1-12-1-1607665527-1166451597-389316743-2961931250
```

aad_registration_device.png

Important to notice that the same test is not possible using the domain `dlp.os33dev.com` (or even `venn.com`) because they are federated.

Got some links to read about:

 - [Deep-dive to Azure AD device join](https://aadinternals.com/post/devices/#azure-ad-registered)
 - [How it works: Device registration](https://learn.microsoft.com/en-us/azure/active-directory/devices/device-registration-how-it-works)
 - [What is a Primary Refresh Token?](https://learn.microsoft.com/en-us/azure/active-directory/devices/concept-primary-refresh-token)
 - [Lateral Movement to the Cloud with Pass-the-PRT](https://blog.netwrix.com/2023/05/13/pass-the-prt-overview/)
 - [Recovering Web Tokens From Office](https://blog.xpnsec.com/wam-bam/) (reread)


= We need to figure out how to containerize the PRT
:date: 2023-07-19
:tags: tag_venn tag_reversing

In the words of Alex Osipov, "we need to figure out how to containerize the PRT that is stored in LSASS by AAD Broker / WAM server side COM objects so that we can isolate them away from the rest of the OS". It is still a very broad set of possibilities here.

Yesterday I was doing some tests in kernel debugger about put global breakpoints and discover ALPC ports in live mode. The DLL Gabriel was stalking in `System.Settings.exe` is `Windows.Security.Authentication.Web.Core.dll` and there is the implementation for web account monitoring and token management, so this component and AAD Broker plugin should relate somehow. I haven't found a valid way to make some test about it so I started to read old comments from ticket and find the references to see if we stumble upon something in the past and should good to check it again.

In the list of invalid ways, I was thinking to put a global breakpoint for all processes, but it seems that this is not a viable way:

> Breakpoints in user space are always associated with the process whose process context was active when the breakpoints were set.
> Debugging Tools - User Space and System Space
> 
> The nt!PspInsertProcess Kernel-Mode Breakpoint
> The idea behind this trick is simple: every new user-mode process creation attempt first goes to 
> the kernel and calls n!PspAllocateProcess to create an executive object (nt!_EPROCESS) for the new 
> process. It then calls nt!PspInsertProcess to insert it into a linked list of active process structures that 
> the executive maintains. This means, in particular, that setting a breakpoint at one of these internal 
> function calls using a kernel debugger allows you to trap every process-creation attempt on the 
> target. You stop inside the debugger as a new process gets created, but before any code from it gets 
> to run, because that happens only when the process creation system call returns to user mode and 
> completes the process initialization in the NTDLL system module
> Tarik Soulami - Inside Windows debugging

> To load symbols, the debugger looks at the list of modules loaded by the operating system. The pointer to the user-mode module list is one of the items stored in the process environment block (PEB).
> To reclaim memory, the Memory Manager may page out user-mode data to make space for other process or kernel mode components. The user-mode data that is paged out may include the PEB data structure. Without this data structure, the debugger cannot determine for which images to load symbols.
> Debugging Tools - Mapping Symbols When the PEB is Paged Out

Made some tests to this tip of enable debugger in a process using kernel debugger:

```
1: kd> dt ntdll!_PEB
 +0x000 InheritedAddressSpace : UChar
 +0x001 ReadImageFileExecOptions : UChar
 +0x002 BeingDebugged : UChar

 0: kd> bp nt!PspInsertProcess
0: kd> g
Breakpoint 0 hit
nt!PspInsertProcess:
0: kd> dt @rcx nt!_EPROCESS ImageFileName
 +0x16c ImageFileName : [15] "notepad.exe"
0: kd> $ notice that you can't resolve notepad.exe symbols at this point yet!
0: kd> x notepad!*main*
 ^ Couldn't resolve 'x notepad'
1: kd> .process /r /p @rcx
Implicit process is now ffff8901`b25d0080
.cache forcedecodeuser done
Loading User Symbols
PEB is paged out (Peb.Ldr = 0000006a`ef214018).  Type ".hh dbgerr001" for details
0: kd> eb @$peb+2 1
0: kd> g

.process /p ffff8901b25d0080; !peb 6aef214000
Implicit process is now ffff8901`b25d0080
.cache forcedecodeuser done
PEB at 0000006aef214000
    InheritedAddressSpace:    No
    ReadImageFileExecOptions: No
    BeingDebugged:            Yes
```

= WWAHost is not always started
:date: 2023-07-20
:tags: tag_venn tag_reversing

Yesterday I was doing some tests in kernel debugger about put global breakpoints and discover ALPC ports in live mode with no result. Today I found together with Gabriel that WWAHost is not always started when authenticating AAD. In my old Win10 1909 just AAD Broker started. We also find a ALPC between AAD Broker and LSASS. The WWAHost exists in the system, but the process is not created.

wwahost.png

The plan to today was to check AAD Broker plugin communication with LSASS when authenticating via Teams. I am doing these tests in Windows 10 1909 because that is the VM version I got for the moment. I believe is going to be useful to compare the same tests in a newer version (I need to format an English version as well).

When starting `Teams.exe` and go to the authentication two processes are started and keep started until the authentication finishes: `RuntimeBroker.exe` and `Microsoft.AAD.BrokerPlugin.exe`. We know we have to take a closer look into AAD Broker, so if we list their ALPC connection we found one with the LSASS (lsasspirpc).

```
0: kd> !process 0 0 Microsoft.AAD.BrokerPlugin.exe
PROCESS ffff8901b0dac080
    SessionId: 1  Cid: 0368    Peb: eef8b18000  ParentCid: 034c
    DirBase: 19df79002  ObjectTable: ffff9a80a09ded80  HandleCount: 890.
    Image: Microsoft.AAD.BrokerPlugin.exe

0: kd> !alpc /lpp ffff8901b0dac080

Ports created by the process ffff8901b0dac080:

	...

Ports the process ffff8901b0dac080 is connected to:

	...
	ffff8901b3ae40c0 0 -> ffff8901aed4e590 ('lsasspirpc') 0 ffff8901aea33080 ('lsass.exe')
	...
```

My first tentative was to get ALPC messages from [ALPCLogger](https://github.com/zodiacon/ALPCLogger) and I got some `ALPCLogger => LSASS` during authentication on Teams. After password entered the screen asking about to keep the account to broader use showed and after press OK the "EMail and Accounts" in `System.Settings.exe` showed the dev account. So I restarted from scratch in the clean snapshot in VM.

Microsoft.AAD.BrokerPlugin_ALPC_messages.png

My next tentative was to debug AAD Broker, specially the function `ntdll!NtAlpcSendWaitReceivePort`. Then something interesting happened. The broker frooze and WinDbg became unresponsive; the authentication was the OS33 login window (no password entered yet). I terminated the Broker and WinDbg processes and restarted Teams. The interesting part is that this time the Broker process hasn't started. Another RuntimeBroker.exe started, though.

So I proceeded to the authentication again until the end. Logged on Teams. I recorded ALPC messages and saw some `RuntimeBroker => LSASS` passing thru. This time Teams was logged in and no screen of broader use was shown. The "EMail and Accounts" in `System.Settings.exe` was empty, Windows Credentials was empty and `dsregcmd.exe /status` was empty as well.

I made the same tests again and recorded the results, but for the second test, where AAD Broker is stopped, it didn't work anymore, and that is because the login windows is ran by AAD Broker plugin. So now I am confuse. I could swear some hours ago that I could authenticate in Teams, showing the main window and the broker was not running, and the "connect to all apps" window didn't show.

Normal execution:

aad_broker_plugin_normal_execution.mp4

Trying to kill broker process:

aad_broker_plugin_try_kill_process.mp4

I believe the message exchange between AAD Broker Plugin and LSASS is the key to understand how the credentials are leaking outside SE. We know that the broker runs outside SE and that is already a clue. However, we need to know exactly what are the interfaces interacting to came out with possible solutions to isolation. The next step is do decode those messages.


= Email and Accounts loading two DLLs
:date: 2023-07-24
:tags: tag_venn tag_reversing

Observing using Process Monitor when the "Email and Accounts" section in `System.Settings` is populate was possible to surround the loading of two DLLs: `Windows.Internal.Management.dll` and `MicrosoftAccountTokenProvider.dll`. After `MicrosoftAccountTokenProvider.dll`  the account is already in settings; before `Windows.Internal.Management.dll` there is no account listed.

section_where_system_settings_is_populated.png

Exploring the stack of the events around the aforementioned loads there are some component candidates to caching and perhaps management of PRT (Primary Refresh Token). I found one in special that could help @Gabriel in his task. There a function in the stack `ClientCache::SavePRT`. The registry action is done in an application hive, listed by Procmon as `\REGISTRY\A\{UUID}`.

clientcache_saveprt.png

The next step to analyze the management of PRT (my task) is to continue to analyse these registry actions, specially the caching, because it is possible that AAD Broker is the final keeper of the PRT, not sending for anyone (except lsass, perhaps).

Microsoft.AAD.BrokerPlugin.exe.PML

= Stack of registry events around the token acquisition
:date: 2023-07-24
:tags: tag_venn tag_reversing

Looking into the stack of registry events around the token acquisition it was possible to list the following key functions by symbol: `CINetEdge::GetAadSingleSignOnLoginUrls`, `AddAccountProvisionDeviceTask::RequestPRT`, `AggregatedTokenRequest::AcquireToken`, `AddAccountTokenRequest::OnStateChanged` and the already quoted in comments before `ClientCache::SavePRT`.

getaadssouris.png

onauthcodechangedone.png

clientcache_saveprt.png

From those, I am currently analyzing the `RequestPRT` and `AcquireToken` ones, from the same stack.

requestprt.png

I was driven by the only post found on the internet with the search `"AddAccountProvisionDeviceTask"`, "[Prove that PRT (Primary Refresh Token) can be obtained even with Azure AD Registered](https://qiita.com/Shinya-Yamaguchi/items/616b5f45a2779c47abee)", by Shinya Yamaguchi. In Yamaguchi's post we can walk through the event viewer events for AAD registration. There is a point that interest us more, the moment where the PRT could be obtained.

> The access token has been updated with a refresh token.
> *PRT (Primary Refresh Token) has not been obtained at this point.

wev_acquire_token.png

> In this next step, you can see that the flow to get the PRT is started as described as RequestPRT .
> *Perhaps the PRT has already been obtained at this point.

```
Code: 0x4AA5002C Initialization data downloaded.
Logged at addaccountprovisiondevicetask.cpp, line: 243, method: AddAccountProvisionDeviceTask::RequestPRT .
```

It seems that OAuth is delivering the access to the PRT and then using the routine `RequestPRT` the primary token is obtained.

I started some debugging sessions to analyze the execution around `RequestPRT` and `GetPrimaryRefreshToken` (this last one I found during the session). I also started to analyze the code by using IDA Free.

```
>.reload AAD.Core.dll
>bp AAD_Core!AddAccountProvisionDeviceTask::RequestPRT
>bp AAD_Core!AuthenticationContext::GetPrimaryRefreshToken
>g
```

IDA and WinDbg decoded a type called `RefreshTokenInfo` being passed in stack trace. The structure of this type is a WIP.

```
AAD_Core!AuthenticationContext::GetPrimaryRefreshToken+0x8f:
00007ff8`9daa5f8f e83c6fffff      call    AAD_Core!RefreshTokenInfo::operator= (00007ff8`9da9ced0)
```

Doing some variable observation I stumble upon a string that could be meaningful, but I am not sure yet. It is not a JWT token, but it is some encoded information.

```
0.AUYAV2m8YKx45EySLFOCd6rsxJjt2SlppDZFreL5gbwdYF5GACs.AgABAAEAAAAtyolDObpQQ5VtlI4uGjEPAgDs_wUA9P-rQpH66EvpmH_R0zBnV3ZNZ6zdP1IRgdexnh3ZC6X2ur2E0_VHIYTnFK5W2qDPjRIaEl7RCVJ6nqBKxtHTv0LrpSbKo3K5c6aYwroWD0iANlQnllCe8hEcsI3IjY7yOZkmT1lB6ocVnfb9F4vcg--Z8lQLI5ElEq
```

I am not sure yet what is the key function that gets the PRT, but the odds is that is somewhere around getting the refresh token and acquiring the primary token, and `AAD.Core.dll` is the component that must be responsible for the task.

The next step is to gather some structure or variable naming around those functions and with this update Confluence with the news.

= SSPI investigation
:date: 2023-07-25
:tags: tag_venn tag_reversing

The next step defined yesterday was to gather some structure or variable naming around those functions and with this update Confluence with the news. However, Phillip Pristuba in the daily gave a tip about the use of [SSPI](https://learn.microsoft.com/en-us/windows-server/security/windows-authentication/security-support-provider-interface-architecture) (Security Support Provider Interface), the set of functions implemented by Security Support Providers in Windows. Everything uses those guys for identification and authentication. So it was worth the shot.

First, in order to gather the overview from the whole process in each scenario to collect evidence, I recorded videos with the clock seconds showing and the Process Monitor capturing every event for the components `Teams.exe`, `Microsoft.AAD.BrokerPlugin.exe` and `SystemSettings.exe`. The idea was to generate those records just once to make a whole search for the logs. So things as loading specific DLLs or using specific threads with key stacks could prove useful.

The scenarios were:

=# Teams_Microsoft_AAD_BrokerPlugin_NewLogin

The whole process of starting Windows, Teams window without login, starting registration and the company acccount appearing in SystemSettings.

Teams_Microsoft_AAD_BrokerPlugin_NewLogin.mp4 (not uploaded yet because I had some problem logging in Droplr)

Teams_Microsoft_AAD_BrokerPlugin_NewLogin.PML


=# SystemSettingsNewLogin

Just SystemSettings showing no account and starting to add a new account. Note that AAD Broker is instanciated by SystemSettings alone.

SystemSettingsNewLogin.mp4 (not uploaded yet because I had some problem logging in Droplr)

SystemSettingsNewLogin.PML


=# TeamsNoLogin

Opening Teams from zero and no account registered yet (different from the scenario where Teams is already started in Windows).

TeamsNoLogin.mp4 (not uploaded yet because I had some problem logging in Droplr)

TeamsNoLogin.PML


=# SystemSettings

Starting SystemSettings, but this time with account registered.

SystemSettings.mp4 (not uploaded yet because I had some problem logging in Droplr)

SystemSettings.PML


The first effort in decoding those logs was about different DLLs loading between Teams_Microsoft_AAD_BrokerPlugin_NewLogin after registered a new account in the system and TeamsNoLogin, where there was never a registered account. The purpose was to observe if there is a different DLL that is loaded when it is possible to retrieve a registered account from the system.

The result was that the first DLL loaded differently from the already registered account was ADD Broker, what means that there is no special componente related to retrieving tokens available in the system or it is loaded with and without registered accounts in the system.

The next step was planned to be related to SSPI DLLs loading or communicating, but I realized that this test is a tricky one, because envolves to log RPC/ALPC communication. I am postponing this task until is really necessary and use the registry, file and network logs from the scenarios aforementioned to discover. However, since that would be the next step after scan the already found stacktrace for variables, the real next step is to gather some structure or variable naming around those functions and with this update Confluence with the news.

Today I also read about [a vulnerability](https://github.com/secureworks/family-of-client-ids-research) from Family Refresh Tokens in AAD. However, there was no information useful in our case.


== Pintura no escritorinho (superfície)

2.10 largura
2.60 comprimento
2.50 altura
6.50 paredes inteiras
4.90 parede porta
5.18 parede janela
5.46 teto
22.04 total

porta
0.80 largura
2.00 altura
1.60 área

janela
1.50 largura
1.15 comprimento
1.32 área


My next four steps in this case:

 - Debug sessions to scan for variables around AAD issuing JWT to Broker Plugin.
 - Looking for communication between components in scenarios collected (comment bellow).
 - Static disassembly analysis to find meaninful APIs and interfaces.
 - Scan stacktrace for AAD Broker sending ALPL messages to security components (e.g. lsass).

I believe I will take about one day for each task (perhaps two for fourth task).

= Interfaces used in AAD Broker during account registration
:date: 2023-07-26
:tags: tag_venn tag_reversing

=# TL;DR

Found some interfaces being used in AAD Broker during account registration such as `ITokenBrokerInternalStatics` inside `Windows.Security.Authentication.Web.Core.dll`.

My next three steps in this case:

 - Discover token after the instantiation of `ITokenBrokerInternalStatics`.
 - Put some NOPs in key method calls to avoid token leakage.
 - Document the process flow in AAD Broker in Confluence.

I believe I will take about one day rounded for each task.


=# Analysis

After reading the comment of Gabriel I resolved to try to scan the COM variables related to the account registration in Teams. First I put two breakpoints in (un)marshal of interfaces to print the IIDs.

```
bp combase!CoMarshalInterface "dx -r1 (*((ole32!_GUID *)@rdx)); g"
bp combase!CoUnMarshalInterface "dx -r1 (*((ole32!_GUID *)@rdx)); g"
```

I got divided the process in two: after entering the credentials in AAD Broker window and after agree to register account to the system.

There was no notable interface after enter password, but there was some interesting ones after to agree to register account:

 - `__x_Windows_CInternal_CSecurity_CAuthentication_CWeb_CITokenBrokerInternalStatics`
   - Unmangled: `Windows::Internal::Security::Authentication::Web::ITokenBrokerInternalStatics`
 - `__x_Windows_CInternal_CSecurity_CAuthentication_CWeb_CIWamObjectStoreManagerStatics`
   - Unmangled: `Windows::Internal::Security::Authentication::Web::IWamObjectStoreManagerStatics`
 - `__x_Windows_CInternal_CSecurity_CAuthentication_CWeb_CIWamProviderRegistrationStatics`
   - Unmangled: `Windows::Internal::Security::Authentication::Web::IWamProviderRegistrationStatics`
 - `__x_Windows_CSecurity_CCredentials_CIWebAccountProvider`
   - Unmangled: `Windows::Security::Credentials::IWebAccountProvider`

The interface that drove me more attention was `ITokenBrokerInternalStatics`, because it has methods whose parameters are of the types `IWebAccount`, `IWebAccountProvider` and specializations of `WebTokenRequestResult` and `WebTokenResponse`. The others look promising, but the lack of documentation for all these classes let us without much information about them.

```
[Guid("07650a66-66ea-489d-aa90-0dabc75f3567")]
interface Windows::Internal::Security::Authentication::Web::ITokenBrokerInternalStatics : IInspectable {
    //...
    HRESULT Proc9(/* Stack Offset: 8 */ [In] Windows::Security::Credentials::IWebAccountProvider* p0, /* Stack Offset: 16 */ [In] HSTRING p1, /* Stack Offset: 24 */ [Out] Windows::Security::Credentials::IWebAccount** p2);
    //...
    HRESULT Proc36(/* Stack Offset: 8 */ [In] Windows::Security::Authentication::Web::Core::IWebTokenRequest* p0, /* Stack Offset: 16 */ [In] IVectorView<Windows::Security::Credentials::WebAccount>* p1, /* Stack Offset: 24 */ [In] int p2, /* Stack Offset: 32 */ [Out] IAsyncOperation<Windows::Security::Authentication::Web::Core::WebTokenRequestResult>** p3);
    //...
    HRESULT Proc42(/* Stack Offset: 8 */ [In] IVectorView<Windows::Security::Authentication::Web::Core::WebTokenResponse>* p0, /* Stack Offset: 16 */ [In] /* ENUM32 */ int p1, /* Stack Offset: 24 */ [In] Windows::Foundation::IBuffer* p2, /* Stack Offset: 32 */ [In] Windows::Security::Authentication::Web::Core::IWebProviderError* p3, /* Stack Offset: 40 */ [In] HSTRING p4, /* Stack Offset: 48 */ [Out] Windows::Security::Authentication::Web::Core::IWebTokenRequestResult** p5);
    //...
}
```

I traced the instantiation of those classes and found in the ProcMon logs captured yesterday. It is possible to find them in the event of "Load Image" for `OneCoreCommonProxyStub.dll` or just looking for registry queries around these GUIDs. By example, `ITokenBrokerInternalStatics` instantiation can be found looking for the GUID `{07650A66-66EA-489D-AA90-0DABC75F3567}`. "Coincidentally" the DLL found in the stack is `Windows.Security.Authentication.Web.Core.dll`, the same being analyzed by Gabriel in `SystemSettings.exe`.

```
...
11	KernelBase.dll	RegOpenKeyExW + 0x19	0x7ffeb7b68c59	C:\Windows\System32\KernelBase.dll
12	combase.dll	OpenClassesRootKeyExW + 0xd2, onecore\com\published\comutils\reghelp.cxx(564)	0x7ffeb85266be	C:\Windows\System32\combase.dll
13	combase.dll	wRegOpenInterfaceKey + 0xc5, onecore\com\combase\class\comoleapi.cxx(833)	0x7ffeb85259ed	C:\Windows\System32\combase.dll
14	combase.dll	wRegQueryPSClsid + 0x60, onecore\com\combase\class\compapi.cxx(798)	0x7ffeb8525830	C:\Windows\System32\combase.dll
15	combase.dll	CRIFTable::GetPSClsidHelper + 0x19a, onecore\com\combase\dcomrem\riftbl.cxx(1764)	0x7ffeb85017aa	C:\Windows\System32\combase.dll
16	combase.dll	GetPSFactoryInternal + 0xc4, onecore\com\combase\dcomrem\riftbl.cxx(2490)	0x7ffeb8501324	C:\Windows\System32\combase.dll
17	combase.dll	CStdMarshal::CreateProxy + 0xc6, onecore\com\combase\dcomrem\marshal.cxx(6421)	0x7ffeb85038a6	C:\Windows\System32\combase.dll
18	combase.dll	CStdMarshal::MakeCliIPIDEntry + 0x69, onecore\com\combase\dcomrem\marshal.cxx(2771)	0x7ffeb8517ec9	C:\Windows\System32\combase.dll
19	combase.dll	CStdMarshal::UnmarshalIPID + 0x7c, onecore\com\combase\dcomrem\marshal.cxx(2335)	0x7ffeb8517d5c	C:\Windows\System32\combase.dll
20	combase.dll	CStdMarshal::UnmarshalObjRef + 0x170, onecore\com\combase\dcomrem\marshal.cxx(2194)	0x7ffeb8513a20	C:\Windows\System32\combase.dll
21	combase.dll	CoUnmarshalInterface + 0x53b, onecore\com\combase\dcomrem\coapi.cxx(1993)	0x7ffeb850590b	C:\Windows\System32\combase.dll
22	combase.dll	ActivationPropertiesOut::OutSerializer::UnmarshalAtIndex + 0xc7, onecore\com\combase\actprops\actprops.cxx(3216)	0x7ffeb85239e7	C:\Windows\System32\combase.dll
23	combase.dll	ActivationPropertiesOut::GetObjectInterfaces + 0x115, onecore\com\combase\actprops\actprops.cxx(2765)	0x7ffeb8523855	C:\Windows\System32\combase.dll
24	combase.dll	WinRTGetActivationFactoryOfOutofprocClass + 0x14d, onecore\com\combase\objact\objact.cxx(2465)	0x7ffeb85585a9	C:\Windows\System32\combase.dll
25	combase.dll	_RoGetActivationFactory + 0x9a8, onecore\com\combase\winrtbase\winrtbase.cpp(991)	0x7ffeb84fa608	C:\Windows\System32\combase.dll
26	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::Security::Authentication::TokenBroker::CreateTokenBrokerInternalStatics + 0x74	0x7ffea2e792bc	C:\Windows\System32\Windows.Security.Authentication.Web.Core.dll
27	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::Security::Authentication::Web::CGetApplicationTokenBindingKeyIdOperation::DoWork + 0x32	0x7ffea2ee3ee2	C:\Windows\System32\Windows.Security.Authentication.Web.Core.dll
28	Windows.Security.Authentication.Web.Core.dll	<lambda_f5960c57550f0d64676f535d7658898b>::operator()<Windows::Internal::CMarshaledInterfaceResult<Windows::Storage::Streams::IBuffer> > + 0x68	0x7ffea2eb807c	C:\Windows\System32\Windows.Security.Authentication.Web.Core.dll
29	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::COperationLambdaVar<1,<lambda_f5960c57550f0d64676f535d7658898b>,Windows::Internal::CMarshaledInterfaceResult<Windows::Storage::Streams::IBuffer> >::Run + 0x22	0x7ffea2ec68e2	C:\Windows\System32\Windows.Security.Authentication.Web.Core.dll
30	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::AsyncOperation<Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IBuffer * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IBuffer * __ptr64>,Windows::Internal::CMarshaledInterfaceResult<Windows::Storage::Streams::IBuffer>,Windows::Internal::ComTaskPoolHandler,Windows::Internal::INilDelegate,Microsoft::WRL::AsyncOptions<-1,0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::_Run + 0xdc	0x7ffea2ecbc3c	C:\Windows\System32\Windows.Security.Authentication.Web.Core.dll
31	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::AsyncOperation<Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IBuffer * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IBuffer * __ptr64>,Windows::Internal::CMarshaledInterfaceResult<Windows::Storage::Streams::IBuffer>,Windows::Internal::ComTaskPoolHandler,Windows::Internal::INilDelegate,Microsoft::WRL::AsyncOptions<-1,0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::Run + 0x66	0x7ffea2ec6776	C:\Windows\System32\Windows.Security.Authentication.Web.Core.dll
32	SHCore.dll	WorkThreadManager::CThread::ThreadProc + 0x260	0x7ffeba0fc590	C:\Windows\System32\SHCore.dll
33	SHCore.dll	WorkThreadManager::CThread::s_ExecuteThreadProc + 0x18	0x7ffeba0fc218	C:\Windows\System32\SHCore.dll
34	SHCore.dll	<lambda_9844335fc14345151eefcc3593dd6895>::<lambda_invoker_cdecl> + 0x11	0x7ffeba0facb1	C:\Windows\System32\SHCore.dll
35	kernel32.dll	BaseThreadInitThunk + 0x14	0x7ffeb96e7bd4	C:\Windows\System32\kernel32.dll
36	ntdll.dll	RtlUserThreadStart + 0x21	0x7ffeba2cced1	C:\Windows\System32\ntdll.dll
```

= Debug AAD Broker failed
:date: 2023-07-27
:tags: tag_venn tag_reversing

=# TL;DR

After several tentatives, to debug AAD Broker there was no success (details bellow).

Read about [a policy to avoid to join AAD](https://learn.microsoft.com/en-us/azure/active-directory/devices/hybrid-azuread-join-plan#handling-devices-with-azure-ad-registered-state).

Compare registry keys before and after signin with same discoveries from [this page](https://nerdymishka.com/articles/azure-ad-domain-join-registry-keys/).

Documented about AAD Broker Plugin in Confluence and about debugging issues to it.

My next new steps in this case are:

 - Didn't decided yet. Any sugestions?

=# Details

=## Small discovery about AAD Broker freezing with Teams (documented in Confluence)

If during Teams signin, after enter company email and it starts `Microsoft.AAD.BrokerPlugin.exe` you freeze this process (I used gflags and configured a debugger to start the process) for about 30 seconds to 1 minute Teams restarted and show up the AAD Broker window itself, inside the main `Teams.exe` process. If you signin in that window it enters Teams normally and do not ask or register this account in `SystemSettings`. I recorded a ProcMon session doing this and closing and reopening Teams after the signin to prove the credential is still valid in this session.

After restart the computer Teams ask again the credentials, but this time if AAD Broker is frozen it keeps trying to load the usual way, not showing the self-contained signin window again.

=## How (not) to debug Microsoft.AAD.BrokerPlugin.exe

It is possible to attach to process after it has been started for Team, by example. However, most of the interfaces and proxies were already loaded and it is difficult to put breakpoints in, by example, the class TokenInternals.

In order to control the very start of the process I tried to put ntsd as their debugger using gflags, but there is a catch: Teams will kill the process if unesponsive for some time between 30 seconds and 1 minute. To workaround this timeout issue I configured ntsd to communicate with kernel debugger (the `-d` flag), but there is another issue: as AAD Broker is started by svchost (services related to broker infrastructure) even though the process is using the user account it does not have the SeDebugPrivilege set and for some reason the extension DLLs from ntsd (and WinDbg) are not loaded and can't be loaded. It could be that the "extension DLL search Path" is empty (as verified in prompt). So we have a very limited debugger using this way (and the symbol loading isn't working).


=## Nop'ing SaveToDisk/SavePRT and CreateWAMAccount

After analyzing how in the registry JoinedDomains are written I saw again in ProcMon logs this stack where AAD Broker has some very specific methods called SavePRT, SaveToDisk, etc. As a final task in the day I tried to nop those calls. It doesn't seem to make any effect, since the account was already available in SystemSettings.exe (after reboot, too).

```
mov     rcx,r14
call    AAD_Core!AddAccountProvisionDeviceTask::UpdateNGCStatus (00007ffc`b9c851e0)
lea     rdx,[rsp+4F0h]
mov     rcx,r14
call    AAD_Core!AddAccountProvisionDeviceTask::SaveToDisk (00007ffc`b9c85330)
lea     rdx,[rsp+4F0h]
mov     rcx,r14
call    AAD_Core!AddAccountProvisionDeviceTask::CreateWAMAccount (00007ffc`b9c85690)
mov     rcx,qword ptr [r14+8]
mov     rax,qword ptr [rcx]
mov     rax,qword ptr [rax+8]
call    qword ptr [AAD_Core!_guard_dispatch_icall_fptr (00007ffc`b9d13920)]
mov     rsi,rax
lea     rbx,[rax+0C8h]
```

== EPUB

Today I concluded another step in epub project:

  - order chronologically the chapters; OK
  - put at least the posts in index. OK

One more to go:

  - order chronologically the posts (could/must be done in merge?);

= I observed a week ago
:date: 2023-07-28
:tags: tag_venn tag_reversing

I observed a week ago:

> Observing using Process Monitor when the "Email and Accounts" section in System.Settings is populate was possible to surround the loading of two DLLs: Windows.Internal.Management.dll and MicrosoftAccountTokenProvider.dll. After MicrosoftAccountTokenProvider.dll  the account is already in settings; before Windows.Internal.Management.dll there is no account listed.

Now I know what it is from reg activity + video recorder. It seems that it is the EnrollmentServer service the responsible for receive the token. Windows.Internal.Management.dll is the proxy for communicate to the DmEnrollmentSvc. This is the last event before the token is already in system.

My next step is to look at AAD Broker/DmEnrollmentSvc communication.

Gabriel has found a very interesting API, too: [NetGetAadJoinInformation](https://learn.microsoft.com/en-us/windows/win32/api/lmjoin/nf-lmjoin-netgetaadjoininformation). However, it does not seem to be used in the enrollment process. That is odd.

= Debug and document investigated components
:date: 2023-07-28
:tags: tag_venn tag_reversing

=# Next step

 - Debug investigated components (AAD Broker, DmEnrollmentSvc, anything else) and put breakpoints in the DLLs functions found.
 - Document flow in Confluence from previous step.

=# Details

=## BlockAADWorkplaceJoin

There is a branch in the behavior of AAD Broker when the registry value `BlockAADWorkplaceJoin` (DWORD) is set as `1` in `HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\WorkplaceJoin`. Teams login occurs normally and join window is never shown. There is no account in SystemSettings and `dsregcmd.exe /status` and there is credentials saved in Windows as `teamsslv/teams` and `teamsKeys/teams`. Teams keeps logged in after reboot. This is [the recommended policy](https://techcommunity.microsoft.com/t5/exchange-team-blog/troubleshooting-auth-issues-in-outlook-if-you-are-azure-joining/ba-p/1789359) in The Exchange Team blog to avoid users to join in AAD.

TeamsIsolatedCredentials.png

Comparing both ways (with BlockAADWorkplaceJoin and without) it is possible to observe in the stacks of registry events in procmon that the branch is located in some scheduled task executed for what seems a worker thread. With BlockAADWorkplaceJoin the task begins in the function WebUITokenRequest::CompleteUIResponse. Without BlockAADWorkplaceJoin the function is AddAccountProvisionDeviceTask::SaveToDisk. Both branches use the class ClientCache, but with BlockAADWorkplaceJoin the method used is Load and without BlockAADWorkplaceJoin the method is Save (that call SavePRT).

BlockAADWorkplaceJoin_ClientCache_Branch.png

Another difference in stacks can be observed when the first time reading the BlockAADWorkplaceJoin value in registry. When the value exist is the only time it is read. Besides, the joinning branch reads the registry as a inside call from AddAccountTokenRequest::AcquireToken, while the non joinning thread (with BlockAADWorkplaceJoin set) read the same value but from the method GetTokenUIBrokerOperation::DetermineAddAccountState. Both use the method Policies::GetIsWPJBlockedByPolicy.

AcquireToken_vs_DetermineAddAccountState.png

=## AAD Broker/DmEnrollmentSvc communication

Analyzed basic behavior in DmEnrollmentSvc. It is started by AAD Broker and as soon as possible it stops. It is a manual service. There is no information in registry writes for we conclude it is responsible for receive and/or store the token.

Only without `BlockAADWorkplaceJoin` there is a communication between AAD Broker and the service DmEnrollmentSvc. If you choose to join AAD and disable this service the window hangs forever or for a very long time (more than 10 min for sure).

=## Interesting DLL along the investigation

DMCmnUtils.dll. DMGetDeviceClientID, DmCheckIfAadAccountLoggedOn, DmEnumUsers, DmGetAadDeviceMdmEnrollmentResourceUrlWithDiscovery, DmGetAadDeviceToken, DmGetAadDeviceTokenWithDiscovery, DmGetAadEnrollmentResource, DmGetAadUserToken, DmGetActiveUserSid, DmGetCurrentUserSid, DmGetCurrentUserToken, DmGetUserSidFromToken, DmGetUserTokenFromSid, DmImpersonate, DmInformUser, DmInvalidateAadDeviceToken, DmInvalidateAadUserToken, DmMdmSign.

Tokenbindind.dll. TokenBindingDeleteAllBindings, TokenBindingDeleteBinding, TokenBindingGenerateBinding, TokenBindingGenerateID, TokenBindingGenerateIDForUri, TokenBindingGenerateMessage, TokenBindingGetHighestSupportedVersion, TokenBindingGetKeyTypesClient, TokenBindingGetKeyTypesServer, TokenBindingVerifyMessage.

Worth the shot: cryptngc.dll, AADTB.dll, WLDAP32.dll, dsreg.dll, USERMGRCLI.dll, AAD.Core.dll (symbols).

APIs: NetGetAadJoinInformation (found by Gabriel).

=# PS

I decided to look again for Sppi calls and I found in the debug session. It is part of a async task, that's (I think) is the reason why I haven't found in procmon logs. After that I looked back to IDA and found the reference we were loking for in static analysis.

ida_sppi.png

The package is "CloudAP". The next step so is to discover the format of the token being used, but I believe this is the guy :)

```
Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5290a2c4-78d7-4481-b62c-20d549a852b4
Breakpoint 1 hit
SspiCli!LsaLookupAuthenticationPackage:
00007ffa`30652f90 488bc4          mov     rax,rsp
0:042> k
 # Child-SP          RetAddr           Call Site
00 000000c5`d4d9ee78 00007ff9`fed06e9f SspiCli!LsaLookupAuthenticationPackage
01 000000c5`d4d9ee80 00007ff9`fecb6903 AAD_Core!DefaultUser::TryOpen+0x17f
02 000000c5`d4d9f1b0 00007ff9`fecda235 AAD_Core!<lambda_5e52803d257baaaa72110bc22e14dce4>::operator()+0xe3
03 000000c5`d4d9f370 00007ff9`fecd9d31 AAD_Core!Concurrency::task<ADALRT::AuthorizationClient ^>::_InitialTaskHandle<ADALRT::AuthorizationClient ^,<lambda_5e52803d257baaaa72110bc22e14dce4>,Concurrency::details::_TypeSelectorAsyncTask>::_Init+0x25
04 000000c5`d4d9f3c0 00007ff9`fec45ce1 AAD_Core!Concurrency::details::_PPLTaskHandle<ADALRT::AuthorizationClient ^,Concurrency::task<ADALRT::AuthorizationClient ^>::_InitialTaskHandle<ADALRT::AuthorizationClient ^,<lambda_5e52803d257baaaa72110bc22e14dce4>,Concurrency::details::_TypeSelectorAsyncTask>,pplx::details::_UnrealizedChore>::operator()+0x81
05 000000c5`d4d9f430 00007ff9`fec5d1b4 AAD_Core!Custom::_RunChoreBridge+0x21
...

0:042> dd @rdx
000000c5`d4d9f100  00070007 00000000 fee6c8f0 00007ff9
0:042> da 00007ff9`fee6c8f0
00007ff9`fee6c8f0  "CloudAP"
0:042> g
Breakpoint 0 hit
SspiCli!LsaCallAuthenticationPackage:
00007ffa`30653050 488bc4          mov     rax,rsp
0:042> db @r8
000000c5`d4d9f168  01 00 00 00 00 00 00 00-00 00 00 00 f9 7f 00 00  ................
000000c5`d4d9f178  64 97 2b db 37 27 00 00-2c 02 00 00 00 00 00 00  d.+.7'..,.......
000000c5`d4d9f188  98 f3 d9 d4 c5 00 00 00-60 8f e6 fe f9 7f 00 00  ........`.......
000000c5`d4d9f198  00 00 00 00 00 00 00 00-b0 f2 d9 d4 c5 00 00 00  ................
000000c5`d4d9f1a8  03 69 cb fe f9 7f 00 00-2a 8f e6 fe f9 7f 00 00  .i......*.......
000000c5`d4d9f1b8  2a 8f e6 fe f9 7f 00 00-70 24 5d ae 7d 02 00 00  *.......p$].}...
000000c5`d4d9f1c8  48 e3 6d b4 85 02 00 00-60 8f e6 fe f9 7f 00 00  H.m.....`.......
000000c5`d4d9f1d8  0b ba c5 fe f9 7f 00 00-fe ff ff ff 01 00 00 00  ................
0:042> k
 # Child-SP          RetAddr           Call Site
00 000000c5`d4d9ee78 00007ff9`fed070a9 SspiCli!LsaCallAuthenticationPackage
01 000000c5`d4d9ee80 00007ff9`fecb6903 AAD_Core!DefaultUser::TryOpen+0x389
02 000000c5`d4d9f1b0 00007ff9`fecda235 AAD_Core!<lambda_5e52803d257baaaa72110bc22e14dce4>::operator()+0xe3
03 000000c5`d4d9f370 00007ff9`fecd9d31 AAD_Core!Concurrency::task<ADALRT::AuthorizationClient ^>::_InitialTaskHandle<ADALRT::AuthorizationClient ^,<lambda_5e52803d257baaaa72110bc22e14dce4>,Concurrency::details::_TypeSelectorAsyncTask>::_Init+0x25
04 000000c5`d4d9f3c0 00007ff9`fec45ce1 AAD_Core!Concurrency::details::_PPLTaskHandle<ADALRT::AuthorizationClient ^,Concurrency::task<ADALRT::AuthorizationClient ^>::_InitialTaskHandle<ADALRT::AuthorizationClient ^,<lambda_5e52803d257baaaa72110bc22e14dce4>,Concurrency::details::_TypeSelectorAsyncTask>,pplx::details::_UnrealizedChore>::operator()+0x81
05 000000c5`d4d9f430 00007ff9`fec5d1b4 AAD_Core!Custom::_RunChoreBridge+0x21
06 000000c5`d4d9f470 00007ffa`24f9417a AAD_Core!Windows::System::Threading::WorkItemHandler::[Windows::System::Threading::WorkItemHandler::__abi_IDelegate]::__abi_Windows_System_Threading_WorkItemHandler___abi_IDelegate____abi_Invoke+0x34
...
```

= Before LsaCallAuthenticationPackage
:date: 2023-07-29
:tags: tag_venn tag_reversing

## PPS

Before calling LsaCallAuthenticationPackage the AAD account is already registered in SystemSettings, so this step occurs after token is saved to the system. More research will be necessary =/

= Diretivas, restart do explorer e token do usuário
:date: 2023-07-29
:tags: tag_scua

Corrige aplicação de diretivas.

Para isso estou usando a chamada original do sistema legado, e o sistema legado teve que ser modificado para ignorar as estripulias do ctree, como inicialização de path, etc. Foi criado uma flag de modo legado que por padrão é true, mas para a instanciação da classe de diretivas no novo login é colocada como false. Com isso podemos usar métodos do objeto ClPolicy.

## Cria código para restart do explorer.

A ideia original era aplicar a mudança de diretivas na mesma sessão, só que isso ainda não está funcionando muito bem. É possível matar todos os explorer.exe e rodar novamente o userinit na conta do usuário, mas ainda é necessário reproduzir as variáveis de ambiente do perfil do usuário corretamente para que o shell seja carregado como o original. Código foi comentado enquanto isso.

## Adiciona criação de processos com token do usuário.

A partir daqui o módulo de enumeração de processos também os cria, e por isso foi renomeado. Havia a necessidade de alterar o comportamento da função que filtra contas dos processos em execução.

= LsaCallAuthenticationPackage is called by AAD Broker
:date: 2023-07-31
:tags: tag_venn tag_reversing

## TL;DR

LsaCallAuthenticationPackage is called by AAD Broker to communicate to the package "CloudAP", but it is not the part that join AAD.

Debugging sessions revealed PRT communication code in AAD Broker could have some antidebug technique based on exception.

BlockAADWorkplaceJoin is a viable part of the solution of isolate credentials.

My next part is to continue on debugging sessions + static analysis of AAd Broker.

## Details

After some debugging sessions here I can tell the token seems really hiding from us. I started to divide and conquer to find the moment of registration and there are some exceptions being thrown inside the code (saw in IDA, too) and after they are thrown the computer is joined (`dsregcmd /status` show it). It could be some antidebugging technique.

Talking with Gabriel he pointed out that the BlockAADWorkplaceJoin is a viable part of the solution of isolate credentials. It can be done with registry redirection.

However, we still don't know what happens without this flag on. The debugging sessions must go on. I am plotting some debug log output made by AAD Broker because it could be useful to understand the flow. Note some exceptions being thrown in the code. I stepped for some of those exceptions and they seemed to be scheduled somehow.

Modules worth to track; but most of the functions are not triggering in session.

 - DMCmnUtils
 - Tokenbinding
 - netapi32!NetJoinDomain
 - netapi32!NetGetJoinInformation
 - dsreg!DsrBeginDelegatedWorkplaceJoin

Important breakpoints:

```
bp AAD_Core!AddAccountProvisionDeviceTask::Invoke
bp AAD_Core!Provision::RegisterDevice
bp AAD_Core!AddAccountProvisionDeviceTask::RegisterDevice
; something happens after this function and during DeviceInfo related to exceptions being thrown
bp AAD_Core!DeviceInfo::DeviceInfo
 ; call    AAD_Core!Windows::Internal::UserDeviceRegistration::UserDeviceRegManager::GetJoinInfo
; dsregcmd.exe /status already returning joined
bp AAD_Core!RefreshTokenRequest::AcquireToken
bp AAD_Core!AddAccountProvisionDeviceTask::RequestPRT
bp AAD_Core!AddAccountProvisionDeviceTask::ProcessMDM
bp AAD_Core!ClientCache::SerializeToFile
bp AAD_Core!AuthenticationContext::UpdateFromCache
bp SspiCli!LsaCallAuthenticationPackage
bp SspiCli!LsaLookupAuthenticationPackage
```

Relevant output from debugging sessions:

```
Message: Starting UI navigation.
Details: Starting navigation to https://dlp.os33dev.com/sso/azure
Logged at webuicontrollerwebview.cpp, line: 265, method: WebUIControllerWebView::OnNavigationStarting.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://api.spaces.skype.com, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
ModLoad: 00007fff`68110000 00007fff`681cf000   C:\Windows\System32\Windows.Web.dll
Code: 0x4aa90057 (level=2)
Message: Starting UI navigation.
Details: Starting navigation to https://login.microsoftonline.com/login.srf
Logged at webuicontrollerwebview.cpp, line: 265, method: WebUIControllerWebView::OnNavigationStarting.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://api.spaces.skype.com, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
(1d5c.c78): C++ EH exception - code e06d7363 (first chance)
...
(1d5c.c78): C++ EH exception - code e06d7363 (first chance)
Code: 0x4aa90057 (level=2)
Message: Starting UI navigation.
Details: Starting navigation to https://dlp.os33dev.com/sso/azure
Logged at webuicontrollerwebview.cpp, line: 265, method: WebUIControllerWebView::OnNavigationStarting.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://api.spaces.skype.com, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
(1d5c.c78): Windows Runtime Originate Error - code 40080201 (first chance)
onecoreuap\windows\dwm\dcomp\winrtnested\wrtcompositiondrawingsurface.cpp(99)\dcomp.dll!00007FFF761849A6: (caller: 00007FFF761248F1) ReturnHr(2) tid(c78) 80070057 Parâmetro incorreto.
onecoreuap\windows\dwm\dcomp\winrtnested\wrtcompositiondrawingsurface.cpp(99)\dcomp.dll!00007FFF761849A6: (caller: 00007FFF761248F1) ReturnHr(3) tid(c78) 80070057 Parâmetro incorreto.
...
onecoreuap\windows\dwm\dcomp\winrtnested\wrtcompositiondrawingsurface.cpp(99)\dcomp.dll!00007FFF761849A6: (caller: 00007FFF761248F1) ReturnHr(19) tid(c78) 80070057 Parâmetro incorreto.
onecoreuap\windows\dwm\dcomp\winrtnested\wrtcompositiondrawingsurface.cpp(99)\dcomp.dll!00007FFF761849A6: (caller: 00007FFF761248F1) ReturnHr(20) tid(c78) 80070057 Parâmetro incorreto.
Code: 0x4aa90057 (level=2)
Message: Starting UI navigation.
Details: Starting navigation to https://login.microsoftonline.com/login.srf
Logged at webuicontrollerwebview.cpp, line: 265, method: WebUIControllerWebView::OnNavigationStarting.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://api.spaces.skype.com, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
(1d5c.c78): C++ EH exception - code e06d7363 (first chance)
...
(1d5c.c78): C++ EH exception - code e06d7363 (first chance)
Code: 0x4aa90057 (level=2)
Message: Starting UI navigation.
Details: Starting navigation to ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
Logged at webuicontrollerwebview.cpp, line: 265, method: WebUIControllerWebView::OnNavigationStarting.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://api.spaces.skype.com, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
Code: 0xcaa500ce (level=2)
Message: User requested add account.
Details: Logged at appuitokenrequest.cpp, line: 322, method: AppUITokenRequest::ProcessAuthCodeResponse.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://api.spaces.skype.com, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
Code: 0x4aa90011 (level=2)
Message: UI flow started. 
Details: StartUI Url: https://login.microsoftonline.com/common/sso/progress?stage=Closing
 Headers: client-request-id:5c9b324a-fdd9-4920-8bf9-125942e76e5c
return-client-request-id:true
tb-aad-env-id:10.0.18362.329
tb-aad-device-family:3
. Secure Header is not sent
Logged at webuitokenrequest.cpp, line: 250, method: WebUITokenRequest::StartUI.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://api.spaces.skype.com, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
Code: 0xcaa500ce (level=0)
Message: User requested add account.
Details: UI flow is completed with error
Logged at webuitokenrequest.cpp, line: 180, method: WebUITokenRequest::FinalizeUIFlow.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://api.spaces.skype.com, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
Code: 0x4aa90011 (level=2)
Message: UI flow started. 
Details: StartUI Url: https://login.microsoftonline.com/common/oauth2/authorize?response_type=code id_token&client_id=29d9ed98-a469-4536-ade2-f981bc1d605e&redirect_uri=ms-appx-web://Microsoft.AAD.BrokerPlugin/DRS&instance_aware=true&nonce=0f3fa7e2-5f74-4abf-96be-cb866d25947d&resource=01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9&add_account=noheadsup&scope=openid&login_hint=dev@dlp.os33dev.com&response_mode=form_post&windows_api_version=2.0
 Headers: client-request-id:5c9b324a-fdd9-4920-8bf9-125942e76e5c
return-client-request-id:true
tb-aad-env-id:10.0.18362.329
tb-aad-device-family:3
. Secure Header is not sent
Logged at webuitokenrequest.cpp, line: 250, method: WebUITokenRequest::StartUI.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
Code: 0x4aa90057 (level=2)
Message: Starting UI navigation.
Details: Starting navigation to https://login.microsoftonline.com/common/oauth2/authorize
Logged at webuicontrollerwebview.cpp, line: 265, method: WebUIControllerWebView::OnNavigationStarting.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
(1d5c.c78): C++ EH exception - code e06d7363 (first chance)
...
(1d5c.1a2c): C++ EH exception - code e06d7363 (first chance)
Code: 0x4aa90057 (level=2)
Message: Starting UI navigation.
Details: Starting navigation to ms-appx-web://Microsoft.AAD.BrokerPlugin/DRS
Logged at webuicontrollerwebview.cpp, line: 265, method: WebUIControllerWebView::OnNavigationStarting.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
ModLoad: 00007fff`64040000 00007fff`64299000   C:\Windows\System32\msxml6.dll
Code: 0x4aa90010 (level=2)
Message: Sending web request
Details: Sending request to https://login.microsoftonline.com/common/oauth2/token
Logged at oauthtokenrequestbase.cpp, line: 213, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
(1d5c.c78): C++ EH exception - code e06d7363 (first chance)
(1d5c.c78): C++ EH exception - code e06d7363 (first chance)
(1d5c.c78): C++ EH exception - code e06d7363 (first chance)
Code: 0x4aa9000f (level=2)
Message: Sending request completed successfully
Details: Logged at oauthtokenrequestbase.cpp, line: 407, method: OAuthTokenRequestBase::ProcessOAuthResponse.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
Code: 0x4aa9003c (level=2)
Message: Redeeming device registration auth code on access token succeeded.
Details: Logged at webuitokenrequest.cpp, line: 116, method: WebUITokenRequest::ProcessSecondaryTokenResponse.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
Code: 0x4aa500fc (level=2)
Message: User accepted the MDM checkbox option.
Details: Logged at addaccounttokenrequest.cpp, line: 201, method: AddAccountTokenRequest::StartMDM.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
ModLoad: 00007fff`65720000 00007fff`65806000   C:\Windows\System32\Windows.Internal.Management.dll
ModLoad: 00007fff`56970000 00007fff`5699a000   C:\Windows\SYSTEM32\DMCmnUtils.dll
ModLoad: 00007fff`6a790000 00007fff`6a7c9000   C:\Windows\System32\UserDeviceRegistration.dll
ModLoad: 00007fff`67740000 00007fff`67772000   C:\Windows\System32\Windows.Energy.dll
Code: 0x4aa90011 (level=2)
Message: UI flow started. 
Details: StartUI Url: https://login.microsoftonline.com/common/sso/progress?stage=AddAccount
 Headers: client-request-id:5c9b324a-fdd9-4920-8bf9-125942e76e5c
return-client-request-id:true
tb-aad-env-id:10.0.18362.329
tb-aad-device-family:3
. Secure Header is not sent
Logged at webuitokenrequest.cpp, line: 250, method: WebUITokenRequest::StartUI.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
Code: 0x4aa50028 (level=2)
Message: Start system modification.
Details: Logged at addaccountprovisiondevicetask.cpp, line: 54, method: AddAccountProvisionDeviceTask::Invoke.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
(1d5c.970): C++ EH exception - code e06d7363 (first chance)
Code: 0x4aa500a3 (level=2)
Message: Starting device registration.
Details: Logged at provision.cpp, line: 167, method: Provision::RegisterDevice.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
(1d5c.c78): C++ EH exception - code e06d7363 (first chance)
(1d5c.c78): C++ EH exception - code e06d7363 (first chance)
(1d5c.c78): C++ EH exception - code e06d7363 (first chance)
(1d5c.c78): C++ EH exception - code e06d7363 (first chance)
(1d5c.1a2c): C++ EH exception - code e06d7363 (first chance)
(1d5c.c78): C++ EH exception - code e06d7363 (first chance)
(1d5c.c78): C++ EH exception - code e06d7363 (first chance)
(1d5c.c78): C++ EH exception - code e06d7363 (first chance)
Code: 0x4aa5002b (level=2)
Message: Device is registered.
Details: Logged at addaccountprovisiondevicetask.cpp, line: 203, method: AddAccountProvisionDeviceTask::RegisterDevice.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
Code: 0x4aa90010 (level=2)
Message: Sending web request
Details: Sending request to https://login.microsoftonline.com/common/oauth2/token
Logged at oauthtokenrequestbase.cpp, line: 213, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/DRS, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
Code: 0x4aa9000f (level=2)
Message: Sending request completed successfully
Details: Logged at oauthtokenrequestbase.cpp, line: 218, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/DRS, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
ModLoad: 00007fff`71f20000 00007fff`71f9a000   C:\Windows\SYSTEM32\cryptngc.dll
Code: 0x4aa9000f (level=2)
Message: Sending request completed successfully
Details: Logged at oauthtokenrequestbase.cpp, line: 407, method: OAuthTokenRequestBase::ProcessOAuthResponse.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/DRS, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
Code: 0x4aa9000a (level=2)
Message: Access token was renewed by refresh token
Details: Logged at refreshtokenrequest.cpp, line: 143, method: RefreshTokenRequest::AcquireToken.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/DRS, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
Code: 0x4aa5002c (level=2)
Message: Initialization data downloaded.
Details: Logged at addaccountprovisiondevicetask.cpp, line: 253, method: AddAccountProvisionDeviceTask::RequestPRT.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
Code: 0x4aa5002d (level=2)
Message: No MDM needed.
Details: Logged at addaccountprovisiondevicetask.cpp, line: 310, method: AddAccountProvisionDeviceTask::ProcessMDM.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
Code: 0x4aa50030 (level=2)
Message: Getting device access token.
Details: Logged at addaccountprovisiondevicetask.cpp, line: 313, method: AddAccountProvisionDeviceTask::ProcessMDM.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
Code: 0x4aa50013 (level=2)
Message: Writing to file succeeded.
Details: File name: 'C:\Users\Administrador\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_0b65m33vanf4eg60gf0pncrt\p_g7m2ag339emk5tr0k5uuafh1', Size: 2555 bytes
Logged at clientcache.cpp, line: 1052, method: ClientCache::SerializeToFile.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/DRS
ModLoad: 00007fff`77d30000 00007fff`77d72000   C:\Windows\SYSTEM32\logoncli.dll
(1d5c.970): Unknown exception - code 000006d9 (first chance)
ModLoad: 00007fff`742f0000 00007fff`74305000   C:\Windows\SYSTEM32\usermgrcli.dll
Code: 0x4aa50029 (level=2)
Message: System modification completed successfully.
Details: Logged at addaccountprovisiondevicetask.cpp, line: 79, method: AddAccountProvisionDeviceTask::Invoke.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
Code: 0x4aa50035 (level=2)
Message: No NGC needed.
Details: Logged at addaccounttokenrequest.cpp, line: 1129, method: AddAccountTokenRequest::StartNgcUiStep.

Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
Breakpoint 1 hit
SspiCli!LsaLookupAuthenticationPackage:
00007fff`785e2f90 488bc4          mov     rax,rsp
0:035> ~*kvn

35  Id: 1d5c.970 Suspend: 1 Teb: 00000070`2e9e2000 Unfrozen
 # Child-SP          RetAddr           : Args to Child                                                           : Call Site
00 00000070`30cff218 00007fff`493e6e9f : 00000070`30cff5f0 00b5948f`00000000 00007fff`0000000c 00000000`00000000 : SspiCli!LsaLookupAuthenticationPackage
01 00000070`30cff220 00007fff`49396903 : 00007fff`49548f2a 00007fff`49548f2a 00000247`a9fd0200 0000024f`afee0a28 : AAD_Core!DefaultUser::TryOpen+0x17f
02 00000070`30cff550 00007fff`493ba235 : 00000000`00000000 00007fff`7b53494b 0000024f`afee0a00 00007fff`7b85fcee : AAD_Core!<lambda_5e52803d257baaaa72110bc22e14dce4>::operator()+0xe3
03 00000070`30cff710 00007fff`493b9d31 : 0000024f`afee0a00 00000247`a9fd0470 0000024f`afee0a00 00000247`a9fd0200 : AAD_Core!Concurrency::task<ADALRT::AuthorizationClient ^>::_InitialTaskHandle<ADALRT::AuthorizationClient ^,<lambda_5e52803d257baaaa72110bc22e14dce4>,Concurrency::details::_TypeSelectorAsyncTask>::_Init+0x25
04 00000070`30cff760 00007fff`49325ce1 : 00000000`00000001 0000024f`afee0a00 00000000`00000000 00000070`30cffb68 : AAD_Core!Concurrency::details::_PPLTaskHandle<ADALRT::AuthorizationClient ^,Concurrency::task<ADALRT::AuthorizationClient ^>::_InitialTaskHandle<ADALRT::AuthorizationClient ^,<lambda_5e52803d257baaaa72110bc22e14dce4>,Concurrency::details::_TypeSelectorAsyncTask>,pplx::details::_UnrealizedChore>::operator()+0x81
05 00000070`30cff7d0 00007fff`4933d1b4 : 0000024f`afee0a00 00000000`00000001 00000000`0000022c 00000000`00000001 : AAD_Core!Custom::_RunChoreBridge+0x21
06 00000070`30cff810 00007fff`6ba2417a : 00000247`a9fd0460 00000000`00000000 ffffffff`fffffffe 00000009`a9fd0470 : AAD_Core!Windows::System::Threading::WorkItemHandler::[Windows::System::Threading::WorkItemHandler::__abi_IDelegate]::__abi_Windows_System_Threading_WorkItemHandler___abi_IDelegate____abi_Invoke+0x34
07 00000070`30cff850 00007fff`6ba24078 : 00000000`00000000 0000024f`b04a23d0 0000024f`b04e52e8 00000000`00000000 : threadpoolwinrt!Windows::System::Threading::CThreadPoolWorkItem::CommonWorkCallback+0xaa
08 00000070`30cff8c0 00007fff`7b85089d : 0000024f`b04e5220 00000000`00000000 00000070`30cffb68 0000024f`b04e52e8 : threadpoolwinrt!Windows::System::Threading::CThreadPoolWorkItem::BatchedCallback+0x88
09 00000070`30cff900 00007fff`7b854634 : 00000000`00000000 0000024f`b0f399b0 00000000`00000000 00000000`00000000 : ntdll!TppWorkpExecuteCallback+0xad
0a 00000070`30cff950 00007fff`7a817bd4 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : ntdll!TppWorkerThread+0x8d4
0b 00000070`30cffd10 00007fff`7b88ced1 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : KERNEL32!BaseThreadInitThunk+0x14
0c 00000070`30cffd40 00000000`00000000 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : ntdll!RtlUserThreadStart+0x21

  36  Id: 1d5c.1a9c Suspend: 1 Teb: 00000070`2e9e4000 Unfrozen
 # Child-SP          RetAddr           : Args to Child                                                           : Call Site
00 00000070`30dfe768 00007fff`78bc8ba3 : 0000024f`afbd8670 0000024f`afbb0600 00000247`a9fd0200 00007fff`7b542c02 : ntdll!NtWaitForSingleObject+0x14
01 00000070`30dfe770 00007fff`49327250 : 00000247`a9fd0540 00000000`00000000 0000024f`00000000 00000000`00000f84 : KERNELBASE!WaitForSingleObjectEx+0x93
02 00000070`30dfe810 00007fff`49379cbf : 00000070`30dfe864 00000000`00000000 0000c34b`94f2c6f7 00000000`00000000 : AAD_Core!Concurrency::details::_Task_impl_base::_Wait+0x40
03 00000070`30dfe880 00007fff`49407dda : 00000000`00000000 0000024f`c45931e8 0000024f`c45931e8 00000070`30dfe9b9 : AAD_Core!Concurrency::task<ADALRT::AuthorizationClient ^ __ptr64>::get+0x1f
04 00000070`30dfe8f0 00007fff`49403082 : 00000247`a9f96e10 00000000`00000000 00000000`00000000 00007fff`4954dbaa : AAD_Core!AuthenticationContext::UpdateFromCache+0x1fa
05 00000070`30dfea20 00007fff`4944e892 : 0000024f`afee15c0 00000247`a9c30000 0000024f`afeee798 00007fff`4955210a : AAD_Core!AuthenticationContext::CompleteRequest+0x272
06 00000070`30dfefe0 00007fff`494867da : 0000024f`afee15c0 00007fff`00000000 00000247`a9f96e10 00000000`00000000 : AAD_Core!OAuthTokenRequestBase::CompleteRequest+0x212
07 00000070`30dff0a0 00007fff`494d5af7 : 00000247`a9ff96c0 00000247`a9f96e10 00000247`a9ff96c0 00007fff`4932346f : AAD_Core!`WebUITokenRequest::CompleteUIResponse'::`2'::Task::Invoke+0x4a
08 00000070`30dff1b0 00007fff`494d58b2 : 0000024f`afee10e0 00007fff`7b534b12 0000024f`afb75af8 00000000`00000000 : AAD_Core!std::_Func_impl<std::_Callable_obj<<lambda_85591937629c5500ed40abba159d2776>,0>,std::allocator<std::_Func_class<ITask *,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >,ITask *,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::_Do_call+0x37
09 00000070`30dff200 00007fff`494d57b1 : 00000070`30dff228 00000247`00000001 0000024f`afee10e0 00000247`a9fd18c0 : AAD_Core!Concurrency::task<ITask *>::_InitialTaskHandle<ITask *,<lambda_85591937629c5500ed40abba159d2776>,Concurrency::details::_TypeSelectorNoAsync>::_Init+0xe2
0a 00000070`30dff280 00007fff`49325ce1 : 00000000`00000001 0000024f`afee10e0 00000000`00000000 00000070`30dff688 : AAD_Core!Concurrency::details::_PPLTaskHandle<ITask *,Concurrency::task<ITask *>::_InitialTaskHandle<ITask *,<lambda_85591937629c5500ed40abba159d2776>,Concurrency::details::_TypeSelectorNoAsync>,pplx::details::_UnrealizedChore>::operator()+0x81
0b 00000070`30dff2f0 00007fff`4933d1b4 : 0000024f`afee10e0 00000000`00000001 00000000`0000022c 00000000`00000001 : AAD_Core!Custom::_RunChoreBridge+0x21
0c 00000070`30dff330 00007fff`6ba2417a : 00000247`a9fd14a0 00000000`00000000 ffffffff`fffffffe 00000009`a9fd0af0 : AAD_Core!Windows::System::Threading::WorkItemHandler::[Windows::System::Threading::WorkItemHandler::__abi_IDelegate]::__abi_Windows_System_Threading_WorkItemHandler___abi_IDelegate____abi_Invoke+0x34
0d 00000070`30dff370 00007fff`6ba24078 : 0000024f`00000000 0000024f`c4558a60 0000024f`b04e4c58 00000000`00000000 : threadpoolwinrt!Windows::System::Threading::CThreadPoolWorkItem::CommonWorkCallback+0xaa
0e 00000070`30dff3e0 00007fff`7b85089d : 0000024f`b04e4b90 00000000`00000000 00000070`30dff688 0000024f`b04e4c58 : threadpoolwinrt!Windows::System::Threading::CThreadPoolWorkItem::BatchedCallback+0x88
0f 00000070`30dff420 00007fff`7b854634 : 00000000`00000000 0000024f`b0f3a710 00000000`00000000 00000000`00000001 : ntdll!TppWorkpExecuteCallback+0xad
10 00000070`30dff470 00007fff`7a817bd4 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : ntdll!TppWorkerThread+0x8d4
11 00000070`30dff830 00007fff`7b88ced1 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : KERNEL32!BaseThreadInitThunk+0x14
12 00000070`30dff860 00000000`00000000 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : ntdll!RtlUserThreadStart+0x21
```

= Trying to use Fiddler
:date: 2023-07-31
:tags: tag_venn tag_reversing

Following the advice from Alexander Chermyanin, I tried to use Fiddler to capture HTTPS traffic and discover the receiving packet(s) from AAD service, but when it is enabled Teams refuse to continue authentication, giving an error. AAD Broker plugin receives similar error.

fiddler_error_teams.png

fiddler_error_aad_broker.png

Now I am trying to use WireShark with SSLKEYLOGFILE to capture master keys and analyze HTTPS traffic. I am receving too many out of order packets in TCP. Trying to figure out why.

= What do we know about AAD Broker (Teams login)
:date: 2023-08-01
:tags: tag_venn tag_reversing

Summary of lastest research:

## What do we know about AAD Broker (Teams login)

BlockAADWorkplaceJoin as a viable part of the solution of isolate credentials.
There is a Lsa call to package "CloudAP" but after PRT is already in the system.
Communication with DmEnrollmentSvc exists but it is not relevant to token storage.
Debugging sessions revealed PRT communication code in AAD Broker could have some antidebug technique based on exception.

## What do we have to know yet

Where is the HTTPS response with the PRT.
How to decode/decrypt the token (we know it is JWT like).
How to avoid registering in the system (in code, not using BlockAADWorkplaceJoin policy).

= Bypass some exceptions
:date: 2023-08-01
:tags: tag_venn tag_reversing

About Fiddler and Wireshark monitoring, both of them are not a viable option.

Teams and AAD Broker have some anti sniffing that blocks communication with live.microsoft.com when Fiddler proxy is on.

Despite setting SSLKEYLOGFILE being set and Teams.exe in fact wrote some secret keys in the file the AAD communication is unable to be opened by Wireshark, so I think for this session the secret file is not populated by any of those tools (tested with BlockAADWorkplaceJoin and without).

What we know about network communication for the moment is not enough to detect the token inside any analyzed thread from the components.


Today I Bypass some exceptions occurring in `AddAccountProvisionDeviceTask::RegisterDevice` method and went forward in the registration process. After the method `AddAccountProvisionDeviceTask::RegisterDevice` calls `Provision::RegisterDevice` the command `dsregcmd.exe /status` shows the device as joined. After the method `AAD_Core!Provision::DRSEnroll::RegisterDevice` is called `dsregcmd` shows the device joined.

However, the function that is called and after that the computer is joined in AAD is `AAD_Core!Windows::Internal::UserDeviceRegistration::UserDeviceRegManager::WorkplaceJoin`. This method calls the interface method `AAD_Core!Windows::Internal::UserDeviceRegistration::IUserDeviceRegManagerStatics::WorkplaceJoin`, that is called using a proxy. It is a out of process implementation.

That is the next step. I am getting closer.

IUserDeviceRegManagerStatics
__FIMap_2_HSTRING_Windows__CStorage__CApplicationDataContainer
{b56241e6-507b-5cd7-b9c3-297bcbd5bcef}
{11659a23-5884-4d1b-9cf6-67d6f4f90b36}
{65704743-2513-4987-9fc9-826bbedde743}
{7B6C4BA8-7FFF-0000-484B-6C7BFF7F0000}
{58A08519-24C8-4935-B482-3FD823333A4F}
IRpcSyntaxNegotiate

= Walking down IUserDeviceRegManagerStatics
:date: 2023-08-02
:tags: tag_venn tag_reversing

Today I was walking down the `IUserDeviceRegManagerStatics` interface to understand WinRT activation and discover the real implementation. There is a registry entry for it in `HKEY_CLASSES_ROOT\Interface\{b5decd05-58ef-4cd3-ae25-d177bcbcea9e}` where there is a subkey `ProxyStubClsid32`. This subkey, accordingly with [MSDN](https://learn.microsoft.com/en-us/windows/win32/com/proxystubclsid32), is used as a translation between an IID to a CLSID ("Maps an IID to a CLSID in 32-bit proxy DLLs").

>
> If you add interfaces, you must use this entry to register them (32-bit systems) so that OLE can find the appropriate remoting code to establish interprocess communication.
>

I believe the same logic applies to 64 bits environment.

So that ID is a CLSID to a proxy code that will help me to call this interface. The default value inside this subkey is `{65704743-2513-4987-9fc9-826bbedde743}` and I must search into the `HKEY_CLASSES_ROOT\CLSID` key. I found it. The default value says "UserDeviceRegistration", so I think this is the guy.

There is a `InProcServer32` subkey into this key. This key, accordingly with [MSDN](https://learn.microsoft.com/en-us/windows/win32/com/inprocserver32):

>
> Registers a 32-bit in-process server and specifies the threading model of the apartment the server can run in.
>

What makes sense because the default value for this key is "C:\Windows\System32\UserDeviceRegistration.dll" and there is a `ThreadingModel` string entry specifying "Both". This DLL has the well known entries `DllCanUnloadNow`, `DllGetActivationFactory` and `DllGetClassObject`. This is COM 101. The code that want to use this interface must load this DLL and call `DllGetActivationFactory` or `DllGetClassObject` to get a pointer to a class implementing this interface and call it.

Using OleView for the `IUserDeviceRegManagerStatics` there is not a type library with method names and argument names. There is a generic vtable with some processes numbered "Proc1", "Proc2" and so on with some generic arguments as well.

Since from my last debugging session I saw RPC functions being called by the code I am analysing, I am going to assume `UserDeviceRegistration!DllGetActivationFactory` is being called. Accordingly with [MSDN](https://learn.microsoft.com/en-us/previous-versions/br205771(v=vs.85)), this entry point:

>
> Retrieves the activation factory from a DLL that contains activatable Windows Runtime classes.
>

The result of this function must be a pointer to the `IActivationFactory` interface. The input argument is a `HSTRING`, that is [the new string](https://learn.microsoft.com/en-gb/windows/win32/winrt/hstring?redirectedfrom=MSDN) from Windows Runtime. It represents an immutable string in the API.

That explains why I saw a lot of calls to `WindowsDeleteString` in the `AAD_Core!Windows::Internal::UserDeviceRegistration::UserDeviceRegManager::WorkplaceJoin` assembly.

So in my next debug sessions I put the breakpoint in the loading event for this DLL:

```
sxe ld:UserDeviceRegistration.dll
```

We run and the DLL is loaded during the device registration:

```
Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
Code: 0x4aa500fc (level=2)
Message: User accepted the MDM checkbox option.
Details: Logged at addaccounttokenrequest.cpp, line: 201, method: AddAccountTokenRequest::StartMDM.
Request: authority: https://login.microsoftonline.com/common, client: 29d9ed98-a469-4536-ade2-f981bc1d605e, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin, resource: 01cb2876-7ebd-4aa4-9cc9-d28bd4d359a9, correlation ID (request): 5c9b324a-fdd9-4920-8bf9-125942e76e5c
ModLoad: 00007fff`509c0000 00007fff`50aa6000   C:\Windows\System32\Windows.Internal.Management.dll
ModLoad: 00007fff`56970000 00007fff`5699a000   C:\Windows\SYSTEM32\DMCmnUtils.dll
ModLoad: 00007fff`676c0000 00007fff`676f9000   C:\Windows\System32\UserDeviceRegistration.dll
ntdll!NtMapViewOfSection+0x14:
00007fff`7b8bc5c4 c3              ret
```

The code needs to call another function first, the `UserDeviceRegManager::IsDeviceJoined`:

```
09 KERNELBASE!LoadLibraryExW+0x170
0a combase!LoadLibraryWithLogging+0x2c [loadfree.cxx @ 160] 
0b combase!CClassCache::CDllPathEntry::LoadDll+0x56 [dllcache.cxx @ 2237] 
0c combase!CClassCache::CDllPathEntry::Create+0x58 [dllcache.cxx @ 2066] 
0d combase!CClassCache::CClassEntry::CreateDllClassEntry+0xf7 [dllcache.cxx @ 1042] 
0e combase!CClassCache::GetClassObjectActivator+0x4e0 [dllcache.cxx @ 5232] 
0f combase!CClassCache::GetClassObject+0x45 [dllcache.cxx @ 4998] 
10 combase!ICoGetClassObject+0x726 [objact.cxx @ 1306] 
11 combase!GetPSFactoryInternal+0x1f8 [riftbl.cxx @ 2568] 
12 combase!GetPSFactory+0x23 [riftbl.cxx @ 2610] 
13 combase!CStdMarshal::GetPSFactory+0x23 [marshal.cxx @ 6340] 
14 combase!CStdMarshal::CreateProxy+0xc6 [marshal.cxx @ 6421] 
15 combase!CStdMarshal::MakeCliIPIDEntry+0x69 [marshal.cxx @ 2771] 
16 combase!CStdMarshal::UnmarshalIPID+0x7c [marshal.cxx @ 2335] 
17 combase!CStdMarshal::Finish_RemQIAndUnmarshal1+0x159 [marshal.cxx @ 5802] 
18 combase!CStdMarshal::Finish_RemQIAndUnmarshal+0x18 [marshal.cxx @ 5597] 
19 combase!CStdMarshal::Finish_QueryRemoteInterfaces+0x24 [marshal.cxx @ 5492] 
1a combase!CStdMarshal::QueryRemoteInterfaces+0x15d [marshal.cxx @ 5415] 
1b combase!CStdIdentity::CInternalUnk::QueryMultipleInterfaces+0x19c [stdid.cxx @ 752] 
1c combase!CStdIdentity::CInternalUnk::QueryInterface+0x1e4 [stdid.cxx @ 427] 
1d wincorlib!GetActivationFactoryByPCWSTR+0x1dc
1e AAD_Core!Windows::Internal::UserDeviceRegistration::UserDeviceRegManager::IsDeviceJoined+0x5b
1f AAD_Core!AddAccountTokenRequest::StartMDM+0x1fb
20 AAD_Core!AddAccountTokenRequest::OnStateChanged+0x27b
21 AAD_Core!WebUITokenRequest::OnAuthCodeChangeDone+0xb6
```

Now I can put a breakpoint to `DllGetActivationFactory`:

```
bp UserDeviceRegistration!DllGetActivationFactory
```

At this moment I recall that I can use Process Explorer to search system wide for processes using the same DLL. And, surprise, I found that `RuntimeBroker.exe` is using it.

UserDeviceRegistration.png

That means I can debug `RuntimeBroker.exe` and use the symbols from `UserDeviceRegistration` to find what method is going to be called remotely, what I believe is `CUserDeviceRegManagerStatic::WorkplaceJoin`.

```
0:005> .reload /f UserDeviceRegistration.dll
0:005> x UserDeviceRegistration!*
... tons of symbols and
00007fff`676c6090 UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::WorkplaceJoin (<no parameter info>)
...
```

The first try the breakpoint didn't triggered, so I took a look in other methods and saw an async one and a `WorkplaceJoinWithRequestId`, too. To get all of them I put a `mb` to every methods of this class and interface into the AAD Broker and the Runtime Broker to see what is called. The AAD Broker didn't trigger and so I realize the breakpoints that must be set in client are of the interface, not the class implementation. This is a remote call.

So in Runtime Broker, where the implementation is going to be called:

```
x UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::*
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::ActivateInstance ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::ActivateInstance; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::DelegatedWorkplaceJoin ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::DelegatedWorkplaceJoin; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::DelegatedWorkplaceJoinWithRequestId ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::DelegatedWorkplaceJoinWithRequestId; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::Discover ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::Discover; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::DiscoverAsync ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::DiscoverAsync; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::DiscoverWithRequestId ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::DiscoverWithRequestId; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::GetJoinInfo ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::GetJoinInfo; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::IsDeviceJoined ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::IsDeviceJoined; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::IsDeviceJoinedAndCompleted ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::IsDeviceJoinedAndCompleted; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::IsWorkplaceJoined ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::IsWorkplaceJoined; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::IsWorkplaceJoinedAndCompleted ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::IsWorkplaceJoinedAndCompleted; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::SaveDeviceTokenProperties ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::SaveDeviceTokenProperties; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::SaveWorkplaceTokenProperties ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::SaveWorkplaceTokenProperties; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::SignHash ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::SignHash; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::SignHashAsync ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::SignHashAsync; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::WorkplaceJoin ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::WorkplaceJoin; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::WorkplaceJoinAsync ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::WorkplaceJoinAsync; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::WorkplaceJoinWithRequestId ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::WorkplaceJoinWithRequestId; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::WorkplaceUnjoin ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::WorkplaceUnjoin; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::WorkplaceUnjoinAsync ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::WorkplaceUnjoinAsync; g"
bp UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::WorkplaceUnjoinWithRequestId ".echotime; .echo UserDeviceRegistration!Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic::WorkplaceUnjoinWithRequestId; g"
```

And in AAD Broker, where the interface is going to call Runtime Broker remotely:

```
x AAD_Core!Windows::Internal::UserDeviceRegistration::IUserDeviceRegManagerStatics*
bp AAD_Core!Windows::Internal::UserDeviceRegistration::IUserDeviceRegManagerStatics::DelegatedWorkplaceJoin ".echotime; .echo AAD_Core!Windows::Internal::UserDeviceRegistration::IUserDeviceRegManagerStatics::DelegatedWorkplaceJoin; g"
bp AAD_Core!Windows::Internal::UserDeviceRegistration::IUserDeviceRegManagerStatics::WorkplaceJoin ".echotime; .echo AAD_Core!Windows::Internal::UserDeviceRegistration::IUserDeviceRegManagerStatics::WorkplaceJoin; g"
bp AAD_Core!Windows::Internal::UserDeviceRegistration::IUserDeviceRegManagerStatics::WorkplaceUnjoin ".echotime; .echo AAD_Core!Windows::Internal::UserDeviceRegistration::IUserDeviceRegManagerStatics::WorkplaceUnjoin; g"
bp AAD_Core!Windows::Internal::UserDeviceRegistration::IUserDeviceRegManagerStatics::GetJoinInfo ".echotime; .echo AAD_Core!Windows::Internal::UserDeviceRegistration::IUserDeviceRegManagerStatics::GetJoinInfo; g"
bp AAD_Core!Windows::Internal::UserDeviceRegistration::IUserDeviceRegManagerStatics::Discover ".echotime; .echo AAD_Core!Windows::Internal::UserDeviceRegistration::IUserDeviceRegManagerStatics::Discover; g"
```

Based on the output from WinDbg I was able to trace a sequence diagram between these components and analyzed the static assembly I could understand that the structure that must be analyzed now is the `UserDeviceRegistration::ExtendedTokenProperties`, passed from BrokerPlugin to RuntimeBroker.

= Summary of discoveries and tasks
:date: 2023-08-03
:tags: tag_venn tag_reversing

 - BrokerPlugin calls calls Lsa package "CloudAP" after PRT is already in the system.
 - BlockAADWorkplaceJoin policy is a viable part of the solution of isolate credentials.
 - Communication between BrokerPlugin and DmEnrollmentSvc exists but it is not relevant to token storage.
 - Packet sniffing by Fiddler is not possible due to some system detection.
 - Besides, no master keys are recorded using SSLKEYLOGFILE by BrokerPlugin.
 - Documented BrokerPlugin flow based on debug output messages.
 - RuntimeBroker is responsible for computer joining process system wide (the called "MDM" process).
 - Sequence diagram between BrokerPlugin and RuntimeBroker for the "MDM" process (joining computer to AAD).

=# What has to be done yet

 - Decode ExtendedTokenProperties structure passed to RuntimeBroker.
 - Proof of concept isolating token spread during join process.

Readingt the article [Troubleshoot devices by using the dsregcmd command](https://learn.microsoft.com/en-us/azure/active-directory/devices/troubleshoot-device-dsregcmd) that Gabriel sent me I realized that after login to Teams and computer joined to AAD the PRT in SSO state is not available.

```
>dsregcmd.exe /status

+----------------------------------------------------------------------+
| SSO State                                                            |
+----------------------------------------------------------------------+

                AzureAdPrt : NO
       AzureAdPrtAuthority : NO
             EnterprisePrt : NO
    EnterprisePrtAuthority : NO
```

More than that, there was a note about the PRT diagnostics fields being added in Win 10 in the May 2021 update. I am using Windows 1909 in this investigation, so I need to update to a newer version to understand the changes in this process. Either way, in order to aquire a PRT a device [need to be registered](https://learn.microsoft.com/en-us/azure/active-directory/devices/concept-primary-refresh-token) ("What is a Primary Refresh Token?", section "How is a PRT issued?").

>
> Device registration is a prerequisite for device based authentication in Azure AD. A PRT is issued to users only on registered devices.
>

Reading the article [Mobile Device Management overview](https://learn.microsoft.com/en-us/windows/client-management/mdm-overview) sent by Gabriel. Now the MDM abbreviation used in function names for the communication in BrokerPlugin and RuntimeBroker makes sense. That is a [protocol](https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-mde2/4d7eadd5-3951-4f1c-8159-c39e07cbe692) used by Windows in several scenarios, including:

 - Restricting remote access to devices.
 - Setting credential requirements for passwords and PINs.

Analysing `UserDeviceRegistration.dll` methods and types. Found two relevant methods for storage/cache in `Windows::Internal::UserDeviceRegistration::CUserDeviceRegManagerStatic`: `SaveDeviceTokenProperties` and `SaveWorkplaceTokenProperties`, but I am not sure if they refer to PRT; probably not (look above comment about PRT prerequisite).

There is also a global function whose parameters are rather suspicious. It could be used by RuntimeBroker in remote communication, considering the last parameter.

```
WorkplaceJoin(ushort const *,_DSREG_EXT_TOKEN_PROPERTIES * const,_DISCOVERY_METADATA *,ushort const *,int,Windows::Internal::UserDeviceRegistration::ServerResponse *)
```

Reading about PRT while updating Windows to make new tests and compare with previous version. Dsregcmd must give more details about token acquire.

= Installed Windows 22H2
:date: 2023-08-07
:tags: tag_venn tag_reversing

Installed Windows 22H2 and starting same tests in the new environment. Output of `dsregcmd.exe /status` is more detailed. Bellow the pre join:

```
+----------------------------------------------------------------------+
| Device State                                                         |
+----------------------------------------------------------------------+

             AzureAdJoined : NO
          EnterpriseJoined : NO
              DomainJoined : NO
               Device Name : VMW10H2

+----------------------------------------------------------------------+
| User State                                                           |
+----------------------------------------------------------------------+

                    NgcSet : NO
           WorkplaceJoined : NO
             WamDefaultSet : NO

+----------------------------------------------------------------------+
| SSO State                                                            |
+----------------------------------------------------------------------+

                AzureAdPrt : NO
       AzureAdPrtAuthority : NO
             EnterprisePrt : NO
    EnterprisePrtAuthority : NO

+----------------------------------------------------------------------+
| IE Proxy Config for Current User                                     |
+----------------------------------------------------------------------+

      Auto Detect Settings : YES
    Auto-Configuration URL :
         Proxy Server List :
         Proxy Bypass List :

+----------------------------------------------------------------------+
| WinHttp Default Proxy Config                                         |
+----------------------------------------------------------------------+

               Access Type : DIRECT

+----------------------------------------------------------------------+
| Ngc Prerequisite Check                                               |
+----------------------------------------------------------------------+

            IsDeviceJoined : NO
             IsUserAzureAD : NO
             PolicyEnabled : NO
          PostLogonEnabled : YES
            DeviceEligible : YES
        SessionIsNotRemote : YES
            CertEnrollment : none
              PreReqResult : WillNotProvision

For more information, please visit https://www.microsoft.com/aadjerrors
```

After joined:

```
+----------------------------------------------------------------------+
| Device State                                                         |
+----------------------------------------------------------------------+

             AzureAdJoined : NO
          EnterpriseJoined : NO
              DomainJoined : NO
               Device Name : VMW10H2

+----------------------------------------------------------------------+
| User State                                                           |
+----------------------------------------------------------------------+

                    NgcSet : NO
           WorkplaceJoined : YES
          WorkAccountCount : 1
             WamDefaultSet : NO

+----------------------------------------------------------------------+
| SSO State                                                            |
+----------------------------------------------------------------------+

                AzureAdPrt : NO
       AzureAdPrtAuthority : NO
             EnterprisePrt : NO
    EnterprisePrtAuthority : NO

+----------------------------------------------------------------------+
| Work Account 1                                                       |
+----------------------------------------------------------------------+

         WorkplaceDeviceId : 5c838931-7d14-4919-b98f-5ab25f45b1d2
       WorkplaceThumbprint : 028F22F088F21D611043F593C954BF1EA0937A9D
 DeviceCertificateValidity : [ 2023-08-04 20:15:28.000 UTC -- 2033-08-04 20:45:28.000 UTC ]
            KeyContainerId : 0e7d5a48-83e9-4949-97c5-11fd5ce2ead3
               KeyProvider : Microsoft Software Key Storage Provider
              TpmProtected : NO
              WorkplaceIdp : login.windows.net
         WorkplaceTenantId : 60bc6957-78ac-4ce4-922c-538277aaecc4
       WorkplaceTenantName : dlp
           WorkplaceMdmUrl :
      WorkplaceSettingsUrl :
                    NgcSet : NO

+----------------------------------------------------------------------+
| IE Proxy Config for Current User                                     |
+----------------------------------------------------------------------+

      Auto Detect Settings : YES
    Auto-Configuration URL :
         Proxy Server List :
         Proxy Bypass List :

+----------------------------------------------------------------------+
| WinHttp Default Proxy Config                                         |
+----------------------------------------------------------------------+

               Access Type : DIRECT

+----------------------------------------------------------------------+
| Ngc Prerequisite Check                                               |
+----------------------------------------------------------------------+

            IsDeviceJoined : NO
             IsUserAzureAD : NO
             PolicyEnabled : NO
          PostLogonEnabled : YES
            DeviceEligible : YES
        SessionIsNotRemote : YES
            CertEnrollment : none
              PreReqResult : WillNotProvision
```

But I installed a Windows Home and I afraid there is no option to login as a Windows account. I am going to install a Pro version.

Installed Windows 10 Pro and this time I chose to enter the email company during installation, what brought me the orange window login screen and a user from AAD authenticated. I skipped the, I believe, MDM process to configure using a phone or authenticator app and Windows logged in. When using the dsregcmd command the AzureAdPrt property was YES. I tried to get the output, so installed VMWare Tools and restart the VM, but in the login screen I wasn't able to type the user password that I used to the email. The user name is showing as "dev test" and the message is "The password is incorrect. Try again.".

wininstall_dlp_microsoft_authenticator.png

wininstall_dlp_after_reboot.png

My next test should be to install Windows again to copy the dsregcmd status.

Windows is now asking to join Windows Hello, what I did, following the [PRT requirements](https://learn.microsoft.com/en-us/azure/active-directory/devices/concept-primary-refresh-token):

> 
> Device registration is a prerequisite for device based authentication in Azure AD. A PRT is issued to users only on registered devices. For more in-depth details on device registration, see the article Windows Hello for Business and Device Registration. During device registration, the dsreg component generates two sets of cryptographic key pairs:
> 
> Device key (dkpub/dkpriv)
> Transport key (tkpub/tkpriv)
> The private keys are bound to the device’s TPM if the device has a valid and functioning TPM, while the public keys are sent to Azure AD during the device registration process. These keys are used to validate the device state during PRT requests.
> 

wininstall_dlp_hello.png

wininstall_dlp_hello_moreinfo.png

After making the authentication app and phone sms process I could login with the company account and got a Azure AD PRT, but not a Enterprise PRT.

```
+----------------------------------------------------------------------+
| Device State                                                         |
+----------------------------------------------------------------------+

             AzureAdJoined : YES
          EnterpriseJoined : NO
              DomainJoined : NO
               Device Name : DESKTOP-87ELB0Q

+----------------------------------------------------------------------+
| Device Details                                                       |
+----------------------------------------------------------------------+

                  DeviceId : e2f178eb-9e6c-4d9a-82dd-5e054de358cf
                Thumbprint : D89AB3CB644FA15510C372FB08183578F14DAB6D
 DeviceCertificateValidity : [ 2023-08-05 14:20:13.000 UTC -- 2033-08-05 14:50:13.000 UTC ]
            KeyContainerId : d73adeb4-4ed7-497f-8906-67d57b76fac5
               KeyProvider : Microsoft Software Key Storage Provider
              TpmProtected : NO
          DeviceAuthStatus : SUCCESS

+----------------------------------------------------------------------+
| Tenant Details                                                       |
+----------------------------------------------------------------------+

                TenantName : dlp
                  TenantId : 60bc6957-78ac-4ce4-922c-538277aaecc4
                       Idp : login.windows.net
               AuthCodeUrl : https://login.microsoftonline.com/60bc6957-78ac-4ce4-922c-538277aaecc4/oauth2/authorize
            AccessTokenUrl : https://login.microsoftonline.com/60bc6957-78ac-4ce4-922c-538277aaecc4/oauth2/token
                    MdmUrl :
                 MdmTouUrl :
          MdmComplianceUrl :
               SettingsUrl :
            JoinSrvVersion : 2.0
                JoinSrvUrl : https://enterpriseregistration.windows.net/EnrollmentServer/device/
                 JoinSrvId : urn:ms-drs:enterpriseregistration.windows.net
             KeySrvVersion : 1.0
                 KeySrvUrl : https://enterpriseregistration.windows.net/EnrollmentServer/key/
                  KeySrvId : urn:ms-drs:enterpriseregistration.windows.net
        WebAuthNSrvVersion : 1.0
            WebAuthNSrvUrl : https://enterpriseregistration.windows.net/webauthn/60bc6957-78ac-4ce4-922c-538277aaecc4/
             WebAuthNSrvId : urn:ms-drs:enterpriseregistration.windows.net
    DeviceManagementSrvVer : 1.0
    DeviceManagementSrvUrl : https://enterpriseregistration.windows.net/manage/60bc6957-78ac-4ce4-922c-538277aaecc4/
     DeviceManagementSrvId : urn:ms-drs:enterpriseregistration.windows.net

+----------------------------------------------------------------------+
| User State                                                           |
+----------------------------------------------------------------------+

                    NgcSet : YES
                  NgcKeyId : {554BF78B-8612-405B-A0C4-D94BA5B1CB7C}
                  CanReset : DestructiveOnly
           WorkplaceJoined : NO
             WamDefaultSet : YES
       WamDefaultAuthority : organizations
              WamDefaultId : https://login.microsoft.com
            WamDefaultGUID : {B16898C6-A148-4967-9171-64D755DA8520} (AzureAd)

+----------------------------------------------------------------------+
| SSO State                                                            |
+----------------------------------------------------------------------+

                AzureAdPrt : YES
      AzureAdPrtUpdateTime : 2023-08-05 14:50:35.000 UTC
      AzureAdPrtExpiryTime : 2023-08-19 14:58:49.000 UTC
       AzureAdPrtAuthority : https://login.microsoftonline.com/60bc6957-78ac-4ce4-922c-538277aaecc4
             EnterprisePrt : NO
    EnterprisePrtAuthority :
                 OnPremTgt : NO
                  CloudTgt : YES
         KerbTopLevelNames : .windows.net,.windows.net:1433,.windows.net:3342,.azure.net,.azure.net:1433,.azure.net:3342

+----------------------------------------------------------------------+
| Diagnostic Data                                                      |
+----------------------------------------------------------------------+

        AadRecoveryEnabled : NO
    Executing Account Name : AzureAD\devtest, dev@dlp.os33dev.com
               KeySignTest : PASSED

        DisplayNameUpdated : YES
          OsVersionUpdated : YES
           HostNameUpdated : YES

      Last HostName Update : NONE

+----------------------------------------------------------------------+
| IE Proxy Config for Current User                                     |
+----------------------------------------------------------------------+

      Auto Detect Settings : YES
    Auto-Configuration URL :
         Proxy Server List :
         Proxy Bypass List :

+----------------------------------------------------------------------+
| WinHttp Default Proxy Config                                         |
+----------------------------------------------------------------------+

               Access Type : DIRECT
```

Now I took the snapshot back to choose personal use of Windows and logged in using my personal account. As expected there is no company related information in dsregcmd and WamDefaultAuthority is consumers. The default GUID is for a Microsoft Account.

```
+----------------------------------------------------------------------+
| Device State                                                         |
+----------------------------------------------------------------------+

             AzureAdJoined : NO
          EnterpriseJoined : NO
              DomainJoined : NO
               Device Name : DESKTOP-87ELB0Q

+----------------------------------------------------------------------+
| User State                                                           |
+----------------------------------------------------------------------+

                    NgcSet : NO
           WorkplaceJoined : NO
             WamDefaultSet : YES
       WamDefaultAuthority : consumers
              WamDefaultId : https://login.microsoft.com
            WamDefaultGUID : {D7F9888F-E3FC-49B0-9EA6-A85B5F392A4F} (MicrosoftAccount)

+----------------------------------------------------------------------+
| SSO State                                                            |
+----------------------------------------------------------------------+

                AzureAdPrt : NO
       AzureAdPrtAuthority : NO
             EnterprisePrt : NO
    EnterprisePrtAuthority : NO

+----------------------------------------------------------------------+
| IE Proxy Config for Current User                                     |
+----------------------------------------------------------------------+

      Auto Detect Settings : YES
    Auto-Configuration URL :
         Proxy Server List :
         Proxy Bypass List :

+----------------------------------------------------------------------+
| WinHttp Default Proxy Config                                         |
+----------------------------------------------------------------------+

               Access Type : DIRECT

+----------------------------------------------------------------------+
| Ngc Prerequisite Check                                               |
+----------------------------------------------------------------------+

            IsDeviceJoined : NO
             IsUserAzureAD : NO
             PolicyEnabled : NO
          PostLogonEnabled : YES
            DeviceEligible : YES
        SessionIsNotRemote : YES
            CertEnrollment : none
              PreReqResult : WillNotProvision
```

Adding the work account using my personal account in SystemSettings.exe give me a very similar result from previous Win10 1909 tests, only a dsregcmd with more information:

```
+----------------------------------------------------------------------+
| Device State                                                         |
+----------------------------------------------------------------------+

             AzureAdJoined : NO
          EnterpriseJoined : NO
              DomainJoined : NO
               Device Name : VMW10H2

+----------------------------------------------------------------------+
| User State                                                           |
+----------------------------------------------------------------------+

                    NgcSet : NO
           WorkplaceJoined : YES
          WorkAccountCount : 1
             WamDefaultSet : YES
       WamDefaultAuthority : consumers
              WamDefaultId : https://login.microsoft.com
            WamDefaultGUID : {D7F9888F-E3FC-49B0-9EA6-A85B5F392A4F} (MicrosoftAccount)

+----------------------------------------------------------------------+
| SSO State                                                            |
+----------------------------------------------------------------------+

                AzureAdPrt : NO
       AzureAdPrtAuthority : NO
             EnterprisePrt : NO
    EnterprisePrtAuthority : NO

+----------------------------------------------------------------------+
| Work Account 1                                                       |
+----------------------------------------------------------------------+

         WorkplaceDeviceId : 88e7bd3c-5483-47b6-81a1-224fbb22cb52
       WorkplaceThumbprint : 62E4F8C6101A09AA58DA19DA6E4A23F09DCCC6A7
 DeviceCertificateValidity : [ 2023-08-05 16:40:00.000 UTC -- 2033-08-05 17:10:00.000 UTC ]
            KeyContainerId : fae876b5-8299-422f-8ee3-655a5fa5079d
               KeyProvider : Microsoft Software Key Storage Provider
              TpmProtected : NO
              WorkplaceIdp : login.windows.net
         WorkplaceTenantId : 60bc6957-78ac-4ce4-922c-538277aaecc4
       WorkplaceTenantName : dlp
           WorkplaceMdmUrl :
      WorkplaceSettingsUrl :
                    NgcSet : NO

+----------------------------------------------------------------------+
| IE Proxy Config for Current User                                     |
+----------------------------------------------------------------------+

      Auto Detect Settings : YES
    Auto-Configuration URL :
         Proxy Server List :
         Proxy Bypass List :

+----------------------------------------------------------------------+
| WinHttp Default Proxy Config                                         |
+----------------------------------------------------------------------+

               Access Type : DIRECT

+----------------------------------------------------------------------+
| Ngc Prerequisite Check                                               |
+----------------------------------------------------------------------+

            IsDeviceJoined : NO
             IsUserAzureAD : NO
             PolicyEnabled : NO
          PostLogonEnabled : YES
            DeviceEligible : YES
        SessionIsNotRemote : YES
            CertEnrollment : none
              PreReqResult : WillNotProvision
```

Based on these tests I think we are looking for is not a Primary Refresh Token issued after a personal computer was registrated with AAD, but this second type of tests, where a personal account add a work account in the same profile. If this is the case we won't have a PRT to take care of, but another kind of credentials to be used to login in work apps.

= New direction from Alex Osipov
:date: 2023-08-08
:tags: tag_venn tag_reversing

There is a new direction (from Alex Osipov), more shortcut oriented. Since to put AADBroker inside SE will be a long term task and we are looking for a shortcut in the meanwhile I will be focusing as next task in trying to detect the AADBroker calling process so we have a way to set or unset the BlockAADWorkplaceJoin policy (once we are injected in AADBroker) to avoid system wide account registration. Proof of concept mode on.

It is proved that setting the BlockAADWorkplaceJoin policy in registry only after the process started does not show the join window and the account is available only for the app being used.

In order to reproduce, first you need to make sure the policy works even setting the registry value after the AADBroker process started and does not depend on this value set before Teams or another sign in app starts. To do this configure a gflags to run a debugger and put the process to sleep for 10 seconds. Meanwhile set the policy registry value to 1.

aad_broker_gflags.png

```
c:\Tools\DbgTools\ntsd.exe -c ".sleep 0n10000 ; g"
```

Doing both tests, set and no set, it is proved that setting the registry value only after the process started works.

Without the policy:

start_aadbroker_WITHOUT_block_join_policy.mp4

With the policy:

start_aadbroker_WITH_block_join_policy.mp4

I am now starting to analyze the stack trace for the three processes started when entering AAD signin mode (the orange window), all started by svchost. By function name what seems interesting is in the BackgroundTaskHost and RuntimeBroker stacks, the functions `CClassData::PrivilegedLaunchRunAsServer` and `rpcss.dll	_LaunchWinRTRunAsServer`.

Stack trace of `svchost.exe` in `"C:\Windows\system32\BackgroundTaskHost.exe" -ServerName:BackgroundTaskHost.WebAccountProvider`:

```
0	ntoskrnl.exe	PspCallProcessNotifyRoutines + 0x213
1	ntoskrnl.exe	PspInsertThread + 0x68e
2	ntoskrnl.exe	NtCreateUserProcess + 0xde0
3	ntoskrnl.exe	KiSystemServiceCopyEnd + 0x25
4	ntdll.dll	NtCreateUserProcess + 0x14
5	KERNELBASE.dll	CreateProcessInternalW + 0xfe3
6	KERNELBASE.dll	CreateProcessAsUserW + 0x63
7	KERNEL32.DLL	CreateProcessAsUserWStub + 0x60
8	rpcss.dll	CClassData::PrivilegedLaunchRunAsServer + 0x175d	0x7ffa4e67179d	c:\windows\system32\rpcss.dll
9	rpcss.dll	<lambda_2379da3f5547109f9eced0bc45a3b8ab>::operator() + 0x1e4	0x7ffa4e66a3d0	c:\windows\system32\rpcss.dll
10	rpcss.dll	_LaunchWinRTRunAsServer + 0x142	0x7ffa4e669e62	c:\windows\system32\rpcss.dll
11	RPCRT4.dll	Invoke + 0x73
12	RPCRT4.dll	NdrStubCall2Heap + 0x342
13	RPCRT4.dll	NdrStubCall2 + 0x3a
14	RPCRT4.dll	NdrServerCall2 + 0x1a
15	RPCRT4.dll	DispatchToStubInCNoAvrf + 0x18
16	RPCRT4.dll	RPC_INTERFACE::DispatchToStubWorker + 0x1a6
17	RPCRT4.dll	RPC_INTERFACE::DispatchToStub + 0xf8
18	RPCRT4.dll	LRPC_SCALL::DispatchRequest + 0x31f
19	RPCRT4.dll	LRPC_SCALL::HandleRequest + 0x7f8
20	RPCRT4.dll	LRPC_ADDRESS::HandleRequest + 0x341
21	RPCRT4.dll	LRPC_ADDRESS::ProcessIO + 0x89e
22	RPCRT4.dll	LrpcIoComplete + 0xc2
23	ntdll.dll	TppAlpcpExecuteCallback + 0x260
24	ntdll.dll	TppWorkerThread + 0x456
25	KERNEL32.DLL	BaseThreadInitThunk + 0x14
26	ntdll.dll	RtlUserThreadStart + 0x21
```

Stack trace of `svchost.exe` in `C:\Windows\System32\RuntimeBroker.exe -Embedding`:

```
0	ntoskrnl.exe	PspCallProcessNotifyRoutines + 0x213
1	ntoskrnl.exe	PspInsertThread + 0x68e
2	ntoskrnl.exe	NtCreateUserProcess + 0xde0
3	ntoskrnl.exe	KiSystemServiceCopyEnd + 0x25
4	ntdll.dll	NtCreateUserProcess + 0x14
5	KERNELBASE.dll	CreateProcessInternalW + 0xfe3
6	KERNELBASE.dll	CreateProcessAsUserW + 0x63
7	KERNEL32.DLL	CreateProcessAsUserWStub + 0x60
8	rpcss.dll	CClassData::PrivilegedLaunchRunAsServer + 0x175d
9	rpcss.dll	<lambda_9f1cc42dbf9f3f3c127e6e5c79e317cf>::operator() + 0x1b0
10	rpcss.dll	_LaunchRunAsServer + 0xe2
11	RPCRT4.dll	Invoke + 0x73
12	RPCRT4.dll	NdrStubCall2Heap + 0x342
13	RPCRT4.dll	NdrStubCall2 + 0x3a
14	RPCRT4.dll	NdrServerCall2 + 0x1a
15	RPCRT4.dll	DispatchToStubInCNoAvrf + 0x18
16	RPCRT4.dll	RPC_INTERFACE::DispatchToStubWorker + 0x1a6
17	RPCRT4.dll	RPC_INTERFACE::DispatchToStub + 0xf8
18	RPCRT4.dll	LRPC_SCALL::DispatchRequest + 0x31f
19	RPCRT4.dll	LRPC_SCALL::HandleRequest + 0x7f8
20	RPCRT4.dll	LRPC_ADDRESS::HandleRequest + 0x341
21	RPCRT4.dll	LRPC_ADDRESS::ProcessIO + 0x89e
22	RPCRT4.dll	LrpcIoComplete + 0xc2
23	ntdll.dll	TppAlpcpExecuteCallback + 0x260
24	ntdll.dll	TppWorkerThread + 0x456
25	KERNEL32.DLL	BaseThreadInitThunk + 0x14
26	ntdll.dll	RtlUserThreadStart + 0x21
```

Stack trace of `svchost.exe` in `"C:\Windows\SystemApps\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\Microsoft.AAD.BrokerPlugin.exe" -ServerName:App.AppXgvz9wxd0frjs1prgz5kvtcz083996jyv.mca`:

```
0	ntoskrnl.exe	PspCallProcessNotifyRoutines + 0x213
1	ntoskrnl.exe	PspInsertThread + 0x68e
2	ntoskrnl.exe	NtCreateUserProcess + 0xde0
3	ntoskrnl.exe	KiSystemServiceCopyEnd + 0x25
4	ntdll.dll	NtCreateUserProcess + 0x14
5	KERNELBASE.dll	CreateProcessInternalW + 0xfe3
6	KERNELBASE.dll	CreateProcessAsUserW + 0x63
7	KERNEL32.DLL	CreateProcessAsUserWStub + 0x60
8	rpcss.dll	CClassData::PrivilegedLaunchRunAsServer + 0x175d
9	rpcss.dll	<lambda_2379da3f5547109f9eced0bc45a3b8ab>::operator() + 0x1e4
10	rpcss.dll	_LaunchWinRTRunAsServer + 0x142
11	RPCRT4.dll	Invoke + 0x73
12	RPCRT4.dll	NdrStubCall2Heap + 0x342
13	RPCRT4.dll	NdrStubCall2 + 0x3a
14	RPCRT4.dll	NdrServerCall2 + 0x1a
15	RPCRT4.dll	DispatchToStubInCNoAvrf + 0x18
16	RPCRT4.dll	RPC_INTERFACE::DispatchToStubWorker + 0x1a6
17	RPCRT4.dll	RPC_INTERFACE::DispatchToStub + 0xf8
18	RPCRT4.dll	LRPC_SCALL::DispatchRequest + 0x31f
19	RPCRT4.dll	LRPC_SCALL::HandleRequest + 0x7f8
20	RPCRT4.dll	LRPC_ADDRESS::HandleRequest + 0x341
21	RPCRT4.dll	LRPC_ADDRESS::ProcessIO + 0x89e
22	RPCRT4.dll	LrpcIoComplete + 0xc2
23	ntdll.dll	TppAlpcpExecuteCallback + 0x260
24	ntdll.dll	TppWorkerThread + 0x456
25	KERNEL32.DLL	BaseThreadInitThunk + 0x14
26	ntdll.dll	RtlUserThreadStart + 0x21
```

=# Summary of main discoveries

 - BlockAADWorkplaceJoin policy could be set only after AADBroker process starts and avoids the account be joined into the system.
 - RuntimeBroker is responsible for computer joining process system wide (the called "MDM" process), but has to be informed by AADBroker.

=# What has to be done yet

 - Investigate if it is possible to know who is calling AADBroker to know if to enable or disable the BlockAADWorkplaceJoin policy.

= Who is calling AADBroker
:date: 2023-08-08
:tags: tag_venn tag_reversing

Today I started to investigate if it is possible to know who is calling AADBroker to know if to enable or disable the BlockAADWorkplaceJoin policy.

The first thing I noticed is that the `Teams.exe` instances are using [Mojo](https://chromium.googlesource.com/chromium/src/+/refs/heads/main/mojo/public/cpp/platform/README.md) to IPC among them (not that this is relevant).

Bellow follows the relevant procmon events in the analysis. All nonrelated highlight with no data events are Thread Exit event and are there to mark the time from my log. After the log file write event from Teams there are some content of this file because it is relevant to understand the steps.

logs.txt

```
9:54:42.7404382 AM Starting Teams and Window Get started showing

9:55:46.7384083 AM Parent PID:	2352 (not explorer.exe)

9:55:49.4878165 AM Teams create Teams process PID:	5872 Command line:	"C:\Users\Administrator\AppData\Local\Microsoft\Teams\current\Teams.exe" --type=gpu-process --user-data-dir="C:\Users\Administrator\AppData\Roaming\Microsoft\Teams" --gpu-preferences=UAAAAAAAAADgAAAYAAAAAAAAAAAAAAAAAABgAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAASAAAAAAAAAAYAAAAAgAAABAAAAAAAAAAGAAAAAAAAAAQAAAAAAAAAAAAAAAOAAAAEAAAAAAAAAABAAAADgAAAAgAAAAAAAAACAAAAAAAAAA= --mojo-platform-channel-handle=1720 --field-trial-handle=1780,i,1886765148744625815,541707472471473165,131072 --enable-features=ContextBridgeMutability,SharedArrayBuffer,WinUseBrowserSpellChecker,WinUseHybridSpellChecker --disable-features=CalculateNativeWinOcclusion,ExtraCookieValidityChecks,ForcedColors,SpareRendererForSitePerProcess,WinRetrieveSuggestionsOnlyOnDemand /prefetch:2

9:55:49.9346808 AM Teams create Teams process PID:	9944 Command line:	"C:\Users\Administrator\AppData\Local\Microsoft\Teams\current\Teams.exe" --type=utility --utility-sub-type=network.mojom.NetworkService --lang=en-US --service-sandbox-type=none --enable-wer --user-data-dir="C:\Users\Administrator\AppData\Roaming\Microsoft\Teams" --mojo-platform-channel-handle=2168 --field-trial-handle=1780,i,1886765148744625815,541707472471473165,131072 --enable-features=ContextBridgeMutability,SharedArrayBuffer,WinUseBrowserSpellChecker,WinUseHybridSpellChecker --disable-features=CalculateNativeWinOcclusion,ExtraCookieValidityChecks,ForcedColors,SpareRendererForSitePerProcess,WinRetrieveSuggestionsOnlyOnDemand /prefetch:8

9:55:50.8949163 AM Teams create Teams process PID:	3652 Command line:	"C:\Users\Administrator\AppData\Local\Microsoft\Teams\current\Teams.exe" --type=renderer --enable-wer --user-data-dir="C:\Users\Administrator\AppData\Roaming\Microsoft\Teams" --app-user-model-id=com.squirrel.Teams.Teams --app-path="C:\Users\Administrator\AppData\Local\Microsoft\Teams\current\resources\app.asar" --enable-sandbox --autoplay-policy=no-user-gesture-required --disable-background-timer-throttling --lang=en-US --device-scale-factor=1 --num-raster-threads=2 --enable-main-frame-before-activation --renderer-client-id=5 --launch-time-ticks=41082474285 --mojo-platform-channel-handle=2508 --field-trial-handle=1780,i,1886765148744625815,541707472471473165,131072 --enable-features=ContextBridgeMutability,SharedArrayBuffer,WinUseBrowserSpellChecker,WinUseHybridSpellChecker --disable-features=CalculateNativeWinOcclusion,ExtraCookieValidityChecks,ForcedColors,SpareRendererForSitePerProcess,WinRetrieveSuggestionsOnlyOnDemand --msteams-process-type=loadingWindow /prefetch:1

9:55:51.2401935 AM svchost create CompPkgSrv PID:	3392 Command line:	C:\Windows\System32\CompPkgSrv.exe -Embedding

9:55:52.8802509 AM Teams create Teams process PID:	6768 Command line:	"C:\Users\Administrator\AppData\Local\Microsoft\Teams\current\Teams.exe" --type=renderer --enable-wer --user-data-dir="C:\Users\Administrator\AppData\Roaming\Microsoft\Teams" --app-user-model-id=com.squirrel.Teams.Teams --app-path="C:\Users\Administrator\AppData\Local\Microsoft\Teams\current\resources\app.asar" --enable-sandbox --autoplay-policy=no-user-gesture-required --disable-background-timer-throttling --lang=en-US --device-scale-factor=1 --num-raster-threads=2 --enable-main-frame-before-activation --renderer-client-id=7 --launch-time-ticks=41084717481 --mojo-platform-channel-handle=3084 --field-trial-handle=1780,i,1886765148744625815,541707472471473165,131072 --enable-features=ContextBridgeMutability,SharedArrayBuffer,WinUseBrowserSpellChecker,WinUseHybridSpellChecker --disable-features=CalculateNativeWinOcclusion,ExtraCookieValidityChecks,ForcedColors,SpareRendererForSitePerProcess,WinRetrieveSuggestionsOnlyOnDemand --msteams-process-type=notificationsManager /prefetch:1

9:55:56.5434943 AM Teams create Teams process PID:	5388 Command line:	"C:\Users\Administrator\AppData\Local\Microsoft\Teams\current\Teams.exe" --type=utility --utility-sub-type=audio.mojom.AudioService --lang=en-US --service-sandbox-type=audio --enable-wer --user-data-dir="C:\Users\Administrator\AppData\Roaming\Microsoft\Teams" --mojo-platform-channel-handle=4140 --field-trial-handle=1780,i,1886765148744625815,541707472471473165,131072 --enable-features=ContextBridgeMutability,SharedArrayBuffer,WinUseBrowserSpellChecker,WinUseHybridSpellChecker --disable-features=CalculateNativeWinOcclusion,ExtraCookieValidityChecks,ForcedColors,SpareRendererForSitePerProcess,WinRetrieveSuggestionsOnlyOnDemand /prefetch:8

9:55:57.5087608 AM svchost create BackgroundTaskHost PID:	5860 Command line:	"C:\Windows\system32\BackgroundTaskHost.exe" -ServerName:BackgroundTaskHost.WebAccountProvider

9:56:10.4400303 AM Clicked button Get started

9:57:07.0151812 AM	Teams.exe	1336	Process Create	C:\Users\Administrator\AppData\Local\Microsoft\Teams\current\Teams.exe	SUCCESS	PID: 9532, Command line: "C:\Users\Administrator\AppData\Local\Microsoft\Teams\current\Teams.exe" --type=renderer --enable-wer --user-data-dir="C:\Users\Administrator\AppData\Roaming\Microsoft\Teams" --app-user-model-id=com.squirrel.Teams.Teams --app-path="C:\Users\Administrator\AppData\Local\Microsoft\Teams\current\resources\app.asar" --enable-sandbox --autoplay-policy=no-user-gesture-required --disable-background-timer-throttling --lang=en-US --device-scale-factor=1 --num-raster-threads=2 --enable-main-frame-before-activation --renderer-client-id=10 --launch-time-ticks=41158835669 --mojo-platform-channel-handle=1640 --field-trial-handle=1780,i,1886765148744625815,541707472471473165,131072 --enable-features=ContextBridgeMutability,SharedArrayBuffer,WinUseBrowserSpellChecker,WinUseHybridSpellChecker --disable-features=CalculateNativeWinOcclusion,ExtraCookieValidityChecks,ForcedColors,SpareRendererForSitePerProcess,WinRetrieveSuggestionsOnlyOnDemand --msteams-process-type=accountSelectWindow /prefetch:1

9:57:12.5158631 AM Entered work email

9:57:26.4982321 AM	Teams.exe	9944	TCP Send	VMW10H2.localdomain:50538 -> 20.42.73.27:https	SUCCESS	Length: 223, startime: 4117840, endtime: 4117840, seqnum: 0, connid: 0

9:57:48.9280779 AM	Teams.exe	1336	WriteFile	C:\Users\Administrator\AppData\Roaming\Microsoft\Teams\logs.txt	SUCCESS	Offset: -1, Length: 777

Tue Aug 08 2023 09:57:48 GMT-0700 (Pacific Daylight Time) <1336> -- event -- eventpdclevel: 1, status: timeout, scenario: 8661d259-3582-425a-9a25-4f7e3900c505, scenarioName: desktop_app_load, name: desktop_app_load, step: stop, sequence: 1, delta: 120027, scenarioDelta: 120027, elapsed: 120136, stepDelta: 120027, Scenario.Mode: 1, AppInfo.Language: en-US, complianceEnvironmentType: 0, isDataCategorizationEnabled: false, userpdclevel: 0, processMemory: 25244744, freeMemory: 4639068160, clientType: desktop, AppInfo.ClientType: desktop, Window.Focus: background, windowIsVisible: false, Window.Status: systray, UserInfo.TimeZone: -07:00, vdiMode: 0, previousVDIOptimizationValue: undefined, Scenario.Name: desktop_app_load, Scenario.Step: stop, Scenario.Status: timeout,  

9:57:49.6858112 AM	Teams.exe	1336	Process Create	C:\Users\Administrator\AppData\Local\Microsoft\Teams\current\Teams.exe	SUCCESS	PID: 3940, Command line: "C:\Users\Administrator\AppData\Local\Microsoft\Teams\current\Teams.exe" --type=gpu-process --disable-gpu-sandbox --use-gl=disabled --gpu-vendor-id=5549 --gpu-device-id=1029 --gpu-sub-system-id=67442093 --gpu-revision=0 --gpu-driver-version=9.17.4.2 --user-data-dir="C:\Users\Administrator\AppData\Roaming\Microsoft\Teams" --gpu-preferences=UAAAAAAAAADoAAAYAAAAAAAAAAAAAAAAAABgAAAAAAAwAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAASAAAAAAAAAAYAAAAAgAAABAAAAAAAAAAGAAAAAAAAAAQAAAAAAAAAAAAAAAOAAAAEAAAAAAAAAABAAAADgAAAAgAAAAAAAAACAAAAAAAAAA= --mojo-platform-channel-handle=2940 --field-trial-handle=1780,i,1886765148744625815,541707472471473165,131072 --enable-features=ContextBridgeMutability,SharedArrayBuffer,WinUseBrowserSpellChecker,WinUseHybridSpellChecker --disable-features=CalculateNativeWinOcclusion,ExtraCookieValidityChecks,ForcedColors,SpareRendererForSitePerProcess,WinRetrieveSuggestionsOnlyOnDemand /prefetch:2

Tue Aug 08 2023 09:57:49 GMT-0700 (Pacific Daylight Time) <1336> -- event -- eventpdclevel: 2, status: timeout, scenario: cbd92dee-2b8d-4590-bb25-d6b799de9803, scenarioName: appswitcher_silent_app_quit, name: appswitcher_silent_app_quit, step: stop, sequence: 1, delta: 120018, scenarioDelta: 120018, elapsed: 121056, stepDelta: 120018, Scenario.Mode: 1, AppInfo.Language: en-US, complianceEnvironmentType: 0, isDataCategorizationEnabled: false, userpdclevel: 0, processMemory: 25292456, freeMemory: 4638777344, clientType: desktop, AppInfo.ClientType: desktop, Window.Focus: background, windowIsVisible: false, Window.Status: systray, UserInfo.TimeZone: -07:00, vdiMode: 0, previousVDIOptimizationValue: undefined, Scenario.Name: appswitcher_silent_app_quit, Scenario.Step: stop, Scenario.Status: timeout,  
...
 * Tue Aug 08 2023 09:58:34 GMT-0700 (Pacific Daylight Time) <1336> -- info -- Created a request with the following properties: {"LoginHint":"dev@dlp.os33dev.com","msafed":"1","correlationId":"{46ED1043-34D5-41ED-8C5B-A54B1F9D0DB1}","resource":"https://api.spaces.skype.com","claims":"{\"access_token\":{\"xms_cc\":{\"values\":[\"CP1\"]}}}"} 
Tue Aug 08 2023 09:58:34 GMT-0700 (Pacific Daylight Time) <1336> -- event -- eventpdclevel: 2, name: getParentLoopForAllWindow, flowData: notificationsManagernotificationParentWindowloadingWindowinUse;, AppInfo.Language: en-US, complianceEnvironmentType: 0, isDataCategorizationEnabled: false, userpdclevel: 0, processMemory: 26144464, freeMemory: 4649259008, clientType: desktop, AppInfo.ClientType: desktop, Window.Focus: background, windowIsVisible: false, Window.Status: systray, UserInfo.TimeZone: -07:00, vdiMode: 0, previousVDIOptimizationValue: undefined,  
Tue Aug 08 2023 09:58:34 GMT-0700 (Pacific Daylight Time) <1336> -- event -- panelview: eventpdclevel: 2, Panel.Type: loginWindow, Panel.Region: modal, Panel.LaunchMethod: login, DataBag.AuthStack: native-wam, Panel.ViewId: 82e20697-d01e-4781-881d-6d4b29d37f5d, AppInfo.Language: en-US, complianceEnvironmentType: 0, isDataCategorizationEnabled: false, userpdclevel: 0, processMemory: 26170872, freeMemory: 4648521728, clientType: desktop, AppInfo.ClientType: desktop, Window.Focus: background, windowIsVisible: false, Window.Status: systray, UserInfo.TimeZone: -07:00, vdiMode: 0, previousVDIOptimizationValue: undefined,  
Tue Aug 08 2023 09:58:34 GMT-0700 (Pacific Daylight Time) <1336> -- info -- WAM: Starting show prompt flow. 
Tue Aug 08 2023 09:58:34 GMT-0700 (Pacific Daylight Time) <1336> -- info -- WAM: Web Account not present. Starting RequestTokenForWindowAsync.

9:58:34.5177566 AM	svchost.exe	820	Process Create	C:\Windows\system32\BackgroundTaskHost.exe	SUCCESS	PID: 6000, Command line: "C:\Windows\system32\BackgroundTaskHost.exe" -ServerName:BackgroundTaskHost.WebAccountProvider

9:58:35.3000990 AM	svchost.exe	820	Process Create	C:\Windows\System32\RuntimeBroker.exe	SUCCESS	PID: 2564, Command line: C:\Windows\System32\RuntimeBroker.exe -Embedding

9:58:36.8775900 AM	svchost.exe	820	Process Create	C:\Windows\SystemApps\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\Microsoft.AAD.BrokerPlugin.exe	SUCCESS	PID: 4148, Command line: "C:\Windows\SystemApps\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\Microsoft.AAD.BrokerPlugin.exe" -ServerName:App.AppXgvz9wxd0frjs1prgz5kvtcz083996jyv.mca

9:59:41.1948061 AM	svchost.exe	820	Process Create	C:\Windows\system32\backgroundTaskHost.exe	SUCCESS	PID: 9428, Command line: "C:\Windows\system32\backgroundTaskHost.exe" -ServerName:App.AppXmtcan0h2tfbfy7k9kn8hbxb6dmzz1zh0.mca

9:58:52.8252558 AM
Closed orange window

10:00:06.3298572 AM
Closed failed Teams window

10:00:52.2213205 AM
All Team processes exit
```

I found a stack where Teams eventually calls the function `Windows.Security.Authentication.Web.Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::WriteTokenResponseCache`. Perhaps there is a link to that function and Gabriel's cache research.

Investigating using OLE View I found a possible relation to these call, the `Windows::Security::Authentication::Web::Core::IWebAuthenticationCoreManagerStatics` interface and its versions 2, 3 and 4. 

The next step in this task is to debug session with static analysis and discover what interfaces and methods are called in the moment Teams decide to start Web Provider service.

= Web Provider service discoveries
:date: 2023-08-09
:tags: tag_venn tag_reversing

The next step in this task was to debug session with static analysis and discover what interfaces and methods are called in the moment Teams decide to start Web Provider service.

The main DLL investigated was `Windows.Security.Authentication.Web.Core.dll`. Now I am in the same page about electron relation to Teams behavior. Debugging `Teams.exe` to know who is using `Windows.Security.Authentication.Web.Core.dll` classes I stumble upon three classes instantiated by `electron!v8::*` scope: `Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager`, `Windows.Foundation.Metadata.ApiInformation`, `Windows.Security.Authentication.Web.Core.WebTokenRequest`. The hard part now is to catch the vtables being used, since `Web.Core.dll` is using `ActivationFactory` template as a wrapper to those classes.

```
sxe ld:vccorlib140.dll
bp vccorlib140!GetActivationFactoryByPCWSTR "du ecx"
gu
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryUi
bp vccorlib140!GetActivationFactoryByPCWSTR "du ecx ; g"
```

The main target was to discover what initiates the AADBroker process creation. Refining the calls among several debug sessions I discovered that in `Web.Core.dll` this was located inside `Web::Core::CWebTokenRequestResultOperation::TryUi`, more specifically in offset 0x355, when the interface `Authentication::Web::ITokenBrokerInternalStatics5` is evoked. This is a remote call.

To discover that I put breakpoints in every class method that was activated in electron by using the function `GetActivationFactoryByPCWSTR`. As a lot of these functions are called during the sign in I just printed the frame 1 for each trigger, sleep for 1 second and move on:

```
bp Windows_Security_Authentication_Web_Core!CloneWebTokenRequest "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::CreateWebAccountMonitor "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::FindAccountAsync "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::FindAccountProviderAsync "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::FindAccountProviderWithAuthorityAsync "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::FindAccountProviderWithAuthorityForUserAsync "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::FindAllAccountsAsync "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::FindAllAccountsWithClientIdAsync "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::FindSystemAccountProviderAsync "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::FindSystemAccountProviderWithAuthorityAsync "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::FindSystemAccountProviderWithAuthorityForUserAsync "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::GetTokenSilentlyAsync "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::GetTokenSilentlyWithWebAccountAsync "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::RequestTokenAsync "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::RequestTokenForWindowAsync "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::RequestTokenWithUIElementHostingAndWebAccountAsync "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::RequestTokenWithUIElementHostingAsync "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::RequestTokenWithWebAccountAsync "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::RequestTokenWithWebAccountForWindowAsync "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequest::GetUnmarshalClassId "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequest::InitializeObjectCommon "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequest::IsInterfaceSupported "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequest::MarshalObjectToPropertySet "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestFactory::Create "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestFactory::CreateWithPromptType "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestFactory::CreateWithProvider "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestFactory::CreateWithScope "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestFactory::UnmarshalObjectFromPropertySet "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResult::CWebTokenRequestResult "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResult::GetUnmarshalClassId "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResult::InitializeObjectCommon "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResult::InitializeObjectFromPropertySet "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResult::InvalidateCacheAsync "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResult::IsInterfaceSupported "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResult::MarshalObjectToPropertySet "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResult::Serialize "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResult::UpdateStatus "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::ApplyAccountSwitchStatus "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::ApplyConnectedAccountLogic "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::CWebTokenRequestResultOperation "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::DoWork "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::InitializeOperationData "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::InitializeTokenBrokerInternal "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::IsAccountHintsPresent "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::LaunchComponentUI "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::OnCancel "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::RecordResultAndCallerIdentity "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryCache "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryExtension "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TrySilent "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryUi "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::UpdateRequestWithAccountControlWebAccount "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::ValidateProviderAndAccountsMatch "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::WriteTokenResponseCache "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::WebTokenRequestResultFactory::ActivateInstance "k 1 ; .sleep 0n1000 ; g"
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::WebTokenRequestResultFactory::UnmarshalObjectFromPropertySet "k 1 ; .sleep 0n1000 ; g"
```

The result could be seen bellow:

```
00 000000dc`bb5fc618 00007ffa`3b7ba486 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::FindAccountProviderWithAuthorityAsync
00007ffa`3b7d4910  "Windows.Security.Authentication."
00007ffa`3b7d4950  "Web.Core.WebTokenRequest"
vccorlib140!GetActivationFactoryByPCWSTR:
00007ffa`3b7d4190  "Windows.Security.Authentication."
00007ffa`3b7d41d0  "Web.Core.WebAuthenticationCoreMa"
00007ffa`3b7d4210  "nager"
vccorlib140!GetActivationFactoryByPCWSTR:
00 000000dc`bb5fcb58 00007ffa`3b7ba342 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::GetTokenSilentlyAsync
00 000000dc`bb5fc728 00007ffa`449f5d3f Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequest::SetRequestHash
00 000000dc`bb5fc7b8 00007ffa`449f2e62 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::CWebTokenRequestResultOperation
00 000000dc`bb5fc7b8 00007ffa`449f2e82 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::InitializeOperationData
00 000000dc`cfdffa48 00007ffa`44a07c8f Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::DoWork
00 000000dc`cfdff8c8 00007ffa`449f530c Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::UpdateRequestWithAccountControlWebAccount
00 000000dc`cfdff8c8 00007ffa`449f5322 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::ApplyConnectedAccountLogic
00 000000dc`cfdff8c8 00007ffa`449f533a Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryExtension
00 000000dc`cfdff8c8 00007ffa`449f5342 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::ValidateProviderAndAccountsMatch
00 000000dc`cfdff658 00007ffa`44a029db Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequest::SetRequestHash
00 000000dc`cfdff8c8 00007ffa`449f540a Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryCache
00 000000dc`cfdff8c8 00007ffa`449f5513 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryExtension
ModLoad: 00007ffa`3d4e0000 00007ffa`3d50d000   C:\Windows\System32\aadWamExtension.dll
00 000000dc`cfdff518 00007ffa`44a1de99 Windows_Security_Authentication_Web_Core!CloneWebTokenRequest
00 000000dc`cfdff398 00007ffa`44a8537f Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequest::InitializeObjectCommon
00 000000dc`cfdff8c8 00007ffa`449f551b Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TrySilent
00 000000dc`cfdff7b8 00007ffa`44a2b27b Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::InitializeTokenBrokerInternal
00 000000dc`cfdfe938 00007ffa`513b9d6a Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::WebTokenRequestResultFactory::UnmarshalObjectFromPropertySet
00 000000dc`cfdfe8b8 00007ffa`44a7acfb Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResult::CWebTokenRequestResult
00 000000dc`cfdfe8e8 00007ffa`44a8c266 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResult::InitializeObjectFromPropertySet
00 000000dc`cfdfe888 00007ffa`44a8550e Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResult::InitializeObjectCommon
00 000000dc`cfdff8c8 00007ffa`449f55a1 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryUi
00 000000dc`cfdff8c8 00007ffa`449f5688 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::ApplyAccountSwitchStatus
00 000000dc`cfdff8c8 00007ffa`449f569e Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::WriteTokenResponseCache
00 000000dc`cfdff338 00007ffa`44a029db Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequest::SetRequestHash
ModLoad: 00007ffa`38e80000 00007ffa`38f43000   C:\Windows\System32\Windows.Web.dll
00 000000dc`cfdff8c8 00007ffa`449f56df Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::RecordResultAndCallerIdentity
00007ffa`3b7d4190  "Windows.Security.Authentication."
00007ffa`3b7d41d0  "Web.Core.WebAuthenticationCoreMa"
00007ffa`3b7d4210  "nager"
vccorlib140!GetActivationFactoryByPCWSTR:
00 000000dc`bb5fc3b8 00007ffa`3b7ba486 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::FindAccountProviderWithAuthorityAsync
00007ffa`3b7d4190  "Windows.Security.Authentication."
00007ffa`3b7d41d0  "Web.Core.WebAuthenticationCoreMa"
00007ffa`3b7d4210  "nager"
vccorlib140!GetActivationFactoryByPCWSTR:
00 000000dc`bb5fc3b8 00007ffa`3b7ba486 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::FindAccountProviderWithAuthorityAsync
00007ffa`3b7d4220  "Windows.Foundation.Metadata.ApiI"
00007ffa`3b7d4260  "nformation"
vccorlib140!GetActivationFactoryByPCWSTR:
00007ffa`3b7d4190  "Windows.Security.Authentication."
00007ffa`3b7d41d0  "Web.Core.WebAuthenticationCoreMa"
00007ffa`3b7d4210  "nager"
vccorlib140!GetActivationFactoryByPCWSTR:
00 000000dc`bb5fcb28 00007ffa`3b7ba3ae Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::FindAllAccountsWithClientIdAsync
00007ffa`3b7d4220  "Windows.Foundation.Metadata.ApiI"
00007ffa`3b7d4260  "nformation"
vccorlib140!GetActivationFactoryByPCWSTR:
00007ffa`3b7d4190  "Windows.Security.Authentication."
00007ffa`3b7d41d0  "Web.Core.WebAuthenticationCoreMa"
00007ffa`3b7d4210  "nager"
vccorlib140!GetActivationFactoryByPCWSTR:
00 000000dc`bb5fcb28 00007ffa`3b7ba3ae Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::FindAllAccountsWithClientIdAsync
00 000000dc`cfdff888 00007ffa`449f6dc3 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestFactory::Create
00 000000dc`cfdff888 00007ffa`449f6e57 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::GetTokenSilentlyAsync
00 000000dc`cfdff458 00007ffa`449f5d3f Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequest::SetRequestHash
00 000000dc`cfdff4e8 00007ffa`449f2e62 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::CWebTokenRequestResultOperation
00 000000dc`cfdff4e8 00007ffa`449f2e82 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::InitializeOperationData
00 000000dc`cfdff248 00007ffa`44a07c8f Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::DoWork
00 000000dc`cfdff0c8 00007ffa`449f530c Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::UpdateRequestWithAccountControlWebAccount
00 000000dc`cfdff0c8 00007ffa`449f5322 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::ApplyConnectedAccountLogic
00 000000dc`cfdff0c8 00007ffa`449f533a Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryExtension
00 000000dc`cfdff0c8 00007ffa`449f5342 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::ValidateProviderAndAccountsMatch
00 000000dc`c65ff2e8 00007ffa`449f6dc3 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestFactory::Create
00 000000dc`c65ff2e8 00007ffa`449f6e57 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::GetTokenSilentlyAsync
00 000000dc`c65feeb8 00007ffa`449f5d3f Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequest::SetRequestHash
00 000000dc`c65fef48 00007ffa`449f2e62 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::CWebTokenRequestResultOperation
00 000000dc`c65fef48 00007ffa`449f2e82 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::InitializeOperationData
00 000000dc`c65feca8 00007ffa`44a07c8f Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::DoWork
00 000000dc`c65feb28 00007ffa`449f530c Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::UpdateRequestWithAccountControlWebAccount
00 000000dc`c65feb28 00007ffa`449f5322 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::ApplyConnectedAccountLogic
00 000000dc`c65feb28 00007ffa`449f533a Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryExtension
00 000000dc`c65feb28 00007ffa`449f5342 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::ValidateProviderAndAccountsMatch
00 000000dc`c65fe8b8 00007ffa`44a029db Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequest::SetRequestHash
00 000000dc`c65feb28 00007ffa`449f540a Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryCache
00 000000dc`cfdfee58 00007ffa`44a029db Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequest::SetRequestHash
00 000000dc`cfdff0c8 00007ffa`449f540a Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryCache
00 000000dc`cfdff0c8 00007ffa`449f5513 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryExtension
00 000000dc`cfdff0c8 00007ffa`449f551b Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TrySilent
00 000000dc`cfdff0c8 00007ffa`449f55a1 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryUi
00 000000dc`cfdff0c8 00007ffa`449f5688 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::ApplyAccountSwitchStatus
00 000000dc`cfdff0c8 00007ffa`449f569e Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::WriteTokenResponseCache
00 000000dc`cfdff0c8 00007ffa`449f56df Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::RecordResultAndCallerIdentity
00 000000dc`c65feb28 00007ffa`449f5513 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryExtension
00 000000dc`c65feb28 00007ffa`449f551b Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TrySilent
00 000000dc`c65feb28 00007ffa`449f55a1 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryUi
00 000000dc`c65feb28 00007ffa`449f5688 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::ApplyAccountSwitchStatus
00 000000dc`c65feb28 00007ffa`449f569e Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::WriteTokenResponseCache
00 000000dc`c65feb28 00007ffa`449f56df Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::RecordResultAndCallerIdentity
00007ffa`3b7d4190  "Windows.Security.Authentication."
00007ffa`3b7d41d0  "Web.Core.WebAuthenticationCoreMa"
00007ffa`3b7d4210  "nager"
vccorlib140!GetActivationFactoryByPCWSTR:
00 000000dc`bb5fc428 00007ffa`3b7ba486 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::FindAccountProviderWithAuthorityAsync
00007ffa`3b7d4910  "Windows.Security.Authentication."
00007ffa`3b7d4950  "Web.Core.WebTokenRequest"
vccorlib140!GetActivationFactoryByPCWSTR:
00 000000dc`bb5fc788 00007ffa`3b7caa95 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestFactory::CreateWithPromptType
00 000000dc`bb5fc9f8 00007ffa`3b7b5fd8 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::RequestTokenForWindowAsync
00 000000dc`bb5fc758 00007ffa`449f5d3f Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequest::SetRequestHash
00 000000dc`bb5fc5f8 00007ffa`44a8e7cd Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::CWebTokenRequestResultOperation
00 000000dc`bb5fc5f8 00007ffa`44a8e7eb Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::InitializeOperationData
00 000000dc`cfdffa48 00007ffa`44a07c8f Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::DoWork
00 000000dc`cfdff8c8 00007ffa`449f530c Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::UpdateRequestWithAccountControlWebAccount
00 000000dc`cfdff8c8 00007ffa`449f5322 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::ApplyConnectedAccountLogic
00 000000dc`cfdff8c8 00007ffa`449f533a Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryExtension
00 000000dc`cfdff8c8 00007ffa`449f5342 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::ValidateProviderAndAccountsMatch
00 000000dc`cfdff658 00007ffa`44a029db Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequest::SetRequestHash
00 000000dc`cfdff8c8 00007ffa`449f540a Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryCache
00 000000dc`cfdff8c8 00007ffa`449f5513 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryExtension
00 000000dc`cfdff518 00007ffa`44a1de99 Windows_Security_Authentication_Web_Core!CloneWebTokenRequest
00 000000dc`cfdff398 00007ffa`44a8537f Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequest::InitializeObjectCommon
00 000000dc`cfdff8c8 00007ffa`449f551b Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TrySilent
00 000000dc`cfdff7b8 00007ffa`44a2b27b Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::InitializeTokenBrokerInternal
00 000000dc`cfdfe938 00007ffa`513b9d6a Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::WebTokenRequestResultFactory::UnmarshalObjectFromPropertySet
00 000000dc`cfdfe8b8 00007ffa`44a7acfb Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResult::CWebTokenRequestResult
00 000000dc`cfdfe8e8 00007ffa`44a8c266 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResult::InitializeObjectFromPropertySet
00 000000dc`cfdfe888 00007ffa`44a8550e Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResult::InitializeObjectCommon
00 000000dc`cfdff8c8 00007ffa`449f55a1 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryUi
00 000000dc`cfdff808 00007ffa`44a0e172 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::InitializeTokenBrokerInternal
00 000000dc`cfdfed18 00007ffa`513ba0f1 Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequest::MarshalObjectToPropertySet
```

Trying to find what other processes in the system were with the same DLL loaded I stumble upon another `svchost.exe` instance (not the AADBroker parent) responsible for a "CDPUserSvc" instance that in my computer was named as `WpnUserService_352156`.

WpnUserService_352156_procexp.png

WpnUserService_352156_Svc.png

Another service "discovered" was the well known TokenBroker, or more well known Web Account Manager. I put breakpoin in every `CWebAuthenticationCoreManager` method andd none was triggered during the sign in.

However, in this process during the creation of AADBroker the `aadWamExtension.dll` was loaded. So I put breakpoints in the `aadWamExtension!Windows::Internal::Security::Authentication::Aad::AadWamExtensionWorker` methods, but none was called.

```
bp aadWamExtension!Windows::Internal::Security::Authentication::Aad::AadWamExtensionWorker::InvalidateCache
bp aadWamExtension!Windows::Internal::Security::Authentication::Aad::AadWamExtensionWorker::CreateCloudApRequest
bp aadWamExtension!Windows::Internal::Security::Authentication::Aad::AadWamExtensionWorker::ProcessDeviceAuthRequest
bp aadWamExtension!Windows::Internal::Security::Authentication::Aad::AadWamExtensionWorker::GetRequestProperty
bp aadWamExtension!Windows::Internal::Security::Authentication::Aad::AadWamExtensionWorker::HandleCloudApDeviceAuthCall
bp aadWamExtension!Windows::Internal::Security::Authentication::Aad::AadWamExtensionWorker::CallCloudAp
bp aadWamExtension!Windows::Internal::Security::Authentication::Aad::AadWamExtensionWorker::ParseDeviceInfoProperties
bp aadWamExtension!Windows::Internal::Security::Authentication::Aad::AadWamExtensionWorker::ProcessWebTokenResultInternal
```

Another method I put a breakpoint was `aadWamExtension!WamExtensionContext::GetLsaFunctions`, that was triggered. I put another one in `aadWamExtension!WamExtensionContext::LsaImpersonateClient` but that was not triggered. Those are the main methods of `WamExtensionContext`. I am pretty sure the right function to be called should be `LsaImpersonateClient`, and oddly enough, analyzing this DLL in IDA revealed that the `GetLsaFunctions` is not listed.

I believe this DLL should be a Authentication Package and the `GetLsaFunctions` is called to get their implementation methods. My next step is to look up into this function disasm.

= Found a DLL into Web Account Manager service
:date: 2023-08-10
:tags: tag_venn tag_reversing

Found a DLL into Web Account Manager service that should be a Authentication Package and the `GetLsaFunctions` is called just before AADBroker is started. My next step for today was to look up into this function disasm.

When AADBroker is aready showing its window and a BSOD occurs (by killing svchost DCOMLaunch, by example) in the next login when Teams starts the sign in process stops again into AADBroker window, without typing a email.

Just discovered something: if stop/disable the Web Account Manager service Teams.exe doesn't start AADBroker to signin and the AAD window is shown by itself. After put password and login to Teams the dsregcmd doesn't show this account available (neither in Email and Accounts settings).

```
sxe ld:aadWamExtension.dll
bp aadWamExtension!WamExtensionContext::GetLsaFunctions
```

```
ntdll!NtMapViewOfSection+0x14:
00007ffb`7eecd4e4 c3              ret
0:010> k
 # Child-SP          RetAddr           Call Site
00 0000006e`ad37e748 00007ffb`7ee44d42 ntdll!NtMapViewOfSection+0x14
01 0000006e`ad37e750 00007ffb`7ee44aaa ntdll!LdrpMinimalMapModule+0x10a
02 0000006e`ad37e810 00007ffb`7ee8fd93 ntdll!LdrpMapDllWithSectionHandle+0x1a
03 0000006e`ad37e860 00007ffb`7ee8fac0 ntdll!LdrpMapDllNtFileName+0x19f
04 0000006e`ad37e960 00007ffb`7ee8ed5f ntdll!LdrpMapDllFullPath+0xe0
05 0000006e`ad37eaf0 00007ffb`7ee4fb53 ntdll!LdrpProcessWork+0x123
06 0000006e`ad37eb50 00007ffb`7ee473e4 ntdll!LdrpLoadDllInternal+0x13f
07 0000006e`ad37ebd0 00007ffb`7ee46af4 ntdll!LdrpLoadDll+0xa8
08 0000006e`ad37ed80 00007ffb`7cb756b2 ntdll!LdrLoadDll+0xe4
09 0000006e`ad37ee70 00007ffb`7dd56b6d KERNELBASE!LoadLibraryExW+0x162
0a 0000006e`ad37eee0 00007ffb`7dd56ab6 combase!LoadLibraryWithLogging+0x2d [onecore\com\combase\common\internal\loadfree.cxx @ 160] 
0b 0000006e`ad37ef20 00007ffb`7dd56888 combase!CClassCache::CDllPathEntry::LoadDll+0x56 [onecore\com\combase\objact\dllcache.cxx @ 2294] 
0c 0000006e`ad37ef80 00007ffb`7dd2a139 combase!CClassCache::CDllPathEntry::Create+0x58 [onecore\com\combase\objact\dllcache.cxx @ 2123] 
0d (Inline Function) --------`-------- combase!CClassCache::GetOrLoadDllPathEntry+0x400 [onecore\com\combase\objact\dllcache.cxx @ 4671] 
0e 0000006e`ad37f030 00007ffb`7dd2d428 combase!CClassCache::GetOrLoadWinRTInprocClass+0x509 [onecore\com\combase\objact\dllcache.cxx @ 4799] 
0f (Inline Function) --------`-------- combase!CCGetOrLoadWinRTInprocClass+0x1f [onecore\com\combase\objact\dllcache.cxx @ 8196] 
10 (Inline Function) --------`-------- combase!WinRTCreateInstanceOfInprocClass+0x4d [onecore\com\combase\objact\objact.cxx @ 2171] 
11 0000006e`ad37f3b0 00007ffb`7dd2dc88 combase!WinRTActivateInstanceInternal+0x1c8 [onecore\com\combase\winrtbase\winrtbase.cpp @ 517] 
12 (Inline Function) --------`-------- combase!_RoActivateInstance+0x95 [onecore\com\combase\winrtbase\winrtbase.cpp @ 769] 
13 0000006e`ad37f570 00007ffb`67559bc3 combase!RoActivateInstance+0xa8 [onecore\com\combase\winrtbase\winrtbase.cpp @ 797] 
14 0000006e`ad37f610 00007ffb`6755a377 tokenbroker!Windows::Foundation::ActivateInstance<Microsoft::WRL::ComPtr<Windows::Internal::Security::Authentication::Web::ITokenBrokerSystemExtension> >+0x2b
15 0000006e`ad37f640 00007ffb`6755a0f1 tokenbroker!Windows::Internal::Security::Authentication::TokenBroker::SystemExtension::Initialize+0x7f
16 0000006e`ad37f680 00007ffb`67559fe2 tokenbroker!Windows::Internal::Security::Authentication::TokenBroker::SystemExtension::FindExtensionWithId+0x69
17 0000006e`ad37f6b0 00007ffb`675707cd tokenbroker!Windows::Internal::Security::Authentication::TokenBroker::SystemExtension::FindExtensionForProvider+0x2aa
18 0000006e`ad37f780 00007ffb`67578af8 tokenbroker!Windows::Internal::Security::Authentication::Web::CTokenBrokerOperation::ActivateProvider+0x2b5
19 0000006e`ad37f8a0 00007ffb`67573cec tokenbroker!Windows::Internal::Security::Authentication::Web::CTokenBrokerOperation::LaunchProvider+0x300
1a 0000006e`ad37fa40 00007ffb`6756b294 tokenbroker!Windows::Internal::Security::Authentication::Web::CTokenBrokerOperation::DoWork+0x1c
1b 0000006e`ad37fa80 00007ffb`6757c3b9 tokenbroker!<lambda_a94ba5d0f87cb9dafc6445b1ca8a4d93>::operator()<Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult> >+0x60
1c 0000006e`ad37fb10 00007ffb`675802fc tokenbroker!Windows::Internal::COperationLambdaVar<1,<lambda_a94ba5d0f87cb9dafc6445b1ca8a4d93>,Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult> >::Run+0x19
1d 0000006e`ad37fb40 00007ffb`6757c389 tokenbroker!Windows::Internal::AsyncOperation<Windows::Foundation::IAsyncOperation<Windows::Security::Authentication::Web::Core::WebTokenRequestResult * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Security::Authentication::Web::Core::WebTokenRequestResult * __ptr64>,Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult>,Windows::Internal::ComTaskPoolHandler,Windows::Internal::INilDelegate,Microsoft::WRL::AsyncOptions<-1,0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::_Run+0xdc
1e 0000006e`ad37fb80 00007ffb`7cf3d492 tokenbroker!Windows::Internal::AsyncOperation<Windows::Foundation::IAsyncOperation<Windows::Security::Authentication::Web::Core::WebTokenRequestResult * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Security::Authentication::Web::Core::WebTokenRequestResult * __ptr64>,Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult>,Windows::Internal::ComTaskPoolHandler,Windows::Internal::INilDelegate,Microsoft::WRL::AsyncOptions<-1,0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::Run+0x69
1f 0000006e`ad37fbb0 00007ffb`7cf16d05 shcore!WorkThreadManager::CThread::RunCurrentTaskUnderLock+0x62
20 0000006e`ad37fbf0 00007ffb`7cf16be0 shcore!WorkThreadManager::CThread::ThreadProc+0xf5
21 0000006e`ad37fe80 00007ffb`7cf153e1 shcore!WorkThreadManager::CThread::s_ExecuteThreadProc+0x18
22 0000006e`ad37feb0 00007ffb`7eab7614 shcore!<lambda_9844335fc14345151eefcc3593dd6895>::<lambda_invoker_cdecl>+0x11
23 0000006e`ad37fee0 00007ffb`7ee826b1 KERNEL32!BaseThreadInitThunk+0x14
24 0000006e`ad37ff10 00000000`00000000 ntdll!RtlUserThreadStart+0x21
```


```
0:010> bp aadWamExtension!WamExtensionContext::GetLsaFunctions
0:010> g
ModLoad: 00007ffb`7c3c0000 00007ffb`7c3f2000   C:\Windows\System32\SspiCli.dll
Breakpoint 0 hit
aadWamExtension!WamExtensionContext::GetLsaFunctions:
00007ffb`742c4610 33c0            xor     eax,eax
0:010> k
 # Child-SP          RetAddr           Call Site
00 0000006e`ad37eff8 00007ffb`742c519c aadWamExtension!WamExtensionContext::GetLsaFunctions
01 0000006e`ad37f000 00007ffb`7dd29f8a aadWamExtension!Microsoft::WRL::ActivationFactory<Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,0>::GetTrustLevel+0x1c
02 (Inline Function) --------`-------- combase!MatchWinRTTrustLevels+0x3d [onecore\com\combase\objact\objact.cxx @ 129] 
03 0000006e`ad37f030 00007ffb`7dd2d428 combase!CClassCache::GetOrLoadWinRTInprocClass+0x35a [onecore\com\combase\objact\dllcache.cxx @ 4822] 
04 (Inline Function) --------`-------- combase!CCGetOrLoadWinRTInprocClass+0x1f [onecore\com\combase\objact\dllcache.cxx @ 8196] 
05 (Inline Function) --------`-------- combase!WinRTCreateInstanceOfInprocClass+0x4d [onecore\com\combase\objact\objact.cxx @ 2171] 
06 0000006e`ad37f3b0 00007ffb`7dd2dc88 combase!WinRTActivateInstanceInternal+0x1c8 [onecore\com\combase\winrtbase\winrtbase.cpp @ 517] 
07 (Inline Function) --------`-------- combase!_RoActivateInstance+0x95 [onecore\com\combase\winrtbase\winrtbase.cpp @ 769] 
08 0000006e`ad37f570 00007ffb`67559bc3 combase!RoActivateInstance+0xa8 [onecore\com\combase\winrtbase\winrtbase.cpp @ 797] 
09 0000006e`ad37f610 00007ffb`6755a377 tokenbroker!Windows::Foundation::ActivateInstance<Microsoft::WRL::ComPtr<Windows::Internal::Security::Authentication::Web::ITokenBrokerSystemExtension> >+0x2b
0a 0000006e`ad37f640 00007ffb`6755a0f1 tokenbroker!Windows::Internal::Security::Authentication::TokenBroker::SystemExtension::Initialize+0x7f
0b 0000006e`ad37f680 00007ffb`67559fe2 tokenbroker!Windows::Internal::Security::Authentication::TokenBroker::SystemExtension::FindExtensionWithId+0x69
0c 0000006e`ad37f6b0 00007ffb`675707cd tokenbroker!Windows::Internal::Security::Authentication::TokenBroker::SystemExtension::FindExtensionForProvider+0x2aa
0d 0000006e`ad37f780 00007ffb`67578af8 tokenbroker!Windows::Internal::Security::Authentication::Web::CTokenBrokerOperation::ActivateProvider+0x2b5
0e 0000006e`ad37f8a0 00007ffb`67573cec tokenbroker!Windows::Internal::Security::Authentication::Web::CTokenBrokerOperation::LaunchProvider+0x300
0f 0000006e`ad37fa40 00007ffb`6756b294 tokenbroker!Windows::Internal::Security::Authentication::Web::CTokenBrokerOperation::DoWork+0x1c
10 0000006e`ad37fa80 00007ffb`6757c3b9 tokenbroker!<lambda_a94ba5d0f87cb9dafc6445b1ca8a4d93>::operator()<Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult> >+0x60
11 0000006e`ad37fb10 00007ffb`675802fc tokenbroker!Windows::Internal::COperationLambdaVar<1,<lambda_a94ba5d0f87cb9dafc6445b1ca8a4d93>,Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult> >::Run+0x19
12 0000006e`ad37fb40 00007ffb`6757c389 tokenbroker!Windows::Internal::AsyncOperation<Windows::Foundation::IAsyncOperation<Windows::Security::Authentication::Web::Core::WebTokenRequestResult * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Security::Authentication::Web::Core::WebTokenRequestResult * __ptr64>,Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult>,Windows::Internal::ComTaskPoolHandler,Windows::Internal::INilDelegate,Microsoft::WRL::AsyncOptions<-1,0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::_Run+0xdc
13 0000006e`ad37fb80 00007ffb`7cf3d492 tokenbroker!Windows::Internal::AsyncOperation<Windows::Foundation::IAsyncOperation<Windows::Security::Authentication::Web::Core::WebTokenRequestResult * __ptr64>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Security::Authentication::Web::Core::WebTokenRequestResult * __ptr64>,Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult>,Windows::Internal::ComTaskPoolHandler,Windows::Internal::INilDelegate,Microsoft::WRL::AsyncOptions<-1,0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::Run+0x69
14 0000006e`ad37fbb0 00007ffb`7cf16d05 shcore!WorkThreadManager::CThread::RunCurrentTaskUnderLock+0x62
15 0000006e`ad37fbf0 00007ffb`7cf16be0 shcore!WorkThreadManager::CThread::ThreadProc+0xf5
16 0000006e`ad37fe80 00007ffb`7cf153e1 shcore!WorkThreadManager::CThread::s_ExecuteThreadProc+0x18
17 0000006e`ad37feb0 00007ffb`7eab7614 shcore!<lambda_9844335fc14345151eefcc3593dd6895>::<lambda_invoker_cdecl>+0x11
18 0000006e`ad37fee0 00007ffb`7ee826b1 KERNEL32!BaseThreadInitThunk+0x14
19 0000006e`ad37ff10 00000000`00000000 ntdll!RtlUserThreadStart+0x21
```


```
Teams.exe
  26  Id: 450.1230 Suspend: 1 Teb: 00000009`0edca000 Unfrozen
 # Child-SP          RetAddr           : Args to Child                                                           : Call Site
00 00000009`22dff0f8 00007ffb`7cb91b40 : 00000000`00000020 00007ffb`7ee43479 00000000`0004000d 00000000`0000001b : ntdll!NtWaitForMultipleObjects+0x14
01 00000009`22dff100 00007ffb`7ddc7505 : 00000188`f05d0001 00000000`00000000 00000000`00000000 00000000`00000002 : KERNELBASE!WaitForMultipleObjectsEx+0xf0
02 00000009`22dff3f0 00007ffb`7dd89746 : 00000000`00000008 00000009`22dff4d0 00000000`00000002 00000009`22dff500 : combase!DefaultWaitForHandles+0x45 [onecore\com\combase\dcomrem\sync.cxx @ 38] 
03 00000009`22dff450 00007ffb`67896c27 : 00000000`00000000 00000009`22dff4e0 ffffffff`ffffedd0 00000188`f53128b0 : combase!CoWaitForMultipleHandles+0x76 [onecore\com\combase\dcomrem\sync.cxx @ 123] 
04 00000009`22dff490 00007ffb`67896038 : 00000000`00000000 00000000`00000000 00000188`f53128b0 00000000`00000000 : Windows_Security_Authentication_Web_Core!WaitForCompletion<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Security::Authentication::Web::Core::WebTokenRequestResult * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Security::Authentication::Web::Core::WebTokenRequestResult * __ptr64> >+0xaf
05 00000009`22dff500 00007ffb`677fe43c : 00000000`00001230 00000188`f537a5d0 00000000`00000000 00000000`000702ae : Windows_Security_Authentication_Web_Core!BlockOnCompletionAndGetResults<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Security::Authentication::Web::Core::WebTokenRequestResult * __ptr64>,Windows::Foundation::IAsyncOperation<Windows::Security::Authentication::Web::Core::WebTokenRequestResult * __ptr64>,Windows::Security::Authentication::Web::Core::IWebTokenRequestResult * __ptr64>+0x18
06 00000009`22dff530 00007ffb`677e55a1 : 00000000`00000000 00000000`00000000 00000000`0000116c 00000188`f5348630 : Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryUi+0x390
07 00000009`22dff5f0 00007ffb`677f7c8f : 00000188`f5382aa0 00000188`f532af00 00000188`f532b018 00000188`f537add8 : Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::DoWork+0x331
08 00000009`22dff770 00007ffb`677fdba9 : 00000188`f532af00 00000188`f2e12430 00000000`00000000 00000000`00a84034 : Windows_Security_Authentication_Web_Core!<lambda_b4251670e5671f0606e8a09c349557a5>::operator()<Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult> >+0x7f
09 00000009`22dff810 00007ffb`677fae7a : 00000000`00000450 00000000`00001230 00000000`0000000f 00000000`0000000b : Windows_Security_Authentication_Web_Core!Windows::Internal::COperationLambdaVar<1,<lambda_b4251670e5671f0606e8a09c349557a5>,Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult> >::Run+0x19
0a 00000009`22dff840 00007ffb`7cf3d492 : 00000000`00000000 00000188`f2e12430 00000009`00000000 00000188`f2e12430 : Windows_Security_Authentication_Web_Core!Windows::Internal::AsyncOperation<Windows::Foundation::IAsyncOperation<Windows::Security::Authentication::Web::Core::WebTokenRequestResult *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Security::Authentication::Web::Core::WebTokenRequestResult *>,Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult>,Windows::Internal::ComTaskPoolHandler,Windows::Internal::INilDelegate,Microsoft::WRL::AsyncOptions<-1,0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::Run+0x7a
0b 00000009`22dff8a0 00007ffb`7cf16d05 : 00000188`f2e12500 00000009`22dff9e0 00000188`f2e12430 00000000`00000000 : shcore!WorkThreadManager::CThread::RunCurrentTaskUnderLock+0x62
0c 00000009`22dff8e0 00007ffb`7cf16be0 : 00000000`00000001 00000000`00000001 00000188`f532a0a8 00000000`00000000 : shcore!WorkThreadManager::CThread::ThreadProc+0xf5
0d 00000009`22dffb70 00007ffb`7cf153e1 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : shcore!WorkThreadManager::CThread::s_ExecuteThreadProc+0x18
0e 00000009`22dffba0 00007ffb`7eab7614 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : shcore!<lambda_9844335fc14345151eefcc3593dd6895>::<lambda_invoker_cdecl>+0x11
0f 00000009`22dffbd0 00007ffb`7ee826b1 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : KERNEL32!BaseThreadInitThunk+0x14
10 00000009`22dffc00 00000000`00000000 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : ntdll!RtlUserThreadStart+0x21
```

The confusion with `WamExtensionContext::GetLsaFunctions` it was symbol related and now it is disasm related (IDA understands differently this part of code). Anyway, there is a activation being made in TokenBroker and it is generated by Teams into the `CWebTokenRequestResultOperation::TryUi` method. If we could intercept this call or reject the activation Teams will load only the internal window and save the credentials locally, without the system settings option.

https://support.os33.link/v/GWdmkt

I tested inside SE and Teams can login with WAM service disabled and save the credentials between sessions. However, when starting Teams ouside SE it seems the login state was zeroed and after open Teams again inside SE the login window showed up. It is not clear if I am mixing the container settings or it is the app behavior. Anyway, after click on get started and enter email there is no need to enter the password for an existing email that succeeded in login (in this case inside SE). The Teams session start without need to reenter the password.

https://support.os33.link/v/KHn5E6

Highlights:

 - Web Account Manager service (TokenBroker) is responsible for start AADBroker.
 - If we stop/disable WAM service `Teams.exe` show itself login window and do not record credentials in SystemSettings (or is shown in dsregcmd).
 - Credentials saved this way inside SE are persisted.

I believe the key communication between Teams/Windows_Security_Authentication_Web_Core and WAM/aadWamExtension is the activation of the class related to getting the extension for token provider. I am not sure if just capturing the call made in Teams in the `TryUi` method would be enough. That could be the next step, but needs some injection or code/asm to make it work.

= Created a procmon log from WAM service
:date: 2023-08-11
:tags: tag_venn tag_reversing

I created a procmon log from WAM service (the svchost.exe responsible) while starting and typing email account from Teams app. Separate some key events and got this function list from `tokenbroker.dll`:

 - `CWamProviderRegistration::GetFromId`
 - `CTokenBrokerInternalFactory::GetTokenSilentlyAndPrimeSSOWithBgInfo`
 - `GetPackagesByPackageFamily`
 - `TokenBroker::ActivateSilentlyAndGetBuffer`
 - `CallerContext::GetSinglePackageFullNameFromPackageFamilyName`
 - `TokenBroker::PluginRegistration::GetPluginPFN`
 - `Web::GetWebAccountProviderAndGuidFromLSA`
 - `GetDefaultSignInAccount`

```
11	KERNELBASE.dll	QueryFullProcessImageNameW + 0xaa
12	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::CallerContext::_CaptureCallerIdentity + 0x25e
13	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::CallerContext::Initialize + 0x1c8
14	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::CWamProviderRegistration::GetFromId + 0x9e
15	RPCRT4.dll	Invoke + 0x73

11	KERNELBASE.dll	QueryFullProcessImageNameW + 0xaa
12	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::CallerContext::_CaptureCallerIdentity + 0x25e
13	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::CallerContext::Initialize + 0x1c8
14	tokenbroker.dll	GetTokenSilentlyHelper + 0x227
15	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::CTokenBrokerInternalFactory::GetTokenSilentlyAndPrimeSSOWithBgInfo + 0x6c
16	RPCRT4.dll	Invoke + 0x73

10	KERNELBASE.dll	RegOpenCurrentUser + 0x10
11	KERNELBASE.dll	ReservedForLocalUse::OpenFamily + 0x55
12	KERNELBASE.dll	ReservedForLocalUse::_FindPackagesByPackageFamily + 0xc8
13	KERNELBASE.dll	FindPackagesByPackageFamily + 0x5e
14	KERNELBASE.dll	GetPackagesByPackageFamily + 0x29
15	tokenbroker.dll	CallerIdentity::GetSinglePackageFullNameFromPackageFamilyName + 0x4b
16	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::CallerContext::GetSinglePackageFullNameFromPackageFamilyName + 0x5e
17	tokenbroker.dll	Windows::Internal::Security::Authentication::TokenBroker::ActivateSilentlyAndGetBuffer + 0x10a
18	tokenbroker.dll	GetTokenSilentlyHelper + 0x4e2
19	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::CTokenBrokerInternalFactory::GetTokenSilentlyAndPrimeSSOWithBgInfo + 0x6c
20	RPCRT4.dll	Invoke + 0x73

8	KERNELBASE.dll	RegOpenKeyExInternalW + 0x141
9	KERNELBASE.dll	ReservedForLocalUse::OpenFamily + 0x7c
10	KERNELBASE.dll	ReservedForLocalUse::_FindPackagesByPackageFamily + 0xc8
11	KERNELBASE.dll	FindPackagesByPackageFamily + 0x5e
12	KERNELBASE.dll	GetPackagesByPackageFamily + 0x29
13	tokenbroker.dll	CallerIdentity::GetSinglePackageFullNameFromPackageFamilyName + 0x4b
14	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::CallerContext::GetSinglePackageFullNameFromPackageFamilyName + 0x5e
15	tokenbroker.dll	Windows::Internal::Security::Authentication::TokenBroker::ActivateSilentlyAndGetBuffer + 0x10a
16	tokenbroker.dll	GetTokenSilentlyHelper + 0x4e2
17	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::CTokenBrokerInternalFactory::GetTokenSilentlyAndPrimeSSOWithBgInfo + 0x6c
18	RPCRT4.dll	Invoke + 0x73

11	KERNELBASE.dll	QueryFullProcessImageNameW + 0xaa
12	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::CallerContext::_CaptureCallerIdentity + 0x25e
13	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::CallerContext::Initialize + 0x1c8
14	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::CWamProviderRegistration::GetFromId + 0x9e
15	tokenbroker.dll	Windows::Internal::Security::Authentication::TokenBroker::PluginRegistration::GetPluginPFN + 0x11f
16	tokenbroker.dll	CreateRequestHash + 0x276
17	tokenbroker.dll	GetTokenSilentlyHelper + 0x791
18	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::CTokenBrokerInternalFactory::GetTokenSilentlyAndPrimeSSOWithBgInfo + 0x6c
19	RPCRT4.dll	Invoke + 0x73

13	KERNELBASE.dll	RegOpenKeyExW + 0x19
14	IDStore.dll	CIdentityProviderReg::Initialize + 0x23e
15	IDStore.dll	ATL::CComCreator<ATL::CComObject<CIdentityStore> >::CreateInstance + 0x1b5
16	combase.dll	ICoCreateInstanceEx + 0x4d1, onecore\com\combase\objact\objact.cxx(1894)
17	combase.dll	CComActivator::DoCreateInstance + 0x240, onecore\com\combase\objact\immact.hxx(294)
18	combase.dll	CoCreateInstance + 0x10c, onecore\com\combase\objact\actapi.cxx(121)
19	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::GetWebAccountProviderAndGuidFromLSA + 0x1aa
20	tokenbroker.dll	GetDefaultSignInAccount + 0x4b9
21	tokenbroker.dll	<lambda_3c6013a5e1d832ba4a7ca830f09d3bc6>::operator()<Windows::Internal::CMarshaledInterfaceResult<Windows::Internal::Security::Authentication::Web::IGetDefaultSignInAccountResult> > + 0xca
22	tokenbroker.dll	Windows::Internal::COperationLambdaVar<0,<lambda_3c6013a5e1d832ba4a7ca830f09d3bc6>,Windows::Internal::CMarshaledInterfaceResult<Windows::Internal::Security::Authentication::Web::IGetDefaultSignInAccountResult> >::Run + 0x26
23	tokenbroker.dll	Windows::Internal::AsyncOperation<Windows::Foundation::IAsyncOperation<Windows::Internal::Security::Authentication::Web::GetDefaultSignInAccountResult *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Internal::Security::Authentication::Web::GetDefaultSignInAccountResult *>,Windows::Internal::CMarshaledInterfaceResult<Windows::Internal::Security::Authentication::Web::IGetDefaultSignInAccountResult>,Windows::Internal::ComTaskPoolHandler,Windows::Int + 0x7a
24	shcore.dll	WorkThreadManager::CThread::RunCurrentTaskUnderLock + 0x62
```

Interesting. After click the Start button on Teams first Window the svchost.exe responsible for WAM has a file operation that has in its stack the functions `GetAllProviderAccountsFromDataStore`, `StoredObjectInfoWithCache::ReadAllObjectIdsForTypeFromCache` and `CWamObjectStore::GetEntry`. These functions can be related to storage and cache (more todos).

```
11	KERNELBASE.dll	QueryFullProcessImageNameW + 0xaa
12	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::CallerContext::_CaptureCallerIdentity + 0x25e
13	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::CallerContext::Initialize + 0x1c8
14	tokenbroker.dll	WamObjectStoreImplementation::GetEntry + 0xb4
15	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::CWamObjectStore::GetEntry + 0x35
16	tokenbroker.dll	Windows::Internal::Security::Authentication::TokenBroker::StoredObjectInfoWithCache::ReadAllObjectIdsForTypeFromCache + 0x1ca
17	tokenbroker.dll	GetAllProviderAccountsFromDataStore + 0x565
18	tokenbroker.dll	Windows::Internal::Security::Authentication::Web::FindAllSystemAccountsOperation + 0x67d
19	tokenbroker.dll	<lambda_e14b63ed13d8d5db45baaa0d814043fa>::operator()<Windows::Internal::CMarshaledInterfaceResult<Windows::Foundation::Collections::IVectorView<Windows::Security::Credentials::WebAccount *> > > + 0x5e
20	tokenbroker.dll	Windows::Internal::COperationLambdaVar<0,<lambda_e14b63ed13d8d5db45baaa0d814043fa>,Windows::Internal::CMarshaledInterfaceResult<Windows::Foundation::Collections::IVectorView<Windows::Security::Credentials::WebAccount *> > >::Run + 0x26
21	tokenbroker.dll	Windows::Internal::AsyncOperation<Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Security::Credentials::WebAccount *> *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Security::Credentials::WebAccount *> *>,Windows::Internal::CMarshaledInterfaceResult<Windows::Foundation::Collections::IVectorView<Windows::Security::Credentials::WebAccount *> >,Windows::Inter + 0x7f
22	shcore.dll	WorkThreadManager::CThread::RunCurrentTaskUnderLock + 0x62
```

= Get interfaces called from Teams
:date: 2023-08-12
:tags: tag_venn tag_reversing

Today I am going to get interfaces called from Teams when activating WAM classes.

I got a issue trying to enroll my device. The generated QR code seems to expire instantaneously: https://support.os33.link/v/BStvNV

The first step to locate the first communication point between Teams and WAM is to get the event QueryNameInformationFile from svchost TokenBroker to file Teams.exe. The stack from this event when recording only svchost has the class CWamProviderRegistration. Found it:

9:55:56.5789000 AM	svchost.exe	3040	9544	QueryNameInformationFile	C:\Users\Administrator\AppData\Local\Microsoft\Teams\current\Teams.exe	SUCCESS	Name: \Users\Administrator\AppData\Local\Microsoft\Teams\current\Teams.exe

Before this event there is a registry read from Teams to the interface `{E60E20A2-87A0-4B34-8502-EE3B8FB4EC16}` with the default value set as "__x_Windows_CInternal_CSecurity_CAuthentication_CWeb_CIWamProviderRegistrationStatics". I believe that is the guy.

9:55:56.5516851 AM	Teams.exe	1336	9280	RegOpenKey	HKCR\Interface\{E60E20A2-87A0-4B34-8502-EE3B8FB4EC16}	SUCCESS	Desired Access: Read

The stack has the following functions:

 - [RoGetActivationFactory](https://learn.microsoft.com/en-us/windows/win32/api/roapi/nf-roapi-rogetactivationfactory)
 - `TokenBroker::PluginRegistration::GetWebAccountProviderFromIdAndAuthority`

```
27	combase.dll	WinRTGetActivationFactoryOfOutofprocClass + 0x144, onecore\com\combase\objact\objact.cxx(2453)
28	combase.dll	_RoGetActivationFactory + 0x6d4, onecore\com\combase\winrtbase\winrtbase.cpp(989)
29	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::Security::Authentication::TokenBroker::PluginRegistration::GetWebAccountProviderFromIdAndAuthority + 0x4b6
30	Windows.Security.Authentication.Web.Core.dll	Windows::Security::Authentication::Web::Core::CCoreFindAccountProviderOperation::DoWork + 0x39
```

It is possible that by catching the call from RoGetActivationFactory for the specific class id and interface id and deny it or replace it we can avoid AADBroker to instantiate.

```
bp combase!_RoGetActivationFactory "du poi(rcx+0x10) ; g
```

Running with WinDbg Teams.exe delays a little to start, but with the breakpoint in RoGetActivationFactory Teams delays a lot longer, in the minutes. There are a lot of calls to this function to instanciate several times the following WinRT classes:

 - Windows.Data.Json.JsonObject
 - Windows.Foundation.Diagnostics.AsyncCausalityTracer
 - Windows.Foundation.Metadata.ApiInformation
 - Windows.Foundation.PropertyValue
 - Windows.Foundation.Uri
 - Windows.Foundation.UriWindows.Foundation.Uri
 - Windows.Internal.Security.Authentication.Web.TokenBrokerInternal
 - **Windows.Internal.Security.Authentication.Web.WamProviderRegistration**
 - Windows.Internal.Security.Credentials.WebAccountInternal
 - Windows.Internal.Security.Credentials.WebAccountProviderInternal
 - Windows.Management.Deployment.PackageManager
 - Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager
 - Windows.Security.Authentication.Web.Core.WebTokenRequest
 - Windows.Security.Authentication.Web.Core.WebTokenRequestResult
 - Windows.Storage.Streams.DataReader
 - Windows.System.UserProfile.GlobalizationPreferences

If I could compare strings in WinDbg or just a piece of it I could speed this session. Knowing that the 46th character from "Windows.Internal.Security.Authentication.Web.WamProviderRegistration" is "W" and knowing that this offset in a UNICODE string equals 0n90, we can stop the process just in this case. However, even this is very slow.

```
bp combase!_RoGetActivationFactory "du poi(rcx+0x10) ; ?by(poi(rcx+0x10)+0x90) ; j by(poi(rcx+0x10)+0x90)=0n87 du poi(rcx+0x10) ; g"
```

Found some references to RoGetActivationFactory in WinRT protection. The next step is to study this code and see how to insert this class and avoid WAM communication.

= Source code reading
:date: 2023-08-14
:tags: tag_venn tag_reversing

Today was source code reading. I am pretty sure the class I need to use to test the concept is WinRtProtection. I would need to add to the method [InitializeClasses](https://tfs.os33.net/DefaultCollection/Portal/_git/Workplace.Container.Windows?path=%2FWorkplace.Container.Hook%2FWorkplace.Container.Hook.Lib%2FWinRtProtection.cpp&version=GBmaster&line=385&lineEnd=386&lineStartColumn=1&lineEndColumn=1&lineStyle=plain&_a=contents) the class `Windows.Internal.Security.Authentication.Web.WamProviderRegistration`, but it happens to be the first class in the hard coded list, what should means that the protection was already implemented, but must be disabled for some reason.

= A quick solution 
:date: 2023-08-16
:tags: tag_venn tag_reversing

After meeting with Alexander Chermyanin we decided to create a quick solution based on client side logic only without dll injection and hooks (what would be, just for reference, [this code](https://tfs.os33.net/DefaultCollection/Portal/_git/Workplace.Container.Windows/commit/ba24c54cd12097d4642f83b86402ed4c909796a0?refName=refs%2Fheads%2Fspike%2Fuwp-launcher)).

We are going to change COM request from [ComProxy](https://tfs.os33.net/DefaultCollection/Portal/_git/Workplace.Container.Windows?path=%2FWorkplace.Container%2FWorkplace.Container.Helper%2FCom%2FComProxyService.cs&version=GBmaster&_a=contents) and use BlockAADWorkplaceJoin flag on container session starting.

If this won't be enough we will continue research.

The first task will be to compile and run a debug version of the hook to bp the part I need to change. It could be done with remote debugging?

First I got error attaching to inside SE processes (running Demo). Then with the help of Aleksey Koslov I realized my user wcaloni.dlp was withouth feature settings [in the portal](https://www.os33dev.com/Home/System/ConfigForm.aspx?_id=4817965d-3624-46b8-b90e-c0f04a664469&_c=1&_i=0&_flock=False). Then I added it, but when running Demo the feature flags downloaded was still True.

```
Should Install (n|y) ?
y
Writing in registry HKLM\Software\OS33 Inc\Workplace\Container\InstallContainerComponentIntoCurrent = 1
Installing version 1.0.8626.32073...
Should Uninstall (n|y) ?
n
Login under user from app.config
Mount vhdx c:\ProgramData\Workplace\Container\ContainerDemoVHDX\wcaloni.dlp_Workplace.vhdx on path c:\ProgramData\Workplace\Container\ContainerDemoVHDX\wcaloni.dlp-MountPoint
Feature flags:
...
ContainerProtectionEnabled = True

Rules:
{
  "file": []
}
Mount Drive. Letter: X, Path: C:\ProgramData\Workplace\FakeDrive. Unc: \Device\HarddiskVolume3\ProgramData\Workplace\FakeDrive
Starting container session
...
```

Ops, I need to save changes after create a new list item. Copied from ZYang.dlp because I know he is already debugging com proxy successfully.

```
{
 "containerSetupRetryTimeout":15,
 "containerServiceStartRetryTimeout":3,
 "containerServiceStartThroughServiceManagerEnabled": true,
 "policy":
 {
   "serviceHosts": ["https://www.os33dev.com", "https://www2.os33dev.net"],
   "policyRefreshTimeout": 3600 //number in seconds
 },
 "gateway":
 {
   "serviceHosts": ["https://www.os33dev.com", "https://www2.os33dev.net"],
   "keepAliveTimeout": 600, //number in seconds
   "dnsPort": 53,
   "dnsPortWindows": 8853
 },
 "activity":
 {
   "serviceHosts": ["https://www.os33dev.com", "https://www2.os33dev.net"]
 },
 "virtualDisk":
 {
   "serviceHosts": ["https://www.os33dev.com", "https://www2.os33dev.net"]
 },
 "crashDumpType": 1,
 "gatewayManager": {
   "bfdTimeout": 5,
   "pingTimeout": 5
 },
 "featureFlags":{
 //windows helper
    "ContainerHelperForAllEnabled": true,
    "ContainerHelperEnabled": true,
    "ExplorerLaunchEnabled": true,
    "ComProxyEnabled": true,

//windows badge
    "BadgeTopmostEnabled": true,
//
//windows driver - disabled
    "ContainerProtectionEnabled" : false,
    "DrivePathProtectionEnabled": false,
	
//windows driver
    "RegistryRedirectionEnabled": true,
    "RegistryProtectionEnabled": true,
    "FileRedirectionEnabled": true,
    "ReadOnlyFileSystemEnabled": true,
    "KeyLoggerEnabled": true,	
    "LockContainerSessionEnabled": true,	
    "RegistryForceAccessCheckEnabled": true,
    "RememberDeletedRegistryKeys": true,
    "InstallAod": true,
    "InstallContainerComponentIntoCurrent": true,

//workarounds&debug
    "FakePrinterEnabled": false,
    "DebugModeEnabled": false,
    "DisableProtectedViewEnabled": false,
    "GlobalProtectWorkaroundEnabled": false,
    "SecurityAttributesWorkaroundEnabled": false,
    "CrashOnWrongRegistryOperation": false,
    "DisableAADWAM": false,

//windows hooks- disabled
    "HookDragAndDropEnabled": false,
    "HookSystemDragAndDropAllowed": false,
    "HookDisablePrintersEnabled": false,
    "HookHidePrintDialogEnabled": false,
    
//windows hooks- enabled
    "HookAntiScreenEnabled": true,
    "HookClipboardV2Enabled": true,
    "HookFileDialogEnabled": true,
    "HookAppStartAfterRebootAllowed": true,
    "HookRecentFilesEnabled":true,
    "WindowNotificationsEnabled": true,
    "MessageWindowIsolationEnabled": true,
    "HookDNSRPCEnabled": true,
    "HookNamedObjectIsolationEnabled": true,
    "HookWinRtEnabled": true,
    "HookIpv6Enabled": true,
    "HookFileRedirectionEnabled": true,
    "ShellChangeNotifyHook": true,
    "ToastNotificationEnabled": true,  
    "BorderTransparencyDetectionEnabled": true,
    "HookPrinterListFilterEnabled": true,
    "ConcurrentInvertedProtocolEnabled" : true,
    "ThirdPartyFileSystemsEnabled": true,
    "SystemTrayIconBorderEnabled" : true,
    "DynamicDataExchangeHook" : true,
    
//windows network
    "BfdEnabled": true,
    "SimpleOfflineEnable": true,
    "DnsCacheEnabled": true,
    "GatewayDnsEnabled": true,
    "AADBrokerPluginNetworkRedirectionEnabled": true,
    "LocalRoutesEnabled": true,
    "WebCacheEnabled": true,
    "ExternalVpnEnabled":true,	
    "DnsRedirectionEnabled": true,
    "NetworkRedirectionEnabled": true,
    "BypassNetworksFromPolicyEnabled": true,
    "NetworkAccessPolicyEnabled": true,
    "DisableIpV6": true,

//windows- Workplace logic - disabled
    "BoxDriveEnabled": false,
    "LZOneDriveEnabled": false,
    "SingleInstanceEnabled": false,

//windows- Workplace logic
    "AllowWorkplaceDriveInContainerOnly": true,
    "ConnectivityMonitoringEnabled": true,
    "PowerThrottlingManagerEnabled": true,
    "LocalZoneProfileVhdxEnabled": true,
    "ForceInstallWorkplaceBrowserExtension": true,
    "ApplicationInsightsLoggerEnabled": true,
    "ApplicationInsightsPerformanceCollectorEnabled": true,
    "VennDiskEnabled": true,
    "VhdxEncryptionFlags": "None",
    "CompactVhdxEnabled": true,
    "HideBitlockerManagementEnabled": true,
    "VennLocalMachineHiveCleanupEnabled": true,
    "WorkplaceDriveOnVennDiskEnabled": true,
    "FixFirewallBugWithDeviceReattachment": true,

    // mac feature flags
   "MacEnforceLinksToLZ" : false, // don't use, to remove
   "MacEnforceLinksToLZv2" : true,
   "MacReadOnlyFileSystemEnabled": true,
   "MacAllowWorkplaceDriveInContainerOnly": true,
   "MacPreciseBorderForOverlappedPopups" : true,
   "MacOpenDefaultBrowserInContainerEnabled": true,
   "MacSetDownloadsFolderUsingSettings": true,
   "MacOfflineModeEnabled": true,
   "MacStreamAppHotfixWithDoubleVPNTunnelRestart": false,
   "MacClipboardManagerEnabled": true,
   "MacBadgeStartOnCreateContainerSession": true,
   "MacIsolationEnabled": false,
   "MacConnectivityStatusEnabled": true,
   "MacConfirmSessionOnlyWhenClipboardManagerIsRunning": false,
   "MacGatewayDnsEnabled" : true,
   "MacBFDLogicEnabled" : true,
   "MacUseRefactoredBadgeInfrastructure" : true
  },
  "badge":{ },
    "rules":{
      "file":[
              {
                  "name":"onedrive for business folder allow",
                  "path":[
                    "%userprofile%\\OneDrive",
                    "%userprofile%\\OneDrive - os33",
                    "%userprofile%\\OneDrive - dlp"
                   ],
                   "insideContainer":true,
                   "action":"no-action"
              }
            ]
           }
}
```

Now everything seems right =)

```
Should Install (n|y) ?
n
Should Uninstall (n|y) ?
n
Login under user from app.config
Mount vhdx c:\ProgramData\Workplace\Container\ContainerDemoVHDX\wcaloni.dlp_Workplace.vhdx on path c:\ProgramData\Workplace\Container\ContainerDemoVHDX\wcaloni.dlp-MountPoint
Feature flags:
BfdEnabled = True
ContainerHelperEnabled = True
ExplorerLaunchEnabled = True
ConnectivityMonitoringEnabled = True
SimpleOfflineEnable = True
DisableAADWAM = False
HookClipboardEnabled = False
HookClipboardV2Enabled = True
HookAntiScreenEnabled = True
HookDisablePrintersEnabled = False
HookHidePrintDialogEnabled = False
HookFileDialogEnabled = True
HookDragAndDropEnabled = False
HookRecentFilesEnabled = True
HookIpv6Enabled = True
HookDnsRpcEnabled = True
HookNamedObjectIsolationEnabled = True
ComProxyEnabled = True
WindowNotificationsEnabled = True
HookWinRtEnabled = True
MessageWindowIsolationEnabled = True
ContainerHelperForAllEnabled = True
ToastNotificationEnabled = True
HookFileRedirectionEnabled = True
HookSystemDragAndDropAllowed = False
AllowWorkplaceDriveInContainerOnly = True
RegistryRedirectionEnabled = True
ReadOnlyFileSystemEnabled = True
FileRedirectionEnabled = True
RegistryProtectionEnabled = True
NetworkRedirectionEnabled = True
DnsRedirectionEnabled = True
AADBrokerPluginNetworkRedirectionEnabled = True
SingleInstanceEnabled = False
LocalRoutesEnabled = True
GlobalProtectWorkaroundEnabled = False
RememberDeletedRegistryKeys = True
CrashOnWrongRegistryOperation = False
SecurityAttributesWorkaroundEnabled = False
ContainerProtectionEnabled = False
RegistryForceAccessCheckEnabled = True
WindowHookProtection = False
KeyLoggerEnabled = True
ExternalVpnEnabled = True
FQDNExclusionsEnabled = False
HookAppStartAfterRebootAllowed = True
HookPrinterListFilterEnabled = True
DnsCacheEnabled = True
GatewayDnsEnabled = True
WebCacheEnabled = True
LocalZoneProfileVhdxEnabled = True
PowerThrottlingManagerEnabled = True
LockContainerSessionEnabled = True
ForceInstallWorkplaceBrowserExtension = True
ApplicationInsightsLoggerEnabled = True
ApplicationInsightsPerformanceCollectorEnabled = True
CompactVhdxEnabled = True
VhdxEncryptionFlags = None
BorderTransparencyDetectionEnabled = True
VennDiskEnabled = True
LZOneDriveEnabled = False
BoxDriveEnabled = False
DisableProtectedViewEnabled = False
DebugModeEnabled = False
FakePrinterEnabled = False
ShellChangeNotifyHook = True
VennLocalMachineHiveCleanupEnabled = True
WorkplaceDriveOnVennDiskEnabled = True
ThirdPartyFileSystemsEnabled = True
BadgeTopmostEnabled = True
ConcurrentInvertedProtocolEnabled = True
SystemTrayIconBorderEnabled = True
BypassNetworksFromPolicyEnabled = True
FixFirewallBugWithDeviceReattachment = True
StartSpooler = False
NetworkAccessPolicyEnabled = True
InstallAod = True
InstallContainerComponentIntoCurrent = True
IpcBinarySerializationEnabled = False
DynamicDataExchangeHook = True
ChromeWorkaroundEnabled = False
GpoSupportEnabled = False
WebProxyEnabled = False
DisableIpV6 = True
MicrosoftWebCamHook = False
HideExplorerStartup = False
ClickOnceEnabled = False
EncompassEnabled = False
WmiMethodsFilterEnabled = False
BITSEnabled = False
UwpFullTrustProcessSupportEnabled = False

Rules:
{
  "file": [
    {
      "name": "onedrive for business folder allow",
      "path": [
        "%userprofile%\\OneDrive",
        "%userprofile%\\OneDrive - os33",
        "%userprofile%\\OneDrive - dlp"
      ],
      "insideContainer": true,
      "action": "no-action"
    }
  ]
}
Mount Drive. Letter: X, Path: C:\ProgramData\Workplace\FakeDrive. Unc: \Device\HarddiskVolume3\ProgramData\Workplace\FakeDrive
Starting container session
Info: Starting container service
Info: Starting container service through service manager.
Info: Session 77479432-3072-41e5-bdbf-2461e5effeaf was added to storage
Info: Creating new container session
Info: Key-exchange (Workplacecreate-container-session)
Info: Key-exchange (Workplacecreate-container-session) completed
Verbose: IpcClientLogger. SendRequestAsync. Endpoint: Workplacecreate-container-session. Request started: 2023-08-16 12:30:24.945. Elapsed time: 00:00:01.9775986
Info: Received container's response
Verbose: Start signature calculation
Verbose: Finish signature calculation
Info: Container requested service token for dlp-virtual-disk-service scope. Request: get-service-token (1f3b3386-86e3-4b9e-b4a7-7ccf30f155fd)
```

Breakpoint to `RoGetActivationFactory` set and getting input from Teams. Now the next part is to block the instantiation of "Windows.Internal.Security.Authentication.Web.WamProviderRegistration" to see if we can raw block the WAM communication.

An exception is being thrown by Teams. It could be the hresult (`HRESULT_FROM_WIN32(ERROR_SERVICE_NOT_FOUND)`) so I am going to try to detect what kind of error is returned when the WAM service is down.

It is the same error. After some tries to run inside SE debugging the hook DLL and with WAM disabled I was able to catch this situation:

```
const wchar_t *strClassId = "Windows.Internal.Security.Authentication.Web.WamProviderRegistration";
hr = HRESULT_FROM_WIN32(ERROR_SERVICE_DISABLED); // The service cannot be started, either because it is disabled or because it has no enabled devices associated with it.
```

debug_teams_error_activating.png

debug_teams_exception_after_error_activating1.png

debug_teams_exception_after_error_activating2.png

My purpose is to emulate this behavior inside SE and without stopping/disabling WAM service (just using the client side hook), so I created a list of classes to emulate the same error:

```
if (IsBlockedRt(strClassId, pRetAddr))
{
    HRESULT hr = HRESULT_FROM_WIN32(ERROR_SERVICE_NOT_FOUND);
    Logger::GetInstance().ErrorFormat(LogSource::WRT,  L"RoGetActivationFactory blocked rclsid=%s; hr=%x;",
                                      strClassId, hr);
    return hr;
}
```

The result is one error trying to activate the class, Teams restart the first time and then use local signin. Bellow a sample of the new log (middle line).

https://support.os33.link/v/cHtsBh

```
2023-08-17 00:18:11.741 - [INFO] - [1:10404:9308] - [teams.exe] - [COM] - IsOpenClsid (false). Has CLSCTX_LOCAL_SERVER: false. rclsid: 0000034b-0000-0000-c000-000000000046, friendly name: 0000034b-0000-0000-c000-000000000046, clsctx: 1
2023-08-17 00:18:11.754 - [ERRO] - [1:10404:11220] - [teams.exe] - [WRT] - RoGetActivationFactory blocked rclsid=Windows.Internal.Security.Authentication.Web.WamProviderRegistration; hr=800704db;
2023-08-17 00:18:11.840 - [INFO] - [1:10404:9308] - [teams.exe] - [COM] - IsOpenClsid (false). Has CLSCTX_LOCAL_SERVER: false. rclsid: 54e211b6-3650-4f75-8334-fa359598e1c5, friendly name: 54e211b6-3650-4f75-8334-fa359598e1c5, clsctx: 1
```

The only class we are blocking now is "Windows.Internal.Security.Authentication.Web.WamProviderRegistration" because in this PoC it is responsible for Teams app to know that WAM is responsive and so it will open the signin window from AAD Broker. Returning in the function `RoGetActivationFactory` the error ERROR_SERVICE_NOT_FOUND Teams restart and signin using local window. In this behavior the credentials from this account are not saved into System.Settings or the command `dsregcmd.exe /status`.

done:

 - Created PoC (PR) where WamProviderRegistration class activation returns an error in SE and avoid System.Settings.

todo:

 - Analyze allow class activation, build a proxy, but manipulate behavior somehow.

= Tests with Office and WAM disabled failed
:date: 2023-08-17
:tags: tag_venn tag_reversing

Tested with Office outside SE (same test used for Teams).

When running Word with WAM disabled it hangs after email entered. Some invisible dialog box must be stuck in a loop. Same thing with Excel. Window in Outlook can be closed, but it is hanging in the same activate office task.

This hack needs investigation to workaround Office signin. This would be my next step (analyze allow class activation, build a proxy, but manipulate behavior somehow), but now with a step behind =/

word_frozen.png

excel_frozen.png

Just as Teams instances, office windows when started by msedgewebview is using [Mojo](https://chromium.googlesource.com/chromium/src/+/refs/heads/main/mojo/public/cpp/platform/README.md) to IPC among them (not that this is relevant).

office_mojo.png

Getting some procmon logs noticed this `OfficeClickToRun.exe` makes a lot of changes in a file called `operations.db` that it is a sqlite database. There are dozens of tables and information about versions.

During activation, the process `RuntimeBroker.exe` started to write some binary values into registry to the service bam, that is a driver. There were entries to specific paths to the disk (named without the drive symbolic link) and there was single values such as the AADBroker folder.

Tested again by readings to interface `{E60E20A2-87A0-4B34-8502-EE3B8FB4EC16}` and none occured (even in the boot) when WAM service is disabled. Even Teams were not reading this value. I assume there is some type of check in WinRT API before reading the interface ID, because after enabling WAM again the readings started to show up in procmon.

Teams persist into isolated signin (without using AADBroker) until (I think) `BackgroundTaskHost.exe -ServerName:BackgroundTaskHost.WebAccountProvider` reads the interface key. When Teams switch its signin mode the process restarts.

In the case of Winword.exe with WAM running it starts by reading the interface key, together with BackgroundTaskHost and msedgewebview2.exe. When WAM is disable there are no readings of any process. This does not stop word from hanging in the its login window, hidden. It is possible to see this window only by resting the cursor into the taskbar.

word_hidden_login_window_frozen.png

Actually, the first information about WinRT classes is captured in the key `HKLM\SOFTWARE\Microsoft\WindowsRuntime` into the `ActivatableClassId` subkey. Into the WamProviderRegistration class we found the Server (TokenBroker) and ActivationType (1). Into the `Server` subkey from WindowsRuntime we found the subkey `TokenBroker` and information about how to run it, such as ServerType value (2) and ServiceName (TokenBroker).

The service `C:\Windows\system32\svchost.exe -k RPCSS -p` reads the TokenBroker service registry key as part of the old `SCMActivatorGetClassObject` function (from the GetClassObject family).

Besides the test with BlockAADWorkplaceJoin that is with Gabriel the next step to this issue is to answer the question: is it possible to change behavior of WamProviderRegistration or related tokenbroker classes by changing some arguments in invocation?

I was beginning this analysis by debugging sessions, but now I am starting to look at the log files. I need to understand how to enable verbose log or change some logs to info. To continue.

= More verbose logs in com proxy
:date: 2023-08-18
:tags: tag_venn tag_reversing

Since Gabriel is going to prove the BlockAADWorkplaceJoin policy during container session and I am responsible for analyze Office app vs AAD Broker communication, today I put some more verbose logs in com proxy invoke functions and understand the calling between components (who calls who).

I discovered when `winword.exe` received a `WebTokenRequestResult` (and `msedgewebview2.exe` also) and some interesting invokes in this attached report.

First I put more detailed log into the parameters being passed thru COM proxies to print hex bytes and printable chars. From the logs I separated the WinRT classes activated in three groups: nonrelated, somewhat related and related.

```
Nonrelated:
ApplicationTheme.AppThemeAPI
Windows.ApplicationModel.Core.CoreApplication
Windows.Data.Json.JsonArray
Windows.Data.Json.JsonValue
Windows.Foundation.Collections.PropertySet
Windows.Foundation.Collections.ValueSet
Windows.Foundation.Diagnostics.AsyncCausalityTracer
Windows.Foundation.Metadata.ApiInformation
Windows.Foundation.PropertyValue
Windows.Foundation.Uri
Windows.Globalization.Language
Windows.Security.Isolation.IsolatedWindowsEnvironmentHost
Windows.Storage.Streams.DataReader
Windows.Storage.Streams.DataWriter

Somewhat related:
Windows.Networking.Connectivity.NetworkInformation
Windows.Security.Authentication.OnlineId.OnlineIdServiceTicketRequest
Windows.Security.Authentication.OnlineId.OnlineIdSystemAuthenticator
Windows.Security.EnterpriseData.ProtectionPolicyManager
Windows.System.Profile.SharedModeSettings
Windows.UI.Composition.CompositionPath
Windows.UI.Composition.Core.CompositorController
Windows.UI.Composition.Interactions.VisualInteractionSource
Windows.UI.ViewManagement.UISettings
Windows.UI.ViewManagement.UIViewSettings

Related:
Windows.Internal.Security.Authentication.Aad.AadWamExtension riid=00000035-0000-0000-c000-000000000046 (Recordset2)
Windows.Internal.Security.Authentication.Web.TokenBrokerInternal riid=07650a66-66ea-489d-aa90-0dabc75f3567 (...CITokenBrokerInternalStatics)
Windows.Internal.Security.Authentication.Web.WamProviderRegistration riid=e60e20a2-87a0-4b34-8502-ee3b8fb4ec16 (...CIWamProviderRegistrationStatics)
Windows.Internal.Security.Credentials.WebAccountInternal riid=067cd3b2-1f07-4710-8ae5-5cd2e71efc11 (IWebAccountInternalFactory)
Windows.Internal.Security.Credentials.WebAccountProviderInternal riid=4f81bfe6-fdb4-4dc4-86b9-4af32d514b78 (IWebAccountProviderInternalFactory)
Windows.Internal.Security.WebAuthentication.AuthenticationManager riid=00000035-0000-0000-c000-000000000046 (Recordset2)
Windows.Internal.Security.WebAuthentication.SystemAuthenticatorInternal riid=00000035-0000-0000-c000-000000000046 (Recordset2)
Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager riid=54e633fe-96e0-41e8-9832-1298897c2aaf (...CIWebAuthenticationCoreManagerStatics4)
Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager riid=6aca7c92-a581-4479-9c10-752eff44fd34 (...CIWebAuthenticationCoreManagerStatics)
Windows.Security.Authentication.Web.Core.WebTokenRequest riid=6cf2141c-0ff0-4c67-b84f-99ddbe4a72c9 (...CIWebTokenRequestFactory)
```

The interface [IWbemServices](https://learn.microsoft.com/en-us/windows/win32/api/wbemcli/nn-wbemcli-iwbemservices) is also requested to make queries to WMI service. We can look at this queries and reponse from the marshalled parameters. By example:

```
2023-08-18 14:28:14.794 - [INFO] - [1:8880:3144] - [winword.exe] - [COM] - ComProxyIpcClient::ComUnmarshallInterface iid=9556dc99-828c-11cf-a37e-00aa003240c7; return retObjectId=188b24a7-414e-49b8-976e-5a0fb6334234; hr=0; readBytesCount=68
2023-08-18 14:28:14.918 - [INFO] - [1:8880:3144] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=188b24a7-414e-49b8-976e-5a0fb6334234; dataRepresentation=16; procNum=20; buffer=[55,73,65,72,3,0,0,0,6,0,0,0,3,0,0,0,57,0,51,0,4c,0,0,0,55,73,65,72,29,0,0,0,52,0,0,0,29,0,0,0,53,0,45,0,4c,0,45,0,43,0,54,0,20,0,2a,0,20,0,46,0,52,0,4f,0,4d,0,20,0,57,0,69,0,6e,0,33,0,32,0,5f,0,43,0,6f,0,6d,0,70,0,75,0,74,0,65,0,72,0,53,0,79,0,73,0,74,0,65,0,6d,0,50,0,72,0,6f,0,64,0,75,0,63,0,74,0,0,0,30,0,0,0,0,0,0,0][User............W.Q.L...User)...R...)...S.E.L.E.C.T. .*. .F.R.O.M. .W.i.n.3.2._.C.o.m.p.u.t.e.r.S.y.s.t.e.m.P.r.o.d.u.c.t...0......]; size=132; return rpl->DataRepresentation=16; rpl->Buffer=[0,0,2,0,44,0,0,0,44,0,0,0,4d,45,4f,57,1,0,0,0,e1,47,79,2,31,d7,ce,11,a3,57,0,0,0,0,0,1,0,0,0,0,1,0,0,0,ac,8a,4a,a0,3a,3c,e7,45,a7,7e,52,5,d2,46,32,9f,2c,28,0,0,1c,d,0,0,82,ea,91,6c,32,9,37,f8,0,0,0,0,0,0,0,0][....D...D...MEOW.....Gy.1....W................J.:<.E.~R..F2.,(.........l2.7........]; rpl->Size=84; hr=0
2023-08-18 14:28:15.407 - [INFO] - [1:8880:3144] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=188b24a7-414e-49b8-976e-5a0fb6334234; dataRepresentation=16; procNum=20; buffer=[55,73,65,72,3,0,0,0,6,0,0,0,3,0,0,0,57,0,51,0,4c,0,0,0,55,73,65,72,44,0,0,0,88,0,0,0,44,0,0,0,53,0,45,0,4c,0,45,0,43,0,54,0,20,0,2a,0,20,0,46,0,52,0,4f,0,4d,0,20,0,57,0,69,0,6e,0,33,0,32,0,5f,0,44,0,69,0,73,0,6b,0,44,0,72,0,69,0,76,0,65,0,20,0,57,0,48,0,45,0,52,0,45,0,20,0,44,0,65,0,76,0,69,0,63,0,65,0,49,0,44,0,20,0,4c,0,49,0,4b,0,45,0,20,0,27,0,25,0,50,0,48,0,59,0,53,0,49,0,43,0,41,0,4c,0,44,0,52,0,49,0,56,0,45,0,30,0,25,0,27,0,30,0,0,0,0,0,0,0][User............W.Q.L...UserD.......D...S.E.L.E.C.T. .*. .F.R.O.M. .W.i.n.3.2._.D.i.s.k.D.r.i.v.e. .W.H.E.R.E. .D.e.v.i.c.e.I.D. .L.I.K.E. .'.%.P.H.Y.S.I.C.A.L.D.R.I.V.E.0.%.'.0......]; size=184; return rpl->DataRepresentation=16; rpl->Buffer=[0,0,2,0,44,0,0,0,44,0,0,0,4d,45,4f,57,1,0,0,0,e1,47,79,2,31,d7,ce,11,a3,57,0,0,0,0,0,1,0,0,0,0,1,0,0,0,ac,8a,4a,a0,3a,3c,e7,45,e5,f4,45,26,f8,ff,c4,28,25,44,1,0,1c,d,0,0,2e,ae,27,b4,59,f,9,f4,0,0,0,0,0,0,0,0][....D...D...MEOW.....Gy.1....W................J.:<.E..E&...(%D........'.Y..........]; rpl->Size=84; hr=0
```

Another interface found that could be worth of notice is [IWbemLevel1Login](https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-wmi/485026a6-d7e0-4ef8-a44f-43e5853fff9d), that "allows a user to connect to the management services interface in a particular namespace".

```
2023-08-18 14:28:14.235 - [INFO] - [1:8880:3144] - [winword.exe] - [COM] - ComProxyIpcClient::ComCreateInstance objectId=ad33947a-45f3-4564-8631-b6ba5ce250db; iid=f309ad18-d86a-11d0-a075-00c04fb68820; return retObjectId=62db056d-5032-4220-bc89-f541d0021559. hr=0
2023-08-18 14:28:14.463 - [INFO] - [1:8880:3144] - [winword.exe] - [COM] - ComProxyIpcClient::ComQueryInterface objectId=62db056d-5032-4220-bc89-f541d0021559; rclsid=9f6c78ef-fce5-42fa-abea-3e7df91921dc; return retObjectId=e03f753f-2af3-4cf6-a552-90df358ea75c. hr=0
2023-08-18 14:28:14.549 - [INFO] - [1:8880:3144] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=e03f753f-2af3-4cf6-a552-90df358ea75c; dataRepresentation=16; procNum=3; buffer=[0,0,2,0,8,0,0,0,0,0,0,0,8,0,0,0,56,0,4d,0,57,0,31,0,30,0,48,0,32,0,0,0,4,0,2,0,8,0,0,0,0,0,0,0,8,0,0,0,56,0,4d,0,57,0,31,0,30,0,48,0,32,0,0,0,b0,22,0,0,0,0,0,0,68,f9,8c,36,e0,d1,d9,1,0,0,0,0][................V.M.W.1.0.H.2...................V.M.W.1.0.H.2...."......h..6.......]; size=84; return rpl->DataRepresentation=16; rpl->Buffer=[0,0,0,0][...]; rpl->Size=4; hr=0
```

Continuing, the class CIWamProviderRegistrationInformation is being used and some interesting strings are being (un)marshalled, with the name of AADBroker package.

```
2023-08-18 14:28:15.322 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComUnmarshallInterface iid=63a0a1e5-f8fe-4ba6-8508-caef1277dd35; return retObjectId=cc210b12-65a0-45d7-9522-03484bc715d9; hr=0; readBytesCount=68
2023-08-18 14:28:15.368 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=cc210b12-65a0-45d7-9522-03484bc715d9; dataRepresentation=16; procNum=7; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,e,0,0,0,57,64,74,50,2c,0,0,0,57,0,6f,0,72,0,6b,0,20,0,6f,0,72,0,20,0,73,0,63,0,68,0,6f,0,6f,0,6c,0,20,0,61,0,63,0,63,0,6f,0,75,0,6e,0,74,0,0,0,0,0][User....WdtP,...W.o.r.k. .o.r. .s.c.h.o.o.l. .a.c.c.o.u.n.t....]; rpl->Size=64; hr=0
2023-08-18 14:28:15.405 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=cc210b12-65a0-45d7-9522-03484bc715d9; dataRepresentation=16; procNum=8; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,3f,0,5c,0,57,64,74,50,3a,0,0,0,41,0,73,0,73,0,69,0,67,0,6e,0,65,0,64,0,20,0,62,0,79,0,20,0,79,0,6f,0,75,0,72,0,20,0,6f,0,72,0,67,0,61,0,6e,0,69,0,7a,0,61,0,74,0,69,0,6f,0,6e,0,0,0,0,0,0,0][User?.\.WdtP:...A.s.s.i.g.n.e.d. .b.y. .y.o.u.r. .o.r.g.a.n.i.z.a.t.i.o.n......]; rpl->Size=80; hr=0
2023-08-18 14:28:15.493 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=cc210b12-65a0-45d7-9522-03484bc715d9; dataRepresentation=16; procNum=9; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,2b,0,0,0,57,64,74,50,18,1,0,0,40,0,7b,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,41,0,41,0,44,0,2e,0,42,0,72,0,6f,0,6b,0,65,0,72,0,50,0,6c,0,75,0,67,0,69,0,6e,0,5f,0,31,0,30,0,30,0,30,0,2e,0,31,0,39,0,30,0,34,0,31,0,2e,0,31,0,30,0,32,0,33,0,2e,0,30,0,5f,0,6e,0,65,0,75,0,74,0,72,0,61,0,6c,0,5f,0,6e,0,65,0,75,0,74,0,72,0,61,0,6c,0,5f,0,63,0,77,0,35,0,6e,0,31,0,68,0,32,0,74,0,78,0,79,0,65,0,77,0,79,0,3f,0,6d,0,73,0,2d,0,72,0,65,0,73,0,6f,0,75,0,72,0,63,0,65,0,3a,0,2f,0,2f,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,41,0,41,0,44,0,2e,0,42,0,72,0,6f,0,6b,0,65,0,72,0,50,0,6c,0,75,0,67,0,69,0,6e,0,2f,0,46,0,69,0,6c,0,65,0,73,0,2f,0,41,0,73,0,73,0,65,0,74,0,73,0,2f,0,4c,0,6f,0,67,0,6f,0,2e,0,70,0,6e,0,67,0,7d,0,0,0,0,0][User+...WdtP....@.{.M.i.c.r.o.s.o.f.t...A.A.D...B.r.o.k.e.r.P.l.u.g.i.n._.1.0.0.0...1.9.0.4.1...1.0.2.3...0._.n.e.u.t.r.a.l._.n.e.u.t.r.a.l._.c.w.5.n.1.h.2.t.x.y.e.w.y.?.m.s.-.r.e.s.o.u.r.c.e.:././.M.i.c.r.o.s.o.f.t...A.A.D...B.r.o.k.e.r.P.l.u.g.i.n./.F.i.l.e.s./.A.s.s.e.t.s./.L.o.g.o...p.n.g.}....]; rpl->Size=300; hr=0
2023-08-18 14:28:15.527 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=cc210b12-65a0-45d7-9522-03484bc715d9; dataRepresentation=16; procNum=12; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,f8,7f,0,0,57,64,74,50,58,0,0,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,41,0,41,0,44,0,2e,0,42,0,72,0,6f,0,6b,0,65,0,72,0,50,0,6c,0,75,0,67,0,69,0,6e,0,5f,0,63,0,77,0,35,0,6e,0,31,0,68,0,32,0,74,0,78,0,79,0,65,0,77,0,79,0,21,0,41,0,70,0,70,0,0,0,0,0][User....WdtPX...M.i.c.r.o.s.o.f.t...A.A.D...B.r.o.k.e.r.P.l.u.g.i.n._.c.w.5.n.1.h.2.t.x.y.e.w.y.!.A.p.p....]; rpl->Size=108; hr=0
2023-08-18 14:28:15.999 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComUnmarshallInterface iid=63a0a1e5-f8fe-4ba6-8508-caef1277dd35; return retObjectId=36eb863a-18e7-41e3-98bf-874f4480e848; hr=0; readBytesCount=68
2023-08-18 14:28:16.720 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=36eb863a-18e7-41e3-98bf-874f4480e848; dataRepresentation=16; procNum=11; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,0,0,0,0,57,64,74,50,50,0,0,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,41,0,41,0,44,0,2e,0,42,0,72,0,6f,0,6b,0,65,0,72,0,50,0,6c,0,75,0,67,0,69,0,6e,0,5f,0,63,0,77,0,35,0,6e,0,31,0,68,0,32,0,74,0,78,0,79,0,65,0,77,0,79,0,0,0,0,0][User....WdtPP...M.i.c.r.o.s.o.f.t...A.A.D...B.r.o.k.e.r.P.l.u.g.i.n._.c.w.5.n.1.h.2.t.x.y.e.w.y....]; rpl->Size=100; hr=0
2023-08-18 14:28:16.306 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComUnmarshallInterface iid=63a0a1e5-f8fe-4ba6-8508-caef1277dd35; return retObjectId=f91b9c36-6530-4371-8fa6-7c1a0c70493e; hr=0; readBytesCount=68
2023-08-18 14:28:16.325 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=f91b9c36-6530-4371-8fa6-7c1a0c70493e; dataRepresentation=16; procNum=11; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,0,0,0,0,57,64,74,50,50,0,0,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,41,0,41,0,44,0,2e,0,42,0,72,0,6f,0,6b,0,65,0,72,0,50,0,6c,0,75,0,67,0,69,0,6e,0,5f,0,63,0,77,0,35,0,6e,0,31,0,68,0,32,0,74,0,78,0,79,0,65,0,77,0,79,0,0,0,0,0][User....WdtPP...M.i.c.r.o.s.o.f.t...A.A.D...B.r.o.k.e.r.P.l.u.g.i.n._.c.w.5.n.1.h.2.t.x.y.e.w.y....]; rpl->Size=100; hr=0
2023-08-18 14:28:16.325 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=f91b9c36-6530-4371-8fa6-7c1a0c70493e; dataRepresentation=16; procNum=11; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,0,0,0,0,57,64,74,50,50,0,0,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,41,0,41,0,44,0,2e,0,42,0,72,0,6f,0,6b,0,65,0,72,0,50,0,6c,0,75,0,67,0,69,0,6e,0,5f,0,63,0,77,0,35,0,6e,0,31,0,68,0,32,0,74,0,78,0,79,0,65,0,77,0,79,0,0,0,0,0][User....WdtPP...M.i.c.r.o.s.o.f.t...A.A.D...B.r.o.k.e.r.P.l.u.g.i.n._.c.w.5.n.1.h.2.t.x.y.e.w.y....]; rpl->Size=100; hr=0
```

What follow are some snippets of the captured log that accordingly with the strings marshalled in the invoke seems to have the information related to token acquire and account registration.

```
2023-08-18 14:28:15.583 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::RoGetActivationFactory activatableClassId=07650a66-66ea-489d-aa90-0dabc75f3567 iid=Windows.Internal.Security.Authentication.Web.TokenBrokerInternal; return retObjectId=1bb79496-a7ee-4fdd-ac92-8bb9ae4a882b; hr=0
2023-08-18 14:28:16.559 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComQueryInterface objectId=1bb79496-a7ee-4fdd-ac92-8bb9ae4a882b; rclsid=878f3f2a-34db-42ce-a02b-d637b10a89ff; return retObjectId=8dfa1b48-cc49-4be7-9130-37e6e904c5b0. hr=0
2023-08-18 14:28:19.140 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=8dfa1b48-cc49-4be7-9130-37e6e904c5b0; dataRepresentation=16; procNum=6; buffer=[bb,3,0,0,bb,3,0,0,0,0,0,1,0,0,0,c,0,0,0,36,77,65,62,74,6f,6b,65,6e,72,65,71,75,65,73,74,5f,7b,35,36,36,34,42,31,32,38,2d,32,41,34,42,2d,34,41,39,45,2d,39,39,43,32,2d,39,37,46,35,46,39,44,42,44,35,36,33,7d,0,0,4,1,0,0,3,71,0,0,0,1,0,0,0,c,0,0,0,b,57,54,52,65,71,5f,53,63,6f,70,65,0,0,0,c,0,0,0,18,65,6e,75,6d,65,72,61,74,65,2e,61,63,63,6f,75,6e,74,73,2e,6c,6f,63,61,6c,0,0,0,c,0,0,0,10,57,54,52,65,71,5f,50,72,6f,6d,70,74,54,79,70,65,0,0,0,5,0,0,0,0,0,0,0,c,0,0,0,e,57,54,52,65,71,5f,43,6c,69,65,6e,74,49,64,0,0,0,c,0,0,0,24,64,33,35,39,30,65,64,36,2d,35,32,62,33,2d,34,31,30,32,2d,61,65,66,66,2d,61,61,64,32,32,39,32,61,62,30,31,63,0,0,0,c,0,0,0,13,57,54,52,65,71,5f,43,6f,72,72,65,6c,61,74,69,6f,6e,49,64,0,0,0,c,0,0,0,26,7b,39,37,42,41,34,42,33,45,2d,46,39,35,32,2d,34,39,39,32,2d,38,45,37,41,2d,37,44,39,34,30,41,42,45,32,46,41,43,7d,0,0,0,c,0,0,0,e,57,54,52,65,71,5f,50,72,6f,76,69,64,65,72,0,0,4,1,0,0,2,71,0,0,0,1,0,0,0,c,0,0,0,b,57,41,50,5f,50,75,72,70,6f,73,65,0,0,0,c,0,0,0,1d,41,73,73,69,67,6e,65,64,20,62,79,20,79,6f,75,72,20,6f,72,67,61,6e,69,7a,61,74,69,6f,6e,0,0,0,c,0,0,0,6,57,41,50,5f,49,64,0,0,0,c,0,0,0,1b,68,74,74,70,73,3a,2f,2f,6c,6f,67,69,6e,2e,6d,69,63,72,6f,73,6f,66,74,2e,63,6f,6d,0,0,0,c,0,0,0,1e,57,41,50,5f,49,73,45,6e,75,6d,65,72,61,62,6c,65,53,74,61,74,65,53,75,70,70,6f,72,74,65,64,0,0,0,5,0,0,0,1,0,0,0,c,0,0,0,1c,57,41,50,5f,49,73,41,64,64,4e,65...][...................6webtokenrequest_{5664B128-2A4B-4A9E-99C2-97F5F9DBD563}.......q............WTReq_Scope........enumerate.accounts.local........WTReq_PromptType................WTReq_ClientId.......$d3590ed6-52b3-4102-aeff-aad2292ab01c........WTReq_CorrelationId.......&{97BA4B3E-F952-4992-8E7A-7D940ABE2FAC}........WTReq_Provider.......q............WAP_Purpose........Assigned by your organization........WAP_Id........https://login.microsoft.com........WAP_IsEnumerableStateSupported................WAP_IsAddN]; size=2216; return rpl->DataRepresentation=16; rpl->Buffer=[0,0,0,0,66,2a,ba,bc,fe,84,c8,47,9e,4d,f3,e4,3e,a9,8d,34,ff,ff,ff,ff,ff,ff,ff,ff,0,0,2,0,93,4,0,0,93,4,0,0,4d,45,4f,57,4,0,0,0,5,83,2a,c1,f8,d1,83,44,8d,54,38,fe,29,27,84,ff,5a,3,0,0,0,0,0,0,c0,0,0,0,0,0,0,46,0,0,0,0,0,0,0,0,3e,0,0,0,57,0,69,0,6e,0,64,0,6f,0,77,0,73,0,2e,0,53,0,65,0,63,0,75,0,72,0,69,0,74,0,79,0,2e,0,41,0,75,0,74,0,68,0,65,0,6e,0,74,0,69,0,63,0,61,0,74,0,69,0,6f,0,6e,0,2e,0,57,0,65,0,62,0,2e,0,43,0,6f,0,72,0,65,0,2e,0,57,0,65,0,62,0,54,0,6f,0,6b,0,65,0,6e,0,52,0,65,0,71,0,75,0,65,0,73,0,74,0,52,0,65,0,73,0,75,0,6c,0,74,0,5,0,0,0,c,0,0,0,11,0,0,0,57,0,54,0,52,0,65,0,73,0,75,0,6c,0,74,0,5f,0,50,0,72,0,6f,0,76,0,69,0,64,0,65,0,72,0,1,4,0,0,71,2,0,0,0,0,0,1,0,0,0,c,0,0,0,b,57,41,50,5f,50,75,72,70,6f,73,65,0,0,0,c,0,0,0,1d,41,73,73,69,67,6e,65,64,20,62,79,20,79,6f,75,72,20,6f,72,67,61,6e,69,7a,61,74,69,6f,6e,0,0,0,c,0,0,0,6,57,41,50,5f,49,64,0,0,0,c,0,0,0,1b,68,74,74,70,73,3a,2f,2f,6c,6f,67,69,6e,2e,6d,69,63,72,6f,73,6f,66,74,2e,63,6f,6d,0,0,0,c,0,0,0,1e,57,41,50,5f,49,73,45,6e,75,6d,65,72,61,62,6c,65,53,74,61,74,65,53,75,70,70,6f,72,74,65,64,0,0,0,5,0,0,0,1,0,0,0,c,0,0,0,1c,57,41,50,5f,49,73,41,64,64,4e,65,77,41,63,63,6f,75,6e,74,52,65,71,75,65,73,74,65,64,0,0,0,5,0,0,0,0,0,0,0,c,0,0,0,14,57,41,50,5f,49,73,53,79,73,74,65,6d,50,72,6f,76,69,64,65,72,0,0,0,5,0,0,0,0,0,0,0,c,0,0,0...][....f*.....G.M..>..4....................MEOW......*....D.T8.)'..Z..............F........>...W.i.n.d.o.w.s...S.e.c.u.r.i.t.y...A.u.t.h.e.n.t.i.c.a.t.i.o.n...W.e.b...C.o.r.e...W.e.b.T.o.k.e.n.R.e.q.u.e.s.t.R.e.s.u.l.t.............W.T.R.e.s.u.l.t._.P.r.o.v.i.d.e.r.....q...............WAP_Purpose........Assigned by your organization........WAP_Id........https://login.microsoft.com........WAP_IsEnumerableStateSupported................WAP_IsAddNewAccountRequested................WAP_IsSystemProvider..............]; rpl->Size=1216; hr=0
```

```
2023-08-18 14:28:20.168 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComUnmarshallInterface iid=63a0a1e5-f8fe-4ba6-8508-caef1277dd35; return retObjectId=2f529990-9b1f-4030-91bb-966db01962b3; hr=0; readBytesCount=68
2023-08-18 14:28:20.183 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=2f529990-9b1f-4030-91bb-966db01962b3; dataRepresentation=16; procNum=7; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,31,0,2d,0,57,64,74,50,22,0,0,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,20,0,61,0,63,0,63,0,6f,0,75,0,6e,0,74,0,0,0,0,0,0,0][User1.-.WdtP"...M.i.c.r.o.s.o.f.t. .a.c.c.o.u.n.t......]; rpl->Size=56; hr=0
2023-08-18 14:28:20.201 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=2f529990-9b1f-4030-91bb-966db01962b3; dataRepresentation=16; procNum=8; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,31,0,2d,0,57,64,74,50,2c,0,0,0,45,0,6d,0,61,0,69,0,6c,0,2c,0,20,0,70,0,68,0,6f,0,6e,0,65,0,2c,0,20,0,6f,0,72,0,20,0,53,0,6b,0,79,0,70,0,65,0,0,0,0,0][User1.-.WdtP,...E.m.a.i.l.,. .p.h.o.n.e.,. .o.r. .S.k.y.p.e....]; rpl->Size=64; hr=0
2023-08-18 14:28:20.241 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=2f529990-9b1f-4030-91bb-966db01962b3; dataRepresentation=16; procNum=9; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,0,0,0,0,57,64,74,50,40,1,0,0,40,0,7b,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,57,0,69,0,6e,0,64,0,6f,0,77,0,73,0,2e,0,43,0,6c,0,6f,0,75,0,64,0,45,0,78,0,70,0,65,0,72,0,69,0,65,0,6e,0,63,0,65,0,48,0,6f,0,73,0,74,0,5f,0,31,0,30,0,2e,0,30,0,2e,0,31,0,39,0,30,0,34,0,31,0,2e,0,31,0,32,0,36,0,36,0,5f,0,6e,0,65,0,75,0,74,0,72,0,61,0,6c,0,5f,0,6e,0,65,0,75,0,74,0,72,0,61,0,6c,0,5f,0,63,0,77,0,35,0,6e,0,31,0,68,0,32,0,74,0,78,0,79,0,65,0,77,0,79,0,3f,0,6d,0,73,0,2d,0,72,0,65,0,73,0,6f,0,75,0,72,0,63,0,65,0,3a,0,2f,0,2f,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,57,0,69,0,6e,0,64,0,6f,0,77,0,73,0,2e,0,43,0,6c,0,6f,0,75,0,64,0,45,0,78,0,70,0,65,0,72,0,69,0,65,0,6e,0,63,0,65,0,48,0,6f,0,73,0,74,0,2f,0,46,0,69,0,6c,0,65,0,73,0,2f,0,69,0,6d,0,61,0,67,0,65,0,73,0,2f,0,4c,0,6f,0,67,0,6f,0,2e,0,70,0,6e,0,67,0,7d,0,0,0,0,0][User....WdtP@...@.{.M.i.c.r.o.s.o.f.t...W.i.n.d.o.w.s...C.l.o.u.d.E.x.p.e.r.i.e.n.c.e.H.o.s.t._.1.0...0...1.9.0.4.1...1.2.6.6._.n.e.u.t.r.a.l._.n.e.u.t.r.a.l._.c.w.5.n.1.h.2.t.x.y.e.w.y.?.m.s.-.r.e.s.o.u.r.c.e.:././.M.i.c.r.o.s.o.f.t...W.i.n.d.o.w.s...C.l.o.u.d.E.x.p.e.r.i.e.n.c.e.H.o.s.t./.F.i.l.e.s./.i.m.a.g.e.s./.L.o.g.o...p.n.g.}....]; rpl->Size=340; hr=0
2023-08-18 14:28:20.268 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=2f529990-9b1f-4030-91bb-966db01962b3; dataRepresentation=16; procNum=12; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,0,b,40,0,57,64,74,50,6e,0,0,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,57,0,69,0,6e,0,64,0,6f,0,77,0,73,0,2e,0,43,0,6c,0,6f,0,75,0,64,0,45,0,78,0,70,0,65,0,72,0,69,0,65,0,6e,0,63,0,65,0,48,0,6f,0,73,0,74,0,5f,0,63,0,77,0,35,0,6e,0,31,0,68,0,32,0,74,0,78,0,79,0,65,0,77,0,79,0,21,0,41,0,70,0,70,0,0,0,0,0,0,0][User..@.WdtPn...M.i.c.r.o.s.o.f.t...W.i.n.d.o.w.s...C.l.o.u.d.E.x.p.e.r.i.e.n.c.e.H.o.s.t._.c.w.5.n.1.h.2.t.x.y.e.w.y.!.A.p.p......]; rpl->Size=132; hr=0
2023-08-18 14:28:20.463 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComUnmarshallInterface iid=63a0a1e5-f8fe-4ba6-8508-caef1277dd35; return retObjectId=c188e4cd-7f4d-4814-9f1f-3b0f49e0cf57; hr=0; readBytesCount=68
2023-08-18 14:28:20.474 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=c188e4cd-7f4d-4814-9f1f-3b0f49e0cf57; dataRepresentation=16; procNum=11; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,6,0,0,0,57,64,74,50,66,0,0,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,57,0,69,0,6e,0,64,0,6f,0,77,0,73,0,2e,0,43,0,6c,0,6f,0,75,0,64,0,45,0,78,0,70,0,65,0,72,0,69,0,65,0,6e,0,63,0,65,0,48,0,6f,0,73,0,74,0,5f,0,63,0,77,0,35,0,6e,0,31,0,68,0,32,0,74,0,78,0,79,0,65,0,77,0,79,0,0,0,0,0,0,0][User....WdtPf...M.i.c.r.o.s.o.f.t...W.i.n.d.o.w.s...C.l.o.u.d.E.x.p.e.r.i.e.n.c.e.H.o.s.t._.c.w.5.n.1.h.2.t.x.y.e.w.y......]; rpl->Size=124; hr=0
```

```
2023-08-18 14:28:20.338 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::RoGetActivationFactory activatableClassId=e60e20a2-87a0-4b34-8502-ee3b8fb4ec16 iid=Windows.Internal.Security.Authentication.Web.WamProviderRegistration; return retObjectId=264c7c0b-4959-4799-bd02-e796a1c37c2e; hr=0
2023-08-18 14:28:20.373 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=264c7c0b-4959-4799-bd02-e796a1c37c2e; dataRepresentation=16; procNum=6; buffer=[55,73,65,72,dd,dd,dd,dd,57,64,74,50,2c,0,0,0,68,0,74,0,74,0,70,0,73,0,3a,0,2f,0,2f,0,6c,0,6f,0,67,0,69,0,6e,0,2e,0,6c,0,69,0,76,0,65,0,2e,0,63,0,6f,0,6d,0][User....WdtP,...h.t.t.p.s.:././.l.o.g.i.n...l.i.v.e...c.o.m]; size=60; return rpl->DataRepresentation=16; rpl->Buffer=[0,0,2,0,44,0,0,0,44,0,0,0,4d,45,4f,57,1,0,0,0,e5,a1,a0,63,fe,f8,a6,4b,85,8,ca,ef,12,77,dd,35,80,2,0,0,1,0,0,0,f7,56,b6,49,9,52,1d,23,fd,b2,7,2c,fc,f6,5,a0,13,98,0,0,20,21,ff,ff,35,d4,d1,cc,d4,82,13,b,0,0,0,0,0,0,0,0][....D...D...MEOW.......c...K.....w.5.........V.I.R.#...,........ !..5..............]; rpl->Size=84; hr=0
```

Processes `ai.exe` and `msedgewebview2.exe` are started. The `rpcss`, `webcache` and `dnscache` impersonates alpc client ports for winword (pic: 8880) and msedgewebview2 (pid: 9632, 5528). Again AAD Broker package is requested.

```
2023-08-18 14:28:37.830 - [INFO] - [1:11596:8228] - [rpcss] - [IPC] - NtAlpcImpersonateClientOfPort returns 0, PortHandle: 7C4, pid: 8880, tid: 4928
2023-08-18 14:28:37.840 - [INFO] - [1:11596:8228] - [rpcss] - [IPC] - NtAlpcImpersonateClientOfPort returns 0, PortHandle: 7C4, pid: 8880, tid: 4928
2023-08-18 14:28:37.518 - [INFO] - [1:11596:11172] - [rpcss] - [IPC] - NtAlpcImpersonateClientOfPort returns 0, PortHandle: 830, pid: 9632, tid: 10428
2023-08-18 14:28:38.448 - [INFO] - [1:7552:9716] - [webcache] - [IPC] - NtAlpcImpersonateClientOfPort returns 0, PortHandle: 6A0, pid: 8880, tid: 11088
2023-08-18 14:28:38.934 - [INFO] - [1:7552:9716] - [webcache] - [IPC] - NtAlpcImpersonateClientOfPort returns 0, PortHandle: 6A0, pid: 8880, tid: 7920
2023-08-18 14:28:38.934 - [INFO] - [1:7552:9716] - [webcache] - [IPC] - NtAlpcImpersonateClientOfPort returns 0, PortHandle: 6A0, pid: 8880, tid: 7920
2023-08-18 14:28:42.630 - [INFO] - [1:9660:9324] - [dnscache] - [IPC] - NtAlpcImpersonateClientOfPort returns 0, PortHandle: 920, pid: 5528, tid: 11480
2023-08-18 14:28:42.700 - [INFO] - [1:9660:9324] - [dnscache] - [IPC] - NtAlpcImpersonateClientOfPort returns 0, PortHandle: 920, pid: 5528, tid: 10264
2023-08-18 14:28:45.403 - [INFO] - [1:9660:9324] - [dnscache] - [IPC] - NtAlpcImpersonateClientOfPort returns 0, PortHandle: 920, pid: 5528, tid: 6784
2023-08-18 14:28:45.409 - [INFO] - [1:9660:9324] - [dnscache] - [IPC] - NtAlpcImpersonateClientOfPort returns 0, PortHandle: 920, pid: 5528, tid: 10264
2023-08-18 14:28:46.260 - [INFO] - [1:9660:9324] - [dnscache] - [IPC] - NtAlpcImpersonateClientOfPort returns 0, PortHandle: 8AC, pid: 8880, tid: 11088
```

```
2023-08-18 14:28:47.150 - [INFO] - [1:8880:11088] - [winword.exe] - [COM] - ComProxyIpcClient::RoGetActivationFactory activatableClassId=e60e20a2-87a0-4b34-8502-ee3b8fb4ec16 iid=Windows.Internal.Security.Authentication.Web.WamProviderRegistration; return retObjectId=b4163de1-37a9-49f7-b566-5867417a9c87; hr=0
2023-08-18 14:28:47.199 - [INFO] - [1:8880:11088] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=b4163de1-37a9-49f7-b566-5867417a9c87; dataRepresentation=16; procNum=6; buffer=[55,73,65,72,dd,dd,dd,dd,57,64,74,50,32,0,0,0,68,0,74,0,74,0,70,0,73,0,3a,0,2f,0,2f,0,6c,0,6f,0,67,0,69,0,6e,0,2e,0,77,0,69,0,6e,0,64,0,6f,0,77,0,73,0,2e,0,6e,0,65,0,74,0][User....WdtP2...h.t.t.p.s.:././.l.o.g.i.n...w.i.n.d.o.w.s...n.e.t]; size=66; return rpl->DataRepresentation=16; rpl->Buffer=[0,0,2,0,44,0,0,0,44,0,0,0,4d,45,4f,57,1,0,0,0,e5,a1,a0,63,fe,f8,a6,4b,85,8,ca,ef,12,77,dd,35,80,2,0,0,1,0,0,0,f7,56,b6,49,9,52,1d,23,a8,9f,bd,e7,8,8b,6f,3e,21,8,0,0,20,21,ff,ff,8d,47,76,64,b3,ae,1e,a8,0,0,0,0,0,0,0,0][....D...D...MEOW.......c...K.....w.5.........V.I.R.#......o>!... !...Gvd...........]; rpl->Size=84; hr=0
2023-08-18 14:28:47.218 - [INFO] - [1:8880:11088] - [winword.exe] - [COM] - ComProxyIpcClient::ComUnmarshallInterface iid=63a0a1e5-f8fe-4ba6-8508-caef1277dd35; return retObjectId=e031a52e-1720-4210-9d7a-5714827b56b8; hr=0; readBytesCount=68
2023-08-18 14:28:47.244 - [INFO] - [1:8880:11088] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=e031a52e-1720-4210-9d7a-5714827b56b8; dataRepresentation=16; procNum=7; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,0,0,0,0,57,64,74,50,2c,0,0,0,57,0,6f,0,72,0,6b,0,20,0,6f,0,72,0,20,0,73,0,63,0,68,0,6f,0,6f,0,6c,0,20,0,61,0,63,0,63,0,6f,0,75,0,6e,0,74,0,0,0,0,0][User....WdtP,...W.o.r.k. .o.r. .s.c.h.o.o.l. .a.c.c.o.u.n.t....]; rpl->Size=64; hr=0
2023-08-18 14:28:47.268 - [INFO] - [1:8880:11088] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=e031a52e-1720-4210-9d7a-5714827b56b8; dataRepresentation=16; procNum=8; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,1,0,0,0,57,64,74,50,3a,0,0,0,41,0,73,0,73,0,69,0,67,0,6e,0,65,0,64,0,20,0,62,0,79,0,20,0,79,0,6f,0,75,0,72,0,20,0,6f,0,72,0,67,0,61,0,6e,0,69,0,7a,0,61,0,74,0,69,0,6f,0,6e,0,0,0,0,0,0,0][User....WdtP:...A.s.s.i.g.n.e.d. .b.y. .y.o.u.r. .o.r.g.a.n.i.z.a.t.i.o.n......]; rpl->Size=80; hr=0
2023-08-18 14:28:47.307 - [INFO] - [1:8880:11088] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=e031a52e-1720-4210-9d7a-5714827b56b8; dataRepresentation=16; procNum=9; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,44,0,0,0,57,64,74,50,18,1,0,0,40,0,7b,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,41,0,41,0,44,0,2e,0,42,0,72,0,6f,0,6b,0,65,0,72,0,50,0,6c,0,75,0,67,0,69,0,6e,0,5f,0,31,0,30,0,30,0,30,0,2e,0,31,0,39,0,30,0,34,0,31,0,2e,0,31,0,30,0,32,0,33,0,2e,0,30,0,5f,0,6e,0,65,0,75,0,74,0,72,0,61,0,6c,0,5f,0,6e,0,65,0,75,0,74,0,72,0,61,0,6c,0,5f,0,63,0,77,0,35,0,6e,0,31,0,68,0,32,0,74,0,78,0,79,0,65,0,77,0,79,0,3f,0,6d,0,73,0,2d,0,72,0,65,0,73,0,6f,0,75,0,72,0,63,0,65,0,3a,0,2f,0,2f,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,41,0,41,0,44,0,2e,0,42,0,72,0,6f,0,6b,0,65,0,72,0,50,0,6c,0,75,0,67,0,69,0,6e,0,2f,0,46,0,69,0,6c,0,65,0,73,0,2f,0,41,0,73,0,73,0,65,0,74,0,73,0,2f,0,4c,0,6f,0,67,0,6f,0,2e,0,70,0,6e,0,67,0,7d,0,0,0,0,0][UserD...WdtP....@.{.M.i.c.r.o.s.o.f.t...A.A.D...B.r.o.k.e.r.P.l.u.g.i.n._.1.0.0.0...1.9.0.4.1...1.0.2.3...0._.n.e.u.t.r.a.l._.n.e.u.t.r.a.l._.c.w.5.n.1.h.2.t.x.y.e.w.y.?.m.s.-.r.e.s.o.u.r.c.e.:././.M.i.c.r.o.s.o.f.t...A.A.D...B.r.o.k.e.r.P.l.u.g.i.n./.F.i.l.e.s./.A.s.s.e.t.s./.L.o.g.o...p.n.g.}....]; rpl->Size=300; hr=0
2023-08-18 14:28:47.323 - [INFO] - [1:8880:11088] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=e031a52e-1720-4210-9d7a-5714827b56b8; dataRepresentation=16; procNum=12; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,0,0,0,0,57,64,74,50,58,0,0,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,41,0,41,0,44,0,2e,0,42,0,72,0,6f,0,6b,0,65,0,72,0,50,0,6c,0,75,0,67,0,69,0,6e,0,5f,0,63,0,77,0,35,0,6e,0,31,0,68,0,32,0,74,0,78,0,79,0,65,0,77,0,79,0,21,0,41,0,70,0,70,0,0,0,0,0][User....WdtPX...M.i.c.r.o.s.o.f.t...A.A.D...B.r.o.k.e.r.P.l.u.g.i.n._.c.w.5.n.1.h.2.t.x.y.e.w.y.!.A.p.p....]; rpl->Size=108; hr=0
2023-08-18 14:28:47.627 - [INFO] - [1:8880:11088] - [winword.exe] - [COM] - ComProxyIpcClient::ComUnmarshallInterface iid=63a0a1e5-f8fe-4ba6-8508-caef1277dd35; return retObjectId=c8598629-2b01-4b59-b607-8eaa507a063d; hr=0; readBytesCount=68
2023-08-18 14:28:47.642 - [INFO] - [1:8880:11088] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=c8598629-2b01-4b59-b607-8eaa507a063d; dataRepresentation=16; procNum=11; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,f9,7f,0,0,57,64,74,50,50,0,0,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,41,0,41,0,44,0,2e,0,42,0,72,0,6f,0,6b,0,65,0,72,0,50,0,6c,0,75,0,67,0,69,0,6e,0,5f,0,63,0,77,0,35,0,6e,0,31,0,68,0,32,0,74,0,78,0,79,0,65,0,77,0,79,0,0,0,0,0][User....WdtPP...M.i.c.r.o.s.o.f.t...A.A.D...B.r.o.k.e.r.P.l.u.g.i.n._.c.w.5.n.1.h.2.t.x.y.e.w.y....]; rpl->Size=100; hr=0
```

Noticed that the class WebAuthenticationCoreManager is not in the open rt list.

```
2023-08-18 14:28:47.326 - [INFO] - [1:8880:8292] - [winword.exe] - [WRT] - Is [Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager] open rt: false
```

The class TokenBrokerInternal seems to be used to transfer the login window.

```
2023-08-18 14:28:47.533 - [INFO] - [1:8880:11088] - [winword.exe] - [COM] - ComProxyIpcClient::RoGetActivationFactory activatableClassId=07650a66-66ea-489d-aa90-0dabc75f3567 iid=Windows.Internal.Security.Authentication.Web.TokenBrokerInternal; return retObjectId=37eeb8eb-4c35-4cc7-8560-6d31ca4241e4; hr=0
2023-08-18 14:28:47.704 - [INFO] - [1:8880:11088] - [winword.exe] - [COM] - ComProxyIpcClient::IForegroundTransferAllowForegroundTransfer objectId=37eeb8eb-4c35-4cc7-8560-6d31ca4241e4; hr=80070005
2023-08-18 14:28:47.890 - [INFO] - [1:8880:11088] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=37eeb8eb-4c35-4cc7-8560-6d31ca4241e4; dataRepresentation=16; procNum=36; buffer=[0,0,2,0,f4,5,0,0,f4,5,0,0,4d,45,4f,57,4,0,0,0,68,4d,7b,b7,cb,ad,73,46,b3,64,c,f7,b3,5c,af,97,5a,3,0,0,0,0,0,0,c0,0,0,0,0,0,0,46,0,0,0,0,0,0,0,0,38,0,0,0,57,0,69,0,6e,0,64,0,6f,0,77,0,73,0,2e,0,53,0,65,0,63,0,75,0,72,0,69,0,74,0,79,0,2e,0,41,0,75,0,74,0,68,0,65,0,6e,0,74,0,69,0,63,0,61,0,74,0,69,0,6f,0,6e,0,2e,0,57,0,65,0,62,0,2e,0,43,0,6f,0,72,0,65,0,2e,0,57,0,65,0,62,0,54,0,6f,0,6b,0,65,0,6e,0,52,0,65,0,71,0,75,0,65,0,73,0,74,0,5,0,0,0,c,0,0,0,10,0,0,0,57,0,54,0,52,0,65,0,71,0,5f,0,50,0,72,0,6f,0,6d,0,70,0,74,0,54,0,79,0,70,0,65,0,5,0,0,0,1,0,0,0,c,0,0,0,e,0,0,0,57,0,54,0,52,0,65,0,71,0,5f,0,43,0,6c,0,69,0,65,0,6e,0,74,0,49,0,64,0,c,0,0,0,24,0,0,0,64,0,33,0,35,0,39,0,30,0,65,0,64,0,36,0,2d,0,35,0,32,0,62,0,33,0,2d,0,34,0,31,0,30,0,32,0,2d,0,61,0,65,0,66,0,66,0,2d,0,61,0,61,0,64,0,32,0,32,0,39,0,32,0,61,0,62,0,30,0,31,0,63,0,c,0,0,0,13,0,0,0,57,0,54,0,52,0,65,0,71,0,5f,0,43,0,6f,0,72,0,72,0,65,0,6c,0,61,0,74,0,69,0,6f,0,6e,0,49,0,64,0,c,0,0,0,24,0,0,0,34,0,43,0,42,0,30,0,42,0,41,0,41,0,32,0,2d,0,33,0,43,0,32,0,33,0,2d,0,34,0,37,0,43,0,32,0,2d,0,41,0,43,0,43,0,42,0,2d,0,36,0,32,0,31,0,34,0,35,0,37,0,33,0,45,0,37,0,35,0,36,0,46,0,c,0,0,0,11,0,0,0,57,0,54,0,52,0,65,0,71,0,5f,0,50,0,72,0,6f,0,70,0,65,0,72,0,74,0,79,0,42,0,61,0,67,0...][............MEOW....hM{...sF.d...\..Z..............F........8...W.i.n.d.o.w.s...S.e.c.u.r.i.t.y...A.u.t.h.e.n.t.i.c.a.t.i.o.n...W.e.b...C.o.r.e...W.e.b.T.o.k.e.n.R.e.q.u.e.s.t.............W.T.R.e.q._.P.r.o.m.p.t.T.y.p.e.................W.T.R.e.q._.C.l.i.e.n.t.I.d.....$...d.3.5.9.0.e.d.6.-.5.2.b.3.-.4.1.0.2.-.a.e.f.f.-.a.a.d.2.2.9.2.a.b.0.1.c.........W.T.R.e.q._.C.o.r.r.e.l.a.t.i.o.n.I.d.....$...4.C.B.0.B.A.A.2.-.3.C.2.3.-.4.7.C.2.-.A.C.C.B.-.6.2.1.4.5.7.3.E.7.5.6.F.........W.T.R.e.q._.P.r.o.p.e.r.t.y.B.a.g]; size=1544; return rpl->DataRepresentation=16; rpl->Buffer=[0,0,2,0,44,0,0,0,44,0,0,0,4d,45,4f,57,1,0,0,0,52,58,81,a,44,7c,74,56,b3,d2,fa,2e,4c,1e,46,c9,80,2,0,0,1,0,0,0,f7,56,b6,49,9,52,1d,23,b4,55,17,33,9f,9e,dc,e4,12,5c,0,0,20,21,ff,ff,16,fc,94,d,25,1f,9b,27,0,0,0,0,0,0,0,0][....D...D...MEOW....RX..D|tV....L.F..........V.I.R.#.U.3.....\.. !......%..'.......]; rpl->Size=84; hr=0
```

The subprocess `msedgewebview2.exe` also instantiates `CIWamProviderRegistrationInformation`.

```
2023-08-18 14:28:57.150 - [INFO] - [1:9632:8100] - [msedgewebview2.exe] - [COM] - ComProxyIpcClient::ComUnmarshallInterface iid=63a0a1e5-f8fe-4ba6-8508-caef1277dd35; return retObjectId=59389f55-665b-480a-98d5-11513eabfc66; hr=0; readBytesCount=68
2023-08-18 14:28:57.263 - [INFO] - [1:9632:8100] - [msedgewebview2.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=59389f55-665b-480a-98d5-11513eabfc66; dataRepresentation=16; procNum=7; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,16,0,0,0,57,64,74,50,2c,0,0,0,57,0,6f,0,72,0,6b,0,20,0,6f,0,72,0,20,0,73,0,63,0,68,0,6f,0,6f,0,6c,0,20,0,61,0,63,0,63,0,6f,0,75,0,6e,0,74,0,0,0,0,0][User....WdtP,...W.o.r.k. .o.r. .s.c.h.o.o.l. .a.c.c.o.u.n.t....]; rpl->Size=64; hr=0
2023-08-18 14:28:57.428 - [INFO] - [1:9632:8100] - [msedgewebview2.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=59389f55-665b-480a-98d5-11513eabfc66; dataRepresentation=16; procNum=8; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,3f,0,5c,0,57,64,74,50,3a,0,0,0,41,0,73,0,73,0,69,0,67,0,6e,0,65,0,64,0,20,0,62,0,79,0,20,0,79,0,6f,0,75,0,72,0,20,0,6f,0,72,0,67,0,61,0,6e,0,69,0,7a,0,61,0,74,0,69,0,6f,0,6e,0,0,0,0,0,0,0][User?.\.WdtP:...A.s.s.i.g.n.e.d. .b.y. .y.o.u.r. .o.r.g.a.n.i.z.a.t.i.o.n......]; rpl->Size=80; hr=0
2023-08-18 14:28:57.638 - [INFO] - [1:9632:8100] - [msedgewebview2.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=59389f55-665b-480a-98d5-11513eabfc66; dataRepresentation=16; procNum=9; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,44,0,0,0,57,64,74,50,18,1,0,0,40,0,7b,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,41,0,41,0,44,0,2e,0,42,0,72,0,6f,0,6b,0,65,0,72,0,50,0,6c,0,75,0,67,0,69,0,6e,0,5f,0,31,0,30,0,30,0,30,0,2e,0,31,0,39,0,30,0,34,0,31,0,2e,0,31,0,30,0,32,0,33,0,2e,0,30,0,5f,0,6e,0,65,0,75,0,74,0,72,0,61,0,6c,0,5f,0,6e,0,65,0,75,0,74,0,72,0,61,0,6c,0,5f,0,63,0,77,0,35,0,6e,0,31,0,68,0,32,0,74,0,78,0,79,0,65,0,77,0,79,0,3f,0,6d,0,73,0,2d,0,72,0,65,0,73,0,6f,0,75,0,72,0,63,0,65,0,3a,0,2f,0,2f,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,41,0,41,0,44,0,2e,0,42,0,72,0,6f,0,6b,0,65,0,72,0,50,0,6c,0,75,0,67,0,69,0,6e,0,2f,0,46,0,69,0,6c,0,65,0,73,0,2f,0,41,0,73,0,73,0,65,0,74,0,73,0,2f,0,4c,0,6f,0,67,0,6f,0,2e,0,70,0,6e,0,67,0,7d,0,0,0,0,0][UserD...WdtP....@.{.M.i.c.r.o.s.o.f.t...A.A.D...B.r.o.k.e.r.P.l.u.g.i.n._.1.0.0.0...1.9.0.4.1...1.0.2.3...0._.n.e.u.t.r.a.l._.n.e.u.t.r.a.l._.c.w.5.n.1.h.2.t.x.y.e.w.y.?.m.s.-.r.e.s.o.u.r.c.e.:././.M.i.c.r.o.s.o.f.t...A.A.D...B.r.o.k.e.r.P.l.u.g.i.n./.F.i.l.e.s./.A.s.s.e.t.s./.L.o.g.o...p.n.g.}....]; rpl->Size=300; hr=0
2023-08-18 14:28:57.743 - [INFO] - [1:9632:8100] - [msedgewebview2.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=59389f55-665b-480a-98d5-11513eabfc66; dataRepresentation=16; procNum=12; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,0,0,0,0,57,64,74,50,58,0,0,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,41,0,41,0,44,0,2e,0,42,0,72,0,6f,0,6b,0,65,0,72,0,50,0,6c,0,75,0,67,0,69,0,6e,0,5f,0,63,0,77,0,35,0,6e,0,31,0,68,0,32,0,74,0,78,0,79,0,65,0,77,0,79,0,21,0,41,0,70,0,70,0,0,0,0,0][User....WdtPX...M.i.c.r.o.s.o.f.t...A.A.D...B.r.o.k.e.r.P.l.u.g.i.n._.c.w.5.n.1.h.2.t.x.y.e.w.y.!.A.p.p....]; rpl->Size=108; hr=0

2023-08-18 14:28:57.174 - [INFO] - [1:9632:7912] - [msedgewebview2.exe] - [COM] - ComProxyIpcClient::ComUnmarshallInterface iid=63a0a1e5-f8fe-4ba6-8508-caef1277dd35; return retObjectId=2a5e3059-08c7-41b8-8706-f1a7d27f8d54; hr=0; readBytesCount=68
2023-08-18 14:28:57.270 - [INFO] - [1:9632:7912] - [msedgewebview2.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=2a5e3059-08c7-41b8-8706-f1a7d27f8d54; dataRepresentation=16; procNum=7; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,31,0,2d,0,57,64,74,50,2c,0,0,0,57,0,6f,0,72,0,6b,0,20,0,6f,0,72,0,20,0,73,0,63,0,68,0,6f,0,6f,0,6c,0,20,0,61,0,63,0,63,0,6f,0,75,0,6e,0,74,0,0,0,0,0][User1.-.WdtP,...W.o.r.k. .o.r. .s.c.h.o.o.l. .a.c.c.o.u.n.t....]; rpl->Size=64; hr=0
2023-08-18 14:28:57.431 - [INFO] - [1:9632:7912] - [msedgewebview2.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=2a5e3059-08c7-41b8-8706-f1a7d27f8d54; dataRepresentation=16; procNum=8; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,1,0,0,0,57,64,74,50,3a,0,0,0,41,0,73,0,73,0,69,0,67,0,6e,0,65,0,64,0,20,0,62,0,79,0,20,0,79,0,6f,0,75,0,72,0,20,0,6f,0,72,0,67,0,61,0,6e,0,69,0,7a,0,61,0,74,0,69,0,6f,0,6e,0,0,0,0,0,0,0][User....WdtP:...A.s.s.i.g.n.e.d. .b.y. .y.o.u.r. .o.r.g.a.n.i.z.a.t.i.o.n......]; rpl->Size=80; hr=0
2023-08-18 14:28:57.772 - [INFO] - [1:9632:7912] - [msedgewebview2.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=2a5e3059-08c7-41b8-8706-f1a7d27f8d54; dataRepresentation=16; procNum=9; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[55,73,65,72,44,0,0,0,57,64,74,50,18,1,0,0,40,0,7b,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,41,0,41,0,44,0,2e,0,42,0,72,0,6f,0,6b,0,65,0,72,0,50,0,6c,0,75,0,67,0,69,0,6e,0,5f,0,31,0,30,0,30,0,30,0,2e,0,31,0,39,0,30,0,34,0,31,0,2e,0,31,0,30,0,32,0,33,0,2e,0,30,0,5f,0,6e,0,65,0,75,0,74,0,72,0,61,0,6c,0,5f,0,6e,0,65,0,75,0,74,0,72,0,61,0,6c,0,5f,0,63,0,77,0,35,0,6e,0,31,0,68,0,32,0,74,0,78,0,79,0,65,0,77,0,79,0,3f,0,6d,0,73,0,2d,0,72,0,65,0,73,0,6f,0,75,0,72,0,63,0,65,0,3a,0,2f,0,2f,0,4d,0,69,0,63,0,72,0,6f,0,73,0,6f,0,66,0,74,0,2e,0,41,0,41,0,44,0,2e,0,42,0,72,0,6f,0,6b,0,65,0,72,0,50,0,6c,0,75,0,67,0,69,0,6e,0,2f,0,46,0,69,0,6c,0,65,0,73,0,2f,0,41,0,73,0,73,0,65,0,74,0,73,0,2f,0,4c,0,6f,0,67,0,6f,0,2e,0,70,0,6e,0,67,0,7d,0,0,0,0,0][UserD...WdtP....@.{.M.i.c.r.o.s.o.f.t...A.A.D...B.r.o.k.e.r.P.l.u.g.i.n._.1.0.0.0...1.9.0.4.1...1.0.2.3...0._.n.e.u.t.r.a.l._.n.e.u.t.r.a.l._.c.w.5.n.1.h.2.t.x.y.e.w.y.?.m.s.-.r.e.s.o.u.r.c.e.:././.M.i.c.r.o.s.o.f.t...A.A.D...B.r.o.k.e.r.P.l.u.g.i.n./.F.i.l.e.s./.A.s.s.e.t.s./.L.o.g.o...p.n.g.}....]; rpl->Size=300; hr=0
```

CITokenBrokerInternalStatics8

```
2023-08-18 14:28:59.359 - [INFO] - [1:9632:8100] - [msedgewebview2.exe] - [COM] - ComProxyIpcClient::ComQueryInterface objectId=9badfe54-bb52-4b90-8e16-aaeff2f80bca; rclsid=878f3f2a-34db-42ce-a02b-d637b10a89ff; return retObjectId=c0cae5b6-da79-49b0-a39d-64bbd0feced0. hr=0
2023-08-18 14:29:00.943 - [INFO] - [1:9632:8100] - [msedgewebview2.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=c0cae5b6-da79-49b0-a39d-64bbd0feced0; dataRepresentation=16; procNum=6; buffer=[bb,3,0,0,bb,3,0,0,0,0,0,1,0,0,0,c,0,0,0,36,77,65,62,74,6f,6b,65,6e,72,65,71,75,65,73,74,5f,7b,35,36,36,34,42,31,32,38,2d,32,41,34,42,2d,34,41,39,45,2d,39,39,43,32,2d,39,37,46,35,46,39,44,42,44,35,36,33,7d,0,0,4,1,0,0,3,71,0,0,0,1,0,0,0,c,0,0,0,b,57,54,52,65,71,5f,53,63,6f,70,65,0,0,0,c,0,0,0,18,65,6e,75,6d,65,72,61,74,65,2e,61,63,63,6f,75,6e,74,73,2e,6c,6f,63,61,6c,0,0,0,c,0,0,0,10,57,54,52,65,71,5f,50,72,6f,6d,70,74,54,79,70,65,0,0,0,5,0,0,0,0,0,0,0,c,0,0,0,e,57,54,52,65,71,5f,43,6c,69,65,6e,74,49,64,0,0,0,c,0,0,0,24,65,63,64,36,62,38,32,30,2d,33,32,63,32,2d,34,39,62,36,2d,39,38,61,36,2d,34,34,34,35,33,30,65,35,61,37,37,61,0,0,0,c,0,0,0,13,57,54,52,65,71,5f,43,6f,72,72,65,6c,61,74,69,6f,6e,49,64,0,0,0,c,0,0,0,26,7b,36,42,35,34,44,36,38,45,2d,34,45,30,38,2d,34,45,31,35,2d,42,30,36,39,2d,31,36,35,38,33,37,38,41,34,31,37,35,7d,0,0,0,c,0,0,0,e,57,54,52,65,71,5f,50,72,6f,76,69,64,65,72,0,0,4,1,0,0,2,71,0,0,0,1,0,0,0,c,0,0,0,b,57,41,50,5f,50,75,72,70,6f,73,65,0,0,0,c,0,0,0,1d,41,73,73,69,67,6e,65,64,20,62,79,20,79,6f,75,72,20,6f,72,67,61,6e,69,7a,61,74,69,6f,6e,0,0,0,c,0,0,0,6,57,41,50,5f,49,64,0,0,0,c,0,0,0,1b,68,74,74,70,73,3a,2f,2f,6c,6f,67,69,6e,2e,6d,69,63,72,6f,73,6f,66,74,2e,63,6f,6d,0,0,0,c,0,0,0,1e,57,41,50,5f,49,73,45,6e,75,6d,65,72,61,62,6c,65,53,74,61,74,65,53,75,70,70,6f,72,74,65,64,0,0,0,5,0,0,0,1,0,0,0,c,0,0,0,1c,57,41,50,5f,49,73,41,64,64,4e,65...][...................6webtokenrequest_{5664B128-2A4B-4A9E-99C2-97F5F9DBD563}.......q............WTReq_Scope........enumerate.accounts.local........WTReq_PromptType................WTReq_ClientId.......$ecd6b820-32c2-49b6-98a6-444530e5a77a........WTReq_CorrelationId.......&{6B54D68E-4E08-4E15-B069-1658378A4175}........WTReq_Provider.......q............WAP_Purpose........Assigned by your organization........WAP_Id........https://login.microsoft.com........WAP_IsEnumerableStateSupported................WAP_IsAddN]; size=2216; return rpl->DataRepresentation=16; rpl->Buffer=[0,0,0,0,dc,cb,26,cf,1e,d6,16,4a,b1,e4,60,ad,96,aa,5e,7c,ff,ff,ff,ff,ff,ff,ff,ff,0,0,2,0,93,4,0,0,93,4,0,0,4d,45,4f,57,4,0,0,0,5,83,2a,c1,f8,d1,83,44,8d,54,38,fe,29,27,84,ff,5a,3,0,0,0,0,0,0,c0,0,0,0,0,0,0,46,0,0,0,0,0,0,0,0,3e,0,0,0,57,0,69,0,6e,0,64,0,6f,0,77,0,73,0,2e,0,53,0,65,0,63,0,75,0,72,0,69,0,74,0,79,0,2e,0,41,0,75,0,74,0,68,0,65,0,6e,0,74,0,69,0,63,0,61,0,74,0,69,0,6f,0,6e,0,2e,0,57,0,65,0,62,0,2e,0,43,0,6f,0,72,0,65,0,2e,0,57,0,65,0,62,0,54,0,6f,0,6b,0,65,0,6e,0,52,0,65,0,71,0,75,0,65,0,73,0,74,0,52,0,65,0,73,0,75,0,6c,0,74,0,5,0,0,0,c,0,0,0,11,0,0,0,57,0,54,0,52,0,65,0,73,0,75,0,6c,0,74,0,5f,0,50,0,72,0,6f,0,76,0,69,0,64,0,65,0,72,0,1,4,0,0,71,2,0,0,0,0,0,1,0,0,0,c,0,0,0,b,57,41,50,5f,50,75,72,70,6f,73,65,0,0,0,c,0,0,0,1d,41,73,73,69,67,6e,65,64,20,62,79,20,79,6f,75,72,20,6f,72,67,61,6e,69,7a,61,74,69,6f,6e,0,0,0,c,0,0,0,6,57,41,50,5f,49,64,0,0,0,c,0,0,0,1b,68,74,74,70,73,3a,2f,2f,6c,6f,67,69,6e,2e,6d,69,63,72,6f,73,6f,66,74,2e,63,6f,6d,0,0,0,c,0,0,0,1e,57,41,50,5f,49,73,45,6e,75,6d,65,72,61,62,6c,65,53,74,61,74,65,53,75,70,70,6f,72,74,65,64,0,0,0,5,0,0,0,1,0,0,0,c,0,0,0,1c,57,41,50,5f,49,73,41,64,64,4e,65,77,41,63,63,6f,75,6e,74,52,65,71,75,65,73,74,65,64,0,0,0,5,0,0,0,0,0,0,0,c,0,0,0,14,57,41,50,5f,49,73,53,79,73,74,65,6d,50,72,6f,76,69,64,65,72,0,0,0,5,0,0,0,0,0,0,0,c,0,0,0...][......&....J..`...^|....................MEOW......*....D.T8.)'..Z..............F........>...W.i.n.d.o.w.s...S.e.c.u.r.i.t.y...A.u.t.h.e.n.t.i.c.a.t.i.o.n...W.e.b...C.o.r.e...W.e.b.T.o.k.e.n.R.e.q.u.e.s.t.R.e.s.u.l.t.............W.T.R.e.s.u.l.t._.P.r.o.v.i.d.e.r.....q...............WAP_Purpose........Assigned by your organization........WAP_Id........https://login.microsoft.com........WAP_IsEnumerableStateSupported................WAP_IsAddNewAccountRequested................WAP_IsSystemProvider..............]; rpl->Size=1216; hr=0
```

IKeyValuePair<HSTRING,IInspectable>

```
2023-08-18 14:29:01.810 - [INFO] - [1:9632:8100] - [msedgewebview2.exe] - [COM] - ComProxyIpcClient::ComUnmarshallInterface iid=09335560-6c6b-5a26-9348-97b781132b20; return retObjectId=faa86aaa-9db9-4f3c-a6fe-cddced833ddb; hr=0; readBytesCount=68
2023-08-18 14:29:01.940 - [INFO] - [1:9632:8100] - [msedgewebview2.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=faa86aaa-9db9-4f3c-a6fe-cddced833ddb; dataRepresentation=16; procNum=7; buffer=[][]; size=0; return rpl->DataRepresentation=16; rpl->Buffer=[0,0,2,0,63,0,0,0,63,0,0,0,4d,45,4f,57,4,0,0,0,e0,e2,86,af,2d,b1,6a,4c,9c,5a,d7,aa,65,10,1e,90,f7,88,fd,41,95,f2,39,4d,91,ac,a8,5f,31,49,a0,5b,0,0,0,0,33,0,0,0,1,0,0,0,1,4,0,0,27,0,0,0,0,0,0,1,0,0,0,c,0,0,0,b,57,54,52,65,73,5f,54,6f,6b,65,6e,0,0,0,c,0,0,0,8,4e,6f,20,54,6f,6b,65,6e,0,0,0,0,0][....c...c...MEOW........-.jL.Z..e......A..9M..._1I.[....3...........'...............WTRes_Token........No Token....]; rpl->Size=116; hr=0
```

CWebTokenRequestResult

```
2023-08-18 14:28:47.902 - [INFO] - [1:8880:11088] - [winword.exe] - [COM] - ComProxyIpcClient::ComUnmarshallInterface iid=0a815852-7c44-5674-b3d2-fa2e4c1e46c9; return retObjectId=74913803-008d-4d89-8fd4-36cd455809d7; hr=0; readBytesCount=68
2023-08-18 14:28:48.309 - [INFO] - [1:8880:11088] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=74913803-008d-4d89-8fd4-36cd455809d7; dataRepresentation=16; procNum=6; buffer=[0,0,2,0,44,0,0,0,44,0,0,0,4d,45,4f,57,1,0,0,0,22,4b,b5,de,f2,70,ab,55,97,c0,6c,bd,c5,dd,b6,f0,80,a,0,0,5,0,0,0,5a,36,98,d3,f1,ab,d1,4e,41,fb,1a,2b,2a,40,d4,af,15,c0,0,0,b0,22,ff,ff,9e,50,ae,34,27,6,6d,1e,0,0,0,0][....D...D...MEOW...."K...p.U..l.............Z6.....NA..+*@......."...P.4'.m....]; size=80; return rpl->DataRepresentation=16; rpl->Buffer=[0,0,0,0][...]; rpl->Size=4; hr=0
```

```
2023-08-18 14:29:01.252 - [INFO] - [1:9632:7648] - [msedgewebview2.exe] - [COM] - ComProxyIpcClient::ComQueryInterface objectId=00bbd3e0-a509-4908-964f-f54eaaee5b1c; rclsid=878f3f2a-34db-42ce-a02b-d637b10a89ff; return retObjectId=350b8870-de36-4c10-990f-2a0ca5550da8. hr=0
2023-08-18 14:29:02.672 - [INFO] - [1:9632:7648] - [msedgewebview2.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=350b8870-de36-4c10-990f-2a0ca5550da8; dataRepresentation=16; procNum=6; buffer=[bb,3,0,0,bb,3,0,0,0,0,0,1,0,0,0,c,0,0,0,36,77,65,62,74,6f,6b,65,6e,72,65,71,75,65,73,74,5f,7b,35,36,36,34,42,31,32,38,2d,32,41,34,42,2d,34,41,39,45,2d,39,39,43,32,2d,39,37,46,35,46,39,44,42,44,35,36,33,7d,0,0,4,1,0,0,3,71,0,0,0,1,0,0,0,c,0,0,0,b,57,54,52,65,71,5f,53,63,6f,70,65,0,0,0,c,0,0,0,18,65,6e,75,6d,65,72,61,74,65,2e,61,63,63,6f,75,6e,74,73,2e,6c,6f,63,61,6c,0,0,0,c,0,0,0,10,57,54,52,65,71,5f,50,72,6f,6d,70,74,54,79,70,65,0,0,0,5,0,0,0,0,0,0,0,c,0,0,0,e,57,54,52,65,71,5f,43,6c,69,65,6e,74,49,64,0,0,0,c,0,0,0,24,65,63,64,36,62,38,32,30,2d,33,32,63,32,2d,34,39,62,36,2d,39,38,61,36,2d,34,34,34,35,33,30,65,35,61,37,37,61,0,0,0,c,0,0,0,13,57,54,52,65,71,5f,43,6f,72,72,65,6c,61,74,69,6f,6e,49,64,0,0,0,c,0,0,0,26,7b,41,37,36,34,39,35,35,45,2d,34,33,30,31,2d,34,31,43,39,2d,42,33,37,33,2d,44,31,39,43,31,44,36,32,45,45,37,39,7d,0,0,0,c,0,0,0,e,57,54,52,65,71,5f,50,72,6f,76,69,64,65,72,0,0,4,1,0,0,2,71,0,0,0,1,0,0,0,c,0,0,0,b,57,41,50,5f,50,75,72,70,6f,73,65,0,0,0,c,0,0,0,1d,41,73,73,69,67,6e,65,64,20,62,79,20,79,6f,75,72,20,6f,72,67,61,6e,69,7a,61,74,69,6f,6e,0,0,0,c,0,0,0,6,57,41,50,5f,49,64,0,0,0,c,0,0,0,1b,68,74,74,70,73,3a,2f,2f,6c,6f,67,69,6e,2e,6d,69,63,72,6f,73,6f,66,74,2e,63,6f,6d,0,0,0,c,0,0,0,1e,57,41,50,5f,49,73,45,6e,75,6d,65,72,61,62,6c,65,53,74,61,74,65,53,75,70,70,6f,72,74,65,64,0,0,0,5,0,0,0,1,0,0,0,c,0,0,0,1c,57,41,50,5f,49,73,41,64,64,4e,65...][...................6webtokenrequest_{5664B128-2A4B-4A9E-99C2-97F5F9DBD563}.......q............WTReq_Scope........enumerate.accounts.local........WTReq_PromptType................WTReq_ClientId.......$ecd6b820-32c2-49b6-98a6-444530e5a77a........WTReq_CorrelationId.......&{A764955E-4301-41C9-B373-D19C1D62EE79}........WTReq_Provider.......q............WAP_Purpose........Assigned by your organization........WAP_Id........https://login.microsoft.com........WAP_IsEnumerableStateSupported................WAP_IsAddN]; size=2216; return rpl->DataRepresentation=16; rpl->Buffer=[0,0,0,0,f9,3d,89,e8,ed,f7,d6,4a,bd,19,ab,db,fa,b4,83,d7,ff,ff,ff,ff,ff,ff,ff,ff,0,0,2,0,93,4,0,0,93,4,0,0,4d,45,4f,57,4,0,0,0,5,83,2a,c1,f8,d1,83,44,8d,54,38,fe,29,27,84,ff,5a,3,0,0,0,0,0,0,c0,0,0,0,0,0,0,46,0,0,0,0,0,0,0,0,3e,0,0,0,57,0,69,0,6e,0,64,0,6f,0,77,0,73,0,2e,0,53,0,65,0,63,0,75,0,72,0,69,0,74,0,79,0,2e,0,41,0,75,0,74,0,68,0,65,0,6e,0,74,0,69,0,63,0,61,0,74,0,69,0,6f,0,6e,0,2e,0,57,0,65,0,62,0,2e,0,43,0,6f,0,72,0,65,0,2e,0,57,0,65,0,62,0,54,0,6f,0,6b,0,65,0,6e,0,52,0,65,0,71,0,75,0,65,0,73,0,74,0,52,0,65,0,73,0,75,0,6c,0,74,0,5,0,0,0,c,0,0,0,11,0,0,0,57,0,54,0,52,0,65,0,73,0,75,0,6c,0,74,0,5f,0,50,0,72,0,6f,0,76,0,69,0,64,0,65,0,72,0,1,4,0,0,71,2,0,0,0,0,0,1,0,0,0,c,0,0,0,b,57,41,50,5f,50,75,72,70,6f,73,65,0,0,0,c,0,0,0,1d,41,73,73,69,67,6e,65,64,20,62,79,20,79,6f,75,72,20,6f,72,67,61,6e,69,7a,61,74,69,6f,6e,0,0,0,c,0,0,0,6,57,41,50,5f,49,64,0,0,0,c,0,0,0,1b,68,74,74,70,73,3a,2f,2f,6c,6f,67,69,6e,2e,6d,69,63,72,6f,73,6f,66,74,2e,63,6f,6d,0,0,0,c,0,0,0,1e,57,41,50,5f,49,73,45,6e,75,6d,65,72,61,62,6c,65,53,74,61,74,65,53,75,70,70,6f,72,74,65,64,0,0,0,5,0,0,0,1,0,0,0,c,0,0,0,1c,57,41,50,5f,49,73,41,64,64,4e,65,77,41,63,63,6f,75,6e,74,52,65,71,75,65,73,74,65,64,0,0,0,5,0,0,0,0,0,0,0,c,0,0,0,14,57,41,50,5f,49,73,53,79,73,74,65,6d,50,72,6f,76,69,64,65,72,0,0,0,5,0,0,0,0,0,0,0,c,0,0,0...][.....=.....J............................MEOW......*....D.T8.)'..Z..............F........>...W.i.n.d.o.w.s...S.e.c.u.r.i.t.y...A.u.t.h.e.n.t.i.c.a.t.i.o.n...W.e.b...C.o.r.e...W.e.b.T.o.k.e.n.R.e.q.u.e.s.t.R.e.s.u.l.t.............W.T.R.e.s.u.l.t._.P.r.o.v.i.d.e.r.....q...............WAP_Purpose........Assigned by your organization........WAP_Id........https://login.microsoft.com........WAP_IsEnumerableStateSupported................WAP_IsAddNewAccountRequested................WAP_IsSystemProvider..............]; rpl->Size=1216; hr=0
```

= WMI protection branch
:date: 2023-08-21
:tags: tag_venn tag_reversing

In order to play in client side with COM proxy first, following Chermyanin tip, I read [WMI protection branch](https://tfs.os33.net/DefaultCollection/Portal/_git/Workplace.Container.Windows/?version=GBROADMAP-67592-e-spike-filter-some-wmi-calls-that-allow-sandbox-escape) to have some ideas if AAD Broker process is started using some WMI class. Reading the description from [ROADMAP-67592](https://os33corp.atlassian.net/browse/ROADMAP-67592) there is a link about [running remote processes using WMI](https://learn.microsoft.com/en-us/windows/win32/wmisdk/creating-processes-remotely). Despite documentation says this can't created interactive remote processes the sample command (tested locally) `wmic process call create "C:\windows\notepad.exe","C:\windows"` worked, running notepad in user account inside session 1.

However, inside the COM proxy logs just computer and hardware queries are found: Win32_ComputerSystemProduct, CIM_DiskDrive, CIM_MediaAccessDevice, CIM_LogicalDevice, CIM_PhysicalMemory and so on.

```
2023-08-18 14:28:15.268 - [INFO] - [1:8880:3144] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=80f209c5-e8b7-41db-8ccd-704ab17d0785; dataRepresentation=16; procNum=3; buffer=[...][.cO`...O...K...).......]; size=24; return rpl->DataRepresentation=16; rpl->Buffer=[...][....................WBEMDATA.....................................................\j...N....O.S...VMW10H2..ROOT\CIMV2.=........"........CIM_Product.....6...........................'............/........5.......]...f...........................+...6...}.........................................................{....Win32_ComputerSystemProduct..CIMWin32..Locale..UUID..{FAF76B96-798C-11D2-AAD1-006008C78BC7}..Caption..@............).......#............".........."....@....string..MaxLen..Description..@............]; rpl->Size=1828; hr=0
2023-08-18 14:28:16.722 - [INFO] - [1:8880:3144] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=555e6598-ef0b-4d59-8be1-fc62d6082a4b; dataRepresentation=16; procNum=3; buffer=[...][...p...@.......h.......]; size=24; return rpl->DataRepresentation=16; rpl->Buffer=[...][....E'......E'......WBEMDATA....+'............#'.......'...........'........&....,.]93D..].SB....VMW10H2..ROOT\CIMV2..$................CIM_DiskDrive......CIM_MediaAccessDevice......CIM_LogicalDevice......CIM_LogicalElement......CIM_ManagedSystemElement.....6........................................#........)...3...Q..._...........s...............................#...;...~...............#...5...g...t...........L...Z.......................'...........u.......................................................U...]; rpl->Size=10076; hr=0
2023-08-18 14:28:17.588 - [INFO] - [1:8880:3144] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=3baea0a0-1160-491b-8a39-7332dd8744a2; dataRepresentation=16; procNum=3; buffer=[...][.!....:O.'.y.Z.........]; size=24; return rpl->DataRepresentation=16; rpl->Buffer=[...][....................WBEMDATA......................................................^N.^@..........VMW10H2..ROOT\CIMV2..............|....CIM_PhysicalMemory......CIM_Chip......CIM_PhysicalComponent......CIM_PhysicalElement......CIM_ManagedSystemElement.....6........................... ............(............$...V...b...........i...s...........8...N...........`...s...........N...[...................................V...k...........................[...g..........._...f...................-...9............... ..]; rpl->Size=5876; hr=0
```

I was very interested into testing this branch, I saw the code was changed in the driver and in the container components. My next step will be to learn how to replace the driver and those components and run demo sessions with some breakpoints on new WMI protection methods `WmiCallFilterService` and `CheckWmiExecMethod`.

 	Windows.Security.Authentication.Web.Core.dll!Windows::Internal::Security::Authentication::TokenBroker::PluginRegistration::CreateProviderFromRegistration()	Unknown
 	Windows.Security.Authentication.Web.Core.dll!Windows::Internal::Security::Authentication::TokenBroker::PluginRegistration::GetWebAccountProviderFromIdAndAuthority()	Unknown


= Analysis of ComInvoke (again)
:date: 2023-08-22
:tags: tag_venn tag_reversing

Today I got back to the previous analysis of ComInvoke to get some context in `winword.exe` calls, but this is a slow process. I got some useful stacks to change some parameters, but I think that to change those parameters I need before to know the marshalling process involved.

Stack of trying to use cache:

```
Windows.Security.Authentication.Web.Core.dll!Windows::Internal::Security::Authentication::TokenBroker::PluginRegistration::GetPluginPFN()	Unknown
Windows.Security.Authentication.Web.Core.dll!GetCachedTokenResponses()	Unknown
Windows.Security.Authentication.Web.Core.dll!Windows::Internal::Security::Authentication::TokenBroker::CheckCacheForWebTokenResponses()	Unknown
Windows.Security.Authentication.Web.Core.dll!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryCache()	Unknown
Windows.Security.Authentication.Web.Core.dll!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::DoWork()	Unknown
```

Log:

```
2023-08-18 14:28:47.150 - [INFO] - [1:8880:11088] - [winword.exe] - [COM] - ComProxyIpcClient::RoGetActivationFactory activatableClassId=e60e20a2-87a0-4b34-8502-ee3b8fb4ec16 iid=Windows.Internal.Security.Authentication.Web.WamProviderRegistration; return retObjectId=b4163de1-37a9-49f7-b566-5867417a9c87; hr=0
2023-08-18 14:28:47.199 - [INFO] - [1:8880:11088] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=b4163de1-37a9-49f7-b566-5867417a9c87; dataRepresentation=16; procNum=6; buffer=[55,73,65,72,dd,dd,dd,dd,57,64,74,50,32,0,0,0,68,0,74,0,74,0,70,0,73,0,3a,0,2f,0,2f,0,6c,0,6f,0,67,0,69,0,6e,0,2e,0,77,0,69,0,6e,0,64,0,6f,0,77,0,73,0,2e,0,6e,0,65,0,74,0][User....WdtP2...h.t.t.p.s.:././.l.o.g.i.n...w.i.n.d.o.w.s...n.e.t]; size=66; return rpl->DataRepresentation=16; rpl->Buffer=[0,0,2,0,44,0,0,0,44,0,0,0,4d,45,4f,57,1,0,0,0,e5,a1,a0,63,fe,f8,a6,4b,85,8,ca,ef,12,77,dd,35,80,2,0,0,1,0,0,0,f7,56,b6,49,9,52,1d,23,a8,9f,bd,e7,8,8b,6f,3e,21,8,0,0,20,21,ff,ff,8d,47,76,64,b3,ae,1e,a8,0,0,0,0,0,0,0,0][....D...D...MEOW.......c...K.....w.5.........V.I.R.#......o>!... !...Gvd...........]; rpl->Size=84; hr=0

Offset(h) 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F

00000000  55 73 65 72 DD DD DD DD 57 64 74 50 32 00 00 00  UserÝÝÝÝWdtP2...
00000010  68 00 74 00 74 00 70 00 73 00 3A 00 2F 00 2F 00  h.t.t.p.s.:././.
00000020  6C 00 6F 00 67 00 69 00 6E 00 2E 00 77 00 69 00  l.o.g.i.n...w.i.
00000030  6E 00 64 00 6F 00 77 00 73 00 2E 00 6E 00 65 00  n.d.o.w.s...n.e.
00000040  74 00                                            t
```

Interface (OleView.NET):

```
[Guid("e60e20a2-87a0-4b34-8502-ee3b8fb4ec16")]
interface Windows::Internal::Security::Authentication::Web::IWamProviderRegistrationStatics : IInspectable {
    HRESULT Proc6(/* Stack Offset: 8 */ [In] HSTRING p0, /* Stack Offset: 16 */ [Out] Windows::Internal::Security::Authentication::Web::IWamProviderRegistrationInformation** p1);
```

Get WA provider stacks (just the top):

```
Windows.Security.Authentication.Web.Core.dll!Windows::Internal::Security::Authentication::TokenBroker::PluginManager::CreateConnectedAccountProvider(unsigned __int64,struct Windows::Security::Credentials::IWebAccountProvider * *)	Unknown
Windows.Security.Authentication.Web.Core.dll!Windows::Internal::Security::Authentication::TokenBroker::PluginRegistration::CreateProviderFromRegistration()	Unknown
```

Common stack from tops above:

```
Windows.Security.Authentication.Web.Core.dll!Windows::Internal::Security::Authentication::TokenBroker::PluginRegistration::GetWebAccountProviderFromIdAndAuthority()	Unknown
Windows.Security.Authentication.Web.Core.dll!Windows::Security::Authentication::Web::Core::CCoreFindAccountProviderOperation::DoWork()	Unknown
```

Log:

```
2023-08-18 14:28:20.338 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::RoGetActivationFactory activatableClassId=e60e20a2-87a0-4b34-8502-ee3b8fb4ec16 iid=Windows.Internal.Security.Authentication.Web.WamProviderRegistration; return retObjectId=264c7c0b-4959-4799-bd02-e796a1c37c2e; hr=0
2023-08-18 14:28:20.373 - [INFO] - [1:8880:9264] - [winword.exe] - [COM] - ComProxyIpcClient::ComInvoke objectId=264c7c0b-4959-4799-bd02-e796a1c37c2e; dataRepresentation=16; procNum=6; buffer=[55,73,65,72,dd,dd,dd,dd,57,64,74,50,2c,0,0,0,68,0,74,0,74,0,70,0,73,0,3a,0,2f,0,2f,0,6c,0,6f,0,67,0,69,0,6e,0,2e,0,6c,0,69,0,76,0,65,0,2e,0,63,0,6f,0,6d,0][User....WdtP,...h.t.t.p.s.:././.l.o.g.i.n...l.i.v.e...c.o.m]; size=60; return rpl->DataRepresentation=16; rpl->Buffer=[0,0,2,0,44,0,0,0,44,0,0,0,4d,45,4f,57,1,0,0,0,e5,a1,a0,63,fe,f8,a6,4b,85,8,ca,ef,12,77,dd,35,80,2,0,0,1,0,0,0,f7,56,b6,49,9,52,1d,23,fd,b2,7,2c,fc,f6,5,a0,13,98,0,0,20,21,ff,ff,35,d4,d1,cc,d4,82,13,b,0,0,0,0,0,0,0,0][....D...D...MEOW.......c...K.....w.5.........V.I.R.#...,........ !..5..............]; rpl->Size=84; hr=0

Offset(h) 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F

00000000  00 00 02 00 44 00 00 00 44 00 00 00 4D 45 4F 57  ....D...D...MEOW
00000010  01 00 00 00 E5 A1 A0 63 FE F8 A6 4B 85 08 CA EF  ....å¡ cþø¦K….Êï
00000020  12 77 DD 35 80 02 00 00 01 00 00 00 F7 56 B6 49  .wÝ5€.......÷V¶I
00000030  09 52 1D 23 FD B2 07 2C FC F6 05 A0 13 98 00 00  .R.#ý².,üö. .˜..
00000040  20 21 FF FF 35 D4 D1 CC D4 82 13 0B 00 00 00 00   !ÿÿ5ÔÑÌÔ‚......
00000050  00 00 00 00                                      ....
```

Interface bellow. There are sequential calls to procedures number 5, 6, 7, 8, 9 and c. Perhaps each one returns some string property from the provider.

```
[Guid("63a0a1e5-f8fe-4ba6-8508-caef1277dd35")]
interface Windows::Internal::Security::Authentication::Web::IWamProviderRegistrationInformation : IInspectable {
    HRESULT Proc6(/* Stack Offset: 8 */ [Out] HSTRING* p0);
    HRESULT Proc7(/* Stack Offset: 8 */ [Out] HSTRING* p0);
    HRESULT Proc8(/* Stack Offset: 8 */ [Out] HSTRING* p0);
    HRESULT Proc9(/* Stack Offset: 8 */ [Out] HSTRING* p0);
    HRESULT Proc10(/* Stack Offset: 8 */ [Out] HSTRING* p0);
    HRESULT Proc11(/* Stack Offset: 8 */ [Out] HSTRING* p0);
    HRESULT Proc12(/* Stack Offset: 8 */ [Out] HSTRING* p0);
    HRESULT Proc13(/* Stack Offset: 8 */ [Out] IVectorView<Windows::Foundation::Uri>** p0);
```

Parameters:

```
proc8

Offset(h) 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F

00000000  55 73 65 72 31 00 2D 00 57 64 74 50 2C 00 00 00  User1.-.WdtP,...
00000010  45 00 6D 00 61 00 69 00 6C 00 2C 00 20 00 70 00  E.m.a.i.l.,. .p.
00000020  68 00 6F 00 6E 00 65 00 2C 00 20 00 6F 00 72 00  h.o.n.e.,. .o.r.
00000030  20 00 53 00 6B 00 79 00 70 00 65 00 00 00 00 00   .S.k.y.p.e.....


proc9

Offset(h) 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F

00000000  55 73 65 72 00 00 00 00 57 64 74 50 40 01 00 00  User....WdtP@...
00000010  40 00 7B 00 4D 00 69 00 63 00 72 00 6F 00 73 00  @.{.M.i.c.r.o.s.
00000020  6F 00 66 00 74 00 2E 00 57 00 69 00 6E 00 64 00  o.f.t...W.i.n.d.
00000030  6F 00 77 00 73 00 2E 00 43 00 6C 00 6F 00 75 00  o.w.s...C.l.o.u.
00000040  64 00 45 00 78 00 70 00 65 00 72 00 69 00 65 00  d.E.x.p.e.r.i.e.
00000050  6E 00 63 00 65 00 48 00 6F 00 73 00 74 00 5F 00  n.c.e.H.o.s.t._.
00000060  31 00 30 00 2E 00 30 00 2E 00 31 00 39 00 30 00  1.0...0...1.9.0.
00000070  34 00 31 00 2E 00 31 00 32 00 36 00 36 00 5F 00  4.1...1.2.6.6._.
00000080  6E 00 65 00 75 00 74 00 72 00 61 00 6C 00 5F 00  n.e.u.t.r.a.l._.
00000090  6E 00 65 00 75 00 74 00 72 00 61 00 6C 00 5F 00  n.e.u.t.r.a.l._.
000000A0  63 00 77 00 35 00 6E 00 31 00 68 00 32 00 74 00  c.w.5.n.1.h.2.t.
000000B0  78 00 79 00 65 00 77 00 79 00 3F 00 6D 00 73 00  x.y.e.w.y.?.m.s.
000000C0  2D 00 72 00 65 00 73 00 6F 00 75 00 72 00 63 00  -.r.e.s.o.u.r.c.
000000D0  65 00 3A 00 2F 00 2F 00 4D 00 69 00 63 00 72 00  e.:././.M.i.c.r.
000000E0  6F 00 73 00 6F 00 66 00 74 00 2E 00 57 00 69 00  o.s.o.f.t...W.i.
000000F0  6E 00 64 00 6F 00 77 00 73 00 2E 00 43 00 6C 00  n.d.o.w.s...C.l.
00000100  6F 00 75 00 64 00 45 00 78 00 70 00 65 00 72 00  o.u.d.E.x.p.e.r.
00000110  69 00 65 00 6E 00 63 00 65 00 48 00 6F 00 73 00  i.e.n.c.e.H.o.s.
00000120  74 00 2F 00 46 00 69 00 6C 00 65 00 73 00 2F 00  t./.F.i.l.e.s./.
00000130  69 00 6D 00 61 00 67 00 65 00 73 00 2F 00 4C 00  i.m.a.g.e.s./.L.
00000140  6F 00 67 00 6F 00 2E 00 70 00 6E 00 67 00 7D 00  o.g.o...p.n.g.}.
00000150  00 00 00 00                                      ....


proc 0xc

Offset(h) 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F

00000000  55 73 65 72 4D 45 4F 57 57 64 74 50 6E 00 00 00  UserMEOWWdtPn...
00000010  4D 00 69 00 63 00 72 00 6F 00 73 00 6F 00 66 00  M.i.c.r.o.s.o.f.
00000020  74 00 2E 00 57 00 69 00 6E 00 64 00 6F 00 77 00  t...W.i.n.d.o.w.
00000030  73 00 2E 00 43 00 6C 00 6F 00 75 00 64 00 45 00  s...C.l.o.u.d.E.
00000040  78 00 70 00 65 00 72 00 69 00 65 00 6E 00 63 00  x.p.e.r.i.e.n.c.
00000050  65 00 48 00 6F 00 73 00 74 00 5F 00 63 00 77 00  e.H.o.s.t._.c.w.
00000060  35 00 6E 00 31 00 68 00 32 00 74 00 78 00 79 00  5.n.1.h.2.t.x.y.
00000070  65 00 77 00 79 00 21 00 41 00 70 00 70 00 00 00  e.w.y.!.A.p.p...
00000080  00 00 00 00                                      ....
```

Another stack with some invokes:

```
Windows.Security.Authentication.Web.Core.dll!Windows::Internal::Security::Authentication::TokenBroker::PluginRegistration::GetPluginPFN()	Unknown
Windows.Security.Authentication.Web.Core.dll!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::ValidateProviderAndAccountsMatch()	Unknown
Windows.Security.Authentication.Web.Core.dll!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::DoWork()	Unknown
``` 

Parameters:

```
proc 0xb

Offset(h) 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F

00000000  55 73 65 72 00 00 00 00 57 64 74 50 66 00 00 00  User....WdtPf...
00000010  4D 00 69 00 63 00 72 00 6F 00 73 00 6F 00 66 00  M.i.c.r.o.s.o.f.
00000020  74 00 2E 00 57 00 69 00 6E 00 64 00 6F 00 77 00  t...W.i.n.d.o.w.
00000030  73 00 2E 00 43 00 6C 00 6F 00 75 00 64 00 45 00  s...C.l.o.u.d.E.
00000040  78 00 70 00 65 00 72 00 69 00 65 00 6E 00 63 00  x.p.e.r.i.e.n.c.
00000050  65 00 48 00 6F 00 73 00 74 00 5F 00 63 00 77 00  e.H.o.s.t._.c.w.
00000060  35 00 6E 00 31 00 68 00 32 00 74 00 78 00 79 00  5.n.1.h.2.t.x.y.
00000070  65 00 77 00 79 00 00 00 00 00 00 00              e.w.y.......


Offset(h) 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F

00000000  55 73 65 72 00 00 00 00 57 64 74 50 66 00 00 00  User....WdtPf...
00000010  4D 00 69 00 63 00 72 00 6F 00 73 00 6F 00 66 00  M.i.c.r.o.s.o.f.
00000020  74 00 2E 00 57 00 69 00 6E 00 64 00 6F 00 77 00  t...W.i.n.d.o.w.
00000030  73 00 2E 00 43 00 6C 00 6F 00 75 00 64 00 45 00  s...C.l.o.u.d.E.
00000040  78 00 70 00 65 00 72 00 69 00 65 00 6E 00 63 00  x.p.e.r.i.e.n.c.
00000050  65 00 48 00 6F 00 73 00 74 00 5F 00 63 00 77 00  e.H.o.s.t._.c.w.
00000060  35 00 6E 00 31 00 68 00 32 00 74 00 78 00 79 00  5.n.1.h.2.t.x.y.
00000070  65 00 77 00 79 00 00 00 00 00 00 00              e.w.y.......
```

I wanted to know at least the HSTRING layout in memory, so I make some reversing to the key API.

```
#include <winstring.h>
#include <string>

using namespace std;

int main()
{
    wstring str = L"my hstring";
    HSTRING hstr = NULL;
    HRESULT hr = WindowsCreateString(str.c_str(), (UINT32) str.size(), &hstr);

    if( SUCCEEDED( hr ) )
    {
        UINT32 hstrLen = WindowsGetStringLen(hstr);
        hstrLen = 0;
        PCWSTR rawHstr = WindowsGetStringRawBuffer(hstr, &hstrLen);
        BOOL isEmpty = WindowsIsStringEmpty(hstr);
        HSTRING hstr2 = NULL;
        hr = WindowsDuplicateString(hstr, &hstr2);
        if( SUCCEEDED(hr) )
        {
            hr = WindowsDeleteString(hstr2);
        }
        hr = WindowsDeleteString(hstr);
    }

    HSTRING_HEADER hstrHeader = {};
    HSTRING hstr3 = NULL;
    hr = WindowsCreateStringReference(str.c_str(), (UINT32) str.size(), &hstrHeader, &hstr3);

    if( SUCCEEDED( hr ) )
    {
        hr = WindowsDeleteString(hstr3);
    }

    return hr;
}
```

```
UINT32 hstrLen = WindowsGetStringLen(hstr);
00007FFC84D8BBE7  mov         eax,dword ptr [rcx+4]  

PCWSTR rawHstr = WindowsGetStringRawBuffer(hstr, &hstrLen);
00007FFC84D22345  mov         rax,qword ptr [rcx+10h]  

BOOL isEmpty = WindowsIsStringEmpty(hstr);
00007FFC84D23019  mov         edx,dword ptr [rcx+4]  
00007FFC84D2301C  test        edx,edx  
00007FFC84D2301E  sete        al  

hr = WindowsDuplicateString(hstr, &hstr2);
00007FFC84D1789A  lock inc    dword ptr [rcx+18h]

hr = WindowsDeleteString(hstr2);
00007FFC84D176A8  lock xadd   dword ptr [rcx+18h],eax

hr = WindowsCreateStringReference(...
layout:
0x0000009C0230F848  00000001
```

The result:

```
struct HSTRING {
  BOOL Reference;     // +0x00
  UINT32 Lenght;      // +0x04
  UINT64 Unused2;
  PCWSTR RawString;   // +0x10
  UINT32 RefCounter;  // +0x18
};
```

= ABI for the public classes
:date: 2023-08-23
:tags: tag_venn tag_reversing

Before I analyzed the stack from internal classes I study a while about winrt and searched for the ABI for the public classes, in other words, those that are not in the internal namespace. From the related are two: 

 - [Windows.Security.Authentication.Web.Core.WebTokenRequest](https://learn.microsoft.com/en-us/uwp/api/windows.security.authentication.web.core.webtokenrequest)
 - [Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager](https://learn.microsoft.com/en-us/uwp/api/windows.security.authentication.web.core)

I looked for .winmd files describing the ABI for those classes and found them in the Windows SDK (e.g. `C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\winrt`). Together were the IDL files, what make easier to future analysis from COM invokes, since the order of procedures is known (and its arguments).

Since those classes were not being hooked I added them, but hooking WebAuthenticationCoreManager made winword to crash during signin (after typed the email).

winword_se_crash_hooking_webauthenticationcoremanager.png

Looking in the stack it seems some async operation using (I)WebAccount.

```
>	Mso30win32client.dll!Mso::Telemetry::Activity::SetResult(bool,class Office::System::Result const &)	Unknown
 	Mso30win32client.dll!`Mso::Authentication::WAMLibrary::WAMFutureFromAsync<class Mso::TCntPtr<struct ABI::Windows::Security::Credentials::IWebAccount>,struct ABI::Windows::Foundation::IAsyncOperation<class ABI::Windows::Security::Credentials::WebAccount *> >(struct ABI::Windows::Foundation::IAsyncOperation<class ABI::Windows::Security::Credentials::WebAccount *> *)'::`2'::<lambda_1>::operator()(class Mso::Maybe<class Mso::TCntPtr<struct ABI::Windows::Security::Credentials::IWebAccount> > const &)	Unknown
 	Mso30win32client.dll!Mso::Futures::FutureTaskCatch<struct Mso::Futures::Inline,class `Mso::Authentication::WAMLibrary::WAMFutureFromAsync<class Mso::TCntPtr<struct ABI::Windows::Security::Credentials::IWebAccount>,struct ABI::Windows::Foundation::IAsyncOperation<class ABI::Windows::Security::Credentials::WebAccount *> >(struct ABI::Windows::Foundation::IAsyncOperation<class ABI::Windows::Security::Credentials::WebAccount *> *)'::`2'::<lambda_1>,class Mso::TCntPtr<struct ABI::Windows::Security::Credentials::IWebAccount>,class Mso::Maybe<class Mso::TCntPtr<struct ABI::Windows::Security::Credentials::IWebAccount> >,3>::Catch(class Mso::Async::ArrayView<unsigned char> const &,struct Mso::Futures::IFuture *,class Mso::ErrorCode &&)	Unknown
 	Mso20win32client.dll!Mso::Futures::FutureImpl::Invoke(void)	Unknown
 	Mso20win32client.dll!Mso::Futures::Inline::Post(class Mso::Functor<void > &&)	Unknown
 	Mso20win32client.dll!Mso::Futures::FutureImpl::TryPostInternal(class Mso::Futures::FutureImpl *,class Mso::TCntPtr<class Mso::Futures::FutureImpl> &,bool)	Unknown
 	Mso20win32client.dll!Mso::Futures::FutureImpl::PostContinuation(class Mso::TCntPtr<class Mso::Futures::FutureImpl> &&)	Unknown
 	Mso20win32client.dll!Mso::Futures::FutureImpl::SetFailed(void)	Unknown
 	Mso20win32client.dll!Mso::Futures::FutureImpl::TrySetError(class Mso::ErrorCode &&,bool)	Unknown
 	Mso20win32client.dll!Mso::Futures::FutureCompletionTask::Catch(class Mso::Async::ArrayView<unsigned char> const &,struct Mso::Futures::IFuture *,class Mso::ErrorCode &&)	Unknown
 	Mso20win32client.dll!Mso::Futures::FutureImpl::Invoke(void)	Unknown
 	Mso20win32client.dll!Mso::Futures::FutureImpl::TryPostInternal(class Mso::Futures::FutureImpl *,class Mso::TCntPtr<class Mso::Futures::FutureImpl> &,bool)	Unknown
 	Mso20win32client.dll!Mso::Futures::FutureImpl::PostContinuation(class Mso::TCntPtr<class Mso::Futures::FutureImpl> &&)	Unknown
 	Mso20win32client.dll!Mso::Futures::FutureImpl::SetFailed(void)	Unknown
 	Mso20win32client.dll!Mso::Futures::FutureImpl::TrySetError(class Mso::ErrorCode &&,bool)	Unknown
 	Mso20win32client.dll!Mso::Futures::FutureImpl::Invoke(void)	Unknown
 	Mso20win32client.dll!Mso::Async::TpCallbackQueueWrapper::Run(struct ITpWorkObject *)	Unknown
 	Mso20win32client.dll!CTpWorkObject::CallCallbackCore(void)	Unknown
 	Mso20win32client.dll!CBaseWorkObject::ProcessCurrentItem(struct CThreadState *)	Unknown
 	Mso20win32client.dll!CIOPort::ProcessItems(struct CThreadState *)	Unknown
 	Mso20win32client.dll!CIOPort::ThreadProc(void *)	Unknown
 	kernel32.dll!00007ff938d47614()	Unknown
```

With WebTokenRequest the execution went on normally.

Since it is not possible to look into the invokes inside SE I think the next step could be debugging sessions outside SE, just to look into the method calls from those public classes. If there is some option to disable the credentials leak for the system in the same way of BlockAADWorkplaceJoin policy it is easier to assume it must be in some already available API, even still partially documented. There are not details of the properties from [WebAccount](https://learn.microsoft.com/en-us/uwp/api/windows.security.credentials.webaccount) class used in the method [WebAuthenticationCoreManager.CreateWebAccountMonitor](https://learn.microsoft.com/en-us/uwp/api/windows.security.authentication.web.core.webauthenticationcoremanager.createwebaccountmonitor), by example.

= Example of web account management
:date: 2023-08-24
:tags: tag_venn tag_reversing

Found [an example](https://github.com/microsoft/Windows-universal-samples/tree/main/Samples/WebAccountManagement) of web account management using Microsoft Account and Azure AD account. This example use the classes winword is using to signin WebAuthenticationCoreManager and WebTokenRequest.

In order to make it run it is needed to modify its manifesto to use the App Identity of a registered Microsoft Store/registered AAD app. I am studying [how to do this](https://learn.microsoft.com/en-us/azure/active-directory/develop/reference-app-manifest). I will try to make some tests registering app with my personal developer account and see if we have a company account to use.

Some parameters are still vague and undocumented completely, like the WebTokenRequest.Scope and WebTokenRequest.PromptType, what could give us a tip of what change to avoid system settings (or if there is a way). Looking at [some samples](https://csharp.hotexamples.com/examples/-/WebTokenRequest/-/php-webtokenrequest-class-examples.html) didn't helped yet.


= Acquired an AAD token successfully
:date: 2023-08-28
:tags: tag_venn tag_reversing

Acquired an AAD token successfully using the sample WebAccountManagement in [Windows-universal-samples repo](https://github.com/microsoft/Windows-universal-samples/tree/main/Samples/WebAccountManagement).

AAD.BrokerPlugin process was spawned and there was no record account in system settings window.

Some notes about:

I needed to change this sample using another sample as base, the [active-directory-dotnet-native-uwp-wam](https://github.com/Azure-Samples/active-directory-dotnet-native-uwp-wam).

The property scope in Microsoft Identity [supports some OpenID connect scopes](https://learn.microsoft.com/EN-US/azure/active-directory/develop/scopes-oidc#openid-connect-scopes). Using "profile" to construct `WebTokenRequest` worked.

```
const string DefaultProviderId =  "https://login.microsoft.com";
const string tenant = "wanderleycalonicom.onmicrosoft.com";
const string authority = "https://login.microsoftonline.com/" + tenant;
defaultProvider = await WebAuthenticationCoreManager.FindAccountProviderAsync(DefaultProviderId, authority);

String scope = "profile";
String clientID = "6b7b5223-2ff2-45d8-afb6-222a23abb26f";
WebTokenRequest webTokenRequest = new WebTokenRequest(Provider, Scope, ClientID);

```

Redirect URI in the sample execution uses the SID from default user in the DefaultAccountScenario part from the sample. Needs to add this URI for the app registered in Azure portal to work.

Once the token was acquired it is cached inside the installed app. In development machine I think it uses the equivalent. Reinstalling the app in a nondev machine zeroes this cache and it is needed to [signin again](https://support.os33.link/v/bjpCnf) to get the token (@Gabriel).

Since this is the exact behavior of winword, except the part where AAD Broker shows to the user the record account systemwide, the next step is to try to add the parameter that does that to know where to rip off in the office app execution.

Probably there is no need to manage the token, since it will became available only inside the signin apps, and inside SE for workplace apps.


= WAMExample
:date: 2023-08-30
:tags: tag_venn tag_reversing

The [WAMExample](https://tfs.os33.net/DefaultCollection/Portal/_git/Workplace.Container.Windows?path=%2FSpikes%2FWAMExample%2FWAMExample%2FWAMExample%2FProgram.cs&version=GBmaster&line=47&lineEnd=47&lineStartColumn=94&lineEndColumn=129&lineStyle=plain&_a=contents) project call the method `WebAuthenticationCoreManager.FindAllAccountsAsync` and for each found account it calls the method `WebAuthenticationCoreManagerInterop.GetTokenSilentlyWithWebAccountAsync`.

```
foreach (var account in accountsResult.Accounts)
{
  var webTokenRequest = new WebTokenRequest(webAccountProvider, String.Empty, ClientId, WebTokenRequestPromptType.Default);
  webTokenRequest.Properties.Add("authority", "https://login.windows.net");
  webTokenRequest.Properties.Add("resource", "https://outlook.office365.com/");
  var webTokenRequestRequestResult = await WebAuthenticationCoreManager.GetTokenSilentlyWithWebAccountAsync(webTokenRequest);
  Console.WriteLine($"Token result: {webTokenRequestRequestResult.ResponseStatus}");
}
```

In order to approximate this example to the use case of office apps, where the signin window from AAD Broker is whown, is needed to call the method `WebAuthenticationCoreManager.RequestTokenAsync` as in the [WebAccountManagement](https://github.com/microsoft/Windows-universal-samples/blob/main/Samples/WebAccountManagement/cs/SingleAccountScenario.xaml.cs#L232) sample.

```
// If the user selected a specific account, RequestTokenAsync will return a token for that account.
// The user may be prompted for credentials or to authorize using that account with your app
// If the user selected a provider, the user will be prompted for credentials to login to a new account
WebTokenRequestResult webTokenRequestResult = await WebAuthenticationCoreManager.RequestTokenAsync(webTokenRequest);
```

Trying to change WAMExample project using this method generates the exception "Resource Contexts may not be created on threads that do not have a CoreWindow". To create a [CoreWindow](https://learn.microsoft.com/en-us/uwp/api/windows.ui.core.corewindow?view=winrt-22621) involves transforming it to a universal app, so I prefered to stay in the WebAccountManagement example that is already the right type of executable and needed only to use it as the registered app from the WAMExample project using the same clientid.

However, since Windows 10, as pointed out in the [active-directory-dotnet-native-uwp-wam](https://github.com/Azure-Samples/active-directory-dotnet-native-uwp-wam/blob/master/NativeClient-UWP-WAM/MainPage.xaml.cs#L38) sample, "Windows10 universal apps require redirect URI in the format below":

```
// Windows10 universal apps require redirect URI in the format below
string URI = string.Format("ms-appx-web://Microsoft.AAD.BrokerPlugIn/{0}", WebAuthenticationBroker.GetCurrentApplicationCallbackUri().Host.ToUpper());
```

I configured the URIs being used locally into my personal Azure AD and it worked with my personal account. I am not sure why this is a requirement, since in the sample code the URI is not used. It seems only for the default account scenario.

webaccountmanagement_sample_azure_redirect_uri.png

I am still studying the other scenarios from the example, though. Should have more information after testing all of them.


= The infamous "Stay signed in to all your apps"
:date: 2023-08-30
:tags: tag_venn tag_reversing

Could configure into my trial AAD to signin with a local account and with dlp account (external invited) and in both ways the infamous window "Stay signed in to all your apps" appeared.

The difference in the creation of a WebTokenRequest using the parameter WebTokenRequestPromptType between the Default and the ForceAuthentication is that with the forced option "A request with forced authentication. This will require the user to enter their credentials, regardless of whether they are already logged in".

I searched again for some solution in the AAD side and it is unanimous that just Intune and corporation devices can be configured remotely. There is no way to disable AAD join without set the registry policy BlockAADWorkplaceJoin.

Before this new round of investigation I didn't believed already in a polite way (client side, not AAD Broker side) to disable this window. Now with this new tests I don't believe there is even a impolite way. This window seems to be set by design. Someone in Microsoft (2021) [answered this](https://techcommunity.microsoft.com/t5/microsoft-teams/popup-window-stay-signed-in-to-all-your-apps/m-p/2368355/highlight/true#M92881) and nothing seems to changed ever since.

devdlp@wanderleycalonicom.onmicrosoft.com
dev@dlp.os33dev.com

Configured into my trial AAD to signin with a local account and with the dlp account (external invited); both ways the infamous window "Stay signed in to all your apps" appeared. After some web search I don't believe there is even an impolite way (hook injection) to disable this window in client side (AAD Broker side only). https://support.os33.link/v/cmaqEh


= AAD Broker is being spawned from inside or ouside SE
:date: 2023-08-31
:tags: tag_venn tag_reversing

In order to detect if AAD Broker is being spawned from inside or ouside SE I started to study calls and assembly from `WebAuthenticationCoreManager.RequestTokenAsync`. Found a `WebTokenRequsetResultOperationParams` (look at the stack bellow) that could have some relevant information. However, simply the `RequestTokenAsync` call would be a trigger good enough to start, being the only caveat the crash that occurs if we try to hook this interface inside SE. Could look at that as the next step:

 - Hook `WebAuthenticationCoreManager`;
 - Set flag when `RequestTokenAsync` is called;
 - Driver is notified to hook the newest AAD Broker instance.

```
Windows.Security.Authentication.Web.Core.dll!WamClientLogProvider::WebTokenRequestResultOperation::StartActivity()
Windows.Security.Authentication.Web.Core.dll!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::RequestTokenAsync(struct Windows::Security::Authentication::Web::Core::IWebTokenRequest *,struct Windows::Foundation::IAsyncOperation<class Windows::Security::Authentication::Web::Core::WebTokenRequestResult *> * *)
Accounts.exe!Accounts.DefaultAccountScenario.AuthenticateWithRequestToken(Windows.Security.Credentials.WebAccountProvider Provider, string Scope, string ClientID)
CallerIdentity::GetCoreWindowHandleForCurrentThread
`anonymous namespace'::ValidateWebTokenRequestParams
Windows::Internal::Security::Authentication::Web::MakeAsyncWamOperation<Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation,WamClientLogProvider::WebTokenRequestResultOperation,Windows::Security::Authentication::Web::Core::WebTokenRequsetResultOperationParams,Windows::Security::Authentication::Web::Core::WebTokenRequestResult>
Windows.Security.Authentication.Web.Core.dll!Windows::Internal::Security::Authentication::Web::MakeAsyncWamOperation<class Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation,class WamClientLogProvider::WebTokenRequestResultOperation,struct Windows::Security::Authentication::Web::Core::WebTokenRequsetResultOperationParams,class Windows::Security::Authentication::Web::Core::WebTokenRequestResult>(class WamClientLogProvider::WebTokenRequestResultOperation &,struct Windows::Security::Authentication::Web::Core::WebTokenRequsetResultOperationParams &,struct Windows::Foundation::IAsyncOperation<class Windows::Security::Authentication::Web::Core::WebTokenRequestResult *> * *)
Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::CWebTokenRequestResultOperation
Windows.Security.Authentication.Web.Core.dll!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::InitializeOperationData()
Windows::Internal::Security::Authentication::Web::AsyncImpersonator::AsyncImpersonator
Windows.Security.Authentication.Web.Core.dll!<lambda_b4251670e5671f0606e8a09c349557a5>::<lambda_b4251670e5671f0606e8a09c349557a5>(void):
Windows::Internal::MakeStagedAsyncOperation<Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult>,Windows::Security::Authentication::Web::Core::WebTokenRequestResult *,Windows::Internal::ComTaskPoolHandler,<lambda_b4251670e5671f0606e8a09c349557a5> >
```


= How the Universal Windows Platform relates to Windows Runtime APIs
:date: 2023-09-01
:tags: tag_venn tag_reversing

Only in the initial tests to run the UWP sample app I observed it is started by `svchost.exe` and not by explorer or cmd. So I realized that to be able to run a program with a `CoreWindow` and avoid the previous error from WAMExample (about Resource Contexts) I would need to make a new sample based on UWP and being started inside SE.

So I started to find the simplest way to do that. I started by reading [How the Universal Windows Platform relates to Windows Runtime APIs](https://learn.microsoft.com/en-us/windows/uwp/get-started/universal-application-platform-guide#how-the-universal-windows-platform-relates-to-windows-runtime-apis) and stumble upon [Call Windows Runtime APIs in desktop apps](https://learn.microsoft.com/en-us/windows/apps/desktop/modernize/desktop-to-uwp-enhance). There I found out in the article [Windows Runtime APIs not supported in desktop apps](https://learn.microsoft.com/en-us/windows/apps/desktop/modernize/desktop-to-uwp-supported-api) that the UI probably is not available in the list of supported APIs:

 - APIs that have dependencies on user interface (UI) features that were designed for use only in a Universal Windows Platform (UWP) app.
 - APIs that require package identity (see Features that require package identity). Such APIs are supported only in desktop apps that are packaged using MSIX.

But there is a way to do that using WinUI 3, a bridge method to encapsulate traditional desktop apps to use most of the WinRT UWP APIs. That is the the project currently being maintaned [in GitHub](https://github.com/microsoft/microsoft-ui-xaml). I installed the runtime/SDK and updated Visual Studio. After that I started a simple sample from [the tutorial](https://learn.microsoft.com/en-us/windows/apps/winui/winui3/create-your-first-winui3-app) but got stuck in a nonsense error message:

```
---------------------------
WebAuthenticationCoreManagerSample.exe - This application could not be started
---------------------------
This application requires the Windows App Runtime
    Version 1.3
    (MSIX package version >= 3000.882.2207.0)

Do you want to install a compatible Windows App Runtime now?
---------------------------
Yes   No   
---------------------------
```

I [Check for installed versions of the Windows App SDK runtime](https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/check-windows-app-sdk-versions) and this exact version is listed in nuget packages (x86 and x64), so I am not sure where is the error.


= Crash on Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager
:date: 2023-09-04
:tags: tag_venn tag_reversing

After tried for some time to update and reinstall the Windows App SDK to run an unpackaged version from a sample app I decided to take a step back and analyze why office apps and teams are crashing when hooking the [Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager](https://learn.microsoft.com/en-us/uwp/api/windows.security.authentication.web.core) class, since I am not sure if we need a clean sample of activating WebAuthenticationCoreManager, but I know it would be useful to fix the crash if we'd need to hook it.

I started analyzing with Teams this time, since it is a clearer execution.

One thing that is important to note is that Teams keep a state machine between instances, so if it crashes the last time in the signin window the next execution it is going to that window with the email filled. When there was a crash in this part it will keep crashing because it will not begin the next instance in the welcome window. In order to fix that you need to run Teams in a noncrash environment, close the signin window and in the next execution it will open the welcome window, going back to "step 1" from this machine state again.

This could be the communication with the Background Broker Infrastructure, since a RuntimeBroker.exe instance starts together with Teams and AAD Broker is almost certainly a broker activation (by the Background Broker os directly).

>
> Another important service that the Background Broker Infrastructure
> provides to the Brokers and to its clients is the storage capability for
> background tasks. This means that when the user shuts down and then
> restarts the system, all the registered background tasks are restored and
> rescheduled as before the system was restarted.
>
> Windows Internals
>

Anyway, I ran versions of WorkplaceHook64.dll with and without "Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager" as a IsOpenRt from WinRtProtection.cpp and got mixed results. Particulary a lot more "QueryInterface failed" results from the version with the hook:

```
grep -c "QueryInterface failed" ContainerizedApp_2023-09-04_good.log
32

grep -c "QueryInterface failed" ContainerizedApp_2023-09-04_bad.log
204
```

As I could see the first error codes dealing with interfaces were 0x80004002 ("No such interface supported").

The main differences start in the activation of WebAuthenticationCoreManager followed by TokenBrokerInternal in the "good" version (without CoreManager hook). There is no TokenBrokerInternal activation in the "bad" version (with the hook).

ContainerizedApp_good_vs_bad.png

That is the first difference that I must focus on as the next step.


= UWP no Windows Internals
:date: 2023-09-05
:tags: tag_books tag_windows_internals

Algumas anotações sobre UWP no Windows Internals; estou tentando entender melhor a coisa para nas sessões de debugging fazer mais sentido.

>
> A complete treatment of UWP apps is beyond the scope of this chapter. You can find more information in Chapter 3 of this book, and in Chapters 8 and 9 in Part 2.
> 
> UWP processes are always created inside a job (one job per UWP app). This job manages the UWP process and any background processes that execute on its behalf (through nested jobs). The jobs allow the Process State Manager (PSM) to suspend or resume the app or background processing in a single stroke.
> 
> This SID is part of the APPLICATION PACKAGE AUTHORITY instead of the NT AUTHORITY you’ve mostly seen so far in this chapter. Thus, it begins with S-1-15-2 in its string format, corresponding to SECURITY_APP_PACKAGE_BASE_RID (15) and SECURITY_APP_PACKAGE_BASE_RID (2). Because a SHA-2 hash is 32 bytes, there are a total of eight RIDs (recall that a RID is the size of a 4-byte ULONG) in the remainder of the SID.
> 
> WIN://BGKD This is only used for background hosts (such as the generic background task host BackgroundTaskHost.exe) that can store packaged UWP services running as COM providers. The attribute’s name stands for background and contains an integer value that stores its explicit host ID.
> 
> The TOKEN_LOWBOX (0x4000) flag will be set in the token’s Flags member, which can be queried with various Windows and kernel APIs (such as GetTokenInformation). This allows components to identity and operate differently under the presence of an AppContainer token.
> 
> Immersive process is the original term used to describe WinRT (now UWP) apps in Windows 8.
> 
> This distinction is available by calling the IsImmersiveProcess API.
> 
> One of the biggest side-effects caused by the presence of an AppContainer SID and related flags is that the access check algorithm you saw in the “Access checks” section earlier in this chapter is modified to essentially ignore all regular user and group SIDs that the token may contain, essentially treating them as deny-only SIDs. This means that even though Calculator may be launched by a user John Doe belonging to the Users and Everyone groups, it will fail any access checks that grant access to John Doe’s SID, the Users group SID, or the Everyone group SID. In fact, the only SIDs that are checked during the discretionary access check algorithm will be that of the AppContainer SID, followed by the capability access check algorithm, which will look at any capability SIDs part of the token.
> 

Logged more lines to compare with the versions with and without WebAuthenticationCoreManager in the classes controlled using WinRtProtection. Was informed by Alexander Chermyanin that errors in QueryInterface are pretty common since not always a class has the interface available (the difference is that as we inject our DLL those errors are logged).

However, in the version with WebAuthenticationCoreManager there was no activation of the following classes, what could mean that Teams stopped before that.

 - Windows.Internal.Security.Authentication.Web.WamProviderRegistration
 - Windows.Internal.Security.Authentication.Web.TokenBrokerInternal
 - Windows.Internal.Security.Credentials.WebAccountInternal
 - Windows.Security.Authentication.Web.Core.WebTokenRequest
 - Windows.Data.Json.JsonObject
 - Windows.Data.Json.JsonValue
 - Windows.Foundation.Diagnostics.AsyncCausalityTracer
 - Windows.Foundation.Uri

BTW, here is the commands to filter logs to compare successfully two versions. There are some details that are not filtered such as marshalled bytes, but the result is clean enough to use it on a daily basis. Execute in log files using `:so <file_bellow>`.

```
:%s/ComProxyIpcClient::\([a-zA-Z]\+\) objectId=[0-9a-f-]\+/ComProxyIpcClient::\1 objectId=GUID/g
:%s/retobjectid=[0-9a-f-]\+/rebObjectId=GUID/g
:%s/ - [0-9:[]\+] - / /
:%s/"ComProxyIpcChannelName":"[0-9a-f-]\+"/"ComProxyIpcChannelName":"GUID"/g
:%s/"IpcChannelName":"[0-9a-f-]\+"/"ComProxyIpcChannelName":"GUID"/g
:%s/^[0-9- :.]\+//
:%s/"MappedFileHandle":{"value":[0-9]\+}/"MappedFileHandle":{"value":666\+}/g
:%s/"ProcessInformationMappingHandle":{"value":[0-9]\+}/"ProcessInformationMappingHandle":{"value":588}/g
:%s/"PublicKey":"[^"]\+"/"PublicKey":"BASE64"/g
:%s/mapView: \[[0-9A-F]\+\]/mapView: [VIEW]/g
:%s/PortHandle: [0-9A-F]\+, pid: [0-9]\+, tid: [0-9]\+/PortHandle: HANDLE, pid: PID, tid: TID/g
```

Testing with Winword these were the not activated classes with WebAuthenticationCoreManager in WinRT list:

 - Windows.Internal.Security.Credentials.WebAccountInternal
 - Windows.Data.Json.JsonArray
 - Windows.Data.Json.JsonObject
 - Windows.Data.Json.JsonValue
 - Windows.Foundation.Uri

The fact json and uri classes are not being activated in Teams and Winword can indicate some clue about differente executions. Besides, in the case of winword there is a crash (already commented before). It could be the next analysis.


= LaunchWinRTRunAsServer references
:date: 2023-09-06
:tags: tag_venn tag_reversing

Looking for "_LaunchWinRTRunAsServer" references on the web I found [this unexpected analysis](https://github.com/bl4me/token/wiki/1.-AAD-token) of AAD Broker refresh token requests from office apps, including session and PRT info. Going to reproduce this analysis and try to continue it.

1. AAD token · bl4me_token Wiki.html

The first issue was to configure Burp correctly to capture Teams (or any office app) HTTPS requests. After some research that is the way to come close:

 - Go to the proxy endpoint address (e.g. default http://127.0.0.1:8080).
 - Download Burp certificate.
 - Import in browser (or certificates system, I imported in CA root).
 - Start Burp (logger tab).

After that and rebooting the machine it was possible to activate AAD Broker in Teams, but it fails with 404. There is no log entry yet.

teams_aadbroker_404.png

So I tried the web login in http://teams.microsoft.com/ and worked (not ideal, but got some requests).

teams_web_oauth.png

TeamsBrowserLogin.txt

It was possible to reproduce the request type seen in the bl4me token analysis, such as:

```
client_id=5e3ce6c0-2b1f-4285-8d4b-75ee78787346&scope=https%3A%2F%2F*.microsoftstream.com%2F.default%20openid%20profile%20offline_access&grant_type=refresh_token&client_info=...
```

However, the request didn't come from BackgroundHost or AAD Broker, but the browser itself. Need to make some office app to access login.microsoftonline.com correctly.


= Funcionamento interno do UWP
:date: 2023-09-07
:tags: tag_books tag_windows_internals

Andei lendo sobre o funcionamento interno do UWP, o que está servindo para finalmente as coisas fazerem sentido. Seguem mais anotações, incluindo sobre alguns testes bacanas de ter em mente no WinDbg.

>
> To make matters simple, the only types of securable objects that an AppContainer can access are those that explicitly have an allow ACE for its AppContainer SID or for one of its capabilities. Even unsecured (NULL DACL) objects are out of the game.
> 
> To solve this problem, the security subsystem understands a specific group SID called ALL APPLICATION PACKAGES, which automatically binds itself to any AppContainer token. Many critical system locations, such as %SystemRoot%\System32 and HKLM\Software\Microsoft\Windows\CurrentVersion, will have this SID as part of their DACL, typically with a read or read-and-execute access mask.
> 
> Although not officially documented, third-party developers, as they create non-UWP applications, can also allow interactions with UWP applications by also applying this SID to their own resources.
> 
> By using the PROC_THREAD_ATTRIBUTE_ALL_APPLICATION_PACKAGES_POLICY process attribute and setting it to PROCESS_CREATION_ALL_APPLICATION_PACKAGES_OPT_OUT during process creation (see Chapter 3 for more information on process attributes), the token will not be associated with any ACEs that specify the ALL APPLICATION PACKAGES SID, cutting off access to many system resources that would otherwise be accessible. Such tokens can be identified by the presence of a fourth token attribute named WIN://NOALLAPPPKG with an integer value set to 1.
> 
> Of course, this takes us back to the same problem: How would such an application even be able to load Ntdll.dll, which is key to any process initialization? Windows 10 version 1607 introduces a new group, called ALL RESTRICTED APPLICATION PACKAGES, which takes care of this problem. For example, the System32 directory now also contains this SID, also set to allow read and execute permissions, because loading DLLs in this directory is key even to the most sandboxed process. However, the DNSResolver ALPC port does not, so such an AppContainer would lose access to DNS.
> 
> EXPERIMENT: Viewing the AppContainer atom table An atom table is a hash table of integers to strings that’s used by the windowing system for various identification purposes, such as Window Class registration (RegisterClassEx) and custom Windows messages. The AppContainer private atom table can be viewed with the kernel debugger: 1. Run Calculator, open WinDbg, and start local kernel debugging. 2. Find the Calculator process: Click here to view code image lkd> !process 0 1 calculator.exe PROCESS ffff828cc9ed1080     SessionId: 1  Cid: 4bd8    Peb: d040bbc000  ParentCid: 03a4 DeepFreeze     DirBase: 5fccaa000  ObjectTable: ffff950ad9fa2800  HandleCount: <Data Not Accessible>     Image: Calculator.exe     VadRoot ffff828cd2c9b6a0 Vads 168 Clone 0 Private 2938. Modified 3332. Locked 0.     DeviceMap ffff950aad2cd2f0     Token                             ffff950adb313060    ... 3. Use the token value with the following expressions: Click here to view code image lkd> r? @$t1 = @$t0->NumberOfBuckets lkd> r? @$t0 = (nt!_RTL_ATOM_TABLE*)((nt!_token*)0xffff950adb313060)- >LowboxNumberEntry->AtomTable lkd> .for (r @$t3 = 0; @$t3 < @$t1; r @$t3 = @$t3 + 1) {  ?? (wchar_t*)@$t0- >Buckets[@$t3]->Name } wchar_t * 0xffff950a'ac39b78a  "Protocols" wchar_t * 0xffff950a'ac17b7aa  "Topics" wchar_t * 0xffff950a'b2fd282a  "TaskbarDPI_Deskband" wchar_t * 0xffff950a'b3e2b47a  "Static" wchar_t * 0xffff950a'b3c9458a  "SysTreeView32" wchar_t * 0xffff950a'ac34143a  "UxSubclassInfo" wchar_t * 0xffff950a'ac5520fa  "StdShowItem" wchar_t * 0xffff950a'abc6762a  "SysSetRedraw" wchar_t * 0xffff950a'b4a5340a  "UIA_WindowVisibilityOverridden" wchar_t * 0xffff950a'ab2c536a  "True" ... wchar_t * 0xffff950a'b492c3ea  "tooltips_class" wchar_t * 0xffff950a'ac23f46a  "Save" wchar_t * 0xffff950a'ac29568a  "MSDraw" wchar_t * 0xffff950a'ac54f32a  "StdNewDocument" wchar_t * 0xffff950a'b546127a  "{FB2E3E59-B442-4B5B-9128-2319BF8DE3B0}" wchar_t * 0xffff950a'ac2e6f4a  "Status" wchar_t * 0xffff950a'ad9426da  "ThemePropScrollBarCtl" wchar_t * 0xffff950a'b3edf5ba  "Edit" wchar_t * 0xffff950a'ab02e32a  "System" wchar_t * 0xffff950a'b3e6c53a  "MDIClient" wchar_t * 0xffff950a'ac17a6ca  "StdDocumentName" wchar_t * 0xffff950a'ac6cbeea  "StdExit" wchar_t * 0xffff950a'b033c70a  "{C56C5799-4BB3-7FAE-7FAD-4DB2F6A53EFF}" wchar_t * 0xffff950a'ab0360fa  "MicrosoftTabletPenServiceProperty" wchar_t * 0xffff950a'ac2f8fea  "OLEsystem"
> 
> As you’ve just seen, UWP applications have very restricted access rights. So how, for example, is the Microsoft Edge application able to parse the local file system and open PDF files in the user’s Documents folder? Similarly, how can the Music application play MP3 files from the Music directory? Whether done directly through kernel access checks or by brokers (which you’ll see in the next section), the key lies in capability SIDs.
> 
> Unlike the first set of capabilities, which map to hard-coded RIDs, these capabilities are implemented in a different fashion. This ensures a list of well-known RIDs doesn’t have to be constantly maintained. Instead, with this mode, capabilities can be fully custom and updated on the fly. To do this, they simply take the capability string, convert it to full upper-case format, and take a SHA-2 hash of the resulting string, much like AppContainer package SIDs are the SHA-2 hash of the package moniker. Again, since SHA-2 hashes are 32 bytes, this results in 8 RIDs for each capability, following the well-known SECURITY_CAPABILITY_BASE_RID (3).
> 
> Finally, you’ll notice a few DeviceCapability entries. These refer to device classes that the UWP application will need to access, and can be identified either through well-known strings such as the ones you see above or directly by a GUID that identifies the device class. Rather than using one of the two methods of SID creation already described, this one uses yet a third! For these types of capabilities, the GUID is converted into a binary format and then mapped out into four RIDs (because a GUID is 16 bytes). On the other hand, if a well-known name was specified instead, it must first be converted to a GUID. This is done by looking at the HKLM\Software\Microsoft\Windows\CurrentVersion\DeviceAccess\CapabilityMappings registry key, which contains a list of registry keys associated with device capabilities and a list of GUIDs that map to these capabilities. The GUIDs are then converted to a SID as you’ve just seen.
> 
> For an up-to-date list of supported capabilities, see https://msdn.microsoft.com/en-us/windows/uwp/packaging/app-capability-declarations.
> 
> As you may have seen in the earlier experiment, each AppContainer token contains its own package SID encoded as a capability. This can be used by the capability system to specifically lock down access to a particular app through a common security check instead of obtaining and validating the package SID separately.
> 
> Each capability is re-encoded as a group SID through the use of the SECURITY_CAPABILITY_APP_RID (1024) RID as an additional sub-authority preceding the regular eight-capability hash RIDs.
> 
> In user mode, the documented CheckTokenCapability API can be used, although it must know the capability SID instead of providing the name (the undocumented RtlDeriveCapabilitySidFromName can generate this, however). Another option is the undocumented CapabilityCheck API, which does accept a string.
> 
> Finally, many RPC services leverage the RpcClientCapabilityCheck API, which is a helper function that takes care of retrieving the token and requires only the capability string. This function is very commonly used by many of the WinRT-enlightened services and brokers, which utilize RPC to communicate with UWP client applications.
> 
> To get the details of the package from which the UWP process was created, you can use the UWPList tool provided with the downloadable resources for this book. It can show all immersive processes on the system or a single process based on its ID:
> 
> EXPERIMENT: Viewing token stored handles To view token stored handles, follow these steps: 1. Run Calculator and launch local kernel debugging. 2. Search for the calculator process: Click here to view code image lkd> !process 0 1 calculator.exe PROCESS ffff828cc9ed1080     SessionId: 1  Cid: 4bd8    Peb: d040bbc000  ParentCid: 03a4 DeepFreeze     DirBase: 5fccaa000  ObjectTable: ffff950ad9fa2800  HandleCount: <Data Not Accessible>     Image: Calculator.exe     VadRoot ffff828cd2c9b6a0 Vads 168 Clone 0 Private 2938. Modified 3332. Locked 0.     DeviceMap ffff950aad2cd2f0     Token                             ffff950adb313060     ElapsedTime                       1 Day 08:01:47.018     UserTime                          00:00:00.015     KernelTime                        00:00:00.031     QuotaPoolUsage[PagedPool]         465880     QuotaPoolUsage[NonPagedPool]      23288     Working Set Sizes (now,min,max)  (7434, 50, 345) (29736KB, 200KB, 1380KB)     PeakWorkingSetSize                11097     VirtualSize                       303 Mb     PeakVirtualSize                   314 Mb     PageFaultCount                    21281     MemoryPriority                    BACKGROUND     BasePriority                      8     CommitCharge                      4925     Job                               ffff828cd4914060 3. Dump the token using the dt command. (Remember to mask the lower 3 or 4 bits if they are not zero.) Click here to view code image lkd> dt nt!_token ffff950adb313060    +0x000 TokenSource      : _TOKEN_SOURCE    +0x010 TokenId          : _LUID    +0x018 AuthenticationId : _LUID    +0x020 ParentTokenId    : _LUID    ...    +0x0c8 TokenFlags       : 0x4a00    +0x0cc TokenInUse       : 0x1 ''    +0x0d0 IntegrityLevelIndex : 1    +0x0d4 MandatoryPolicy  : 1    +0x0d8 LogonSession     : 0xffff950a'b4bb35c0 _SEP_LOGON_SESSION_REFERENCES    +0x0e0 OriginatingLogonSession : _LUID    +0x0e8 SidHash          : _SID_AND_ATTRIBUTES_HASH    +0x1f8 RestrictedSidHash : _SID_AND_ATTRIBUTES_HASH    +0x308 pSecurityAttributes : 0xffff950a'e4ff57f0 _AUTHZBASEP_SECURITY_ ATTRIBUTES_INFORMATION    +0x310 Package          : 0xffff950a'e00ed6d0 Void    +0x318 Capabilities     : 0xffff950a'e8e8fbc0 _SID_AND_ATTRIBUTES    +0x320 CapabilityCount  : 1    +0x328 CapabilitiesHash : _SID_AND_ATTRIBUTES_HASH    +0x438 LowboxNumberEntry : 0xffff950a'b3fd55d0 _SEP_LOWBOX_NUMBER_ENTRY    +0x440 LowboxHandlesEntry : 0xffff950a'e6ff91d0 _SEP_LOWBOX_HANDLES_ENTRY    +0x448 pClaimAttributes : (null)    ... 4. Dump the LowboxHandlesEntry member: Click here to view code image lkd> dt nt!_sep_lowbox_handles_entry 0xffff950a'e6ff91d0    +0x000 HashEntry        : _RTL_DYNAMIC_HASH_TABLE_ENTRY    +0x018 ReferenceCount   : 0n10    +0x020 PackageSid       : 0xffff950a'e6ff9208 Void    +0x028 HandleCount      : 6    +0x030 Handles           : 0xffff950a'e91d8490  -> 0xffffffff'800023cc Void 5. There are six handles. Let’s dump their values: Click here to view code image lkd> dq 0xffff950ae91d8490 L6 ffff950a'e91d8490  ffffffff'800023cc ffffffff'80001e80 ffff950a'e91d84a0  ffffffff'80004214 ffffffff'8000425c ffff950a'e91d84b0  ffffffff'800028c8 ffffffff'80001834 6. You can see that these handles are kernel handles—that is, handle values starting with 0xffffffff (64 bit). Now you can use the !handle command to look at individual handles. Here are two examples from the six handles above: Click here to view code image lkd> !handle ffffffff'80001e80 PROCESS ffff828cd71b3600     SessionId: 1  Cid: 27c4    Peb: 3fdfb2f000  ParentCid: 2324     DirBase: 80bb85000  ObjectTable: ffff950addabf7c0  HandleCount: <Data Not Accessible>     Image: windbg.exe Kernel handle Error reading handle count. 80001e80: Object: ffff950ada206ea0  GrantedAccess: 0000000f (Protected) (Inherit) (Audit) Entry: ffff950ab5406a00 Object: ffff950ada206ea0  Type: (ffff828cb66b33b0) Directory     ObjectHeader: ffff950ada206e70 (new version)         HandleCount: 1  PointerCount: 32770         Directory Object: ffff950ad9a62950  Name: RPC Control         Hash Address          Type                      Name         ---- -------          ----                      ----          23  ffff828cb6ce6950 ALPC Port OLE376512B99BCCA5DE4208534E7732 lkd> !handle ffffffff'800028c8 PROCESS ffff828cd71b3600     SessionId: 1  Cid: 27c4    Peb: 3fdfb2f000  ParentCid: 2324     DirBase: 80bb85000  ObjectTable: ffff950addabf7c0  HandleCount: <Data Not Accessible>     Image: windbg.exe Kernel handle Error reading handle count. 800028c8: Object: ffff950ae7a8fa70  GrantedAccess: 000f0001 (Audit) Entry: ffff950acc426320 Object: ffff950ae7a8fa70  Type: (ffff828cb66296f0) SymbolicLink     ObjectHeader: ffff950ae7a8fa40 (new version)         HandleCount: 1  PointerCount: 32769         Directory Object: ffff950ad9a62950  Name: Session         Flags: 00000000 ( Local )         Target String is '\Sessions\1\AppContainerNamedObjects \S-1-15-2-466767348-3739614953-2700836392-1801644223-4227750657 -1087833535-2488631167'
> 
> Because AppContainer processes have almost no permissions except for those implicitly granted with capabilities, some common operations cannot be performed directly by the AppContainer and require help. (There are no capabilities for these, as these are too low level to be visible to users in the store, and difficult to manage.) Some examples include selecting files using the common File Open dialog box or printing with a Print dialog box. For these and other similar operations, Windows provides helper processes, called brokers, managed by the system broker process, RuntimeBroker.exe.
> 
> An AppContainer process that requires any of these services communicates with the Runtime Broker through a secure ALPC channel and Runtime Broker initiates the creation of the requested broker process.
> 
> Starting from Windows 10, the new application model became compatible with standard Win32 applications. The only procedure that the developer needs to do is to run the application installer program with a special Microsoft tool called Desktop App Converter.
> 
> Windows 10 has unified various components that were interacting with the state of a packaged application in a noncoordinated way. As a result, a brand-new component, called Host Activity Manager (HAM) became the central component and the only one that manages the state of a packaged application and exposes a unified API set to all its clients.
> 
> A host is the object that represents the smallest unit of isolation recognized by the Application model.
> 
> The Modern application’s lifecycle consists of four states: running, suspending, suspend-complete, and suspended
> 
> Packaged applications do not have a Terminated state. This means that an application does not have a real notion of an Exit or Terminate state and should not try to terminate itself. The actual model for terminating a Packaged application is that first it gets suspended, and then HAM, if required, calls NtTerminateJobObject API on the application’s job object. HAM automatically manages the app lifetime and destroys the process only as needed.
> 
> A packaged application can’t distinguish whether it has been suspended or terminated. This allows Windows to automatically restore the previous state of the application even if it has been terminated or if the system has been rebooted. As a result, the packaged application model is completely different from the standard Win32 application model.
> 
> The Modern Application Model introduces a new way for storing packaged applications’ settings, package dependencies, and general application data. The State Repository is the new central store that contains all this kind of data and has an important central rule in the management of all modern applications: Every time an application is downloaded from the store, installed, activated, or removed, new data is read or written to the repository.
> 
> The root location of the State Repository is stored in the HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Appx\ PackageRepositoryRoot registry value, which usually points to the C:\ProgramData\Microsoft\Windows\ AppRepository path.
> 
> All partitions are stored as SQLite databases. Windows compiles its own version of SQLite into the StateRepository.Core.dll library. This library exposes the State Repository Data Access Layer (also known as DAL) APIs that are mainly wrappers to the internal database engine and are called by the State Repository service.
> 
> The modern Start menu uses the changes and events tracking feature of the State Repository to work properly. Every time the ShellExperienceHost process starts, it requests the State Repository to notify its controller (NotificationController.dll) every time a tile is modified, created, or removed. When the user installs or removes a modern application through the Store, the application deployment server executes a DB transaction for inserting or removing the tile. The State Repository, at the end of the transaction, signals an event that wakes up the controller. In this way, the Start menu can modify its appearance almost in real time.
> 
> The modern Start menu uses the services provided by the AppResolver library to register file system notifications on all the Start menu folders (through the ReadDirectoryChangesW Win32 API). In this way, whenever a new shortcut is created in the monitored folders, the library can get a callback and signal the Start menu to redraw itself.
> 
> Unlike from the State Repository, the Dependency Mini Repository does not make use of any database but stores the data in a Microsoft-proprietary binary format that can be accessed by any file system in any security context (even a kernel-mode driver could possibly parse the DMR data). The System Metadata directory, which is represented by a folder named Packages in the State Repository root path, contains a list of subfolders, one for every installed package.
> 
> Some small parts of the package mini repository (mostly only the package full name and path) are replicated into different registry keys as cache for a faster access. The cache is often used for common operations (like understanding if a package exists).
> 
> In Windows 10, there are two types of background tasks: In-process background task The application code and its background task run in the same process. From a developer’s point of view, this kind of background task is easier to implement, but it has the big drawback that if a bug hits its code, the entire application crashes. The in-process background task doesn’t support all triggers available for the out-of-process background tasks. Out-of-process background task The application code and its background task run in different processes (the process could run in a different job object, too). This type of background task is more resilient, runs in the backgroundtaskhost.exe host process, and can use all the triggers and the conditions. If a bug hits the background task, this will never kill the entire application. The main drawback is originated from the performance of all the RPC code that needs to be executed for the interprocess communication between different processes.
> 
> To provide the best user experience for the user, all background tasks have an execution time limit of 30 seconds total. After 25 seconds, the Background Broker Infrastructure service calls the task’s Cancellation handler (in WinRT, this is called OnCanceled event). When this event happens, the background task still has 5 seconds to completely clean up and exit. Otherwise, the process that contains the Background Task code (which could be BackgroundTaskHost.exe in case of out-of-process tasks; otherwise, it’s the application process) is terminated.
> 
> A broker can simply forward events that are generated somewhere else (like in the Windows kernel) or can generates new events based on some other conditions and states. Brokers forward events that they managed through WNF: each broker creates a WNF state name that the background infrastructure subscribes to. In this way, when the broker publishes new state data, the Broker Infrastructure, which is listening, wakes up and forwards the event to its clients.
> 
> Clients of the brokers can decide whether to subscribe directly to an event provided by the specific broker or subscribe to the Background Broker Infrastructure.
> 
> A user is not able to launch a UWP application by just executing its .exe file (excluding the case of the new AppExecution aliases, created just for this reason. We describe AppExecution aliases later in this chapter). To correctly activate a Modern application, the user needs to click a tile in the modern menu, use a special link file that Explorer is able to parse, or use some other activation points (double-click an application’s document, invoke a special URL, and so on). The ShellExperienceHost process decides which activation performs based on the application type.
> 
> The main component that manages this kind of activation is the Activation Manager, which is implemented in ActivationManager.dll and runs in a sihost.exe service because it needs to interact with the user’s desktop. The activation manager strictly cooperates with the View Manager. The modern menu calls into the Activation Manager through RPC.
> 
> The activation continues in the DcomLaunch service because the Activation Manager at this stage uses a WinRT class to launch the low-level process creation.
> 
> The DcomLaunch service is responsible in launching COM, DCOM, and WinRT servers in response to object activation requests and is implemented in the rpcss.dll library. DcomLaunch captures the activation request and prepares to call the CreateProcessAsUser Win32 API.
> 
> Before doing this, it needs to set the proper process attributes (like the package full name), ensure that the user has the proper license for launching the application, duplicate the user token, set the low integrity level to the new one, and stamp it with the needed security attributes. (Note that the DcomLaunch service runs under a System account, which has TCB privilege. This kind of token manipulation requires TCB privilege. See Chapter 7 of Part 1 for further details.) At this point, DcomLaunch calls CreateProcessAsUser, passing the package full name through one of the process attributes. This creates a suspended process.
> 
> The rest of the activation process continues in Kernelbase.dll. The token produced by DcomLaunch is still not an AppContainer but contains the UWP Security attributes. A Special code in the CreateProcessInternal function uses the registry cache of the Dependency Mini Repository to gather the following information about the packaged application: Root Folder, Package State, AppContainer package SID, and list of application’s capabilities. It then verifies that the license has not been tampered with (a feature used extensively by games). At this point, the Dependency Mini Repository file is mapped into the parent process, and the UWP application DLL alternate load path is resolved.
> 
> The AppContainer token, its object namespace, and symbolic links are created with the BasepCreateLowBox function, which performs the majority of the work in user mode, except for the actual AppContainer token creation, which is performed using the NtCreateLowBoxToken kernel function. We have already covered AppContainer tokens in Chapter 7 of Part 1. ■    The kernel process object is created as usual by using NtCreateUserProcess kernel API. After the CSRSS subsystem has been informed, the BasepPostSuccessAppXExtension function maps the Dependency Mini Repository in the PEB of the child process and unmaps it from the parent process. The new process can then be finally started by resuming its main thread.
> 
> With the goal of enabling the launch of Modern apps (Centennial and UWP) through the command line, starting from Windows 10 Fall Creators Update (build 1709), the Modern Application Model has introduced the concept of AppExecution aliases. With this new feature, the user can launch Edge or any other modern applications through the console command line. An AppExecution alias is basically a 0-bytes length executable file located in C:\Users\<UserName>\AppData\Local\Microsoft\WindowsApps (as shown in Figure 8-46.). The location is added in the system executable search path list (through the PATH environment variable); as a result, to execute a modern application, the user could specify any executable file name located in this folder without the complete path (like in the Run dialog box or in the console command line).
> 
> How can the system execute a 0-byte file? The answer lies in a little-known feature of the file system: reparse points.
> 
> NtCreateUserProcess translates this code to the STATUS_IO_REPARSE_TAG_NOT_HANDLED error and exits. The CreateProcess API now knows that the process creation has failed due to an invalid reparse point, so it loads and calls into the ApiSetHost.AppExecutionAlias.dll library, which contains code that parses modern applications’ reparse points.
> 
> EXPERIMENT: Reading the AppExecution alias data In this experiment, you extract AppExecution alias data from the 0-bytes executable file. You can use the FsReparser utility (found in this book’s downloadable resources) to parse both the reparse points or the extended attributes of the NTFS file system. Just run the tool in a command prompt window and specify the READ command-line parameter: Click here to view code image C:\Users\Andrea\AppData\Local\Microsoft\WindowsApps>fsreparser
> 
> If the modern application is a Centennial type, it loads the daxexec.dll library and creates VFS reparse points needed by the Windows Container Isolation minifilter driver (see the “Centennial applications” section earlier in this chapter) with the goal of virtualizing the application data folder properly.
> 
> It finally saves the package root path into the HKLM\SOFTWARE\Classes\LocalSettings\Software\Microsoft\Windows\ CurrentVersion\AppModel\PackageRepository\Packages\<PackageFullName> registry key, in the Path registry value.
> 
> The current security rating standard used by the United States and many other countries is the Common Criteria (CC).
> 
> the security ratings system that influenced the design of Windows: the Trusted Computer System Evaluation Criteria (TCSEC).
> 
> These security ratings, which can be found at http://csrc.nist.gov/publications/history/dod85.pdf, were defined in 1983 and are commonly referred to as the Orange Book.
> 
> Because Lsaiso.exe is a Trustlet (Isolated User Mode process) running in VTL 1, no normal process—not even the normal kernel—can access the address space of this process.
>

Comando mágico para obter o nome completo dos packages UWP (no PowerShell e no nuget console): `Get-AppxPackage *pattern*`. Depois disso pode usar o `plmdebug /enableDebug <package-full-name>` para habilitar debug com WinDbg (isso desabilita o PLM, ou Process Lifecycle Management, que dá terminate nos processos).

## Venn

Solved the proxy issues using [the link from Confluence](https://os33corp.atlassian.net/wiki/spaces/DTDLP/pages/3339091986/AAD+BrokerPlugin+outside+SE+use+cases) shared by Alex Osipov. In it there was a reference for [Georgy Malyshev's spike](https://os33corp.atlassian.net/wiki/spaces/DEVYOGA/pages/3337289763/Spike+Use+proxy+to+restrict+access+to+account+via+AAD.Broker) in how to use proxy in a UWP app, just what I was looking for. The code in the page simply nailed. I used [mitmproxy](https://mitmproxy.org/) to capture the requests from Teams login and the BackgroundTaskHost refresh token request soon after the login.

TeamsLoginLogs.zip

However, since we are more focused in the first login and acquire of token, I researched and tested to [attach WinDbg to AAD Broker using PLMDebug](https://learn.microsoft.com/en-us/windows-hardware/drivers/debugger/debugging-a-uwp-app-using-windbg). I am ready to start some debug sessions because just as BackgroundTaskHost uses AAD.Core to communicates to AAD the broker does the same thing, and accordingly with proxy logs it was broker that sent the https request by mapping ports with procmon tcp connect events.


= Where is the token from AAD Broker is going to
:date: 2023-09-11
:tags: tag_venn tag_reversing

In the last debugging session I started to look for where is the token from AAD Broker is going to. AAD Broker is responsible for the authorization_code request and receives an access_token as response from login.microsoftonline.com. The same access_token can be found being copied in Windows::Internal::Security::Authentication::TokenBroker::SerializeWebTokenResponsesWithStatus.

Request:

```
grant_type:          authorization_code
code:                0.AUYAV2m8YKx45EySLFOCd6rsxHiO7B_kvK9KqxtUUcw4cmQBAAA.AgABAAIAAAAtyolDObpQQ5VtlI4uGjEPAgDs_wUA9P8LDJqfd7Epy68pFnNg5ZGqEzuUK17X0gk97oYvzc711aRmgNs4fqiaJw7CsaHIot3FlnscEf-tj5YC5RKcF1EQWutifostZBwMvHwD8dszNflEedRXjPvzeklwnTgNkmooq16-H68UaVnX2JBawd_BqzjSddNkyQGk6jLM7z5I9QUfS7GOHx_jjgZWIFRRmk6qDsGXLMCepN3VQYwSgzYg6nwrZcu2RotnxwaaPz3SCJKZxeR2Joy6jETybI3TYXLFgB7MVsI1E2daPPBq4tA7rqeq0SxuxIKq0nO6ccyzbRzEL9xR_2NwHj0-08polVlsrkW2QhAeFB2mYsX_YyWbNOiqsd7azp_ZZ3AXocud63Vgksz_-i3d-I6p2hDvCsu0ZTrftcQPOfbKkwWcsZrx2nA4AO7d3_0G_N-6yIX-ikyty2Rh1mzynrU3CeQ1XG_bysTGPFJ5t6l3lprYb1c6XpS_BdQf_qkx1zEiHiAji4hFbalqRTl-itsomryY_EfcbmYgT5Tjfj7j293h-DYmTAa1zBJzxHcQvMNd-nqdTdv57bjPSWqp-1xAj8-Yt4rjW3W8ho2-s_CFCvM4Xd2g7UCFedy_zP3vae5alG-Nv_en7FhRBW8ZwRodIlnif-28vWd1uQavRO16e8oUp_KiUQx3ZSruCEJN8IIilrIcbHXI5dAPOcOMXlF49pfmq96THVtupx4BDxRjMqMoumlagOVJ8eWLztyDj_0JwfJgD9z6HLVdeY5RvrKV8O9VoID_JhtX3Ec2o0f5_mgPXdF4qjUiF667nyI
redirect_uri:        ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
client_id:           1fec8e78-bce4-4aaf-ab1b-5451cc387264
claims:              {"access_token":{"xms_cc":{"values":["CP1"]}}}
client_info:         1
windows_api_version: 2.0.1
tbidv2:              AAEGAQDMA250eKIyRxOBPjB61ZipKZTZRlm+x41LBV6tAcumgjamtQ0xXkBy+eoOLRY9Gr+dVnrlbraMTzYuoKEVY9e8jUxbcoeK6e06ufVlQPSzAn4iDocNdeRokdCs+jgSFDDpcgoO2z5IRyjcnF1r8kWIE5SJ1yeP15o1jcMCnMksKvC1Qgh2fPy0V/+lX2ir7dcaRMtvgc3GxW8eMI/Ex3SMgrgvQH23mBXePMK7uhseQhArmlFwRl6fVA5puFRoWJlxcRwSfp8t9AGW8xBR/bWMuBug8lfgVKoCkC+ZteFUksrHaO9dAkLjXdagC1oejKzxIWJ1FL2nuaVGEd8RI4K9AwEAAQ==
```

Response:
```
{
    "access_token": "eyJ0eXAiOiJKV1QiLCJub25jZSI6IkpJZldsQXJRVWE3Z25tbURCUzNybWxDY0tGaWFLRFhmcl9hcUQxWEhLbm8iLCJhbGciOiJSUzI1NiIsIng1dCI6Ii1LSTNROW5OUjdiUm9meG1lWm9YcWJIWkdldyIsImtpZCI6Ii1LSTNROW5OUjdiUm9meG1lWm9YcWJIWkdldyJ9.eyJhdWQiOiJodHRwczovL2FwaS5zcGFjZXMuc2t5cGUuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNjBiYzY5NTctNzhhYy00Y2U0LTkyMmMtNTM4Mjc3YWFlY2M0LyIsImlhdCI6MTY5NDQ1NTY1OCwibmJmIjoxNjk0NDU1NjU4LCJleHAiOjE2OTQ1NDAxNzIsImFjY3QiOjAsImFjciI6IjEiLCJhaW8iOiJBU1FBMi84VUFBQUFIWjg3RUowbis4NStoYVJWcVRZc0ZXV2dCQ0hPRUpTZ0JUK2NyS0wwcEVNPSIsImFtciI6WyJwd2QiXSwiYXBwaWQiOiIxZmVjOGU3OC1iY2U0LTRhYWYtYWIxYi01NDUxY2MzODcyNjQiLCJhcHBpZGFjciI6IjAiLCJhdXRoX3RpbWUiOjE2OTQ0NTU5NTEsImNuZiI6eyJ0YmgiOiJtTUlIQWFpd3NlL2Q4V1JHRG5TTW9vejNoKzEwdjN5OXFrZ2diSVNlNkNzPSJ9LCJmYW1pbHlfbmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoiZGV2IiwiaXBhZGRyIjoiMjAxLjEuMTQ4LjIxOCIsIm5hbWUiOiJkZXYgdGVzdCIsIm9pZCI6IjcwOTViOThmLTMzMDctNDllYi1hMDAxLThlM2Q0ZTRmZDQwMyIsInB1aWQiOiIxMDAzMjAwMTYxM0UwNTgxIiwicmgiOiIwLkFVWUFWMm04WUt4NDVFeVNMRk9DZDZyc3hGZjlGY3hzTEJkQnFJeURzZFZyUzc1R0FDcy4iLCJzY3AiOiJ1c2VyX2ltcGVyc29uYXRpb24iLCJzaWQiOiI2N2EyOWE1YS1mYzgxLTQwNDEtOWVmMi03NDExNmU4NDdiNTUiLCJzdWIiOiJTUUlWX1VrUFkzMUlFMDljbmNhd0t4RjF3S2xMT0VSdVpCbERjWERYc2gwIiwidGVuYW50X2N0cnkiOiJVUyIsInRpZCI6IjYwYmM2OTU3LTc4YWMtNGNlNC05MjJjLTUzODI3N2FhZWNjNCIsInVuaXF1ZV9uYW1lIjoiZGV2QGRscC5vczMzZGV2LmNvbSIsInVwbiI6ImRldkBkbHAub3MzM2Rldi5jb20iLCJ1dGkiOiJoY2tlQm5VQVJVYVpYTTJmc2xyUUFBIiwidmVyIjoiMS4wIiwid2lkcyI6WyI2MmU5MDM5NC02OWY1LTQyMzctOTE5MC0wMTIxNzcxNDVlMTAiLCJiNzlmYmY0ZC0zZWY5LTQ2ODktODE0My03NmIxOTRlODU1MDkiXSwieG1zX2NjIjpbIkNQMSJdLCJ4bXNfc3NtIjoiMSJ9.lJpwWGqIdtMNoqTpRwqh1YulVsblsi0pxhfUEra8r68WzvI-9MJBYrwvU0HVxdu6DqoXyy2vpERla4TAXRIhVaDwWw5gxNv-UrotjGWkfpu30Y9Cl6-nxFtB13Dm0Fufv8SKfd6SIkn-203i-Xu5MuMyVl1CzIrrbjpJwRtTS5f33rd57ESNGSntcz3gWkw2frcGU33VSOgqhJCSqHSSD5YbbkU9ihHwlhdtP_BpP34FyD5_UxVjc47MpiLspoBvYPLkRWObBtFOx8HeTKA_qKaq3dAUIjWpNPneEE5PVc_JEEzwt4HgGsrmvRK7eBdNkNAelErHtYND86i2ycYhcQ",
    "client_info": "eyJ1aWQiOiI3MDk1Yjk4Zi0zMzA3LTQ5ZWItYTAwMS04ZTNkNGU0ZmQ0MDMiLCJ1dGlkIjoiNjBiYzY5NTctNzhhYy00Y2U0LTkyMmMtNTM4Mjc3YWFlY2M0In0",
    "expires_in": "84213",
    "expires_on": "1694540172",
    "ext_expires_in": "84213",
    "foci": "1",
    "id_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJub25lIn0.eyJhdWQiOiIxZmVjOGU3OC1iY2U0LTRhYWYtYWIxYi01NDUxY2MzODcyNjQiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC82MGJjNjk1Ny03OGFjLTRjZTQtOTIyYy01MzgyNzdhYWVjYzQvIiwiaWF0IjoxNjk0NDU1NjU4LCJuYmYiOjE2OTQ0NTU2NTgsImV4cCI6MTY5NDQ1OTU1OCwiYWNjdCI6MCwiYW1yIjpbInB3ZCJdLCJmYW1pbHlfbmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoiZGV2IiwiaXBhZGRyIjoiMjAxLjEuMTQ4LjIxOCIsIm5hbWUiOiJkZXYgdGVzdCIsIm9pZCI6IjcwOTViOThmLTMzMDctNDllYi1hMDAxLThlM2Q0ZTRmZDQwMyIsInB1aWQiOiIxMDAzMjAwMTYxM0UwNTgxIiwicmgiOiIwLkFVWUFWMm04WUt4NDVFeVNMRk9DZDZyc3hIaU83Ql9rdks5S3F4dFVVY3c0Y21SR0FDcy4iLCJzdWIiOiJiU251WldDMUxrRVh4bzBYUGlZdjJ5bzdaZ3pieVN5MER2bG1QNzlxQy13IiwidGVuYW50X2Rpc3BsYXlfbmFtZSI6ImRscCIsInRpZCI6IjYwYmM2OTU3LTc4YWMtNGNlNC05MjJjLTUzODI3N2FhZWNjNCIsInVuaXF1ZV9uYW1lIjoiZGV2QGRscC5vczMzZGV2LmNvbSIsInVwbiI6ImRldkBkbHAub3MzM2Rldi5jb20iLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbIjYyZTkwMzk0LTY5ZjUtNDIzNy05MTkwLTAxMjE3NzE0NWUxMCIsImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdfQ.",
    "not_before": "1694455658",
    "refresh_token": "0.AUYAV2m8YKx45EySLFOCd6rsxHiO7B_kvK9KqxtUUcw4cmRGACs.AgABAAEAAAAtyolDObpQQ5VtlI4uGjEPAgDs_wUA9P_1S9Zn2Dk3SryYqo-1QQEdX-MIAgZTXkl_apYRcICqySrIlWHTmQLGsdlc3a-QXPjkayfNGWTajSqLSfvpTNA5xKI2rahKa1B6V4DIcoXVoU7eVxGBnU7CDOVt4FRo0BgomcHoLgCHUXDNQ7X5Oi_BuQ9HvIpmdAAQKtrypDIW7kna5kPNcXzYHH39nXxkubAnW7-DOXZEJIpqIK-qSUf5liYkQZww1wpnvM-Go_BL1-_RnXXDgCQAxhm0V4b__yEzlBWbFfs71ZwXxK2tvNK44HjPqlrnjp2KrWCWzUPRPBqbpPrR3czjaoTjed03OYvpQKFs2X9GrlUCCoJQWAL0iekliSFuPRdDF8B1kwUR65nmcd0H_D1OIufGUGAI6yfGcAmSA8J_Ho8degQZhBkUFKFjWlxFdn9e1J3uu7ylajsTvaUa-Jaze7iUy4Mvg-ljsIr9fjUWxs_Nc_SPD-dm4cp1Eso23SNUkk8UYehteu54xErktIw3Tvq4JwW2aTH2gcOfe24dQk0ufkhhDobn2TjBDPLkRDR939D7IMON-m6boty6neZHg_axglWbzp3rSB_BxbgUadpFOaFUYhrJx28Mw9ZLY2rUqhjQu2iP8DgYlLiZYBNBKNcEVhjyLxEbWVcgcyAJddE-9a3BZ2cSk3PMdrq1JHZF2DxMs9OABZDxtV695VhKOM5gAZp7-WX24ASk3xj_2qS88DTFWfA5b6AdLpyp776EYihzUkvlE8Tk6u86jitme0lWErq-sk409znYfwZWraBDoGUYWeJ5GHeStVBokoXRN7tDaJUR1Q",
    "refresh_token_expires_in": 1209599,
    "resource": "https://api.spaces.skype.com",
    "scope": "user_impersonation",
    "token_type": "Bearer"
}
```

aad_broker_http_analysis.png

Windows_Security_Authentication_Web_Core stack inside AAD.BrokerPlugin:

```
Windows::Security::Authentication::Web::Core::CWebTokenResponse::get_Token
Windows::Internal::Security::Authentication::TokenBroker::SerializeWebTokenResponsesWithStatus
Windows::Internal::Security::Authentication::TokenBroker::AddWebTokenResponsesToCache
Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::WriteTokenResponseCache
Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::DoWork

Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenResponse::get_Token:
00007ffe`12fde620 488b4960        mov     rcx,qword ptr [rcx+60h]
00007ffe`12fde624 48ff25850c0c00  jmp     qword ptr [Windows_Security_Authentication_Web_Core!_imp_WindowsDuplicateString (00007ffe`1309f2b0)]

0:035> du poi(rcx+60)+0x1C
00000277`bb89f9ec  "eyJ0eXAiOiJKV1QiLCJub25jZSI6IkpJ"
00000277`bb89fa2c  "ZldsQXJRVWE3Z25tbURCUzNybWxDY0tG"
00000277`bb89fa6c  "aWFLRFhmcl9hcUQxWEhLbm8iLCJhbGci"
00000277`bb89faac  "OiJSUzI1NiIsIng1dCI6Ii1LSTNROW5O"
00000277`bb89faec  "UjdiUm9meG1lWm9YcWJIWkdldyIsImtp"
00000277`bb89fb2c  "ZCI6Ii1LSTNROW5OUjdiUm9meG1lWm9Y"
00000277`bb89fb6c  "cWJIWkdldyJ9.eyJhdWQiOiJodHRwczo"
00000277`bb89fbac  "vL2FwaS5zcGFjZXMuc2t5cGUuY29tIiw"
00000277`bb89fbec  "iaXNzIjoiaHR0cHM6Ly9zdHMud2luZG9"
00000277`bb89fc2c  "3cy5uZXQvNjBiYzY5NTctNzhhYy00Y2U"
00000277`bb89fc6c  "0LTkyMmMtNTM4Mjc3YWFlY2M0LyIsIml"
00000277`bb89fcac  "hdCI6MTY5NDQ1NTY1OCwibmJmIjoxNjk"

eyJ0eXAiOiJKV1QiLCJub25jZSI6IkpJZldsQXJRVWE3Z25tbURCUzNybWxDY0tGaWFLRFhmcl9hcUQxWEhLbm8iLCJhbGciOiJSUzI1NiIsIng1dCI6Ii1LSTNROW5OUjdiUm9meG1lWm9YcWJIWkdldyIsImtpZCI6Ii1LSTNROW5OUjdiUm9meG1lWm9YcWJIWkdldyJ9.eyJhdWQiOiJodHRwczovL2FwaS5zcGFjZXMuc2t5cGUuY29tIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNjBiYzY5NTctNzhhYy00Y2U0LTkyMmMtNTM4Mjc3YWFlY2M0LyIsImlhdCI6MTY5NDQ1NTY1OCwibmJmIjoxNjk
```

After calling get_Token and other information from response, such as web account, the AAD Broker proceeds to instantiate some object from vaultcli and activate the TokenBroker WinRT class:

```
vaultcli!DllGetClassObject+0x7f4
Windows_Security_Authentication_Web_Core!Windows::Internal::Security::Authentication::TokenBroker::ReFindAccountWithContext+0xf5
Windows_Security_Authentication_Web_Core!Windows::Internal::Security::Authentication::TokenBroker::SerializeWebTokenResponsesWithStatus+0x37f
Windows_Security_Authentication_Web_Core!Windows::Internal::Security::Authentication::TokenBroker::AddWebTokenResponsesToCache+0x284
Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::WriteTokenResponseCache+0x1d829
Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::DoWork+0x42e
...
TokenBroker::CreateTokenBrokerInternal
```

Despite being a COM object the doc from the dotnet version [PasswordVault], by example, details that:

>
> Apps running in an AppContainer (for example, UWP apps) can only access the contents of their own locker (for the current user). Apps not running in an AppContainer (for example, regular Desktop apps) can access all the user's lockers, including those of AppContainer apps.
>

[PasswordVault]: https://learn.microsoft.com/en-us/uwp/api/windows.security.credentials.passwordvault?view=winrt-22621

During TokenBrokerInternal activation instances of RuntimeBroker and BackgroundTaskHost were created. At this moment there was no refresh_token request, but it will be, from BackgroundTaskHost using thee same access_token received by AAD Broker.

To continue.


= Had a call with Chermyanin for next steps in AAD Broker spike
:date: 2023-09-12
:tags: tag_venn tag_reversing

AADBroker
	protect auth to our web portal (venn.com):
	 - protect token retrieve
	 - protect cache

workflow:
 - we try to hook TokenBroker->RetrieveToken
 - it is SE or not
 - if SE than use webproxy for token and we should some different storage for tokens
 	- change %appdata%\TokenBroker\Cache to V:\AppData\TokenBroker\Cache
 - if NotSE than don’t use webproxy

hook the registry key with policy BlockAADJoin:
hook RegGetValue for BlockAADJoin
 - if SE set the value as enable
 - else set the value as system value

COM proxy thta communicate with AAD broker by RPC
and you can the process context of the client
and if the client is COM proxy we set SE
else is not SE
SE client -> COM proxy -> AAD broker (thread 1, alpcsendwaitreceive has process context)
	if the com proxy process set the thread context to SE
 use winapi function for rpc context detection
system client -> AAD broker (thread 2)


= Could solve the WDK issue
:date: 2023-09-13
:tags: tag_venn tag_reversing

Could solve the WDK issue following the steps in [Other WDK Downloads] page. Tried to build everything on VS2019, but there is no way in current project because .NET SDK 7.0 requires a newer MSBuild than the available in 2019.

```
F:\Repos\Workplace.Container.Windows\Workplace.Container\Tests\Workplace.Badge.Tests.Unit\Workplace.Badge.Tests.Unit.csproj : error  : The project file cannot be opened. Version 7.0.400 of the .NET SDK requires at least version 17.4.0 of MSBuild. The current available version of MSBuild is 16.11.2.50704. Change the .NET SDK specified in global.json to an older version that requires the MSBuild version currently available.
```

[Other WDK Downloads]: https://learn.microsoft.com/en-us/windows-hardware/drivers/other-wdk-downloads

Solved VS2019 issue (using Community, after that solved for Pro), build and compiled components and tested the setup with AadWebProxyEnabled flag. Testing Teams login BackgroundTaskHost and AADBroker are crashing. Not sure yet if is related to injection or proxy implementation (or neither).


= Crash in AADBroker and BackgroundTaskHost (continue)
:date: 2023-09-14
:tags: tag_venn tag_reversing

## TL;DR

Crash in AADBroker and BackgroundTaskHost when injecting hook occurs during CoreApplication::RegisterApplicationServers call. An interesting log error in debug is "80004015 The class is configured to run as a security id different from the caller" and "Security check failure or stack buffer overrun". To continue.

## Analysis of crash in my VM (Windows 10) when injecting our DLL in to AAD Broker and BackgroundTaskHost (feature flag AadWebProxyEnabled).

Crash during twinapi.appcore.dll!Windows::ApplicationModel::Core::CoreApplication::RegisterApplicationServers() call in both Microsoft.AAD.BrokerPlugin.exe and BackgroundTaskHost.exe.
AadWebProxyEnabled=false does not crash (no injected DLL).
RegisterApplicationServers calls RoGetActivationFactory and RoRegisterActivationFactories.
Disabling those hooks (commenting in the list of hooks, dunno if this is the right way) didn't solved it.
Disabling OpenRT classes in RoGetActivationFactory function didn't worked.
Noticed I am running Teams ouside SE.
Tested inside with and without the beforementioned hooks and the result was always crash (with AadWebProxyEnabled).
Try to debug AADBroker since beginning of process.

```
plmdebug /enableDebug Microsoft.AAD.BrokerPlugin_1000.19041.1023.0_neutral_neutral_cw5n1h2txyewy c:\Tools\DbgTools\windbg.exe
sxe ld:twinapi.appcore.dll
bp twinapi_appcore!Windows::ApplicationModel::Core::CoreApplication::RegisterApplicationServers
```

Failure in RegisterApplicationServers shows this error in WinDbg output:

```
onecore\com\combase\winrtbase\winrtbase.cpp(873)\combase.dll!00007FFA875A4394: (caller: 00007FFA458982DB) ReturnHr(1) tid(16c8) 80004015 The class is configured to run as a security id different from the caller
(20e8.2100): Security check failure or stack buffer overrun - code c0000409 (!!! second chance !!!)
00007ffa`7dccb1ce e809490200      call    twinapi_appcore!CoreApplicationProvider::RegisterActivationFactoriesFailed<long & __ptr64,unsigned short const * __ptr64,unsigned short const * __ptr64> (00007ffa`7dcefadc)
```

Trying to figure it out:

> It fails in [CoRegisterClassObject call] in the C++ dll with above error message.

```
bp combase:CoRegisterClassObject
```

No result.

> Class is configured to run as another user: [error in service settings].

```
SC sdshow ServiceName
SC sdset ServiceName
```

Not related.

> The solution for my problem was to [disable the DEP] in windows for my program.

```
bcdedit.exe /set {current} nx AlwaysOff
reboot
wmic OS Get DataExecutionPrevention_SupportPolicy
0
```

BackgroundTaskHost is still crashing. Besides, Process Explorer shows every process as DEP enabled. Dunno why.

To continue.

[CoRegisterClassObject call]: https://www.vbforums.com/showthread.php?756279-0x80004015-The-class-is-configured-to-run-as-a-security-id-different-from-the-caller
[error in service settings]: https://knowledge.broadcom.com/external/article/176707/error-the-class-is-configured-to-run-as.html
[disable the DEP]: https://cdn.codeproject.com/Questions/284989/Debug-assertion-failed


= Crash in AADBroker and BackgroundTaskHost
:date: 2023-09-15
:tags: tag_venn tag_reversing

Discovered that the crash occurs when `WebProxyEnabled=false` and `AadWebProxyEnabled=true`. It should work with the code bellow, but I dunno if that makes sense, since proxy hooks won't be installed and the proxy won't work (the DLL will be injected, though).

```
+++ b/Workplace.Container.Hook/Workplace.Container.Hook.Lib/CreateProtectionsList.cpp
@@ -50,18 +50,18 @@ namespace Protections
         if ((flags & FeatureFlags::WEB_PROXY_ENABLED) == FeatureFlags::WEB_PROXY_ENABLED)
         {
             result.push_back(std::make_unique<WebProxyProtection>());
+        }

-            if ((flags & FeatureFlags::AAD_WEB_PROXY_ENABLED) == FeatureFlags::AAD_WEB_PROXY_ENABLED)
+        if ((flags & FeatureFlags::AAD_WEB_PROXY_ENABLED) == FeatureFlags::AAD_WEB_PROXY_ENABLED)
+        {
+            auto curProcName = ProcessUtils::GetCurrentProcessName();
+            std::wstring commandLine(GetCommandLineW());
+            StringUtils::rtrim(commandLine);
+            if (curProcName == L"Microsoft.AAD.BrokerPlugin.exe" ||
+                curProcName == L"HxTsr.exe" ||
+                curProcName == L"BackgroundTaskHost.exe" && StringUtils::Compare(commandLine, { L"-ServerName:BackgroundTaskHost.WebAccountProvider" }, StringUtils::ComparisonMode::EndWith))
             {
-                auto curProcName = ProcessUtils::GetCurrentProcessName();
-                std::wstring commandLine(GetCommandLineW());
-                StringUtils::rtrim(commandLine);
-                if (curProcName == L"Microsoft.AAD.BrokerPlugin.exe" ||
-                    curProcName == L"HxTsr.exe" ||
-                    curProcName == L"BackgroundTaskHost.exe" && StringUtils::Compare(commandLine, { L"-ServerName:BackgroundTaskHost.WebAccountProvider" }, StringUtils::ComparisonMode::EndWith))
-                {
-                    return result;
-                }
+                return result;
             }
         }
```

Anyway, I am going to implement the registry policy BlockAADWorkplaceJoin regardless (just a FYI) using AadWebProxyEnabled feature (just a test).

```
plmdebug /enableDebug Microsoft.AAD.BrokerPlugin_1000.19041.1023.0_neutral_neutral_cw5n1h2txyewy c:\Tools\DbgTools\windbg.exe
sxe ld:WorkplaceHook64.dll
bp WorkplaceHook64!BlockAADWorkplaceJoinProtection_imp::RegQueryValueExW_Hook
.srcpath C:\Temp\Src\
plmdebug /disableDebug Microsoft.AAD.BrokerPlugin_1000.19041.1023.0_neutral_neutral_cw5n1h2txyewy
```

Implemented set BlockAADWorkplaceJoin policy as 1 inside AAD Broker app. Created branch to continue dev (next step is to detect if activated from inside SE).


= Investigated DCOMLaunch RPC endpoint
:date: 2023-09-18
:tags: tag_venn tag_reversing

Investigated DCOMLaunch RPC endpoint `_LaunchWinRTRunAsServer`. It is present in interface `9b8699ae-0e44-47b1-8e7f-86a461d7ecdc` in `rpcss.dll`, as checked in [some published RPC interfaces] and RpcView. Analyzed asm code trying to get some context from `ACTIVATION_PARAMS` (pseudo type). Dedicated some time into analysing the token received.

Using `!token` command in WinDbg I observed the properties and started to see if we could change or add something in the token from parent process (or the impersonation one) to catch this "info" in AAD Broker, since after several access modifications to start the App Container the token received by DCOMLaunch is used to start the UWP process.

When we start a new process inside SE we change the token integrity level to default Middle. I was navigating around the Demo behavior, what seems to be the main path. Took some integrity level from other processes to figure it out what changes.

I discovered that for some reason this information in the token is not inheret. AADBroker token is in the Low level and Teams child processes too, besides Teams parent is Medium.

```
Services
 | Workplace Container S-1-16-16384 (System)
   | Workplace Container Helper S-1-16-8192 (Medium)
   | Workplace Gateway Manager S-1-16-16384 (System)
   | Workplace Badge S-1-16-12288 (High)

Teams S-1-16-8192 (Medium)
 | Teams S-1-16-4096 (Low)

DCOMLaunch S-1-16-16384 (System)
 | AADBroker S-1-16-4096 (Low)

WinLogon S-1-16-16384 (System)
 | Explorer S-1-16-12288 (High)
    | Notepad S-1-16-12288 (High)
    | Demo S-1-16-12288 (High)
```

So this manipulation could not be a good way to mark an AADBroker instance activated inside SE. I am going to look into other variables received in `_LaunchWinRTRunAsServer`. The next option I found was to use the information from [RpcGetAuthorizationContextForClient] in server to catch PID from RPC client request. Need to check if manipulate RPC server in this case is possible. It is the DCOMLaunch and it is not being injected.

[some published RPC interfaces]: https://gist.github.com/enigma0x3/2e549345e7f0ac88fad130e2444bb702
[RpcGetAuthorizationContextForClient]: https://learn.microsoft.com/en-us/windows/win32/api/rpcasync/nf-rpcasync-rpcgetauthorizationcontextforclient 


= Using COM proxy to get details about AAD Broker
:date: 2023-09-19
:tags: tag_venn tag_reversing

Using COM proxy to get details about AAD Broker being activated and perhaps some context like client PID or the ALPC port from COM server.

Found an article with [three ways to get PID from a COM server]. Getting the COM server PID would enable us to keep this info to when AAD Broker to decide if exibit the join workplace window or not (not sure about the timing, though), so it doesn't matter who gets what (client or server PID).

I made a test getting the PID in a call of UnmarshalInterface during Teams login using the [OBJREF] structure to interpret the stream bytes. PID of server COM is located into offset 52 (0x34) that is part of the [IPID] member.

Unfortunately there was a drawback: the interface being unmarshalled (WamProviderRegistration or TokenBrokerInternal) is not from AAD Broker, but from the Web Account Manager service (`svchost.exe -k netsvcs -p -s TokenBroker`), a service we don't have the hook DLL injected yet. It is possible that WAM/TokenBroker service act as a proxy to AAD Broker (that's why it appeared in previous analysis from AAD Broker internals).

[three ways to get PID from a COM server]: https://www.apriorit.com/dev-blog/724-windows-three-ways-to-get-com-server-process-id
[IPID]: https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-dcom/ba4c4d80-ef81-49b4-848f-9714d72b5c01#gt_74540339-daab-46ea-a8f9-fe8fca3b150c
[OBJREF]: https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-dcom/fe6c5e46-adf8-4e34-a8de-3f756c875f31


= Tried to inject DLL into WAM service using AAD Broker
:date: 2023-09-20
:tags: tag_venn tag_reversing

Tried to inject DLL into WAM service using AAD Broker strategy, but it is not possible just put this process into the list because it needs to belong to the same session from the container. So I used WinDbg sessions for at least to know the sequential order of classes being activated via `RoGetActivationFactory` call.

bp combase!_RoGetActivationFactory ".tlist -c ; .time ; du poi(@rcx+0x10) ; g"

Classes activated (via `RoGetActivationFactory`) in chronological order by process (Teams first login)

```
PID Process Class
6516 Teams.exe Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager
6516 Teams.exe Windows.Internal.Security.Authentication.Web.WamProviderRegistration
6516 Teams.exe Windows.Internal.Security.Credentials.WebAccountProviderInternal
6516 Teams.exe Windows.Security.Authentication.Web.Core.WebTokenRequest
6516 Teams.exe Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager
6516 Teams.exe Windows.Internal.Security.Authentication.Web.TokenBrokerInternal
6516 Teams.exe Windows.Internal.Security.Authentication.Web.WamProviderRegistration
6516 Teams.exe Windows.Internal.Security.Credentials.WebAccountProviderInternal
3184 WAM.exe Windows.Security.Credentials.WebAccountProvider
2280 backgroundTaskHost.exe Windows.Internal.Security.Credentials.WebAccountProviderInternal
2280 backgroundTaskHost.exe Windows.Internal.UserDeviceRegistration.UserDeviceRegManager
3184 WAM.exe Windows.Internal.Security.Credentials.WebAccountProviderInternal
3184 WAM.exe Windows.Internal.Security.Authentication.Web.WamObjectStoreManager
3184 WAM.exe Windows.Internal.Security.Credentials.WebAccountInternal
836 RuntimeBroker.exe Windows.Internal.UserDeviceRegistration.UserDeviceRegManager
2280 backgroundTaskHost.exe Windows.Security.Cryptography.Core.HashAlgorithmNames
2280 backgroundTaskHost.exe Windows.Security.Cryptography.Core.HashAlgorithmProvider
2280 backgroundTaskHost.exe Windows.Security.Cryptography.CryptographicBuffer
2280 backgroundTaskHost.exe Windows.Internal.UserDeviceRegistration.UserDeviceRegManager
836 RuntimeBroker.exe Windows.Internal.UserDeviceRegistration.UserDeviceRegManager
2280 backgroundTaskHost.exe Windows.Security.Authentication.Web.Core.WebProviderError
2280 backgroundTaskHost.exe Windows.Internal.Security.Authentication.Web.TokenBrokerInternal
3184 WAM.exe Windows.Internal.Security.Credentials.WebAccountProviderInternal
3184 WAM.exe Windows.Internal.Security.Authentication.Web.WamProviderRegistration
6516 Teams.exe Windows.Security.Authentication.Web.Core.WebTokenRequestResult
6516 Teams.exe Windows.Internal.Security.Credentials.WebAccountProviderInternal
6516 Teams.exe Windows.Internal.Security.Authentication.Web.WamProviderRegistration
6516 Teams.exe Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager
6516 Teams.exe Windows.Security.Authentication.Web.Core.WebTokenRequest
6516 Teams.exe Windows.Internal.Security.Authentication.Web.TokenBrokerInternal
6516 Teams.exe Windows.Internal.Security.Credentials.WebAccountInternal
3184 WAM.exe Windows.Security.Credentials.WebAccountProvider
3664 backgroundTaskHost.exe Windows.Internal.Security.Credentials.WebAccountProviderInternal
3664 backgroundTaskHost.exe Windows.Security.Authentication.Web.Provider.WebAccountManager
3664 backgroundTaskHost.exe Windows.Internal.Security.Authentication.Web.WamProviderRegistration
3664 backgroundTaskHost.exe Windows.Internal.Security.Credentials.WebAccountProviderInternal
3664 backgroundTaskHost.exe Windows.Internal.Security.Authentication.Web.WamObjectStoreManager
3664 backgroundTaskHost.exe Windows.Internal.Security.Credentials.WebAccountInternal
3664 backgroundTaskHost.exe Windows.Internal.UserDeviceRegistration.UserDeviceRegManager
836 RuntimeBroker.exe Windows.Internal.UserDeviceRegistration.UserDeviceRegManager
3664 backgroundTaskHost.exe Windows.Internal.UserDeviceRegistration.UserDeviceRegManager
3664 backgroundTaskHost.exe Windows.Security.Authentication.Web.Core.WebProviderError
3664 backgroundTaskHost.exe Windows.Internal.Security.Authentication.Web.TokenBrokerInternal
3184 WAM.exe Windows.Internal.Security.Credentials.WebAccountProviderInternal
3184 WAM.exe Windows.Internal.Security.Authentication.Web.WamProviderRegistration
6516 Teams.exe Windows.Security.Authentication.Web.Core.WebTokenRequestResult
6516 Teams.exe Windows.Internal.Security.Credentials.WebAccountProviderInternal
3184 WAM.exe Windows.Security.Authentication.Web.Core.WebTokenRequest
3184 WAM.exe Windows.Internal.Security.Credentials.WebAccountProviderInternal
3184 WAM.exe Windows.Internal.Security.Authentication.Web.WamProviderRegistration
3184 WAM.exe Windows.Internal.ShellCommon.TokenBrokerModal
```

In order to know in what processes those classes are being activated I was using the Marshal/Unmarshal operations visible in COM proxy and hook DLL, but without injection in WAM I plan to get this list from Teams, BackgroundTaskHost and AAD Broker and filter what should be in WAM service.


= I stopped the WAM service and use the Web Account Sample
:date: 2023-09-21
:tags: tag_venn tag_reversing

I stopped the WAM service and use the Web Account Sample that have a button to show the login window from AAD Broker. The function called in the sample is `WebAuthenticationCoreManager.RequestTokenAsync(webTokenRequest)` that returns a `WebTokenRequestResult`. When activating the Windows.Internal.Security.Authentication.Web.WamProviderRegistration class the WAM service is started again.

```
plmdebug /enableDebug Microsoft.SDKSamples.WebAccountManagement.CS_1.0.3.0_x64__k5vd8bgaq11c4 c:\Tools\DbgTools\windbg.exe
bp combase!_RoGetActivationFactory ".time ; du poi(@rcx+0x10) ; g"
bp combase!_RoGetActivationFactory ".time ; .sleep 2 ; du poi(@rcx+0x10) ; g"
```

The same behavior is observed when starting Teams. It is important to note that activating the class `Windows.Security.Authentication.Web.Core.WebAuthenticationCoreManager´, what Teams does right in the beginning, does not start WAM. Only when WamProviderRegistration is activated (as the sample).

So this class is activated into WAM service (at least). I am going to get calls made from interfaces to see if we can get some context from it or it is in other classes.


= The parameters to start AAD Broker are always the same
:date: 2023-09-22
:tags: tag_venn tag_reversing

The parameters to start AAD Broker are always the same, even calling from WAM sample and Teams, and even restarting WAM service and restarting the computer.

```
"C:\Windows\SystemApps\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\Microsoft.AAD.BrokerPlugin.exe" -ServerName:App.AppXgvz9wxd0frjs1prgz5kvtcz083996jyv.mca
```

AAD Broker plugin instance is the same always. That makes sense, since it is an UWP app. What interests me about it is that since the windows are identical in two separated window threads should be easier to compare where is the difference. Could be some RCP/ALPC connection to WAM.

Runtime Broker (Microsoft.AAD.BrokerPlugin_1000.19041.1023.0_neutral_neutral_cw5n1h2txyewy)
Runtime Broker (Microsoft.SDKSamples.WebAccountManagement.CS_1.0.3.0_x64__k5vd8bgaq11c4)

> A broker can simply forward events that are generated somewhere else (like in the Windows kernel) or can generates new events based on some other conditions and states. Brokers forward events that they managed through WNF: each broker creates a WNF state name that the background infrastructure subscribes to. In this way, when the broker publishes new state data, the Broker Infrastructure, which is listening, wakes up and forwards the event to its clients.

Analyzed ALPC messages traffic among related components filtering out everything else. Modified the [ALPCLogger] by fixing the save to file feature and added as [experimental] in my repo the export the dump string (XML format) to see some pattern and some small changes, such as filtering hard-coded messages exchanged by the same process. Above the filter used:

```
-explorer;-services;-dwm;-taskhostw;-lsass;-smartscreen;-sihost;-ctfmon;-csrss;accounts;teams;aad;runtime;background;-svchost
```

The payload data in the dump field is filled only with the message id, so I am going to look from the kernel debug for some details in messages exchanged. However, it is possible to know already that Teams/[WAMSample] first communicates with WAM service and WAM service communicates with AAD Broker.

There is a big difference between Teams and WAMSample that is the component behind most of communication. In WAMSample is RuntimeBroker the component responsible for most messages, while in Teams it is BackgroundTaskHost.

[ALPCLogger]: https://github.com/zodiacon/ALPCLogger
[experimental]: https://github.com/caloni/ALPCLogger/tree/experimental
[WAMSample]: https://github.com/microsoft/Windows-universal-samples/tree/main/Samples/WebAccountManagement

Lendo mais um pouquinho de Windows Internals. Agora sobre segurança.

> Because NTOWF is an MD4 hash, its algorithmic complexity in the face of today’s hardware, and its lack of anti-repeatability protection, means that intercepting the hash leads to instant compromise and even possible recovery of the password.

> The TGT and a corresponding key are provided to the local machine after a successful logon (just like the NTOWF on NTLM), and intercepting both components will result in instant compromise of the user’s credentials, although reuse and password recovery will not be possible.

> Obviously, a preferable solution is to remove the usage of a password completely, which Windows Hello, described in the “Windows Hello” section later in this chapter, allows.

> LsaIso.exe process, which has a handle to the LSA_ISO_RPC_SERVER ALPC port. This is used to communicate with the Lsass.exe process.


= Mais leituras do Windows Internals.
:date: 2023-09-23
:tags: tag_books tag_windows_internals

Dessa vez focando no ALPC.

> Whenever a Windows process and/or thread starts, as well as during any Windows subsystem operation, ALPC is used to communicate with the subsystem process (CSRSS).

> The new Core Messaging mechanism used by CoreUI and modern UWP UI components use ALPC to both register with the Core Messaging Registrar, as well as to send serialized message objects, which replace the legacy Win32 window message model.

> ALPC communication crosses all possible types of security boundaries—from unprivileged applications to the kernel, from VTL 1 trustlets to VTL 0 services, and everything in between.

> ALPC exposes a single executive object called the port object to maintain the state needed for communication.

> ALPC follows a connection and communication model that’s somewhat reminiscent of BSD socket programming. A server first creates a server connection port (NtAlpcCreatePort), whereas a client attempts to connect to it (NtAlpcConnectPort). If the server was in a listening state (by using NtAlpcSendWaitReceivePort), it receives a connection request message and can choose to accept it (NtAlpcAcceptConnectPort). In doing so, both the client and server communication ports are created, and each respective endpoint process receives a handle to its communication port.

> Therefore, in the simplest scenario, a single server thread sits in a loop calling NtAlpcSendWaitReceivePort and receives with connection requests, which it accepts, or messages, which it handles and potentially responds to. The server can differentiate between messages by reading the PORT_HEADER structure, which sits on top of every message and contains a message type.

> Using ALPC, a client and thread using blocking messages each take turns performing a loop around the NtAlpcSendWaitReceivePort system call, in which one side sends a request and waits for a reply while the other side does the opposite.

> One of the primary users of ALPC, outside of Local RPC, is the Windows subsystem, which uses ALPC to communicate with the Windows subsystem DLLs that are present in all Windows processes. Because CSRSS loads once for each session, you will find its ALPC port objects under the appropriate \Sessions\X\Windows directory,


= Discover what COM method invocation starts AAD Broker manifestation
:date: 2023-09-25
:tags: tag_venn tag_reversing

Discovered what call from `ComProxyIpcClient::ComInvoke` starts activation of AAD Broker, or at least after that call is made the process starts. In `Windows.Security.Authentication.Web.Core.dll` a call from `Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryUi` uses `Windows::Internal::Security::Authentication::Web::TokenBrokerInternal`. From the proxy interface is requested the procnum 36.

In the analysis from 2023-08-10 I pointed out:

> (...) there is a activation being made in TokenBroker and it is generated by Teams into the `CWebTokenRequestResultOperation::TryUi` method. If we could intercept this call or reject the activation Teams will load only the internal window and save the credentials locally, without the system settings option.
> I believe the key communication between Teams/Windows_Security_Authentication_Web_Core and WAM/aadWamExtension is the activation of the class related to getting the extension for token provider. I am not sure if just capturing the call made in Teams in the `TryUi` method would be enough. That could be the next step, but needs some injection or code/asm to make it work.

The AAD Broker is still not present in desktop. The login windows from AAD Broker shows when another invoke is made in `Windows.Security.Authentication.Web.Core.dll` is started from `WaitForCompletion<struct Windows::Foundation::IAsyncOperationCompletedHandler<class Windows::Security::Authentication::Web::Core::WebTokenRequestResult *>,struct Windows::Foundation::IAsyncOperation<class Windows::Security::Authentication::Web::Core::WebTokenRequestResult *> >(struct Windows::Foundation::IAsyncOperation<class Windows::Security::Authentication::Web::Core::WebTokenRequestResult *> *,enum tagCOWAIT_FLAGS,void *)`, a call from `Windows::Security::Authentication::Web::Core::WebTokenRequestResult` procnum 6.

After that there is a call from [CoWaitForMultipleHandles] that only returns when AAD Broker window closes (cancelling login in my test).

The next step is to capture ComInvoke for `TryUi` and to signal somehow AAD Broker to read policy BlockAADWorkplaceJoin in registry as enabled, and go back to system setting after return of CoWaitForMultipleHandles.

## Discover what interface method is being remotely called

Proc36 is this:

```
HRESULT Proc36(/* Stack Offset: 8 */ [In] Windows::Security::Authentication::Web::Core::IWebTokenRequest* p0, /* Stack Offset: 16 */ [In] IVectorView<Windows::Security::Credentials::WebAccount>* p1, /* Stack Offset: 24 */ [In] int p2, /* Stack Offset: 32 */ [Out] IAsyncOperation<Windows::Security::Authentication::Web::Core::WebTokenRequestResult>** p3);
```

## POC: Signin inside SE does not ask to join workplace

We need to mark BlockAADWorkplaceJoin as disabled if proc36 from CITokenBrokerInternalStatics is being called, what means to compare the IID from ComInvoke inside ComProxy (the workable ugliest version). I put into RpcChannel for a while.

```
void EnableBlockAADWorkplaceJoin()
{
    HKEY hKey = 0;
    LSTATUS status = RegOpenKeyExW(HKEY_LOCAL_MACHINE, L"SOFTWARE\\Policies\\Microsoft\\Windows\\WorkplaceJoin", 0,
                                   KEY_SET_VALUE, &hKey);
    if( status == ERROR_SUCCESS )
    {
        DWORD dwValue = 1;
        status = RegSetValueExW(hKey, L"AADBroker_BlockAADWorkplaceJoin", 0, REG_DWORD, (LPBYTE) &dwValue, sizeof(dwValue));
        RegCloseKey(hKey);
    }
}

HRESULT STDMETHODCALLTYPE IRpcChannelBufferComProxy::SendReceive(...

if( IsCWebTokenRequestResultOperation_TryUi(This->Guid, pMessage->ProcNum) )
{
    EnableBlockAADWorkplaceJoin();
}
```

When AAD Broker is started injected it checks for this registry version and use it as the system settings. It should delete after that (one shot).

```
void DisableBlockAADWorkplaceJoin()
{
  HKEY hKey = 0;
  LSTATUS status = RegOpenKeyExW(HKEY_LOCAL_MACHINE, L"SOFTWARE\\Policies\\Microsoft\\Windows\\WorkplaceJoin", 0,
                                  KEY_SET_VALUE, &hKey);
  if( status == ERROR_SUCCESS )
  {
    DWORD dwValue = 1;
    status = RegDeleteValueW(hKey, L"AADBroker_BlockAADWorkplaceJoin");
    RegCloseKey(hKey);
  }
}


LSTATUS WINAPI RegQueryValueExW_Hook(...
//...

  DWORD redirectedValue = 0;
  DWORD lpcbRedirectedValue = sizeof(redirectedValue);
  const std::wstring valueAADBroker_BlockAADWorkplaceJoin(L"AADBroker_BlockAADWorkplaceJoin");
  LSTATUS status = g_origRegQueryValueExW(hKey, valueAADBroker_BlockAADWorkplaceJoin.c_str(), NULL, NULL, (LPBYTE) &redirectedValue, &lpcbRedirectedValue);
  if( status != ERROR_SUCCESS )
  {
      return g_origRegQueryValueExW(hKey, lpValueName, lpReserved, lpType, lpData, lpcbData);
  }
  else
  {
      DisableBlockAADWorkplaceJoin();
  }

//...
```

The result:

https://support.os33.link/v/KDMrku

## BlockAADWorkplaceJoin does not avoid credentials available outside SE

Even with the POC demonstrated the comment before this office can acquire the credentials somehow without the need to signin again ouside SE:

https://support.os33.link/v/aU1H9T


= Investigate how login hint is passed to AAD Broker
:date: 2023-09-26
:tags: tag_venn tag_reversing

The easy part was to get the RPC call made by Teams (any office app should work as well). Using the method `IRpcChannelBufferComProxy::SendReceive` it was detected the login hint being passed in the call to Proc36 as mentioned in comments before this.

Since it is complicated to hook WAM this analysis was based on WinDbg sessions to calls to the function `NdrExtpProxySendReceive` and know when WAM sends login hint to AAD Broker.

```
combase.dll!NdrExtpProxySendReceive(void * pThis, _MIDL_STUB_MESSAGE * pStubMsg)

typedef struct _MIDL_STUB_MESSAGE {
  PRPC_MESSAGE                       RpcMsg;
  unsigned char                      *Buffer;
  ...

typedef struct _RPC_MESSAGE {
  RPC_BINDING_HANDLE     Handle;
  unsigned long          DataRepresentation;
  void                   *Buffer;
  unsigned int           BufferLength;
  unsigned int           ProcNum;
  ...
```

```
bp combase!NdrExtpProxySendReceive "db poi(poi(@rdx)+10) L100"
```

bp windows_internal_shellcommon_TokenBrokerModal!Windows::Internal::Shell::Details::ModalExperienceManagerSession::Invoke

At some point of the call before `TryUi`, the `TrySilent` method, it was possible to see a message related to login hint in the marshal data:

```
...
00000266`c5cd5820  00 00 00 01 00 00 00 0c-00 00 00 0b 57 54 45 5f  ............WTE_
00000266`c5cd5830  4d 65 73 73 61 67 65 00-00 00 0c 00 00 00 46 41  Message.......FA
00000266`c5cd5840  20 6c 6f 67 69 6e 20 68-69 6e 74 20 77 61 73 20   login hint was 
00000266`c5cd5850  73 65 6e 74 20 74 68 61-74 20 64 6f 65 73 6e 27  sent that doesn'
00000266`c5cd5860  74 20 6d 61 74 63 68 20-61 6e 79 20 57 65 62 41  t match any WebA
00000266`c5cd5870  63 63 6f 75 6e 74 20 69-6e 20 74 68 65 20 73 79  ccount in the sy
00000266`c5cd5880  73 74 65 6d 2e 00 00 00-0c 00 00 00 08 57 54 45  stem.........WTE
00000266`c5cd5890  5f 43 6f 64 65 00 00 00-04 ca a1 00 d8 00 00 00  _Code...........
...
```

At some point it was possible to see the login hint being sent to AAD Broker for the first time. It seems to come from the call to `twinui_appcore!ModalExperienceManagerStatic::GetModalExperienceManagerFromImmersiveShell`.

```
...
00000266`c65b46b8  00 00 01 00 00 00 0c 00-00 00 09 4c 6f 67 69 6e  ...........Login
00000266`c65b46c8  48 69 6e 74 00 00 00 0c-00 00 00 13 64 65 76 40  Hint........dev@
00000266`c65b46d8  64 6c 70 2e 6f 73 33 33-64 65 76 2e 63 6f 6d 00  dlp.os33dev.com.
00000266`c65b46e8  00 00 0c 00 00 00 06 6d-73 61 66 65 64 00 00 00  .......msafed...
00000266`c65b46f8  0c 00 00 00 01 31 00 00-00 0c 00 00 00 08 72 65  .....1........re
00000266`c65b4708  73 6f 75 72 63 65 00 00-00 0c 00 00 00 1c 68 74  source........ht
00000266`c65b4718  74 70 73 3a 2f 2f 61 70-69 2e 73 70 61 63 65 73  tps://api.spaces
00000266`c65b4728  2e 73 6b 79 70 65 2e 63-6f 6d 00 00 00 0c 00 00  .skype.com......
...

0:010> k 20
 # Child-SP          RetAddr           Call Site
00 00000095`db0fe4c8 00007ffe`af56d334 combase!NdrExtpProxySendReceive [onecore\com\combase\ndr\ndrole\proxy.cxx @ 1979] 
01 00000095`db0fe4d0 00007ffe`af5705d0 RPCRT4!NdrpClientCall3+0x3a4
02 00000095`db0fe840 00007ffe`a16f37d2 RPCRT4!NdrClientCall3+0xf0
03 00000095`db0febd0 00007ffe`97bbb76d OneCoreCommonProxyStub!IServiceProvider_QueryService_Proxy+0x32
04 00000095`db0fec20 00007ffe`97bbb5d1 twinui_appcore!ModalExperienceManagerStatic::GetModalExperienceManagerFromImmersiveShell+0x81
05 00000095`db0fec70 00007ffe`9c07253f twinui_appcore!ModalExperienceManagerStatic::GetModalExperienceManager+0x11
06 00000095`db0feca0 00007ffe`9c071b57 windows_internal_shellcommon_TokenBrokerModal!<lambda_a477e235d649da3bd08cd13296b2f5d5>::operator()+0xdb
07 00000095`db0fed70 00007ffe`9c07224f windows_internal_shellcommon_TokenBrokerModal!Windows::Internal::Shell::TryWithRpcDisconnectFallback+0x2f
08 00000095`db0feda0 00007ffe`9c0734c4 windows_internal_shellcommon_TokenBrokerModal!Windows::Internal::Shell::StartMemExperienceWithAumid+0x26f
09 00000095`db0ff070 00007ffe`9c072d25 windows_internal_shellcommon_TokenBrokerModal!TokenBrokerModalImpl::TokenBrokerActivateApp+0x540
0a 00000095`db0ff2a0 00007ffe`9c072ad6 windows_internal_shellcommon_TokenBrokerModal!TokenBrokerModalImpl::ShowAndWaitForResponseWithSize+0x215
0b 00000095`db0ff320 00007ffe`9ef009b0 windows_internal_shellcommon_TokenBrokerModal!TokenBrokerModalImpl::ShowAndWaitForResponse+0x36
0c 00000095`db0ff370 00007ffe`9ef08af8 tokenbroker!Windows::Internal::Security::Authentication::Web::CTokenBrokerOperation::ActivateProvider+0x498
0d 00000095`db0ff490 00007ffe`9ef03cec tokenbroker!Windows::Internal::Security::Authentication::Web::CTokenBrokerOperation::LaunchProvider+0x300
0e 00000095`db0ff630 00007ffe`9eefb294 tokenbroker!Windows::Internal::Security::Authentication::Web::CTokenBrokerOperation::DoWork+0x1c
...
```

There were another RPC calls where login hint appears -- such as `AAD_Core!GetTokenBrokerOperationBase::GetTokenBrokerOperationBase` and already in browser `edgehtml!anonymous namespace::CallUriReputationService` -- but we should discard those, since it is already available to AAD Broker space since call above was made.


= Discover where to hook AAD Broker to capture modified login hint
:date: 2023-09-27
:tags: tag_venn tag_reversing

```
bp combase!NdrExtpProxySendReceive "db poi(poi(@rdx)+10) L300 ; k 10"
```

Need to change in first two occurrences, but even doing so AAD Broker keeps the os32 altered version, so it is needed to change before NdrExtpProxySendReceive call.

img/os32_send_a_code.png

### First occurrence

```
combase!NdrExtpProxySendReceive:
00007ffe`b0105fc0 4053            push    rbx
0:021> g
00000211`08673660  69 6e 67 43 6f 6e 74 65-78 74 00 00 00 07 8c 2b  ingContext.....+
00000211`08673670  a0 b1 5f db ac 77 00 00-00 0c 00 00 00 17 50 52  .._..w........PR
00000211`08673680  65 71 75 65 73 74 5f 41-70 70 50 72 6f 63 65 73  equest_AppProces
00000211`08673690  73 4e 61 6d 65 00 00 00-0c 00 00 00 6e 43 3a 5c  sName.......nC:\
00000211`086736a0  50 72 6f 67 72 61 6d 20-46 69 6c 65 73 20 28 78  Program Files (x
00000211`086736b0  38 36 29 5c 57 6f 72 6b-70 6c 61 63 65 5c 43 6f  86)\Workplace\Co
00000211`086736c0  6d 70 6f 6e 65 6e 74 73-5c 57 6f 72 6b 70 6c 61  mponents\Workpla
00000211`086736d0  63 65 43 6f 6e 74 61 69-6e 65 72 43 6f 6d 70 6f  ceContainerCompo
00000211`086736e0  6e 65 6e 74 5c 43 75 72-72 65 6e 74 5c 57 6f 72  nent\Current\Wor
00000211`086736f0  6b 70 6c 61 63 65 20 43-6f 6e 74 61 69 6e 65 72  kplace Container
00000211`08673700  20 48 65 6c 70 65 72 2e-65 78 65 00 00 00 0c 00   Helper.exe.....
00000211`08673710  00 00 0f 50 52 65 71 75-65 73 74 5f 41 70 70 50  ...PRequest_AppP
00000211`08673720  66 6e 00 00 00 0c 00 00-00 0e 4e 4f 5f 41 50 50  fn........NO_APP
00000211`08673730  4c 49 43 41 54 49 4f 4e-00 00 00 0c 00 00 00 10  LICATION........
00000211`08673740  50 52 65 71 75 65 73 74-5f 52 65 71 75 65 73 74  PRequest_Request
00000211`08673750  00 00 04 01 00 00 04 8a-00 00 00 01 00 00 00 0c  ................
00000211`08673760  00 00 00 10 57 54 52 65-71 5f 50 72 6f 6d 70 74  ....WTReq_Prompt
00000211`08673770  54 79 70 65 00 00 00 05-00 00 00 00 00 00 00 0c  Type............
00000211`08673780  00 00 00 0e 57 54 52 65-71 5f 43 6c 69 65 6e 74  ....WTReq_Client
00000211`08673790  49 64 00 00 00 0c 00 00-00 24 31 66 65 63 38 65  Id.......$1fec8e
00000211`086737a0  37 38 2d 62 63 65 34 2d-34 61 61 66 2d 61 62 31  78-bce4-4aaf-ab1
00000211`086737b0  62 2d 35 34 35 31 63 63-33 38 37 32 36 34 00 00  b-5451cc387264..
00000211`086737c0  00 0c 00 00 00 13 57 54-52 65 71 5f 43 6f 72 72  ......WTReq_Corr
00000211`086737d0  65 6c 61 74 69 6f 6e 49-64 00 00 00 0c 00 00 00  elationId.......
00000211`086737e0  26 7b 46 38 43 36 35 38-45 37 2d 43 30 30 34 2d  &{F8C658E7-C004-
00000211`086737f0  34 39 46 42 2d 39 30 45-32 2d 33 32 37 33 43 45  49FB-90E2-3273CE
00000211`08673800  34 37 33 36 34 32 7d 00-00 00 0c 00 00 00 11 57  473642}........W
00000211`08673810  54 52 65 71 5f 50 72 6f-70 65 72 74 79 42 61 67  TReq_PropertyBag
00000211`08673820  00 00 00 0d 8a 43 ed 9f-f4 e6 44 21 0c 82 86 29  .....C....D!...)
00000211`08673830  ab 1d f9 ac 00 00 01 02-00 00 00 01 00 00 00 0c  ................
00000211`08673840  00 00 00 09 4c 6f 67 69-6e 48 69 6e 74 00 00 00  ....LoginHint...
00000211`08673850  0c 00 00 00 13 64 65 76-40 64 6c 70 2e 6f 73 33  .....dev@dlp.os3
00000211`08673860  33 64 65 76 2e 63 6f 6d-00 00 00 0c 00 00 00 06  3dev.com........
00000211`08673870  6d 73 61 66 65 64 00 00-00 0c 00 00 00 01 31 00  msafed........1.
00000211`08673880  00 00 0c 00 00 00 08 72-65 73 6f 75 72 63 65 00  .......resource.
00000211`08673890  00 00 0c 00 00 00 1c 68-74 74 70 73 3a 2f 2f 61  .......https://a
00000211`086738a0  70 69 2e 73 70 61 63 65-73 2e 73 6b 79 70 65 2e  pi.spaces.skype.
00000211`086738b0  63 6f 6d 00 00 00 0c 00-00 00 0d 63 6f 72 72 65  com........corre
00000211`086738c0  6c 61 74 69 6f 6e 49 64-00 00 00 0c 00 00 00 26  lationId.......&
00000211`086738d0  7b 42 41 33 44 33 42 31-43 2d 45 45 42 46 2d 34  {BA3D3B1C-EEBF-4
00000211`086738e0  33 46 32 2d 39 38 38 41-2d 38 35 45 31 45 31 34  3F2-988A-85E1E14
00000211`086738f0  35 46 32 36 33 7d 00 00-00 0c 00 00 00 06 63 6c  5F263}........cl
00000211`08673900  61 69 6d 73 00 00 00 0c-00 00 00 2e 7b 22 61 63  aims........{"ac
00000211`08673910  63 65 73 73 5f 74 6f 6b-65 6e 22 3a 7b 22 78 6d  cess_token":{"xm
00000211`08673920  73 5f 63 63 22 3a 7b 22-76 61 6c 75 65 73 22 3a  s_cc":{"values":
00000211`08673930  5b 22 43 50 31 22 5d 7d-7d 7d 00 00 00 0c 00 00  ["CP1"]}}}......
00000211`08673940  00 0e 57 54 52 65 71 5f-50 72 6f 76 69 64 65 72  ..WTReq_Provider
00000211`08673950  00 00 04 01 00 00 02 8a-00 00 00 01 00 00 00 0c  ................
 # Child-SP          RetAddr           Call Site
00 000000ea`8ccfd858 00007ffe`af56d334 combase!NdrExtpProxySendReceive [onecore\com\combase\ndr\ndrole\proxy.cxx @ 1979] 
01 000000ea`8ccfd860 00007ffe`b01008f8 RPCRT4!NdrpClientCall3+0x3a4
02 000000ea`8ccfdbd0 00007ffe`b017f542 combase!ObjectStublessClient+0x138 [onecore\com\combase\ndr\ndrole\amd64\stblsclt.cxx @ 369] 
03 000000ea`8ccfdf60 00007ffe`6972af35 combase!ObjectStubless+0x42 [onecore\com\combase\ndr\ndrole\amd64\stubless.asm @ 176] 
04 000000ea`8ccfdfb0 00007ffe`696ca498 AAD_Core!GetTokenBrokerOperationBase::GetTokenBrokerOperationBase+0x2565
05 000000ea`8ccfe950 00007ffe`696c59eb AAD_Core!AAD::Core::WebAccountProcessor::CreateBrokerOperation+0x1c58
06 000000ea`8ccff000 00007ffe`696c4568 AAD_Core!AAD::Core::WebAccountProcessor::ProcessBrokerRequest+0x28b
07 000000ea`8ccff2f0 00007ffe`696c3369 AAD_Core!AAD::Core::WebAccountProcessor::[AAD::Core::__IWebAccountProcessorPublicNonVirtuals]::ProcessActivation+0xd8
08 000000ea`8ccff380 00007ff6`3ccd9857 AAD_Core!AAD::Core::WebAccountProcessor::[AAD::Core::__IWebAccountProcessorPublicNonVirtuals]::__abi_AAD_Core___IWebAccountProcessorPublicNonVirtuals____abi_ProcessActivation+0x29
09 000000ea`8ccff3c0 00007ff6`3ccd9c04 Microsoft_AAD_BrokerPlugin!<lambda_fc6b3b1dceeaec3c356065efd40a9d34>::operator()+0x137
0a 000000ea`8ccff450 00007ffe`a5fbac30 Microsoft_AAD_BrokerPlugin!Windows::UI::Core::DispatchedHandler::[Windows::UI::Core::DispatchedHandler::__abi_IDelegate]::__abi_Windows_UI_Core_DispatchedHandler___abi_IDelegate____abi_Invoke+0x34
0b 000000ea`8ccff490 00007ffe`a5fbaa24 Windows_UI!Windows::UI::Core::CDispatcher::ProcessInvokeItem+0x1c0 [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 1263] 
0c 000000ea`8ccff550 00007ffe`a5fba680 Windows_UI!Windows::UI::Core::CDispatcher::ProcessMessage+0x224 [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 364] 
0d 000000ea`8ccff600 00007ffe`a5fba50b Windows_UI!Windows::UI::Core::CDispatcher::WaitAndProcessMessagesInternal+0xc0 [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 1950] 
0e 000000ea`8ccff710 00007ffe`a45630b0 Windows_UI!Windows::UI::Core::CDispatcher::ProcessEvents+0x7b [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 596] 
0f 000000ea`8ccff7c0 00007ffe`a456304f Windows_UI_Xaml!CJupiterWindow::RunCoreWindowMessageLoop+0x4c [onecoreuap\windows\dxaml\xcp\dxaml\lib\jupiterwindow.cpp @ 1234] 
combase!NdrExtpProxySendReceive:
00007ffe`b0105fc0 4053            push    rbx
```

### Second time

```
combase!NdrExtpProxySendReceive:
00007ffe`b0105fc0 4053            push    rbx
0:021> g
00000211`08676948  01 00 00 00 00 00 00 00-01 00 00 00 00 00 00 00  ................
00000211`08676958  23 04 00 00 00 00 00 00-78 74 00 00 00 07 8c 2b  #.......xt.....+
00000211`08676968  a0 b1 5f db ac 77 00 00-00 0c 00 00 00 17 50 52  .._..w........PR
00000211`08676978  65 71 75 65 73 74 5f 41-70 70 50 72 6f 63 65 73  equest_AppProces
00000211`08676988  73 4e 61 6d 65 00 00 00-0c 00 00 00 6e 43 3a 5c  sName.......nC:\
00000211`08676998  50 72 6f 67 72 61 6d 20-46 69 6c 65 73 20 28 78  Program Files (x
00000211`086769a8  38 36 29 5c 57 6f 72 6b-70 6c 61 63 65 5c 43 6f  86)\Workplace\Co
00000211`086769b8  6d 70 6f 6e 65 6e 74 73-5c 57 6f 72 6b 70 6c 61  mponents\Workpla
00000211`086769c8  63 65 43 6f 6e 74 61 69-6e 65 72 43 6f 6d 70 6f  ceContainerCompo
00000211`086769d8  6e 65 6e 74 5c 43 75 72-72 65 6e 74 5c 57 6f 72  nent\Current\Wor
00000211`086769e8  6b 70 6c 61 63 65 20 43-6f 6e 74 61 69 6e 65 72  kplace Container
00000211`086769f8  20 48 65 6c 70 65 72 2e-65 78 65 00 00 00 0c 00   Helper.exe.....
00000211`08676a08  00 00 0f 50 52 65 71 75-65 73 74 5f 41 70 70 50  ...PRequest_AppP
00000211`08676a18  66 6e 00 00 00 0c 00 00-00 0e 4e 4f 5f 41 50 50  fn........NO_APP
00000211`08676a28  4c 49 43 41 54 49 4f 4e-00 00 00 0c 00 00 00 10  LICATION........
00000211`08676a38  50 52 65 71 75 65 73 74-5f 52 65 71 75 65 73 74  PRequest_Request
00000211`08676a48  00 00 04 01 00 00 04 8a-00 00 00 01 00 00 00 0c  ................
00000211`08676a58  00 00 00 10 57 54 52 65-71 5f 50 72 6f 6d 70 74  ....WTReq_Prompt
00000211`08676a68  54 79 70 65 00 00 00 05-00 00 00 00 00 00 00 0c  Type............
00000211`08676a78  00 00 00 0e 57 54 52 65-71 5f 43 6c 69 65 6e 74  ....WTReq_Client
00000211`08676a88  49 64 00 00 00 0c 00 00-00 24 31 66 65 63 38 65  Id.......$1fec8e
00000211`08676a98  37 38 2d 62 63 65 34 2d-34 61 61 66 2d 61 62 31  78-bce4-4aaf-ab1
00000211`08676aa8  62 2d 35 34 35 31 63 63-33 38 37 32 36 34 00 00  b-5451cc387264..
00000211`08676ab8  00 0c 00 00 00 13 57 54-52 65 71 5f 43 6f 72 72  ......WTReq_Corr
00000211`08676ac8  65 6c 61 74 69 6f 6e 49-64 00 00 00 0c 00 00 00  elationId.......
00000211`08676ad8  26 7b 46 38 43 36 35 38-45 37 2d 43 30 30 34 2d  &{F8C658E7-C004-
00000211`08676ae8  34 39 46 42 2d 39 30 45-32 2d 33 32 37 33 43 45  49FB-90E2-3273CE
00000211`08676af8  34 37 33 36 34 32 7d 00-00 00 0c 00 00 00 11 57  473642}........W
00000211`08676b08  54 52 65 71 5f 50 72 6f-70 65 72 74 79 42 61 67  TReq_PropertyBag
00000211`08676b18  00 00 00 0d 8a 43 ed 9f-f4 e6 44 21 0c 82 86 29  .....C....D!...)
00000211`08676b28  ab 1d f9 ac 00 00 01 02-00 00 00 01 00 00 00 0c  ................
00000211`08676b38  00 00 00 09 4c 6f 67 69-6e 48 69 6e 74 00 00 00  ....LoginHint...
00000211`08676b48  0c 00 00 00 13 64 65 76-40 64 6c 70 2e 6f 73 33  .....dev@dlp.os3
00000211`08676b58  33 64 65 76 2e 63 6f 6d-00 00 00 0c 00 00 00 06  3dev.com........
00000211`08676b68  6d 73 61 66 65 64 00 00-00 0c 00 00 00 01 31 00  msafed........1.
00000211`08676b78  00 00 0c 00 00 00 08 72-65 73 6f 75 72 63 65 00  .......resource.
00000211`08676b88  00 00 0c 00 00 00 1c 68-74 74 70 73 3a 2f 2f 61  .......https://a
00000211`08676b98  70 69 2e 73 70 61 63 65-73 2e 73 6b 79 70 65 2e  pi.spaces.skype.
00000211`08676ba8  63 6f 6d 00 00 00 0c 00-00 00 0d 63 6f 72 72 65  com........corre
00000211`08676bb8  6c 61 74 69 6f 6e 49 64-00 00 00 0c 00 00 00 26  lationId.......&
00000211`08676bc8  7b 42 41 33 44 33 42 31-43 2d 45 45 42 46 2d 34  {BA3D3B1C-EEBF-4
00000211`08676bd8  33 46 32 2d 39 38 38 41-2d 38 35 45 31 45 31 34  3F2-988A-85E1E14
00000211`08676be8  35 46 32 36 33 7d 00 00-00 0c 00 00 00 06 63 6c  5F263}........cl
00000211`08676bf8  61 69 6d 73 00 00 00 0c-00 00 00 2e 7b 22 61 63  aims........{"ac
00000211`08676c08  63 65 73 73 5f 74 6f 6b-65 6e 22 3a 7b 22 78 6d  cess_token":{"xm
00000211`08676c18  73 5f 63 63 22 3a 7b 22-76 61 6c 75 65 73 22 3a  s_cc":{"values":
00000211`08676c28  5b 22 43 50 31 22 5d 7d-7d 7d 00 00 00 0c 00 00  ["CP1"]}}}......
00000211`08676c38  00 0e 57 54 52 65 71 5f-50 72 6f 76 69 64 65 72  ..WTReq_Provider
 # Child-SP          RetAddr           Call Site
00 000000ea`8c5ff388 00007ffe`af56d334 combase!NdrExtpProxySendReceive [onecore\com\combase\ndr\ndrole\proxy.cxx @ 1979] 
01 000000ea`8c5ff390 00007ffe`b01008f8 RPCRT4!NdrpClientCall3+0x3a4
02 000000ea`8c5ff700 00007ffe`b017f542 combase!ObjectStublessClient+0x138 [onecore\com\combase\ndr\ndrole\amd64\stblsclt.cxx @ 369] 
03 000000ea`8c5ffa90 00007ffe`b00ebf13 combase!ObjectStubless+0x42 [onecore\com\combase\ndr\ndrole\amd64\stubless.asm @ 176] 
04 000000ea`8c5ffae0 00007ffe`b00ebdb9 combase!OutParameterMarshalingServer::TryAcknowledgmentCall+0xd3 [onecore\com\combase\dcomrem\preventrundownbias.cpp @ 1310] 
05 000000ea`8c5ffb30 00007ffe`b1041729 combase!OutParameterMarshalingServer::AcknowledgeMarshalingSetsTimerCallback+0x69 [onecore\com\combase\dcomrem\preventrundownbias.cpp @ 1052] 
06 000000ea`8c5ffb60 00007ffe`b10231ba ntdll!TppTimerpExecuteCallback+0xa9
07 000000ea`8c5ffbb0 00007ffe`b0437614 ntdll!TppWorkerThread+0x68a
08 000000ea`8c5ffeb0 00007ffe`b10226b1 KERNEL32!BaseThreadInitThunk+0x14
09 000000ea`8c5ffee0 00000000`00000000 ntdll!RtlUserThreadStart+0x21
combase!NdrExtpProxySendReceive:
00007ffe`b0105fc0 4053            push    rbx
```

### Already changed

```
combase!NdrExtpProxySendReceive:
00007ffe`b0105fc0 4053            push    rbx
0:021> g
00000211`08673648  01 00 00 00 00 00 00 00-01 00 00 00 01 00 00 00  ................
00000211`08673658  e9 ae a7 94 b5 95 aa bd-69 6e 67 43 6f 6e 74 65  ........ingConte
00000211`08673668  78 74 00 00 00 07 8c 2b-a0 b1 5f db ac 77 00 00  xt.....+.._..w..
00000211`08673678  00 0c 00 00 00 17 50 52-65 71 75 65 73 74 5f 41  ......PRequest_A
00000211`08673688  70 70 50 72 6f 63 65 73-73 4e 61 6d 65 00 00 00  ppProcessName...
00000211`08673698  0c 00 00 00 6e 43 3a 5c-50 72 6f 67 72 61 6d 20  ....nC:\Program 
00000211`086736a8  46 69 6c 65 73 20 28 78-38 36 29 5c 57 6f 72 6b  Files (x86)\Work
00000211`086736b8  70 6c 61 63 65 5c 43 6f-6d 70 6f 6e 65 6e 74 73  place\Components
00000211`086736c8  5c 57 6f 72 6b 70 6c 61-63 65 43 6f 6e 74 61 69  \WorkplaceContai
00000211`086736d8  6e 65 72 43 6f 6d 70 6f-6e 65 6e 74 5c 43 75 72  nerComponent\Cur
00000211`086736e8  72 65 6e 74 5c 57 6f 72-6b 70 6c 61 63 65 20 43  rent\Workplace C
00000211`086736f8  6f 6e 74 61 69 6e 65 72-20 48 65 6c 70 65 72 2e  ontainer Helper.
00000211`08673708  65 78 65 00 00 00 0c 00-00 00 0f 50 52 65 71 75  exe........PRequ
00000211`08673718  65 73 74 5f 41 70 70 50-66 6e 00 00 00 0c 00 00  est_AppPfn......
00000211`08673728  00 0e 4e 4f 5f 41 50 50-4c 49 43 41 54 49 4f 4e  ..NO_APPLICATION
00000211`08673738  00 00 00 0c 00 00 00 10-50 52 65 71 75 65 73 74  ........PRequest
00000211`08673748  5f 52 65 71 75 65 73 74-00 00 04 01 00 00 04 8a  _Request........
00000211`08673758  00 00 00 01 00 00 00 0c-00 00 00 10 57 54 52 65  ............WTRe
00000211`08673768  71 5f 50 72 6f 6d 70 74-54 79 70 65 00 00 00 05  q_PromptType....
00000211`08673778  00 00 00 00 00 00 00 0c-00 00 00 0e 57 54 52 65  ............WTRe
00000211`08673788  71 5f 43 6c 69 65 6e 74-49 64 00 00 00 0c 00 00  q_ClientId......
00000211`08673798  00 24 31 66 65 63 38 65-37 38 2d 62 63 65 34 2d  .$1fec8e78-bce4-
00000211`086737a8  34 61 61 66 2d 61 62 31-62 2d 35 34 35 31 63 63  4aaf-ab1b-5451cc
00000211`086737b8  33 38 37 32 36 34 00 00-00 0c 00 00 00 13 57 54  387264........WT
00000211`086737c8  52 65 71 5f 43 6f 72 72-65 6c 61 74 69 6f 6e 49  Req_CorrelationI
00000211`086737d8  64 00 00 00 0c 00 00 00-26 7b 46 38 43 36 35 38  d.......&{F8C658
00000211`086737e8  45 37 2d 43 30 30 34 2d-34 39 46 42 2d 39 30 45  E7-C004-49FB-90E
00000211`086737f8  32 2d 33 32 37 33 43 45-34 37 33 36 34 32 7d 00  2-3273CE473642}.
00000211`08673808  00 00 0c 00 00 00 11 57-54 52 65 71 5f 50 72 6f  .......WTReq_Pro
00000211`08673818  70 65 72 74 79 42 61 67-00 00 00 0d 8a 43 ed 9f  pertyBag.....C..
00000211`08673828  f4 e6 44 21 0c 82 86 29-ab 1d f9 ac 00 00 01 02  ..D!...)........
00000211`08673838  00 00 00 01 00 00 00 0c-00 00 00 09 4c 6f 67 69  ............Logi
00000211`08673848  6e 48 69 6e 74 00 00 00-0c 00 00 00 13 64 65 76  nHint........dev
00000211`08673858  40 64 6c 70 2e 6f 73 33-32 64 65 76 2e 63 6f 6d  @dlp.os32dev.com
00000211`08673868  00 00 00 0c 00 00 00 06-6d 73 61 66 65 64 00 00  ........msafed..
00000211`08673878  00 0c 00 00 00 01 31 00-00 00 0c 00 00 00 08 72  ......1........r
00000211`08673888  65 73 6f 75 72 63 65 00-00 00 0c 00 00 00 1c 68  esource........h
00000211`08673898  74 74 70 73 3a 2f 2f 61-70 69 2e 73 70 61 63 65  ttps://api.space
00000211`086738a8  73 2e 73 6b 79 70 65 2e-63 6f 6d 00 00 00 0c 00  s.skype.com.....
00000211`086738b8  00 00 0d 63 6f 72 72 65-6c 61 74 69 6f 6e 49 64  ...correlationId
00000211`086738c8  00 00 00 0c 00 00 00 26-7b 42 41 33 44 33 42 31  .......&{BA3D3B1
00000211`086738d8  43 2d 45 45 42 46 2d 34-33 46 32 2d 39 38 38 41  C-EEBF-43F2-988A
00000211`086738e8  2d 38 35 45 31 45 31 34-35 46 32 36 33 7d 00 00  -85E1E145F263}..
00000211`086738f8  00 0c 00 00 00 06 63 6c-61 69 6d 73 00 00 00 0c  ......claims....
00000211`08673908  00 00 00 2e 7b 22 61 63-63 65 73 73 5f 74 6f 6b  ....{"access_tok
00000211`08673918  65 6e 22 3a 7b 22 78 6d-73 5f 63 63 22 3a 7b 22  en":{"xms_cc":{"
00000211`08673928  76 61 6c 75 65 73 22 3a-5b 22 43 50 31 22 5d 7d  values":["CP1"]}
00000211`08673938  7d 7d 00 00 00 0c 00 00-00 0e 57 54 52 65 71 5f  }}........WTReq_
 # Child-SP          RetAddr           Call Site
00 000000ea`8e83e998 00007ffe`af56d334 combase!NdrExtpProxySendReceive [onecore\com\combase\ndr\ndrole\proxy.cxx @ 1979] 
01 000000ea`8e83e9a0 00007ffe`b01008f8 RPCRT4!NdrpClientCall3+0x3a4
02 000000ea`8e83ed10 00007ffe`b017f542 combase!ObjectStublessClient+0x138 [onecore\com\combase\ndr\ndrole\amd64\stblsclt.cxx @ 369] 
03 000000ea`8e83f0a0 00007ffe`69730629 combase!ObjectStubless+0x42 [onecore\com\combase\ndr\ndrole\amd64\stubless.asm @ 176] 
04 000000ea`8e83f0f0 00007ffe`6973a69a AAD_Core!<lambda_1cfa30568eaa3414fbd7701bceda818a>::operator()+0x99
05 000000ea`8e83f1b0 00007ffe`6973a461 AAD_Core!Concurrency::task<unsigned char>::_InitialTaskHandle<void,<lambda_1cfa30568eaa3414fbd7701bceda818a>,Concurrency::details::_TypeSelectorNoAsync>::_Init+0x15a
06 000000ea`8e83f280 00007ffe`696d5901 AAD_Core!Concurrency::details::_PPLTaskHandle<unsigned char,Concurrency::task<unsigned char>::_InitialTaskHandle<void,<lambda_1cfa30568eaa3414fbd7701bceda818a>,Concurrency::details::_TypeSelectorNoAsync>,pplx::details::_UnrealizedChore>::operator()+0x81
07 000000ea`8e83f2f0 00007ffe`696f3a34 AAD_Core!Custom::_RunChoreBridge+0x21
08 000000ea`8e83f330 00007ffe`a15e435a AAD_Core!Windows::System::Threading::WorkItemHandler::[Windows::System::Threading::WorkItemHandler::__abi_IDelegate]::__abi_Windows_System_Threading_WorkItemHandler___abi_IDelegate____abi_Invoke+0x34
09 000000ea`8e83f370 00007ffe`a15e4250 threadpoolwinrt!Windows::System::Threading::CThreadPoolWorkItem::CommonWorkCallback+0xaa
0a 000000ea`8e83f3e0 00007ffe`b1032270 threadpoolwinrt!Windows::System::Threading::CThreadPoolWorkItem::BatchedCallback+0x90
0b 000000ea`8e83f420 00007ffe`b10231ba ntdll!TppWorkpExecuteCallback+0x130
0c 000000ea`8e83f470 00007ffe`b0437614 ntdll!TppWorkerThread+0x68a
0d 000000ea`8e83f770 00007ffe`b10226b1 KERNEL32!BaseThreadInitThunk+0x14
0e 000000ea`8e83f7a0 00000000`00000000 ntdll!RtlUserThreadStart+0x21
combase!NdrExtpProxySendReceive:
00007ffe`b0105fc0 4053            push    rbx
```

### Edge unaltered

```
combase!NdrExtpProxySendReceive:
00007ffe`b0105fc0 4053            push    rbx
0:048> g
00000219`18e05458  55 73 65 72 58 19 ff ff-57 64 74 50 72 03 00 00  UserX...WdtPr...
00000219`18e05468  68 00 74 00 74 00 70 00-73 00 3a 00 2f 00 2f 00  h.t.t.p.s.:././.
00000219`18e05478  6c 00 6f 00 67 00 69 00-6e 00 2e 00 6d 00 69 00  l.o.g.i.n...m.i.
00000219`18e05488  63 00 72 00 6f 00 73 00-6f 00 66 00 74 00 6f 00  c.r.o.s.o.f.t.o.
00000219`18e05498  6e 00 6c 00 69 00 6e 00-65 00 2e 00 63 00 6f 00  n.l.i.n.e...c.o.
00000219`18e054a8  6d 00 2f 00 63 00 6f 00-6d 00 6d 00 6f 00 6e 00  m./.c.o.m.m.o.n.
00000219`18e054b8  2f 00 6f 00 61 00 75 00-74 00 68 00 32 00 2f 00  /.o.a.u.t.h.2./.
00000219`18e054c8  61 00 75 00 74 00 68 00-6f 00 72 00 69 00 7a 00  a.u.t.h.o.r.i.z.
00000219`18e054d8  65 00 3f 00 72 00 65 00-73 00 70 00 6f 00 6e 00  e.?.r.e.s.p.o.n.
00000219`18e054e8  73 00 65 00 5f 00 74 00-79 00 70 00 65 00 3d 00  s.e._.t.y.p.e.=.
00000219`18e054f8  63 00 6f 00 64 00 65 00-26 00 63 00 6c 00 69 00  c.o.d.e.&.c.l.i.
00000219`18e05508  65 00 6e 00 74 00 5f 00-69 00 64 00 3d 00 31 00  e.n.t._.i.d.=.1.
00000219`18e05518  66 00 65 00 63 00 38 00-65 00 37 00 38 00 2d 00  f.e.c.8.e.7.8.-.
00000219`18e05528  62 00 63 00 65 00 34 00-2d 00 34 00 61 00 61 00  b.c.e.4.-.4.a.a.
00000219`18e05538  66 00 2d 00 61 00 62 00-31 00 62 00 2d 00 35 00  f.-.a.b.1.b.-.5.
00000219`18e05548  34 00 35 00 31 00 63 00-63 00 33 00 38 00 37 00  4.5.1.c.c.3.8.7.
00000219`18e05558  32 00 36 00 34 00 26 00-72 00 65 00 64 00 69 00  2.6.4.&.r.e.d.i.
00000219`18e05568  72 00 65 00 63 00 74 00-5f 00 75 00 72 00 69 00  r.e.c.t._.u.r.i.
00000219`18e05578  3d 00 6d 00 73 00 2d 00-61 00 70 00 70 00 78 00  =.m.s.-.a.p.p.x.
00000219`18e05588  2d 00 77 00 65 00 62 00-25 00 33 00 61 00 25 00  -.w.e.b.%.3.a.%.
00000219`18e05598  32 00 66 00 25 00 32 00-66 00 4d 00 69 00 63 00  2.f.%.2.f.M.i.c.
00000219`18e055a8  72 00 6f 00 73 00 6f 00-66 00 74 00 2e 00 41 00  r.o.s.o.f.t...A.
00000219`18e055b8  41 00 44 00 2e 00 42 00-72 00 6f 00 6b 00 65 00  A.D...B.r.o.k.e.
00000219`18e055c8  72 00 50 00 6c 00 75 00-67 00 69 00 6e 00 25 00  r.P.l.u.g.i.n.%.
00000219`18e055d8  32 00 66 00 31 00 66 00-65 00 63 00 38 00 65 00  2.f.1.f.e.c.8.e.
00000219`18e055e8  37 00 38 00 2d 00 62 00-63 00 65 00 34 00 2d 00  7.8.-.b.c.e.4.-.
00000219`18e055f8  34 00 61 00 61 00 66 00-2d 00 61 00 62 00 31 00  4.a.a.f.-.a.b.1.
00000219`18e05608  62 00 2d 00 35 00 34 00-35 00 31 00 63 00 63 00  b.-.5.4.5.1.c.c.
00000219`18e05618  33 00 38 00 37 00 32 00-36 00 34 00 26 00 72 00  3.8.7.2.6.4.&.r.
00000219`18e05628  65 00 73 00 6f 00 75 00-72 00 63 00 65 00 3d 00  e.s.o.u.r.c.e.=.
00000219`18e05638  68 00 74 00 74 00 70 00-73 00 25 00 33 00 61 00  h.t.t.p.s.%.3.a.
00000219`18e05648  25 00 32 00 66 00 25 00-32 00 66 00 61 00 70 00  %.2.f.%.2.f.a.p.
00000219`18e05658  69 00 2e 00 73 00 70 00-61 00 63 00 65 00 73 00  i...s.p.a.c.e.s.
00000219`18e05668  2e 00 73 00 6b 00 79 00-70 00 65 00 2e 00 63 00  ..s.k.y.p.e...c.
00000219`18e05678  6f 00 6d 00 26 00 6c 00-6f 00 67 00 69 00 6e 00  o.m.&.l.o.g.i.n.
00000219`18e05688  5f 00 68 00 69 00 6e 00-74 00 3d 00 64 00 65 00  _.h.i.n.t.=.d.e.
00000219`18e05698  76 00 25 00 34 00 30 00-64 00 6c 00 70 00 2e 00  v.%.4.0.d.l.p...
00000219`18e056a8  6f 00 73 00 33 00 33 00-64 00 65 00 76 00 2e 00  o.s.3.3.d.e.v...
00000219`18e056b8  63 00 6f 00 6d 00 26 00-72 00 65 00 73 00 70 00  c.o.m.&.r.e.s.p.
00000219`18e056c8  6f 00 6e 00 73 00 65 00-5f 00 6d 00 6f 00 64 00  o.n.s.e._.m.o.d.
00000219`18e056d8  65 00 3d 00 66 00 6f 00-72 00 6d 00 5f 00 70 00  e.=.f.o.r.m._.p.
00000219`18e056e8  6f 00 73 00 74 00 26 00-63 00 6c 00 61 00 69 00  o.s.t.&.c.l.a.i.
00000219`18e056f8  6d 00 73 00 3d 00 25 00-37 00 62 00 25 00 32 00  m.s.=.%.7.b.%.2.
00000219`18e05708  32 00 61 00 63 00 63 00-65 00 73 00 73 00 5f 00  2.a.c.c.e.s.s._.
00000219`18e05718  74 00 6f 00 6b 00 65 00-6e 00 25 00 32 00 32 00  t.o.k.e.n.%.2.2.
00000219`18e05728  25 00 33 00 61 00 25 00-37 00 62 00 25 00 32 00  %.3.a.%.7.b.%.2.
00000219`18e05738  32 00 78 00 6d 00 73 00-5f 00 63 00 63 00 25 00  2.x.m.s._.c.c.%.
00000219`18e05748  32 00 32 00 25 00 33 00-61 00 25 00 37 00 62 00  2.2.%.3.a.%.7.b.
 # Child-SP          RetAddr           Call Site
00 000000ea`8e33ecf8 00007ffe`af56d334 combase!NdrExtpProxySendReceive [onecore\com\combase\ndr\ndrole\proxy.cxx @ 1979] 
01 000000ea`8e33ed00 00007ffe`b01008f8 RPCRT4!NdrpClientCall3+0x3a4
02 000000ea`8e33f070 00007ffe`b017f542 combase!ObjectStublessClient+0x138 [onecore\com\combase\ndr\ndrole\amd64\stblsclt.cxx @ 369] 
03 000000ea`8e33f400 00007ffe`8af60d7a combase!ObjectStubless+0x42 [onecore\com\combase\ndr\ndrole\amd64\stubless.asm @ 176] 
04 000000ea`8e33f450 00007ffe`8af608e2 edgehtml!<lambda_dd77ed9ffaafa107120cb9211ea1a9e6>::operator()+0xf2
05 000000ea`8e33f520 00007ffe`8af607eb edgehtml!`anonymous namespace'::CallUriReputationService+0xe6
06 000000ea`8e33f640 00007ffe`8af604d1 edgehtml!<lambda_f4f1405349c155f2742693f03f9f5b6b>::operator()+0xb7
07 000000ea`8e33f6f0 00007ffe`b103fce3 edgehtml!<lambda_e6e029e7465eceb5551b8a57369a7c73>::<lambda_invoker_cdecl>+0x31
08 000000ea`8e33f720 00007ffe`b10231ba ntdll!RtlpTpWorkCallback+0x173
09 000000ea`8e33f800 00007ffe`b0437614 ntdll!TppWorkerThread+0x68a
0a 000000ea`8e33fb00 00007ffe`b10226b1 KERNEL32!BaseThreadInitThunk+0x14
0b 000000ea`8e33fb30 00000000`00000000 ntdll!RtlUserThreadStart+0x21
combase!NdrExtpProxySendReceive:
00007ffe`b0105fc0 4053            push    rbx
```

Trying to

```
bp AAD_Core!AAD::Core::WebAccountProcessor::ProcessBrokerRequest
```

IDA:

```
AAD::Core::WebAccountProcessor::CreateBrokerOperation(Windows::Security::Authentication::Web::Provider::IWebAccountProviderOperation *,AAD::Core::WebAccountProcessor::ActivationType)	.text	0000000180018840	000038AE	000006A8	00000020	R	.	.	.	.	.	B	.	.
AAD::Core::WebAccountProcessor::ProcessBrokerRequest(Windows::ApplicationModel::Activation::IActivatedEventArgs *)	.text	0000000180015760	00000F02	000005E0		R	.	.	.	.	.	.	.	.
```

Just an interface. It would be better a function with raw data. Trying to see:

```
bp Windows_UI!Windows::UI::Core::CDispatcher::ProcessMessage
```

It is not the message loop, but a handler for a dispatched message. Works that way: Windows_UI!Windows::UI::Core::CDispatcher::ProcessMessage calls Windows_UI!Windows::UI::Core::CDispatcher::ProcessInvokeItem and then a Microsoft_AAD_BrokerPlugin!Windows::UI::Core::DispatchedHandler is called and in the stack frames after that there is a marshal where login hint is present.

Need to disasm parameters to discover where is login hint. Probably is received via message loop or ALPC equivalent to UWP app.


Tried to change login hint in AAD Broker at RPC call point, but a copy was already made. Trying to find where the original login hint comes from, possibly message loop in the app activation, but need to lookup to parameters (disasm sessions).

90231703326300W3


= Where the original login hint (or client id) arrives into AAD Broker (to continue)
:date: 2023-09-28
:tags: tag_venn tag_reversing

Discovered that BackgroundTaskHost is first receiving login hint along with the other information about token acquire. It outputs to the debugger the information bellow and it is the first process into the app container to be started (before AAD Broker is created). Please note that this is a sample before entering login hint. After that another BackgroundTaskHost process is initiated with login hint, client id, etc, filled.

```
ModLoad: 00007ff8`2b970000 00007ff8`2bd94000   C:\Windows\SystemApps\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\AAD.Core.dll
...
ModLoad: 00007ff8`504f0000 00007ff8`5060d000   C:\Windows\System32\Windows.Security.Authentication.Web.Core.dll
onecoreuap\shell\coreapplication\application\lib\coreapplication.cpp(1596)\twinapi.appcore.dll!00007FF85FA1656F: (caller: 00007FF85F9A4BA1) ReturnHr(1) tid(1bcc) 80010108 The object invoked has disconnected from its clients.
    CallContext:[\AppRunOrActivateView\ActivateBackground] 
onecoreuap\shell\coreapplication\application\lib\coreapplication.cpp(1596)\twinapi.appcore.dll!00007FF85FA1656F: (caller: 00007FF85F9A4BA1) ReturnHr(2) tid(1d18) 80010108 The object invoked has disconnected from its clients.
    CallContext:[\AppRunOrActivateView\ActivateBackground] 
(1960.1664): Unknown exception - code 80010108 (first chance)
onecoreuap\shell\coreapplication\application\lib\coreapplication.cpp(1596)\twinapi.appcore.dll!00007FF85FA1656F: (caller: 00007FF85F9A4BA1) ReturnHr(3) tid(1664) 80010108 The object invoked has disconnected from its clients.
    CallContext:[\AppRunOrActivateView\ActivateBackground] 
...
ModLoad: 00007ff8`54400000 00007ff8`54451000   C:\Windows\System32\vaultcli.dll
Code: 0x4aa500f7 (level=2)
Message: Token broker activated.
Details: UTC time: 09/28/2023 23:51:11 (UTC)
Logged at TokenBackground.cpp, line: 38, method: AAD::Core::TokenBackground::Run.
Code: 0x4aa5001a (level=2)
Message: Token broker operation started.
Details: Operation name: GetTokenSilently
Logged at WebAccountProcessor.cpp, line: 524, method: AAD::Core::WebAccountProcessor::CreateBrokerOperation.
Code: 0x4aa50119 (level=2)
Message: Token broker operation request parameters.
Details: Parameter(s): correlationId: b21ff9b8-fd16-4fae-9f18-f3059810dd76
webAccountCount: 0
client: 1b3c667f-cde3-4090-b60b-3d2abd0117f0
authority: organizations
resource: https://arc.msn.com/v4
redirectUri: ms-appx-web://Microsoft.AAD.BrokerPlugin/S-1-15-2-350187224-1905355452-1037786396-3028148496-2624191407-3283318427-1255436723
scope: (null)
LoginHint: (null)
discoverHome: false
domain_hint: (null)
fallback_domain: (null)
certificateUsage: (null)
certificateUIName: (null)
certificateUIDescription: (null)
ExtendedLifeTimeEnabled: false
UserPictureEnabled: false
prompt: 
msafed: (null)
validateAuthority: true
minimum_token_lifetime: 0
transferTokenRequest: false

Request Param(s):

Request Properties:
resource: https://arc.msn.com/v4

Logged at GetTokenBrokerOperationBase.cpp, line: 404, method: GetTokenBrokerOperationBase::LogRequestParameters.
ModLoad: 00007ff8`57560000 00007ff8`57574000   C:\Windows\System32\threadpoolwinrt.dll
```

It is possible both BackgroundTaskHost and AAD Broker are receiving data from WAM of BackgroundTaskHost receives first and then sends to AAD Broker. Anyway, I am focusing now in BackgroundTaskHost startup. The CallContext text in debug messages ("CallContext:[\AppRunOrActivateView\ActivateBackground]") seems to me a hint of the method of passing arguments inside app container or the activation of a background task. Need to study first.

TL;DR Discovered BackgroundTaskHost is receiving login hint and client id based on debug messages. Since it is the first process to start I am debugging it first to know if one pass this information to another. In some debug messages I saw the string "CallContext:[\AppRunOrActivateView\ActivateBackground]", what seems to me a method used to pass arguments similar to dotnet remoting. I haven't found anything yet, but studying to see if we could use some class that has this info. That would be awesome, because CallContext (in dotnet at least) allows to make remote calls in a documented way.

Mais anotações de Windows Internals:

> In all these cases, the server will run in the context of one of the clients that sent a message but may be analyzing a message sent by a different client. The server should distinguish this situation (since the Client ID of the sender is encoded in the PORT_HEADER of the message) and attach/analyze the state of the correct sender (which now has a potential context switch cost).

> ALPC provides more than simple message passing; it also enables specific contextual information to be added to each message and have the kernel track the validity, lifetime, and implementation of that information. Users of ALPC can assign their own custom context information as well. Whether it’s system-managed or user-managed, ALPC calls this data attributes.

> In the ALPC model, messages are blobs, for example, and their constructor generates a message ID, which is itself a handle into ALPC’s handle table.

> ALPC also allows both clients and servers to atomically and uniquely identify the thread and process responsible for each message. It also supports the full Windows impersonation model through the NtAlpcImpersonateClientThread API. Other APIs give an ALPC server the ability to query the SIDs associated with all connected clients and to query the LUID (locally unique identifier) of the client’s security token

> Recall that ALPC provides two mechanisms for clients and servers to communicate: requests, which are bidirectional, requiring a response, and datagrams, which are unidirectional and can never be synchronously replied to.

> ALPC now captures it into a Direct Event attribute, and the message is placed on a Direct Message Queue instead of the regular Message Queue. The ALPC subsystem will signal the message upon delivery, efficiently in kernel mode, avoiding an extra hop and context-switch.

> On checked builds of the kernel, ALPC messages can be logged.

> On retail systems, IT administrators and troubleshooters can enable the ALPC events of the NT kernel logger to monitor ALPC messages,

> (...) events do not include payload data, but they do contain connection, disconnection, and send/receive and wait/unblock information. Finally, even on retail systems, certain !alpc commands obtain information on ALPC ports and messages.

> EXPERIMENT: Dumping a connection port In this experiment, you use the CSRSS API port for Windows processes running in Session 1, which is the typical interactive session for the console user. Whenever a Windows application launches, it connects to CSRSS’s API port in the appropriate session. Start by obtaining a pointer to the connection port with the !object command: Click here to view code image lkd> !object \Sessions\1\Windows\ApiPort Object: ffff898f172b2df0  Type: (ffff898f032f9da0) ALPC Port     ObjectHeader: ffff898f172b2dc0 (new version)     HandleCount: 1  PointerCount: 7898     Directory Object: ffffc704b10d9ce0  Name: ApiPort Dump information on the port object itself with !alpc /p. This will confirm, for example, that CSRSS is the owner: Click here to view code image lkd> !alpc /P ffff898f172b2df0 Port ffff898f172b2df0   Type                      : ALPC_CONNECTION_PORT   CommunicationInfo         : ffffc704adf5d410     ConnectionPort          : ffff898f172b2df0 (ApiPort), Connections     ClientCommunicationPort : 0000000000000000     ServerCommunicationPort : 0000000000000000   OwnerProcess              : ffff898f17481140 (csrss.exe), Connections   SequenceNo                : 0x0023BE45 (2342469)   CompletionPort            : 0000000000000000   CompletionList            : 0000000000000000   ConnectionPending         : No   ConnectionRefused         : No   Disconnected              : No   Closed                    : No   FlushOnClose              : Yes   ReturnExtendedInfo        : No   Waitable                  : No   Security                  : Static   Wow64CompletionList       : No   5 thread(s) are waiting on the port:     THREAD ffff898f3353b080  Cid 0288.2538  Teb: 00000090bce88000     Win32Thread: ffff898f340cde60 WAIT     THREAD ffff898f313aa080  Cid 0288.19ac  Teb: 00000090bcf0e000     Win32Thread: ffff898f35584e40 WAIT     THREAD ffff898f191c3080  Cid 0288.060c  Teb: 00000090bcff1000     Win32Thread: ffff898f17c5f570 WAIT     THREAD ffff898f174130c0  Cid 0288.0298  Teb: 00000090bcfd7000     Win32Thread: ffff898f173f6ef0 WAIT     THREAD ffff898f1b5e2080  Cid 0288.0590  Teb: 00000090bcfe9000     Win32Thread: ffff898f173f82a0 WAIT     THREAD ffff898f3353b080  Cid 0288.2538  Teb: 00000090bce88000     Win32Thread: ffff898f340cde60 WAIT   Main queue is empty.   Direct message queue is empty.   Large message queue is empty.   Pending queue is empty.   Canceled queue is empty. You can see what clients are connected to the port, which includes all Windows processes running in the session, with the undocumented !alpc /lpc command, or, with a newer version of WinDbg, you can simply click the Connections link next to the ApiPort name. You will also see the server and client communication ports associated with each connection and any pending messages on any of the queues: Click here to view code image lkd> !alpc /lpc ffff898f082cbdf0 ffff898f082cbdf0(’ApiPort’) 0, 131 connections         ffff898f0b971940 0 ->ffff898F0868a680 0 ffff898f17479080(’wininit.exe’)         ffff898f1741fdd0 0 ->ffff898f1742add0 0 ffff898f174ec240(’services.exe’)         ffff898f1740cdd0 0 ->ffff898f17417dd0 0 ffff898f174da200(’lsass.exe’)         ffff898f08272900 0 ->ffff898f08272dc0 0 ffff898f1753b400(’svchost.exe’)         ffff898f08a702d0 0 ->ffff898f084d5980 0 ffff898f1753e3c0(’svchost.exe’)         ffff898f081a3dc0 0 ->ffff898f08a70070 0 ffff898f175402c0(’fontdrvhost.ex’)         ffff898F086dcde0 0 ->ffff898f17502de0 0 ffff898f17588440(’svchost.exe’)         ffff898f1757abe0 0 ->ffff898f1757b980 0 ffff898f17c1a400(’svchost.exe’) Note that if you have other sessions, you can repeat this experiment on those sessions also (as well as with session 0, the system session). You will eventually get a list of all the Windows processes on your machine.

> Anotei essa ferramenta, wnfdump, que achei no github do ionescu, mas não funciona tão bem. Está desatualizada. E o comando !wnf do WinDbg também não está funcionando.


= Where the original login hint (continue)
:date: 2023-09-29
:tags: tag_venn tag_reversing

```
bm Windows_Security_Authentication_Web_Core!*TrySilent
bm Windows_Security_Authentication_Web_Core!*TryUi
```

The method Windows_Security_Authentication_Web_Core!*TrySilent also communicates to BackgroundTaskHost LoginHint, and like the name implies it does not show any AAD Broker login window. It is just a check to see if there is already credentials available for this login. Use the output debug event to trace BackgroundTaskHost and AAD Broker communication.

```
sxe out
```

BackgroundTaskHost receives an [IBackgroundTask] instance with the information about acquiring token.

```
0:005> g
Details: Parameter(s): correlationId: 1ae2b735-9d46-43a3-aa16-cf50f1e330fa
webAccountCount: 0
client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264
authority: https://login.microsoftonline.com/common
resource: https://api.spaces.skype.com
redirectUri: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
scope: (null)
LoginHint: (null)
discoverHome: false
domain_hint: (null)
fallback_domain: (null)
certificateUsage: (null)
certificateUIName: (null)
certificateUIDescription: (null)
ExtendedLifeTimeEnabled: false
UserPictureEnabled: false
prompt: 
msafed: 1
validateAuthority: true
minimum_token_lifetime: 0
transferTokenRequest: false

Request Param(s):
claims: (not empty)

Request Properties:
claims: (not empty)
correlationId: {1AE2B735-9D46-43A3-AA16-CF50F1E330FA}
msafed: 1
resource: https://api.spaces.skype.com

Logged at GetTokenBrokerOperationBase.cpp, line: 404, method: GetTokenBrokerOperationBase::LogRequestParameters.
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:005> k
 # Child-SP          RetAddr           Call Site
00 0000005c`d1ffd8b0 00007ff8`6842a0a7 KERNELBASE!RaiseException+0x69
01 0000005c`d1ffd990 00007ff8`369b0456 KERNELBASE!OutputDebugStringW+0xb7
02 0000005c`d1ffda00 00007ff8`369d6579 AAD_Core!`AAD::Core::Module::FirstInit'::`2'::BrokerLog::Message+0xc6
03 0000005c`d1ffdaa0 00007ff8`369cea68 AAD_Core!CallbackLogger::Log+0x39
04 0000005c`d1ffdae0 00007ff8`369ce541 AAD_Core!Log::NotifyLoggers+0x58
05 0000005c`d1ffdb50 00007ff8`36a1d988 AAD_Core!Log::NotifyInternal+0x491
06 0000005c`d1ffdce0 00007ff8`36a1c0f6 AAD_Core!GetTokenBrokerOperationBase::LogRequestParameters+0x1478
07 0000005c`d1ffe000 00007ff8`369b9f88 AAD_Core!GetTokenBrokerOperationBase::GetTokenBrokerOperationBase+0x3726
08 0000005c`d1ffe9a0 00007ff8`369b6b65 AAD_Core!AAD::Core::WebAccountProcessor::CreateBrokerOperation+0x1748
09 0000005c`d1fff050 00007ff8`369b29b2 AAD_Core!AAD::Core::WebAccountProcessor::[AAD::Core::__IWebAccountProcessorPublicNonVirtuals]::ProcessBrokerBackgroundRequest+0x215
0a 0000005c`d1fff3f0 00007ff8`369b2e42 AAD_Core!AAD::Core::TokenBackground::[Windows::ApplicationModel::Background::IBackgroundTask]::Run+0x312
0b 0000005c`d1fff6d0 00007ff8`4c9153b7 AAD_Core!AAD::Core::TokenBackground::[Windows::ApplicationModel::Background::IBackgroundTask]::__abi_Windows_ApplicationModel_Background_IBackgroundTask____abi_Run+0x12
0c 0000005c`d1fff710 00007ff8`4c9128bb biwinrt!Windows::ApplicationModel::Background::CBackgroundTaskInstance::RunInternal+0x20b [onecoreuap\base\background\bi\winrt\impl\actbwii.cpp @ 1010] 
0d 0000005c`d1fff830 00007ff8`5f9db763 biwinrt!Windows::ApplicationModel::Background::CBackgroundTaskInstance::Run+0x2b [onecoreuap\base\background\bi\winrt\impl\actbwii.cpp @ 823] 
0e 0000005c`d1fff860 00007ff8`5f9db69c twinapi_appcore!Windows::ApplicationModel::Core::BackgroundTaskWrapper::Run+0x6f
0f 0000005c`d1fff8c0 00007ff8`6a932270 twinapi_appcore!Windows::ApplicationModel::Core::BackgroundTaskWrapper::ThreadProc+0x7c
10 0000005c`d1fffa50 00007ff8`6a9231ba ntdll!TppWorkpExecuteCallback+0x130
11 0000005c`d1fffaa0 00007ff8`6a747614 ntdll!TppWorkerThread+0x68a
```

Lsa is consulted:

```
Message: No data for the primary user.
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:009> k
 # Child-SP          RetAddr           Call Site
00 0000005c`d21fe8d0 00007ff8`6842a0a7 KERNELBASE!RaiseException+0x69
01 0000005c`d21fe9b0 00007ff8`369b0431 KERNELBASE!OutputDebugStringW+0xb7
02 0000005c`d21fea20 00007ff8`369d6579 AAD_Core!`AAD::Core::Module::FirstInit'::`2'::BrokerLog::Message+0xa1
03 0000005c`d21feac0 00007ff8`369cea68 AAD_Core!CallbackLogger::Log+0x39
04 0000005c`d21feb00 00007ff8`369ce541 AAD_Core!Log::NotifyLoggers+0x58
05 0000005c`d21feb70 00007ff8`36aa93d7 AAD_Core!Log::NotifyInternal+0x491
06 0000005c`d21fed00 00007ff8`36aa1a60 AAD_Core!Log::ReportInfo<long,long,wchar_t const * __ptr64>+0x77
07 0000005c`d21fed70 00007ff8`36aa0fe1 AAD_Core!DefaultUser::TryOpenLSAImpl+0x4e0
08 0000005c`d21ff040 00007ff8`36a3d308 AAD_Core!DefaultUser::TryOpenImpl+0x141
09 0000005c`d21ff130 00007ff8`36a71575 AAD_Core!<lambda_171eac1faafeb605ea4172af888bc06f>::operator()+0x2d8
0a 0000005c`d21ff390 00007ff8`36a70fc1 AAD_Core!Concurrency::task<ADALRT::AuthorizationClient ^>::_InitialTaskHandle<ADALRT::AuthorizationClient ^,<lambda_171eac1faafeb605ea4172af888bc06f>,Concurrency::details::_TypeSelectorAsyncTask>::_Init+0x25
0b 0000005c`d21ff3e0 00007ff8`369c5901 AAD_Core!Concurrency::details::_PPLTaskHandle<ADALRT::AuthorizationClient ^,Concurrency::task<ADALRT::AuthorizationClient ^>::_InitialTaskHandle<ADALRT::AuthorizationClient ^,<lambda_171eac1faafeb605ea4172af888bc06f>,Concurrency::details::_TypeSelectorAsyncTask>,pplx::details::_UnrealizedChore>::operator()+0x81
0c 0000005c`d21ff450 00007ff8`369e3a34 AAD_Core!Custom::_RunChoreBridge+0x21
0d 0000005c`d21ff490 00007ff8`5756435a AAD_Core!Windows::System::Threading::WorkItemHandler::[Windows::System::Threading::WorkItemHandler::__abi_IDelegate]::__abi_Windows_System_Threading_WorkItemHandler___abi_IDelegate____abi_Invoke+0x34
0e 0000005c`d21ff4d0 00007ff8`57564250 threadpoolwinrt!Windows::System::Threading::CThreadPoolWorkItem::CommonWorkCallback+0xaa
0f 0000005c`d21ff540 00007ff8`6a932270 threadpoolwinrt!Windows::System::Threading::CThreadPoolWorkItem::BatchedCallback+0x90
10 0000005c`d21ff580 00007ff8`6a9231ba ntdll!TppWorkpExecuteCallback+0x130
```

The local account is loaded:

```
Message: The local default user is loading.
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:009> k
 # Child-SP          RetAddr           Call Site
00 0000005c`d21feae0 00007ff8`6842a0a7 KERNELBASE!RaiseException+0x69
01 0000005c`d21febc0 00007ff8`369b0431 KERNELBASE!OutputDebugStringW+0xb7
02 0000005c`d21fec30 00007ff8`369d6579 AAD_Core!`AAD::Core::Module::FirstInit'::`2'::BrokerLog::Message+0xa1
03 0000005c`d21fecd0 00007ff8`369cea68 AAD_Core!CallbackLogger::Log+0x39
04 0000005c`d21fed10 00007ff8`369ce541 AAD_Core!Log::NotifyLoggers+0x58
05 0000005c`d21fed80 00007ff8`36a3e9c9 AAD_Core!Log::NotifyInternal+0x491
06 0000005c`d21fef10 00007ff8`36a3d4e2 AAD_Core!ClientCache::LoadLocalAccount+0x7e9
```

A new client is created for the default local user:

```
Message: A new client created for the default local user.
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:009> k
 # Child-SP          RetAddr           Call Site
00 0000005c`d21fe720 00007ff8`6842a0a7 KERNELBASE!RaiseException+0x69
01 0000005c`d21fe800 00007ff8`369b0431 KERNELBASE!OutputDebugStringW+0xb7
02 0000005c`d21fe870 00007ff8`369d6579 AAD_Core!`AAD::Core::Module::FirstInit'::`2'::BrokerLog::Message+0xa1
03 0000005c`d21fe910 00007ff8`369cea68 AAD_Core!CallbackLogger::Log+0x39
04 0000005c`d21fe950 00007ff8`369ce541 AAD_Core!Log::NotifyLoggers+0x58
05 0000005c`d21fe9c0 00007ff8`36a46d74 AAD_Core!Log::NotifyInternal+0x491
06 0000005c`d21feb50 00007ff8`36a468df AAD_Core!ClientCache::CreateNewClient+0x2d4
07 0000005c`d21fecb0 00007ff8`36a45e49 AAD_Core!ClientCache::PrepareFinalClient+0x12f
08 0000005c`d21fed70 00007ff8`36a3ea02 AAD_Core!ClientCache::ReadFromFileLocal+0xe9
09 0000005c`d21fef10 00007ff8`36a3d4e2 AAD_Core!ClientCache::LoadLocalAccount+0x822
```

There are some details about the process, like Workplace Join flag:

```
Details: DetermineRecoveryNeeded: isCDJ: false; isWPJ: false; Local SSO accounts: 0; isDesktopSKU: true; ErrorCode: 0xCAA10001 (unknown); IsPrimaryUser: false
Logged at AccountRecovery.cpp, line: 110, method: AccountRecovery::DetermineRecoveryNeeded.
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:008> k
 # Child-SP          RetAddr           Call Site
00 0000005c`d217e990 00007ff8`6842a0a7 KERNELBASE!RaiseException+0x69
01 0000005c`d217ea70 00007ff8`369b0456 KERNELBASE!OutputDebugStringW+0xb7
02 0000005c`d217eae0 00007ff8`369d6579 AAD_Core!`AAD::Core::Module::FirstInit'::`2'::BrokerLog::Message+0xc6
03 0000005c`d217eb80 00007ff8`369cea68 AAD_Core!CallbackLogger::Log+0x39
04 0000005c`d217ebc0 00007ff8`369ce541 AAD_Core!Log::NotifyLoggers+0x58
05 0000005c`d217ec30 00007ff8`36b06d71 AAD_Core!Log::NotifyInternal+0x491
06 0000005c`d217edc0 00007ff8`36b065c9 AAD_Core!AccountRecovery::DetermineRecoveryNeeded+0x281
07 0000005c`d217eec0 00007ff8`36a1e2d2 AAD_Core!AccountRecovery::RecoverIfNeeded+0x59
```

After that BackgroundTaskHost exits and a new login is started. When the user types login info and enter another BackgroundTaskHost starts a new round:

```
0:003> g
Details: Parameter(s): correlationId: d5d49d5d-3530-4bc5-b786-e94da7777624
webAccountCount: 0
client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264
authority: https://login.microsoftonline.com/common
resource: https://api.spaces.skype.com
redirectUri: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
scope: (null)
LoginHint: dev@dlp.os33dev.com
discoverHome: false
domain_hint: (null)
fallback_domain: (null)
certificateUsage: (null)
certificateUIName: (null)
certificateUIDescription: (null)
ExtendedLifeTimeEnabled: false
UserPictureEnabled: false
prompt: 
msafed: 1
validateAuthority: true
minimum_token_lifetime: 0
transferTokenRequest: false

Request Param(s):
claims: (not empty)

Request Properties:
LoginHint: dev@dlp.os33dev.com
claims: (not empty)
correlationId: {D5D49D5D-3530-4BC5-B786-E94DA7777624}
msafed: 1
resource: https://api.spaces.skype.com

Logged at GetTokenBrokerOperationBase.cpp, line: 404, method: GetTokenBrokerOperationBase::LogRequestParameters.
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:003> k
 # Child-SP          RetAddr           Call Site
00 000000ac`6117d860 00007ff8`6842a0a7 KERNELBASE!RaiseException+0x69
01 000000ac`6117d940 00007ff8`30160456 KERNELBASE!OutputDebugStringW+0xb7
02 000000ac`6117d9b0 00007ff8`30186579 AAD_Core!`AAD::Core::Module::FirstInit'::`2'::BrokerLog::Message+0xc6
03 000000ac`6117da50 00007ff8`3017ea68 AAD_Core!CallbackLogger::Log+0x39
04 000000ac`6117da90 00007ff8`3017e541 AAD_Core!Log::NotifyLoggers+0x58
05 000000ac`6117db00 00007ff8`301cd988 AAD_Core!Log::NotifyInternal+0x491
06 000000ac`6117dc90 00007ff8`301cc0f6 AAD_Core!GetTokenBrokerOperationBase::LogRequestParameters+0x1478
07 000000ac`6117dfb0 00007ff8`30169f88 AAD_Core!GetTokenBrokerOperationBase::GetTokenBrokerOperationBase+0x3726
08 000000ac`6117e950 00007ff8`30166b65 AAD_Core!AAD::Core::WebAccountProcessor::CreateBrokerOperation+0x1748
09 000000ac`6117f000 00007ff8`301629b2 AAD_Core!AAD::Core::WebAccountProcessor::[AAD::Core::__IWebAccountProcessorPublicNonVirtuals]::ProcessBrokerBackgroundRequest+0x215
0a 000000ac`6117f3a0 00007ff8`30162e42 AAD_Core!AAD::Core::TokenBackground::[Windows::ApplicationModel::Background::IBackgroundTask]::Run+0x312
0b 000000ac`6117f680 00007ff8`4c9153b7 AAD_Core!AAD::Core::TokenBackground::[Windows::ApplicationModel::Background::IBackgroundTask]::__abi_Windows_ApplicationModel_Background_IBackgroundTask____abi_Run+0x12
0c 000000ac`6117f6c0 00007ff8`4c9128bb biwinrt!Windows::ApplicationModel::Background::CBackgroundTaskInstance::RunInternal+0x20b [onecoreuap\base\background\bi\winrt\impl\actbwii.cpp @ 1010] 
0d 000000ac`6117f7e0 00007ff8`5f9db763 biwinrt!Windows::ApplicationModel::Background::CBackgroundTaskInstance::Run+0x2b [onecoreuap\base\background\bi\winrt\impl\actbwii.cpp @ 823] 
0e 000000ac`6117f810 00007ff8`5f9db69c twinapi_appcore!Windows::ApplicationModel::Core::BackgroundTaskWrapper::Run+0x6f
0f 000000ac`6117f870 00007ff8`6a932270 twinapi_appcore!Windows::ApplicationModel::Core::BackgroundTaskWrapper::ThreadProc+0x7c
10 000000ac`6117fa00 00007ff8`6a9231ba ntdll!TppWorkpExecuteCallback+0x130
```

Loading client from cache using WebAccount:

```
Message: Loading client from cache using webaccount.
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:008> k
 # Child-SP          RetAddr           Call Site
00 000000ac`613fec70 00007ff8`6842a0a7 KERNELBASE!RaiseException+0x69
01 000000ac`613fed50 00007ff8`30160431 KERNELBASE!OutputDebugStringW+0xb7
02 000000ac`613fedc0 00007ff8`30186579 AAD_Core!`AAD::Core::Module::FirstInit'::`2'::BrokerLog::Message+0xa1
03 000000ac`613fee60 00007ff8`3017ea68 AAD_Core!CallbackLogger::Log+0x39
04 000000ac`613feea0 00007ff8`3017e541 AAD_Core!Log::NotifyLoggers+0x58
05 000000ac`613fef10 00007ff8`3020ff6a AAD_Core!Log::NotifyInternal+0x491
06 000000ac`613ff0a0 00007ff8`301ebf37 AAD_Core!Log::ReportInfo<wchar_t const * __ptr64,wchar_t const * __ptr64,wchar_t const * __ptr64>+0x7a
07 000000ac`613ff110 00007ff8`301d0aaa AAD_Core!ClientCache::Load+0xb97
```

No data for primary user (again):

```
Message: No data for the primary user.
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:008> k
 # Child-SP          RetAddr           Call Site
00 000000ac`613fe9c0 00007ff8`6842a0a7 KERNELBASE!RaiseException+0x69
01 000000ac`613feaa0 00007ff8`30160431 KERNELBASE!OutputDebugStringW+0xb7
02 000000ac`613feb10 00007ff8`30186579 AAD_Core!`AAD::Core::Module::FirstInit'::`2'::BrokerLog::Message+0xa1
03 000000ac`613febb0 00007ff8`3017ea68 AAD_Core!CallbackLogger::Log+0x39
04 000000ac`613febf0 00007ff8`3017e541 AAD_Core!Log::NotifyLoggers+0x58
05 000000ac`613fec60 00007ff8`302593d7 AAD_Core!Log::NotifyInternal+0x491
06 000000ac`613fedf0 00007ff8`30251a60 AAD_Core!Log::ReportInfo<long,long,wchar_t const * __ptr64>+0x77
07 000000ac`613fee60 00007ff8`30250fe1 AAD_Core!DefaultUser::TryOpenLSAImpl+0x4e0
08 000000ac`613ff130 00007ff8`301ed308 AAD_Core!DefaultUser::TryOpenImpl+0x141
```

The same flags being output:

```
Details: DetermineRecoveryNeeded: isCDJ: false; isWPJ: false; Local SSO accounts: 0; isDesktopSKU: true; ErrorCode: 0xCAA100D8 (unknown); IsPrimaryUser: false
Logged at AccountRecovery.cpp, line: 110, method: AccountRecovery::DetermineRecoveryNeeded.
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:008> g
(27e4.27c8): Windows Runtime Transform Error - code 40080202 (first chance)
ModLoad: 00007ff8`65980000 00007ff8`65a1e000   C:\Windows\system32\uxtheme.dll
(27e4.20dc): Windows Runtime Transform Error - code 40080202 (first chance)
ModLoad: 00007ff8`5df10000 00007ff8`5e0c4000   C:\Windows\system32\windowscodecs.dll
(27e4.27c8): Windows Runtime Transform Error - code 40080202 (first chance)
Code: 0xcaa10001 (level=2)
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
```

AAD Broker process starts:

```
onecoreuap\windows\dwm\dcomp\dll\kerneltokenfactory.cpp(36)\dcomp.dll!00007FF8649999F6: (caller: 00007FF8649553F2) ReturnHr(1) tid(1f54) 887A0004 The specified device interface or feature level is not supported on this system.
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:011> k
 # Child-SP          RetAddr           Call Site
00 0000002a`7d0fcf00 00007ff8`6842a0a7 KERNELBASE!RaiseException+0x69
01 0000002a`7d0fcfe0 00007ff8`649a2448 KERNELBASE!OutputDebugStringW+0xb7
02 0000002a`7d0fd050 00007ff8`64973d5d dcomp!wil::details::LogFailure+0x2e6ac
03 0000002a`7d0fd0c0 00007ff8`64973cbb dcomp!wil::details::ReportFailure+0x95
04 0000002a`7d0fe600 00007ff8`64973c6d dcomp!wil::details::ReportFailure_Hr+0x3f
05 0000002a`7d0fe660 00007ff8`649999f6 dcomp!wil::details::in1diag3::Return_Hr+0x29
06 0000002a`7d0fe6b0 00007ff8`649553f2 dcomp!DirectComposition::TokenFactory::CreateCompositionBuffer+0x447a2
07 0000002a`7d0fe730 00007ff8`64955791 dcomp!DirectComposition::CAtlasSurfacePool::CreateDeviceResources+0xae
08 0000002a`7d0fe7d0 00007ff8`64957dc4 dcomp!DirectComposition::CAtlasSurfacePool::Create+0x7d
09 0000002a`7d0fe830 00007ff8`649534ba dcomp!DirectComposition::CDynamicPoolSet::AllocateDynamicPool+0x4c
0a 0000002a`7d0fe890 00007ff8`64952750 dcomp!DirectComposition::CSurfaceManager::RequestSurface+0xd4a
0b 0000002a`7d0fea40 00007ff8`64947594 dcomp!DirectComposition::CBitmapInfoFront::RequestSurface+0x48
0c 0000002a`7d0fea90 00007ff8`64979580 dcomp!DirectComposition::CSurfaceFactory::CreateSurface+0x274
0d 0000002a`7d0feb10 00007ff8`5e8a540f dcomp!DirectComposition::CSurfaceFactory::CreateSurface+0x20
0e 0000002a`7d0feb60 00007ff8`5e8a50d5 Windows_UI_Xaml!DCompTreeHost::EnsureResources+0x30f [onecoreuap\windows\dxaml\xcp\components\comptree\dcomptreehost.cpp @ 980] 
0f 0000002a`7d0febf0 00007ff8`5e8a3eb9 Windows_UI_Xaml!WindowsGraphicsDeviceManager::WaitForD3DDependentResourceCreation+0x25 [onecoreuap\windows\dxaml\xcp\components\graphics\windowsgraphicsdevicemanager.cpp @ 62] 
10 0000002a`7d0fec20 00007ff8`5ea1eb3a Windows_UI_Xaml!CCoreServices::Tick+0x79 [onecoreuap\windows\dxaml\xcp\core\dll\xcpcore.cpp @ 4131] 
11 0000002a`7d0feca0 00007ff8`5e98bc9d Windows_UI_Xaml!CCoreServices::NWDrawTree+0x21a [onecoreuap\windows\dxaml\xcp\core\dll\xcpcore.cpp @ 6211] 
12 0000002a`7d0fedc0 00007ff8`5e98ba9f Windows_UI_Xaml!CCoreServices::NWDrawMainTree+0xad [onecoreuap\windows\dxaml\xcp\core\dll\xcpcore.cpp @ 6084] 
13 0000002a`7d0fee20 00007ff8`5e98b9c6 Windows_UI_Xaml!CWindowRenderTarget::Draw+0x6f [onecoreuap\windows\dxaml\xcp\core\compositor\windowrendertarget.cpp @ 136] 
14 0000002a`7d0fee60 00007ff8`5e97309d Windows_UI_Xaml!CXcpBrowserHost::OnTick+0x96 [onecoreuap\windows\dxaml\xcp\host\win\browserdesktop\winbrowserhost.cpp @ 545] 
15 0000002a`7d0feec0 00007ff8`5e972fa6 Windows_UI_Xaml!CXcpDispatcher::Tick+0x8d [onecoreuap\windows\dxaml\xcp\win\shared\xcpwindow.cpp @ 1449] 
16 0000002a`7d0fef00 00007ff8`5e8b57d9 Windows_UI_Xaml!CXcpDispatcher::OnReentrancyProtectedWindowMessage+0x42 [onecoreuap\windows\dxaml\xcp\win\shared\xcpwindow.cpp @ 1041] 
17 (Inline Function) --------`-------- Windows_UI_Xaml!CXcpDispatcher::ProcessMessage+0xc5 [onecoreuap\windows\dxaml\xcp\win\shared\xcpwindow.cpp @ 890] 
18 0000002a`7d0fef40 00007ff8`5e8b784b Windows_UI_Xaml!CXcpDispatcher::WindowProc+0x119 [onecoreuap\windows\dxaml\xcp\win\shared\xcpwindow.cpp @ 839] 
19 0000002a`7d0fef90 00007ff8`5e8b773c Windows_UI_Xaml!CDeferredInvoke::DispatchQueuedMessage+0xcb [onecoreuap\windows\dxaml\xcp\win\shared\xcpwindow.cpp @ 301] 
1a (Inline Function) --------`-------- Windows_UI_Xaml!CXcpDispatcher::MessageTimerCallback+0x13 [onecoreuap\windows\dxaml\xcp\win\shared\xcpwindow.cpp @ 1534] 
1b 0000002a`7d0fefe0 00007ff8`655e529b Windows_UI_Xaml!CXcpDispatcher::MessageTimerCallbackStatic+0x1c [onecoreuap\windows\dxaml\xcp\win\shared\xcpwindow.cpp @ 1526] 
1c 0000002a`7d0ff010 00007ff8`6560c39b CoreMessaging!Microsoft__CoreUI__Dispatch__TimeoutHandler$CallbackThunk+0x11b
1d 0000002a`7d0ff090 00007ff8`655e9d84 CoreMessaging!Microsoft::CoreUI::Dispatch::TimeoutManager::Callback_OnDispatch+0x18b
1e 0000002a`7d0ff120 00007ff8`655e8d36 CoreMessaging!Microsoft::CoreUI::Dispatch::EventLoop::Callback_RunCoreLoop+0xc04
1f 0000002a`7d0ff240 00007ff8`655e6f71 CoreMessaging!Microsoft::CoreUI::Dispatch::UserAdapter::OnUserDispatch+0x1d6
20 0000002a`7d0ff330 00007ff8`655e6d9c CoreMessaging!Microsoft::CoreUI::Dispatch::UserAdapter_DoWork+0xf1
21 0000002a`7d0ff410 00007ff8`68a6e858 CoreMessaging!Microsoft::CoreUI::Dispatch::UserAdapter_WindowProc+0xfc
22 0000002a`7d0ff490 00007ff8`68a6e3dc user32!UserCallWinProcCheckWow+0x2f8
23 0000002a`7d0ff620 00007ff8`68a80c33 user32!DispatchClientMessage+0x9c
24 0000002a`7d0ff680 00007ff8`6a970e94 user32!_fnDWORD+0x33
25 0000002a`7d0ff6e0 00007ff8`682b1064 ntdll!KiUserCallbackDispatcherContinue
26 0000002a`7d0ff768 00007ff8`68a6a5c3 win32u!NtUserPeekMessage+0x14
27 0000002a`7d0ff770 00007ff8`68a6a523 user32!_PeekMessage+0x43
28 0000002a`7d0ff7e0 00007ff8`5feca8ae user32!PeekMessageW+0x143
29 0000002a`7d0ff850 00007ff8`5feca680 Windows_UI!Windows::UI::Core::CDispatcher::ProcessMessage+0xae [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 281] 
2a 0000002a`7d0ff900 00007ff8`5feca50b Windows_UI!Windows::UI::Core::CDispatcher::WaitAndProcessMessagesInternal+0xc0 [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 1950] 
2b 0000002a`7d0ffa10 00007ff8`5eaf30b0 Windows_UI!Windows::UI::Core::CDispatcher::ProcessEvents+0x7b [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 596] 
2c 0000002a`7d0ffac0 00007ff8`5eaf304f Windows_UI_Xaml!CJupiterWindow::RunCoreWindowMessageLoop+0x4c [onecoreuap\windows\dxaml\xcp\dxaml\lib\jupiterwindow.cpp @ 1234] 
2d (Inline Function) --------`-------- Windows_UI_Xaml!CJupiterControl::RunMessageLoop+0x1f [onecoreuap\windows\dxaml\xcp\dxaml\lib\jupitercontrol.cpp @ 1065] 
2e 0000002a`7d0ffaf0 00007ff8`5f9e5dca Windows_UI_Xaml!DirectUI::DXamlCore::RunMessageLoop+0x47 [onecoreuap\windows\dxaml\xcp\dxaml\lib\dxamlcore.cpp @ 2463] 
2f 0000002a`7d0ffb60 00007ff8`5f99e65f twinapi_appcore!Windows::ApplicationModel::Core::CoreApplicationView::Run+0x3a
30 0000002a`7d0ffb90 00007ff8`6a5fbf69 twinapi_appcore!<lambda_643db08282a766b00cec20194396f531>::operator()+0x1ef
31 0000002a`7d0ffc30 00007ff8`6a747614 shcore!_WrapperThreadProc+0xe9
32 0000002a`7d0ffd10 00007ff8`6a9226b1 KERNEL32!BaseThreadInitThunk+0x14
33 0000002a`7d0ffd40 00000000`00000000 ntdll!RtlUserThreadStart+0x21
```

After some similar error like the above AAD Broker receives a message:

```
Code: 0x4aa5001a (level=2)
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:011> k
 # Child-SP          RetAddr           Call Site
00 0000002a`7d0fe7c0 00007ff8`6842a0a7 KERNELBASE!RaiseException+0x69
01 0000002a`7d0fe8a0 00007ff8`3016040c KERNELBASE!OutputDebugStringW+0xb7
02 0000002a`7d0fe910 00007ff8`30186579 AAD_Core!`AAD::Core::Module::FirstInit'::`2'::BrokerLog::Message+0x7c
03 0000002a`7d0fe9b0 00007ff8`3017ea68 AAD_Core!CallbackLogger::Log+0x39
04 0000002a`7d0fe9f0 00007ff8`3017e541 AAD_Core!Log::NotifyLoggers+0x58
05 0000002a`7d0fea60 00007ff8`30163830 AAD_Core!Log::NotifyInternal+0x491
06 0000002a`7d0febf0 00007ff8`30168aaa AAD_Core!Log::ReportInfo<wchar_t const * __ptr64>+0x60
07 0000002a`7d0fec50 00007ff8`301659eb AAD_Core!AAD::Core::WebAccountProcessor::CreateBrokerOperation+0x26a
08 0000002a`7d0ff300 00007ff8`30164568 AAD_Core!AAD::Core::WebAccountProcessor::ProcessBrokerRequest+0x28b
09 0000002a`7d0ff5f0 00007ff8`30163369 AAD_Core!AAD::Core::WebAccountProcessor::[AAD::Core::__IWebAccountProcessorPublicNonVirtuals]::ProcessActivation+0xd8
0a 0000002a`7d0ff680 00007ff7`3eaf9857 AAD_Core!AAD::Core::WebAccountProcessor::[AAD::Core::__IWebAccountProcessorPublicNonVirtuals]::__abi_AAD_Core___IWebAccountProcessorPublicNonVirtuals____abi_ProcessActivation+0x29
0b 0000002a`7d0ff6c0 00007ff7`3eaf9c04 Microsoft_AAD_BrokerPlugin!<lambda_fc6b3b1dceeaec3c356065efd40a9d34>::operator()+0x137
0c 0000002a`7d0ff750 00007ff8`5fecac30 Microsoft_AAD_BrokerPlugin!Windows::UI::Core::DispatchedHandler::[Windows::UI::Core::DispatchedHandler::__abi_IDelegate]::__abi_Windows_UI_Core_DispatchedHandler___abi_IDelegate____abi_Invoke+0x34
0d 0000002a`7d0ff790 00007ff8`5fecaa24 Windows_UI!Windows::UI::Core::CDispatcher::ProcessInvokeItem+0x1c0 [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 1263] 
0e 0000002a`7d0ff850 00007ff8`5feca680 Windows_UI!Windows::UI::Core::CDispatcher::ProcessMessage+0x224 [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 364] 
0f 0000002a`7d0ff900 00007ff8`5feca50b Windows_UI!Windows::UI::Core::CDispatcher::WaitAndProcessMessagesInternal+0xc0 [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 1950] 
10 0000002a`7d0ffa10 00007ff8`5eaf30b0 Windows_UI!Windows::UI::Core::CDispatcher::ProcessEvents+0x7b [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 596] 
11 0000002a`7d0ffac0 00007ff8`5eaf304f Windows_UI_Xaml!CJupiterWindow::RunCoreWindowMessageLoop+0x4c [onecoreuap\windows\dxaml\xcp\dxaml\lib\jupiterwindow.cpp @ 1234] 
12 (Inline Function) --------`-------- Windows_UI_Xaml!CJupiterControl::RunMessageLoop+0x1f [onecoreuap\windows\dxaml\xcp\dxaml\lib\jupitercontrol.cpp @ 1065] 
13 0000002a`7d0ffaf0 00007ff8`5f9e5dca Windows_UI_Xaml!DirectUI::DXamlCore::RunMessageLoop+0x47 [onecoreuap\windows\dxaml\xcp\dxaml\lib\dxamlcore.cpp @ 2463] 
14 0000002a`7d0ffb60 00007ff8`5f99e65f twinapi_appcore!Windows::ApplicationModel::Core::CoreApplicationView::Run+0x3a
15 0000002a`7d0ffb90 00007ff8`6a5fbf69 twinapi_appcore!<lambda_643db08282a766b00cec20194396f531>::operator()+0x1ef
16 0000002a`7d0ffc30 00007ff8`6a747614 shcore!_WrapperThreadProc+0xe9
```

The messages are very similar from BackgroundTaskHost (both are from AAD.Core.dll), but AAD Broker seems to have received by message, while BackgroundTaskHost received by an IBackgroundTask instance (from WAM?).

```
Message: Token broker operation started.
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:011> k
 # Child-SP          RetAddr           Call Site
00 0000002a`7d0fe7c0 00007ff8`6842a0a7 KERNELBASE!RaiseException+0x69
01 0000002a`7d0fe8a0 00007ff8`30160431 KERNELBASE!OutputDebugStringW+0xb7
02 0000002a`7d0fe910 00007ff8`30186579 AAD_Core!`AAD::Core::Module::FirstInit'::`2'::BrokerLog::Message+0xa1
03 0000002a`7d0fe9b0 00007ff8`3017ea68 AAD_Core!CallbackLogger::Log+0x39
04 0000002a`7d0fe9f0 00007ff8`3017e541 AAD_Core!Log::NotifyLoggers+0x58
05 0000002a`7d0fea60 00007ff8`30163830 AAD_Core!Log::NotifyInternal+0x491
06 0000002a`7d0febf0 00007ff8`30168aaa AAD_Core!Log::ReportInfo<wchar_t const * __ptr64>+0x60
07 0000002a`7d0fec50 00007ff8`301659eb AAD_Core!AAD::Core::WebAccountProcessor::CreateBrokerOperation+0x26a
08 0000002a`7d0ff300 00007ff8`30164568 AAD_Core!AAD::Core::WebAccountProcessor::ProcessBrokerRequest+0x28b
09 0000002a`7d0ff5f0 00007ff8`30163369 AAD_Core!AAD::Core::WebAccountProcessor::[AAD::Core::__IWebAccountProcessorPublicNonVirtuals]::ProcessActivation+0xd8
0a 0000002a`7d0ff680 00007ff7`3eaf9857 AAD_Core!AAD::Core::WebAccountProcessor::[AAD::Core::__IWebAccountProcessorPublicNonVirtuals]::__abi_AAD_Core___IWebAccountProcessorPublicNonVirtuals____abi_ProcessActivation+0x29
0b 0000002a`7d0ff6c0 00007ff7`3eaf9c04 Microsoft_AAD_BrokerPlugin!<lambda_fc6b3b1dceeaec3c356065efd40a9d34>::operator()+0x137
0c 0000002a`7d0ff750 00007ff8`5fecac30 Microsoft_AAD_BrokerPlugin!Windows::UI::Core::DispatchedHandler::[Windows::UI::Core::DispatchedHandler::__abi_IDelegate]::__abi_Windows_UI_Core_DispatchedHandler___abi_IDelegate____abi_Invoke+0x34
0d 0000002a`7d0ff790 00007ff8`5fecaa24 Windows_UI!Windows::UI::Core::CDispatcher::ProcessInvokeItem+0x1c0 [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 1263] 
0e 0000002a`7d0ff850 00007ff8`5feca680 Windows_UI!Windows::UI::Core::CDispatcher::ProcessMessage+0x224 [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 364] 
```

The operation is request token:

```
Details: Operation name: RequestToken
Logged at WebAccountProcessor.cpp, line: 459, method: AAD::Core::WebAccountProcessor::CreateBrokerOperation.
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:011> k
 # Child-SP          RetAddr           Call Site
00 0000002a`7d0fe7c0 00007ff8`6842a0a7 KERNELBASE!RaiseException+0x69
01 0000002a`7d0fe8a0 00007ff8`30160456 KERNELBASE!OutputDebugStringW+0xb7
02 0000002a`7d0fe910 00007ff8`30186579 AAD_Core!`AAD::Core::Module::FirstInit'::`2'::BrokerLog::Message+0xc6
03 0000002a`7d0fe9b0 00007ff8`3017ea68 AAD_Core!CallbackLogger::Log+0x39
04 0000002a`7d0fe9f0 00007ff8`3017e541 AAD_Core!Log::NotifyLoggers+0x58
05 0000002a`7d0fea60 00007ff8`30163830 AAD_Core!Log::NotifyInternal+0x491
06 0000002a`7d0febf0 00007ff8`30168aaa AAD_Core!Log::ReportInfo<wchar_t const * __ptr64>+0x60
07 0000002a`7d0fec50 00007ff8`301659eb AAD_Core!AAD::Core::WebAccountProcessor::CreateBrokerOperation+0x26a
08 0000002a`7d0ff300 00007ff8`30164568 AAD_Core!AAD::Core::WebAccountProcessor::ProcessBrokerRequest+0x28b
09 0000002a`7d0ff5f0 00007ff8`30163369 AAD_Core!AAD::Core::WebAccountProcessor::[AAD::Core::__IWebAccountProcessorPublicNonVirtuals]::ProcessActivation+0xd8
0a 0000002a`7d0ff680 00007ff7`3eaf9857 AAD_Core!AAD::Core::WebAccountProcessor::[AAD::Core::__IWebAccountProcessorPublicNonVirtuals]::__abi_AAD_Core___IWebAccountProcessorPublicNonVirtuals____abi_ProcessActivation+0x29
0b 0000002a`7d0ff6c0 00007ff7`3eaf9c04 Microsoft_AAD_BrokerPlugin!<lambda_fc6b3b1dceeaec3c356065efd40a9d34>::operator()+0x137
```

The same information available in BackgroundTaskHost is output in AAD Broker, but from the message processor stack. It seems BackgroundTaskHost receives the info and pass to AAD Broker:

```
Details: Parameter(s): correlationId: d5d49d5d-3530-4bc5-b786-e94da7777624
webAccountCount: 0
client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264
authority: https://login.microsoftonline.com/common
resource: https://api.spaces.skype.com
redirectUri: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
scope: (null)
LoginHint: dev@dlp.os33dev.com
discoverHome: false
domain_hint: (null)
fallback_domain: (null)
certificateUsage: (null)
certificateUIName: (null)
certificateUIDescription: (null)
ExtendedLifeTimeEnabled: false
UserPictureEnabled: false
prompt: 
msafed: 1
validateAuthority: true
minimum_token_lifetime: 0
transferTokenRequest: false

Request Param(s):
claims: (not empty)

Request Properties:
LoginHint: dev@dlp.os33dev.com
claims: (not empty)
correlationId: {D5D49D5D-3530-4BC5-B786-E94DA7777624}
msafed: 1
resource: https://api.spaces.skype.com

Logged at GetTokenBrokerOperationBase.cpp, line: 404, method: GetTokenBrokerOperationBase::LogRequestParameters.
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:011> k
 # Child-SP          RetAddr           Call Site
00 0000002a`7d0fdb60 00007ff8`6842a0a7 KERNELBASE!RaiseException+0x69
01 0000002a`7d0fdc40 00007ff8`30160456 KERNELBASE!OutputDebugStringW+0xb7
02 0000002a`7d0fdcb0 00007ff8`30186579 AAD_Core!`AAD::Core::Module::FirstInit'::`2'::BrokerLog::Message+0xc6
03 0000002a`7d0fdd50 00007ff8`3017ea68 AAD_Core!CallbackLogger::Log+0x39
04 0000002a`7d0fdd90 00007ff8`3017e541 AAD_Core!Log::NotifyLoggers+0x58
05 0000002a`7d0fde00 00007ff8`301cd988 AAD_Core!Log::NotifyInternal+0x491
06 0000002a`7d0fdf90 00007ff8`301cc0f6 AAD_Core!GetTokenBrokerOperationBase::LogRequestParameters+0x1478
07 0000002a`7d0fe2b0 00007ff8`3016a498 AAD_Core!GetTokenBrokerOperationBase::GetTokenBrokerOperationBase+0x3726
08 0000002a`7d0fec50 00007ff8`301659eb AAD_Core!AAD::Core::WebAccountProcessor::CreateBrokerOperation+0x1c58
09 0000002a`7d0ff300 00007ff8`30164568 AAD_Core!AAD::Core::WebAccountProcessor::ProcessBrokerRequest+0x28b
0a 0000002a`7d0ff5f0 00007ff8`30163369 AAD_Core!AAD::Core::WebAccountProcessor::[AAD::Core::__IWebAccountProcessorPublicNonVirtuals]::ProcessActivation+0xd8
0b 0000002a`7d0ff680 00007ff7`3eaf9857 AAD_Core!AAD::Core::WebAccountProcessor::[AAD::Core::__IWebAccountProcessorPublicNonVirtuals]::__abi_AAD_Core___IWebAccountProcessorPublicNonVirtuals____abi_ProcessActivation+0x29
0c 0000002a`7d0ff6c0 00007ff7`3eaf9c04 Microsoft_AAD_BrokerPlugin!<lambda_fc6b3b1dceeaec3c356065efd40a9d34>::operator()+0x137
0d 0000002a`7d0ff750 00007ff8`5fecac30 Microsoft_AAD_BrokerPlugin!Windows::UI::Core::DispatchedHandler::[Windows::UI::Core::DispatchedHandler::__abi_IDelegate]::__abi_Windows_UI_Core_DispatchedHandler___abi_IDelegate____abi_Invoke+0x34
0e 0000002a`7d0ff790 00007ff8`5fecaa24 Windows_UI!Windows::UI::Core::CDispatcher::ProcessInvokeItem+0x1c0 [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 1263] 
0f 0000002a`7d0ff850 00007ff8`5feca680 Windows_UI!Windows::UI::Core::CDispatcher::ProcessMessage+0x224 [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 364] 
10 0000002a`7d0ff900 00007ff8`5feca50b Windows_UI!Windows::UI::Core::CDispatcher::WaitAndProcessMessagesInternal+0xc0 [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 1950] 
11 0000002a`7d0ffa10 00007ff8`5eaf30b0 Windows_UI!Windows::UI::Core::CDispatcher::ProcessEvents+0x7b [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 596] 
12 0000002a`7d0ffac0 00007ff8`5eaf304f Windows_UI_Xaml!CJupiterWindow::RunCoreWindowMessageLoop+0x4c [onecoreuap\windows\dxaml\xcp\dxaml\lib\jupiterwindow.cpp @ 1234] 
13 (Inline Function) --------`-------- Windows_UI_Xaml!CJupiterControl::RunMessageLoop+0x1f [onecoreuap\windows\dxaml\xcp\dxaml\lib\jupitercontrol.cpp @ 1065] 
14 0000002a`7d0ffaf0 00007ff8`5f9e5dca Windows_UI_Xaml!DirectUI::DXamlCore::RunMessageLoop+0x47 [onecoreuap\windows\dxaml\xcp\dxaml\lib\dxamlcore.cpp @ 2463] 
15 0000002a`7d0ffb60 00007ff8`5f99e65f twinapi_appcore!Windows::ApplicationModel::Core::CoreApplicationView::Run+0x3a
```

Then the same states from BackgroundTaskHost are repeated in AAD Broker and RuntimeBroker (already running) receives a remote invoke:

```
Code: 0x4aa5009a (level=2)
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:006> k
 # Child-SP          RetAddr           Call Site
00 00000067`9fd7d260 00007ff8`6842a0a7 KERNELBASE!RaiseException+0x69
01 00000067`9fd7d340 00007ff8`490173bc KERNELBASE!OutputDebugStringW+0xb7
02 00000067`9fd7d3b0 00007ff8`4902e3f9 aadtb!`Module::FirstInit'::`2'::BrokerLog::Message+0x7c
03 00000067`9fd7d450 00007ff8`4902a2d8 aadtb!CallbackLogger::Log+0x39
04 00000067`9fd7d490 00007ff8`49029db1 aadtb!Log::NotifyLoggers+0x58
05 00000067`9fd7d500 00007ff8`4905171e aadtb!Log::NotifyInternal+0x491
06 00000067`9fd7d690 00007ff8`4900493b aadtb!SSOCookieManager::GetSessionKeysForWPJ+0x53e
07 00000067`9fd7d880 00007ff8`689ab4b3 aadtb!Windows::Internal::AAD::BrowserSSO::CookieStoreStatics::GetSessionKeysForWPJ+0x2cb
08 00000067`9fd7dcf0 00007ff8`68a0e77b RPCRT4!Invoke+0x73
09 00000067`9fd7dd50 00007ff8`6894d479 RPCRT4!Ndr64StubWorker+0xb0b
0a 00000067`9fd7e410 00007ff8`69965f1c RPCRT4!NdrStubCall3+0xc9
0b 00000067`9fd7e470 00007ff8`6898a74b combase!CStdStubBuffer_Invoke+0x7c [onecore\com\combase\ndr\ndrole\stub.cxx @ 1446] 
0c 00000067`9fd7e4b0 00007ff8`6993bad3 RPCRT4!CStdStubBuffer_Invoke+0x3b
0d (Inline Function) --------`-------- combase!InvokeStubWithExceptionPolicyAndTracing::__l6::<lambda_c9f3956a20c9da92a64affc24fdd69ec>::operator()+0x18 [onecore\com\combase\dcomrem\channelb.cxx @ 1279] 
0e 00000067`9fd7e4e0 00007ff8`6993b85e combase!ObjectMethodExceptionHandlingAction<<lambda_c9f3956a20c9da92a64affc24fdd69ec> >+0x43 [onecore\com\combase\dcomrem\excepn.hxx @ 87] 
0f (Inline Function) --------`-------- combase!InvokeStubWithExceptionPolicyAndTracing+0xd0 [onecore\com\combase\dcomrem\channelb.cxx @ 1277] 
10 00000067`9fd7e540 00007ff8`6996aaa6 combase!DefaultStubInvoke+0x1ee [onecore\com\combase\dcomrem\channelb.cxx @ 1346] 
11 (Inline Function) --------`-------- combase!SyncStubCall::Invoke+0x22 [onecore\com\combase\dcomrem\channelb.cxx @ 1403] 
12 00000067`9fd7e6a0 00007ff8`698e1283 combase!SyncServerCall::StubInvoke+0x26 [onecore\com\combase\dcomrem\ServerCall.hpp @ 781] 
13 (Inline Function) --------`-------- combase!StubInvoke+0x23e [onecore\com\combase\dcomrem\channelb.cxx @ 1628] 
14 00000067`9fd7e6e0 00007ff8`6996133d combase!ServerCall::ContextInvoke+0x403 [onecore\com\combase\dcomrem\ctxchnl.cxx @ 1423] 
15 (Inline Function) --------`-------- combase!CServerChannel::ContextInvoke+0x70 [onecore\com\combase\dcomrem\ctxchnl.cxx @ 1332] 
16 00000067`9fd7ea30 00007ff8`698d5036 combase!DefaultInvokeInApartment+0xad [onecore\com\combase\dcomrem\callctrl.cxx @ 3299] 
17 (Inline Function) --------`-------- combase!AppInvoke+0x245 [onecore\com\combase\dcomrem\channelb.cxx @ 1122] 
18 00000067`9fd7ea80 00007ff8`699ab8cc combase!ComInvokeWithLockAndIPID+0xaf6 [onecore\com\combase\dcomrem\channelb.cxx @ 2210] 
19 00000067`9fd7ee40 00007ff8`698d6ff9 combase!ThreadInvokeWorker+0x7c4 [onecore\com\combase\dcomrem\channelb.cxx @ 7016] 
1a 00000067`9fd7f160 00007ff8`68989188 combase!ThreadInvoke+0x9 [onecore\com\combase\dcomrem\channelb.cxx @ 7152] 
1b 00000067`9fd7f190 00007ff8`6896a3a6 RPCRT4!DispatchToStubInCNoAvrf+0x18
1c 00000067`9fd7f1e0 00007ff8`68969fd6 RPCRT4!RPC_INTERFACE::DispatchToStubWorker+0x1a6
1d 00000067`9fd7f2c0 00007ff8`6897730f RPCRT4!RPC_INTERFACE::DispatchToStubWithObject+0x186
1e 00000067`9fd7f360 00007ff8`689768c8 RPCRT4!LRPC_SCALL::DispatchRequest+0x16f
1f 00000067`9fd7f430 00007ff8`68975eb1 RPCRT4!LRPC_SCALL::HandleRequest+0x7f8
20 00000067`9fd7f540 00007ff8`6897591e RPCRT4!LRPC_ADDRESS::HandleRequest+0x341
21 00000067`9fd7f5e0 00007ff8`6897a032 RPCRT4!LRPC_ADDRESS::ProcessIO+0x89e
22 00000067`9fd7f720 00007ff8`6a8f0330 RPCRT4!LrpcIoComplete+0xc2
23 00000067`9fd7f7c0 00007ff8`6a922f86 ntdll!TppAlpcpExecuteCallback+0x260
```

Again AAD Broker:

```
Code: 0x4aa90011 (level=2)
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:011> k
 # Child-SP          RetAddr           Call Site
00 0000002a`7d0fd780 00007ff8`6842a0a7 KERNELBASE!RaiseException+0x69
01 0000002a`7d0fd860 00007ff8`3016040c KERNELBASE!OutputDebugStringW+0xb7
02 0000002a`7d0fd8d0 00007ff8`30186579 AAD_Core!`AAD::Core::Module::FirstInit'::`2'::BrokerLog::Message+0x7c
03 0000002a`7d0fd970 00007ff8`3017ea68 AAD_Core!CallbackLogger::Log+0x39
04 0000002a`7d0fd9b0 00007ff8`3017e541 AAD_Core!Log::NotifyLoggers+0x58
05 0000002a`7d0fda20 00007ff8`30312eed AAD_Core!Log::NotifyInternal+0x491
06 0000002a`7d0fdbb0 00007ff8`3030da48 AAD_Core!Log::ReportInfo<wchar_t const * __ptr64,wchar_t const * __ptr64>+0x6d
07 0000002a`7d0fdc20 00007ff8`302f8252 AAD_Core!WebUITokenRequest::StartUI+0x608
08 0000002a`7d0fddc0 00007ff8`302f818f AAD_Core!AppUITokenRequest::StartUI+0x82
09 0000002a`7d0fde10 00007ff8`302f5d42 AAD_Core!AppUITokenRequest::StartUI+0x4f
0a 0000002a`7d0fde60 00007ff8`302f808b AAD_Core!AppUITokenRequest::RequestAuthCode+0x4b2
0b 0000002a`7d0fdf20 00007ff8`30364f16 AAD_Core!`AppUITokenRequest::AcquireToken'::`5'::Task::Complete+0x19b
0c 0000002a`7d0fe200 00007ff8`30365087 AAD_Core!std::_Func_impl<std::_Callable_obj<<lambda_99f8b23cb9b12ee826c318a78aac37d7>,0>,std::allocator<std::_Func_class<void,ITask *,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >,void,ITask *,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::_Do_call+0x36
0d 0000002a`7d0fe250 00007ff8`30364b06 AAD_Core!std::_Func_impl<std::_Callable_obj<<lambda_5bb3e7e0404c6f54d7f1ccaa8b0e27ec>,0>,std::allocator<std::_Func_class<unsigned char,ITask *,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >,unsigned char,ITask *,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::_Do_call+0x27
0e 0000002a`7d0fe290 00007ff8`30364841 AAD_Core!Concurrency::task<ITask *>::_ContinuationTaskHandle<ITask *,void,<lambda_99f8b23cb9b12ee826c318a78aac37d7>,std::integral_constant<bool,0>,Concurrency::details::_TypeSelectorNoAsync>::_Continue+0x166
0f 0000002a`7d0fe360 00007ff8`30175901 AAD_Core!Concurrency::details::_PPLTaskHandle<unsigned char,Concurrency::task<ITask *>::_ContinuationTaskHandle<ITask *,void,<lambda_99f8b23cb9b12ee826c318a78aac37d7>,std::integral_constant<bool,0>,Concurrency::details::_TypeSelectorNoAsync>,Concurrency::details::_ContinuationTaskHandleBase>::operator()+0x81
10 0000002a`7d0fe3d0 00007ff8`3017593b AAD_Core!Custom::_RunChoreBridge+0x21
11 0000002a`7d0fe410 00007ff8`301752de AAD_Core!Concurrency::details::_Task_impl_base::_ScheduleTask+0x1b
12 0000002a`7d0fe450 00007ff8`6997ebe4 AAD_Core!Concurrency::details::_ContextCallback::_Bridge+0x1e
13 0000002a`7d0fe480 00007ff8`689ab4b3 combase!CRemoteUnknown::DoCallback+0x44 [onecore\com\combase\dcomrem\remoteu.cxx @ 1882] 
14 0000002a`7d0fe4d0 00007ff8`68a0e77b RPCRT4!Invoke+0x73
```

BackgroundTaskHost informs that need user interaction to continue:

```
Message: Need user interaction to continue.
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:007> k
 # Child-SP          RetAddr           Call Site
00 000000ac`6137ec40 00007ff8`6842a0a7 KERNELBASE!RaiseException+0x69
01 000000ac`6137ed20 00007ff8`30160431 KERNELBASE!OutputDebugStringW+0xb7
02 000000ac`6137ed90 00007ff8`30186579 AAD_Core!`AAD::Core::Module::FirstInit'::`2'::BrokerLog::Message+0xa1
03 000000ac`6137ee30 00007ff8`3017ea68 AAD_Core!CallbackLogger::Log+0x39
04 000000ac`6137ee70 00007ff8`3017e541 AAD_Core!Log::NotifyLoggers+0x58
05 000000ac`6137eee0 00007ff8`30168058 AAD_Core!Log::NotifyInternal+0x491
06 000000ac`6137f070 00007ff8`3017448a AAD_Core!<lambda_86d928302cba6b3765a0346e94b8f38d>::operator()+0x838
07 000000ac`6137f2a0 00007ff8`30172172 AAD_Core!std::_Func_impl<std::_Callable_obj<<lambda_052e919cc0e5399df76dff3972c0cac1>,0>,std::allocator<std::_Func_class<unsigned char,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >,unsigned char,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::_Do_call+0x1a
08 000000ac`6137f2d0 00007ff8`30171d51 AAD_Core!Concurrency::task<unsigned char>::_ContinuationTaskHandle<void,void,<lambda_86d928302cba6b3765a0346e94b8f38d>,std::integral_constant<bool,0>,Concurrency::details::_TypeSelectorNoAsync>::_Continue+0x192
09 000000ac`6137f3a0 00007ff8`30175901 AAD_Core!Concurrency::details::_PPLTaskHandle<unsigned char,Concurrency::task<unsigned char>::_ContinuationTaskHandle<void,void,<lambda_86d928302cba6b3765a0346e94b8f38d>,std::integral_constant<bool,0>,Concurrency::details::_TypeSelectorNoAsync>,Concurrency::details::_ContinuationTaskHandleBase>::operator()+0x81
0a 000000ac`6137f410 00007ff8`30193a34 AAD_Core!Custom::_RunChoreBridge+0x21
```

Then BackgroundTaskHost seems to be sending a message to AAD Broker that starts the browser UI:

```
Code: 0x4aa90057 (level=2)
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:011> k
 # Child-SP          RetAddr           Call Site
00 0000002a`7d0fa4e0 00007ff8`6842a0a7 KERNELBASE!RaiseException+0x69
01 0000002a`7d0fa5c0 00007ff8`3016040c KERNELBASE!OutputDebugStringW+0xb7
02 0000002a`7d0fa630 00007ff8`30186579 AAD_Core!`AAD::Core::Module::FirstInit'::`2'::BrokerLog::Message+0x7c
03 0000002a`7d0fa6d0 00007ff8`3017ea68 AAD_Core!CallbackLogger::Log+0x39
04 0000002a`7d0fa710 00007ff8`3017e541 AAD_Core!Log::NotifyLoggers+0x58
05 0000002a`7d0fa780 00007ff8`3034c76b AAD_Core!Log::NotifyInternal+0x491
06 0000002a`7d0fa910 00007ff8`3034fe99 AAD_Core!WebUIControllerWebView::OnNavigationStarting+0x36b
07 0000002a`7d0faa90 00007ff8`302347e6 AAD_Core!WebUIControllerWebView::WebViewEvents::OnNavigationStarting+0x119
08 0000002a`7d0face0 00007ff8`30233e94 AAD_Core!`Windows::Foundation::TypedEventHandler<Windows::UI::Xaml::Controls::WebView ^ __ptr64,Windows::UI::Xaml::Controls::WebViewNavigationCompletedEventArgs ^ __ptr64>::TypedEventHandler<Windows::UI::Xaml::Controls::WebView ^ __ptr64,Windows::UI::Xaml::Controls::WebViewNavigationCompletedEventArgs ^ __ptr64><LocalErrorUIControllerWebView::WebViewEvents,void (__cdecl LocalErrorUIControllerWebView::WebViewEvents::*)(Windows::UI::Xaml::Controls::WebView ^ __ptr64,Windows::UI::Xaml::Controls::WebViewNavigationCompletedEventArgs ^ __ptr64) __ptr64>'::`2'::__abi_PointerToMemberWeakRefCapture::Invoke+0xc6
09 0000002a`7d0fad60 00007ff8`5e88a7db AAD_Core!?__abi_Windows_Foundation_?$TypedEventHandler@PE$AAVWebView@Controls@Xaml@UI@Windows@@PE$AAVWebViewNavigationStartingEventArgs@2345@___abi_IDelegate____abi_Invoke@?Q__abi_IDelegate@?$TypedEventHandler@PE$AAVWebView@Controls@Xaml@UI@Windows@@PE$AAVWebViewNavigationStartingEventArgs@2345@@Foundation@Windows@@234@UE$AAAJPE$AAVWebView@Controls@Xaml@UI@4@PE$AAVWebViewNavigationStartingEventArgs@6784@@Z+0x34
0a 0000002a`7d0fada0 00007ff8`5e942808 Windows_UI_Xaml!DirectUI::CEventSourceBase<DirectUI::IUntypedEventSource,Windows::UI::Xaml::Controls::Primitives::IItemsChangedEventHandler,IInspectable,Windows::UI::Xaml::Controls::Primitives::IItemsChangedEventArgs>::Raise+0x8b [onecoreuap\windows\dxaml\xcp\dxaml\lib\JoltClasses.h @ 275] 
0b 0000002a`7d0fae00 00007ff8`5e941a22 Windows_UI_Xaml!DirectUI::WebView::RaiseNavigationStartingEvent+0xcc [onecoreuap\windows\dxaml\xcp\dxaml\lib\webview_partial.cpp @ 1639] 
0c 0000002a`7d0fae50 00007ff8`451453e2 Windows_UI_Xaml!DirectUI::CoreWebViewHost::OnCoreWebViewNavigationStarting+0xe2 [onecoreuap\windows\dxaml\xcp\dxaml\lib\webview_partial.cpp @ 3229] 
0d 0000002a`7d0faed0 00007ff8`453d63a5 edgehtml!CCoreWebViewEventTaskHandler::FireNavigationStarting+0xa2
0e 0000002a`7d0faf60 00007ff8`453d616f edgehtml!CCoreWebViewEventHandler::_FireNavigationStarting+0x181
0f 0000002a`7d0fb030 00007ff8`453d5f39 edgehtml!CCoreWebViewEventHandler::_HandleNavigation+0x213
10 0000002a`7d0fc170 00007ff8`452e7f8a edgehtml!CCoreWebViewEventHandler::OnBeforeNavigate+0x59
11 0000002a`7d0fc1f0 00007ff8`4537b01d edgehtml!FireEvent_BeforeNavigate+0x11a
12 0000002a`7d0fc2b0 00007ff8`4537a768 edgehtml!InvokeConnectionPointCallbacks+0x10d
13 0000002a`7d0fc320 00007ff8`452b6779 edgehtml!CWebPlatformTridentHost::FireBeforeNavigate4+0x168
14 0000002a`7d0fc3d0 00007ff8`452b62fe edgehtml!CWebOCEvents::BeforeNavigate2+0x2e5
15 0000002a`7d0fd560 00007ff8`4528e042 edgehtml!CDoc::FireBeforeNavigateEvent+0x17e
16 0000002a`7d0fd640 00007ff8`4519d7d0 edgehtml!CDoc::DoNavigate+0xdfa
17 0000002a`7d0fda00 00007ff8`45556db9 edgehtml!CDoc::FollowHyperlink2+0xee4
18 0000002a`7d0fdca0 00007ff8`44fcead1 edgehtml!CWindow::FollowHyperlinkHelper+0x5877d9
19 0000002a`7d0fde20 00007ff8`45217fb6 edgehtml!CWindow::NavigateEx+0x171
1a 0000002a`7d0fdf80 00007ff8`447f3aeb edgehtml!COmLocationProxy::InvokeEx+0x626
1b 0000002a`7d0fe0c0 00007ff8`447f34da chakra!HostDispatch::CallInvokeExInternal+0xcb
1c 0000002a`7d0fe150 00007ff8`447f3217 chakra!HostDispatch::CallInvokeHandler+0x96
1d 0000002a`7d0fe1d0 00007ff8`4476916a chakra!HostDispatch::CallInvokeEx+0xc3
1e 0000002a`7d0fe2b0 00007ff8`44769054 chakra!HostDispatch::InvokeMarshaled+0x76
1f 0000002a`7d0fe300 00007ff8`44768d1a chakra!HostDispatch::InvokeByDispId+0x32c
20 0000002a`7d0fe4a0 00007ff8`449935c6 chakra!DispMemberProxy::DefaultInvoke+0x4a
21 0000002a`7d0fe4e0 00007ff8`4489c02b chakra!amd64_CallFunction+0x86
22 0000002a`7d0fe530 00007ff8`4488b621 chakra!Js::InterpreterStackFrame::OP_CallCommon<Js::OpLayoutDynamicProfile<Js::OpLayoutT_CallIWithICIndex<Js::LayoutSizePolicy<0> > > >+0x2db
23 0000002a`7d0fe5f0 00007ff8`4488b0e4 chakra!Js::InterpreterStackFrame::ProcessUnprofiled+0x1f1
24 0000002a`7d0fe670 00007ff8`44889d06 chakra!Js::InterpreterStackFrame::Process+0x164
25 0000002a`7d0fe6d0 00007ff8`448891ee chakra!Js::InterpreterStackFrame::InterpreterHelper+0x4e6
26 0000002a`7d0fe9c0 00000173`980005e2 chakra!Js::InterpreterStackFrame::InterpreterThunk+0x4e
27 0000002a`7d0fea10 00007ff8`449935c6 0x00000173`980005e2
28 0000002a`7d0fea40 00007ff8`44883beb chakra!amd64_CallFunction+0x86
29 0000002a`7d0fea90 00007ff8`448838f8 chakra!Js::JavascriptFunction::CallRootFunctionInternal+0x2cb
2a 0000002a`7d0fec60 00007ff8`4488383a chakra!Js::JavascriptFunction::CallRootFunction+0x78
2b 0000002a`7d0fecf0 00007ff8`44883713 chakra!ScriptSite::CallRootFunction+0x6a
2c 0000002a`7d0fed50 00007ff8`448834d1 chakra!ScriptSite::Execute+0x193
2d 0000002a`7d0fede0 00007ff8`45240e79 chakra!ScriptEngineBase::Execute+0x191
2e 0000002a`7d0fee90 00007ff8`45240dc9 edgehtml!CJScript9Holder::ExecuteCallbackDirect+0x3d
2f 0000002a`7d0feee0 00007ff8`45240c7d edgehtml!CJScript9Holder::ExecuteCallback+0x59
30 0000002a`7d0fef30 00007ff8`452408df edgehtml!CScriptTimer::ExecuteTimer+0x1ad
31 0000002a`7d0ff000 00007ff8`4538a320 edgehtml!CScriptTimerManager::OnTick+0x17f
32 0000002a`7d0ff0a0 00007ff8`4538a185 edgehtml!CPaintAlignedTimerManager<CPaintBeat>::ProcessTimers+0x160
33 0000002a`7d0ff150 00007ff8`4539a12e edgehtml!CPaintBeat::OnProcessTimersTask+0x65
34 0000002a`7d0ff180 00007ff8`453abedb edgehtml!CPaintBeatContainedTimerSink<CPaintBeat>::OnTimerMethodCall+0x8e
35 0000002a`7d0ff1b0 00007ff8`45229fdb edgehtml!GWndAsyncTask::Run+0x1b
36 0000002a`7d0ff1e0 00007ff8`45316b35 edgehtml!HTML5TaskScheduler::RunReadiedTask+0x26b
37 0000002a`7d0ff2b0 00007ff8`4522f5d2 edgehtml!HTML5TaskScheduler::RunReadiedTasks+0x1a5
38 0000002a`7d0ff3f0 00007ff8`4522f480 edgehtml!HTML5EventLoopDriver::DriveLowPriorityTaskExecution+0x142
39 0000002a`7d0ff430 00007ff8`4522f8f5 edgehtml!GlobalWndOnPaintPriorityMethodCall+0x74
3a 0000002a`7d0ff460 00007ff8`68a6e858 edgehtml!GlobalWndProc+0x265
3b 0000002a`7d0ff4f0 00007ff8`68a6e3dc user32!UserCallWinProcCheckWow+0x2f8
3c 0000002a`7d0ff680 00007ff8`68a80c33 user32!DispatchClientMessage+0x9c
3d 0000002a`7d0ff6e0 00007ff8`6a970e94 user32!_fnDWORD+0x33
3e 0000002a`7d0ff740 00007ff8`682b1704 ntdll!KiUserCallbackDispatcherContinue
3f 0000002a`7d0ff7c8 00007ff8`68a6e2ea win32u!NtUserDispatchMessage+0x14
40 0000002a`7d0ff7d0 00007ff8`5feca98b user32!DispatchMessageWorker+0x29a
41 0000002a`7d0ff850 00007ff8`5feca680 Windows_UI!Windows::UI::Core::CDispatcher::ProcessMessage+0x18b [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 320] 
42 0000002a`7d0ff900 00007ff8`5feca50b Windows_UI!Windows::UI::Core::CDispatcher::WaitAndProcessMessagesInternal+0xc0 [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 1950] 
43 0000002a`7d0ffa10 00007ff8`5eaf30b0 Windows_UI!Windows::UI::Core::CDispatcher::ProcessEvents+0x7b [onecoreuap\windows\advcore\winrt\onecoreiwindow\corewindow\common\dispatcher.cpp @ 596] 
44 0000002a`7d0ffac0 00007ff8`5eaf304f Windows_UI_Xaml!CJupiterWindow::RunCoreWindowMessageLoop+0x4c [onecoreuap\windows\dxaml\xcp\dxaml\lib\jupiterwindow.cpp @ 1234] 
45 (Inline Function) --------`-------- Windows_UI_Xaml!CJupiterControl::RunMessageLoop+0x1f [onecoreuap\windows\dxaml\xcp\dxaml\lib\jupitercontrol.cpp @ 1065] 
46 0000002a`7d0ffaf0 00007ff8`5f9e5dca Windows_UI_Xaml!DirectUI::DXamlCore::RunMessageLoop+0x47 [onecoreuap\windows\dxaml\xcp\dxaml\lib\dxamlcore.cpp @ 2463] 
47 0000002a`7d0ffb60 00007ff8`5f99e65f twinapi_appcore!Windows::ApplicationModel::Core::CoreApplicationView::Run+0x3a
48 0000002a`7d0ffb90 00007ff8`6a5fbf69 twinapi_appcore!<lambda_643db08282a766b00cec20194396f531>::operator()+0x1ef
49 0000002a`7d0ffc30 00007ff8`6a747614 shcore!_WrapperThreadProc+0xe9
```

BackgroundTaskHost finishes, but now RuntimeBroker seems to be receiving from AAD Broker some invokes:

```
Code: 0x4aa5009a (level=2)
KERNELBASE!RaiseException+0x69:
00007ff8`6841cf19 0f1f440000      nop     dword ptr [rax+rax]
0:001> k
 # Child-SP          RetAddr           Call Site
00 00000067`9fafd1f0 00007ff8`6842a0a7 KERNELBASE!RaiseException+0x69
01 00000067`9fafd2d0 00007ff8`490173bc KERNELBASE!OutputDebugStringW+0xb7
02 00000067`9fafd340 00007ff8`4902e3f9 aadtb!`Module::FirstInit'::`2'::BrokerLog::Message+0x7c
03 00000067`9fafd3e0 00007ff8`4902a2d8 aadtb!CallbackLogger::Log+0x39
04 00000067`9fafd420 00007ff8`49029db1 aadtb!Log::NotifyLoggers+0x58
05 00000067`9fafd490 00007ff8`4905171e aadtb!Log::NotifyInternal+0x491
06 00000067`9fafd620 00007ff8`4900493b aadtb!SSOCookieManager::GetSessionKeysForWPJ+0x53e
07 00000067`9fafd810 00007ff8`689ab4b3 aadtb!Windows::Internal::AAD::BrowserSSO::CookieStoreStatics::GetSessionKeysForWPJ+0x2cb
08 00000067`9fafdc80 00007ff8`68a0e77b RPCRT4!Invoke+0x73
```

```
sxn out
```

RuntimeBroker:

```
0:001> g
Details: Logged at SSOCookieManager.cpp, line: 862, method: SSOCookieManager::GetSessionKeysForWPJ.
Code: 0x4aa5009a (level=2)
Message: Browser SSO is not registered.
Details: Logged at SSOCookieManager.cpp, line: 862, method: SSOCookieManager::GetSessionKeysForWPJ.
```

AAD Broker:

```
Code: 0x4aa90057 (level=2)
Message: Starting UI navigation.
Details: Starting navigation to https://dlp.os33dev.com/signin/
Logged at WebUIControllerWebView.cpp, line: 281, method: WebUIControllerWebView::OnNavigationStarting.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://api.spaces.skype.com, correlation ID (request): d5d49d5d-3530-4bc5-b786-e94da7777624
(a00.1f54): C++ EH exception - code e06d7363 (first chance)
...
(a00.1f54): C++ EH exception - code e06d7363 (first chance)
ModLoad: 00007ff8`5df10000 00007ff8`5e0c4000   C:\Windows\system32\windowscodecs.dll
ModLoad: 00007ff8`5bab0000 00007ff8`5bad9000   C:\Windows\SYSTEM32\Cabinet.dll
onecore\com\combase\dcomrem\preventrundownbias.cpp(1310)\combase.dll!00007FF86994BF8C: (caller: 00007FF86994BDB9) LogHr(5) tid(1974) 80070005 Access is denied.
ModLoad: 00007ff8`58b40000 00007ff8`58b65000   C:\Windows\SYSTEM32\globinputhost.dll
(a00.b40): C++ EH exception - code e06d7363 (first chance)
(a00.1f54): C++ EH exception - code e06d7363 (first chance)
```

[IBackgroundTask]: https://learn.microsoft.com/en-us/uwp/api/Windows.ApplicationModel.Background.IBackgroundTask?view=winrt-22621

TL;DR Discovered BackgroundTaskHost receives an instance of IBackgroundTask (probably) with login hint and other information and seems to orchestrates AAD Broker and RuntimeBroker thry AAD.Core.dll module. When needs user interaction AAD Broker is activated, but BackgroundTaskHost does not seems to need to activate it if there is already credentials in cache. Lsa is used in some of the processes. I think that for mark inside SE thread we are going to need to hook since BackgroundTaskHost. It should be enough to manipulate IBackgroundTask into it, but AAD Broker communication is made using messages (and RuntimeBroker using remote invoke).


= New strategy: use Client ID from AAD Broker (COM hook)
:date: 2023-10-02
:tags: tag_venn tag_reversing

Abandoned the idea of scan IBackgroundTask because was discovered that we can hook creation of [WebProviderTokenRequest] inside AAD Broker and use its property `ClientId` to identify clients inside SE. Going to work in a POC using that.

Methods using WebProviderTokenRequest (CLSID A64CAF32-08CD-4054-BFD5-983BEDA9264A) from IDA free:


```
AcquireTokenContext::SetTokenRequest(Windows::Security::Authentication::Web::Provider::WebProviderTokenRequest *)
ClientCache::UpdateOrCreateWebAccount(Windows::Security::Authentication::Web::Provider::WebProviderTokenRequest *,ADALRT::AuthorizationClient *,ADALRT::AuthorizationResult *,std::shared_ptr<TestModifier> const &)
GetTokenBrokerOperationBase::GetBrokerRedirectUri(Windows::Security::Authentication::Web::Provider::WebProviderTokenRequest *)
GetTokenBrokerOperationBase::LoadFromCache(Windows::Security::Authentication::Web::Provider::WebProviderTokenRequest *)
```

Commands from WinDbg without hook (to use in BackgroundTaskHost):

```
sxe ld:aad.core.dll
bp aad_core!AcquireTokenContext::SetTokenRequest
bp aad_core!ClientCache::UpdateOrCreateWebAccount
bp aad_core!GetTokenBrokerOperationBase::GetBrokerRedirectUri
bp aad_core!GetTokenBrokerOperationBase::LoadFromCache
```

Once found a vtable use this command to list pointers:

```
dp <address> L200
```

After that disassembly the start of each address:

```
u 00007ff8`50532ca0 
u 00007ff8`505335d0 
u 00007ff8`505314c0 
...
```

E.g.:

```
Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Provider::CWebProviderTokenRequest::get_ApplicationProcessName:
00007ff8`5058cc40 488b4978        mov     rcx,qword ptr [rcx+78h]
00007ff8`5058cc44 48ff2565260400  jmp     qword ptr [Windows_Security_Authentication_Web_Core!_imp_WindowsDuplicateString (00007ff8`505cf2b0)]
00007ff8`5058cc4b cc              int     3

Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Provider::CWebProviderTokenRequest::get_ApplicationPackageFamilyName:
00007ff8`5058cbb0 48895c2418      mov     qword ptr [rsp+18h],rbx
00007ff8`5058cbb5 57              push    rdi
00007ff8`5058cbb6 4883ec50        sub     rsp,50h
00007ff8`5058cbba 488b056fd90600  mov     rax,qword ptr [Windows_Security_Authentication_Web_Core!_security_cookie (00007ff8`505fa530)]
00007ff8`5058cbc1 4833c4          xor     rax,rsp
00007ff8`5058cbc4 4889442448      mov     qword ptr [rsp+48h],rax
...
```

Breakpoint in `ClientRequest` property:

```
sxe ld:Windows.Security.Authentication.Web.Core.dll
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Provider::CWebProviderTokenRequest::get_ClientRequest
```

[WebProviderTokenRequest]: https://learn.microsoft.com/en-us/uwp/api/windows.security.authentication.web.core.webtokenrequest?view=winrt-22621


= Get client id inside AAD Broker
:date: 2023-10-04
:tags: tag_venn tag_reversing

### Plan A: Instanciate WebProviderTokenRequest proxied

Detected creation of WebProviderTokenRequest (`a64caf32-08cd-4054-bfd5-983beda9264a`) inside AAD Broker, but not sure yet when to get client id from its properties.

AAD Broker asks for IMarshall interface always. IOW it is receiving a remote object. So we got to get remote calls?

Adapt ComProtection in another class and removed every CLSID except WebProviderTokenRequest, but AAD Broker is hanging when being hooked by proxy.

The error occurs soon after WebProviderTokenRequest is proxied by our hook with code "Interface not registered" (0x80040155):

```
2023-10-04 13:54:31.102 - [INFO] - [1:8264:8952] - [microsoft.aad.brokerplugin.exe] - [COM] - IsOpenClsid (true). Has CLSCTX_LOCAL_SERVER: false. rclsid: a64caf32-08cd-4054-bfd5-983beda9264a, friendly name: WebProviderTokenRequest Object, clsctx: 1027
2023-10-04 13:54:31.126 - [INFO] - [1:8264:8952] - [microsoft.aad.brokerplugin.exe] - [COM] - ComProxyIpcClient::ComGetClassObject rclsid=a64caf32-08cd-4054-bfd5-983beda9264a; return retObjectId=c9b2b188-b061-424d-9f77-7ef4740bf2a3. hr=0
2023-10-04 13:54:31.130 - [INFO] - [1:8264:8952] - [microsoft.aad.brokerplugin.exe] - [COM] - ComProxyIpcClient::ComCreateInstance objectId=c9b2b188-b061-424d-9f77-7ef4740bf2a3; iid=00000003-0000-0000-c000-000000000046; return retObjectId=c9b2b188-b061-424d-9f77-7ef4740bf2a3. hr=80040155
2023-10-04 13:54:31.131 - [WARN] - [1:8264:8952] - [microsoft.aad.brokerplugin.exe] - [COM] - IClassFactoryComProxy::CreateInstance. COM Server returns hr=80040155. ClsId: a64caf32-08cd-4054-bfd5-983beda9264a. Interface Id: 00000003-0000-0000-c000-000000000046
2023-10-04 13:54:31.131 - [WARN] - [1:8264:8952] - [microsoft.aad.brokerplugin.exe] - [COM] - CoCreateInstance failed; rclsid=a64caf32-08cd-4054-bfd5-983beda9264a; CreateInstance hr=80040155; riid=00000003-0000-0000-c000-000000000046;
2023-10-04 13:54:31.131 - [WARN] - [1:8264:8952] - [microsoft.aad.brokerplugin.exe] - [COM] - AADBrokerMonitor_CoUnmarshalInterface_Hook. Failed to call original function. hr=80040155, riid=00000000-0000-0000-0000-000000000000
```

This is happening as a response from the method `ComProxyIpcClient::UniversalClientSendRequest`, that tries to complete the call to `IClassFactoryComProxy::CreateInstance` as the method from hooked vtable.


### Plan B: Remote instantiate and query for client id

Studying about call winrt method using query interface return from ComProtection. Maybe this is not the usual way, because I didn't found any example in the repos with winrt as a C++ namespace.

TL;DR Plan A: Created a ComProtection class with only WebProviderTokenRequest in OpenClsid list for AAD Broker but it gives the error 0x80040155 when trying to create instance using `ComProxyIpcClient::UniversalClientSendRequest`. Plan B: Studying to use winrt C++ to use original proxy, but dunno if this is the usual way (didn't find winrt examples in the codebase).


= Copy the solution from ToastNotification
:date: 2023-10-05
:tags: tag_venn tag_reversing

```
sxe ld:workplacehook64.dll
sxe out
bm workplacehook64!Ro*_Hook
bp WorkplaceHook64!RoActivateInstance_Hook+0xb4 "dv strClassId ; g"
bp WorkplaceHook64!RoGetActivationFactory_Hook+0xe6 "dv strClassId ; g"
bp WorkplaceHook64!RoGetActivationFactory_Hook+0x100
```

No `Ro*` function is called to activate `WebProviderTokenRequest` before `OutputDebugString` prints client id/login hint; despite being winrt the interface is obtained by RPC proxy using marshal interface.

However, if we insist using winrt we could use `TokenBrokerInternal` if we catch some method to locate client id (already marshalled in BackgroundTaskHost). Need to investigate further, though (more time spending).

Next step is to avaliate which one could be faster to implement:

 - Copy the WMI protection (intercept request buffers in ComProxy invoke)
 - Look where interfaces are being unmarshaled

TL;DR Work to copy the solution from ToastNotification about `WebProviderTokenRequest` class, but no `Ro*` function is called to activate `WebProviderTokenRequest` before `OutputDebugString` prints client id/login hint; despite being winrt the interface is obtained by RPC proxy using marshal interface (because this is a remote instance). If could insist using winrt if focus on `TokenBrokerInternal`, but need time to investigate and locate client id. Going to try two alternatives first pointed out by Chermyanin: copy the WMI protection (intercept request buffers in ComProxy invoke) and look where interfaces are being unmarshaled.


= Trying to get client id from unmarshal interfaces from AAD Broker
:date: 2023-10-06
:tags: tag_venn tag_reversing

Recap from last try. The solution from ToastNotification uses winrt lib, but `WebProviderTokenRequest` uses RPC proxy with marshaling (because this is a remote instance?). But what if I could use the same vtable hook strategy to get and deliver the interfaces I need?

```
sxe ld:workplacehook64.dll
bm WorkplaceHook64!AADBrokerMonitor_CoCreateInstance_Hook
```

I could query the interface for IWebAccountProvider, but trying to get ClientRequest returned success with a null value.

So I need to install a proxy and monitor the moment a QueryInterface for this class is getting this interface and so maybe monitor this interface, too.

Putting more marshal logs gave me a crashing aad broker, perhaps:

```
(3790.3608): Windows Runtime Originate Error - code 40080201 (first chance)
ModLoad: 00007ffe`7cf50000 00007ffe`7cf7e000   C:\Windows\SYSTEM32\profext.dll
onecoreuap\shell\coreapplication\application\lib\coreapplication.cpp(1422)\twinapi.appcore.dll!00007FFE769B4D3E: (caller: 00007FFE7693E8DA) ReturnHr(1) tid(3608) 8003001E A disk error occurred during a read operation.
    CallContext:[\AppRunOrActivateView] 
win32u!NtUserMsgWaitForMultipleObjectsEx+0x14:
00007ffe`7ea4a104 c3              ret
0:018> g
       ^ No runnable debuggees error in 'g'
```

Reverting the change. Works. Analysing the version that does not work:

```
bm WorkplaceHook64!AADBrokerMonitor_CoUnmarshalInterface_Hook
```

Does not work because the seek operation for IStream does not work for all interfaces being unmarshaled.

I changed the AADBrokerMonitor_CoUnmarshalInterface_Hook to read the bytes to a StreamWP and then use it to unmarshal (the oficial way). The idea is to use the header to log what the real IID (and not the NULL_IID).

However, I getting some errors by using the implementation. Dealing with that now.

TL;DR Queried the unmarshal interface for IWebProviderTokenRequest, but trying to get ClientRequest returned success with a null value (perhaps not set yet). Monitoring QueryInterface calls for this class. Trying to put more logs in marshal operation, but need to adjust StreamWP because the IStream received does not support another Read call after original CoUnmarshal. The idea now is to get the real IID from unmarshal operations (not the IID_NULL) and track where is the client id being brought to broker.

TL;DR2 I thought I was getting there putting a small COM hook (AAD Broker) to get the instantiation of  WebProviderTokenRequest and then access ClientId. I could after CreateInstance, but ClientRequest member was null at this time. so I am tryint to proxy the IMarshal to watch when some key method is being called or to know when ClientId is available. however, I got stuck into some issues manipulating IStream from this object because it is not rereadable. I am trying to swtich to the StreamWP class (but there are some code to write to this class yet)


= Fixed a error related to StreamWP class
:date: 2023-10-09
:tags: tag_venn tag_reversing

Fixed a error related to StreamWP class (the IStream mock replaced by original in proxy hook) where the bytes read is bigger than the first read, but still getting some stream errors. Investigating why.

I am reverting the StreamWP replacement (didn't work) and the protection installed (AADMonitor): this works. Now getting back the versions until StreamWP is working again. I saw some error logs before changing versions, but that is from the past.


= Troubleshotting session and... at last got ClientId!
:date: 2023-10-10
:tags: tag_venn tag_reversing

Here is a smart snippet to print some hex buffer (already available in my issue comments):

```
std::wstring IpcUtils::PrintBuffer(const std::vector<unsigned char> &buffer)
{
    std::wstringstream wss;
    wss << L"[";
    const auto length = min(buffer.size(), 64);
    for (auto i = 1ULL; i < length; ++i)
    {
        wss << std::dec << buffer[i - 1] << L",";
    }
    if (!buffer.empty())
    {
        wss << std::dec << buffer[length - 1];
    }
    if(buffer.size() > length)
    {
        wss << L"...";
    }
    wss << L"][";
    for (auto i = 1ULL; i < length; ++i)
    {
        wss << (isprint(buffer[i - 1]) ? wchar_t(buffer[i - 1]) : L'.');
    }
    wss << L"]";
    return wss.str();
}
```

I could read the bytes read from the original IStream by implementing an observer. Now I am going to track the real IID from each unmarshaling operation by looking into OBJREF signatures (MEOW). With this I get the IWebProviderTokenRequest being requested. Keeping the last IID read into the observer I can in the CoUnmarshalInterface function to get the ClientRequest property and then the ClientId property inside.

Implemented StreamObserver and could see interfaces being unmarshalled. However, there is still no clue as how to get clientid using this object being passed and since where it is available. There are just logs of when the key interfaces IWebProviderTokenRequest and IWebTokenRequest are used in CreateInstance and CoUnmarshal.

It seems I overlooked the assembly from this call. Going two steps backwards to get some insight into the call from AAD Broker or BackgroundTaskHost.

There is QueryInterface to CIWebTokenRequest, but no CoUnmarshalInterface to IWebTokenRequest (where client id is).


At last I got the ClientId from WebProviderTokenRequest in the CoUnmarshalInterface call from AAD Broker (Teams):

```
2023-10-10 22:58:49.664 - [INFO] - [1:7328:5340] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. riid=00000000-0000-0000-0000-000000000000, header.iid=1e18778b-8805-454b-9f11-468d2af1095a
2023-10-10 22:58:49.665 - [INFO] - [1:7328:5340] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. IWebProviderTokenRequest
2023-10-10 22:58:49.665 - [INFO] - [1:7328:5340] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. ClientRequest is NOT null
2023-10-10 22:58:49.665 - [INFO] - [1:7328:5340] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. ClientId=1fec8e78-bce4-4aaf-ab1b-5451cc387264
2023-10-10 22:58:49.665 - [INFO] - [1:7328:5340] - [microsoft.aad.brokerplugin.exe] - [CLP] - StreamObserver::~StreamObserver(). IStream=0000020138F2BAC0
```

TL;DR Worked into the CoUnmarshalInterface to get from IStream the real IID inside OBJREF header to know when IWebProviderTokenRequest is obtained. Could extract the ClientId from that interface during CoUnmarshalInterface (it was empty in the CreateInstance call in previous tries).


= Getting (and setting) properties in WebTokenRequest
:date: 2023-10-13
:tags: tag_venn tag_reversing

Since modifying the client id seems not so feasible, but we got now a WebTokenRequest to play with in AAD Broker I was trying to change the properties field to see if it is easy enough. And after sweating a little bit to make this work into WorkplaceHook.dll (because there is no doc about to link native with HSTRING API) I was able to query a key and insert a new one. As a proof AAD Broker itself prints the "Workplace" key I inserted during the unmarshaling to the debugger output:

img/add_workplace_webtokenrequest_properties.png

I also printed the callback URI for Application and the number of properties available:

```
2023-10-13 18:12:33.554 - [INFO] - [1:1804:7900] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. IWebProviderTokenRequest
2023-10-13 18:12:33.554 - [INFO] - [1:1804:7900] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. ApplicationCallbackUri(Absolute)=ms-app://S-1-5-11/
2023-10-13 18:12:33.554 - [INFO] - [1:1804:7900] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. ClientRequest is NOT null
2023-10-13 18:12:33.554 - [INFO] - [1:1804:7900] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. ClientId=1fec8e78-bce4-4aaf-ab1b-5451cc387264
2023-10-13 18:12:33.555 - [INFO] - [1:1804:7900] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. WebTokenRequest.propertiesSize=5
2023-10-13 18:12:33.554 - [INFO] - [1:1804:7900] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. IWebProviderTokenRequest
```

The only thing seems a mistery is how to enumerate keys and values from this hash map.

TL;DR Could find the LoginHint inside WebTokenRequest.Properties and to insert a new key/value pair. The result is printed to debugger output by AAD Broker itself.


= Insert Workplace flag in client app as a WebTokenRequest property
:date: 2023-10-16
:tags: tag_venn tag_reversing

When running inside SE inside the WebTokenRequest object will be inserted [a property] with key "Workplace" (value "true"), what will be delivered to AAD Broker during signin. This way we can know if the client app is running inside or outside SE at the moment of unmarshaling this interface.

```
[teams.exe] - [WRT] - IWebTokenRequestFactoryProxy::InsertWorkplaceFlag insert succeeded. result=0.
...
[microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. IWebProviderTokenRequest
[microsoft.aad.brokerplugin.exe] - [COM] - ... ApplicationCallbackUri(Absolute)=ms-app://S-1-5-11/
[microsoft.aad.brokerplugin.exe] - [COM] - ... ClientRequest is NOT null
[microsoft.aad.brokerplugin.exe] - [COM] - ... ClientId=1fec8e78-bce4-4aaf-ab1b-5451cc387264
[microsoft.aad.brokerplugin.exe] - [COM] - ... WebTokenRequest.propertiesSize=6
[microsoft.aad.brokerplugin.exe] - [COM] - ... WebTokenRequest.Properties[Workplace] already set as true
[microsoft.aad.brokerplugin.exe] - [COM] - ... WebTokenRequest.propertiesSize=6
```

[a property]: https://tfs.os33.net/DefaultCollection/Portal/_git/Workplace.Container.Windows/commit/e437b1a0966cfe222df7a06f1f0f003089c0706b?refName=refs%2Fheads%2FROADMAP-69325-e-spike-enable-blockaadworkplacejoin-policy-to-aad-broker-process-outside-container-if-activated-inside-container

TL;DR Insert Workplace flag in client app (Teams) as a WebTokenRequest property and could prove this object with the new property is received in AAD Broker. So with this we can know if a client app is running inside or outside SE when AAD Broker is unmarshaling some WebTokenRequest interface. Still we have to relate this with the signin window AAD Broker creates, though.

## Windows Internals Security (SIDs, Tokens and stuff)

> To control who can manipulate an object, the security system must first be sure of each user’s identity. This need to guarantee the user’s identity is the reason that Windows requires authenticated logon before accessing any system resources.

> When a process requests a handle to an object, the object manager and the security system use the caller’s security identification and the object’s security descriptor to determine whether the caller should be assigned a handle that grants the process access to the object it desires.

> It’s important to keep in mind that all the threads in a process share the same handle table, so when a thread opens an object—even if it’s impersonating—all the threads of the process have access to the object.

> The Windows integrity mechanism is used by User Account Control (UAC) elevations, User Interface Privilege Isolation (UIPI) and AppContainers,

> Instead of using names (which might or might not be unique) to identify entities that perform actions in a system, Windows uses security identifiers (SIDs). Users have SIDs, as do local and domain groups, local computers, domains, domain members, and services.

> A SID is a variable-length numeric value that consists of a SID structure revision number, a 48-bit identifier authority value, and a variable number of 32-bit subauthority or relative identifier (RID) values.

> Every process has an integrity level that is represented in its token

> Objects also have an integrity level stored as part of their security descriptor, in a structure that is called the mandatory label.

> Apart from an integrity level, objects also have a mandatory policy, which defines the actual level of protection that’s applied based on the integrity-level check.

> Tokens vary in size because different user accounts have different sets of privileges and associated group accounts. However, all tokens contain the same types of information.

> A token’s default primary group field and default discretionary access control list (DACL) field are security attributes that Windows applies to objects that a process or thread creates when it uses the token.

> You can examine the token for a process with the !token command. You’ll find the address of the token in the output of the !process command.


= Add postfix into account being added in AAD Broker
:date: 2023-10-17
:tags: tag_venn tag_reversing

First I cleaned the spike to remove unused and test code and implemented the WorkplaceId idea from Chermyanin with a fixed GUID. These two lines in log indicate the client app is running inside SE or outside.

Outside SE:

```
2023-10-17 17:59:27.300 - [INFO] - [1:9360:4864] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. IWebProviderTokenRequest
2023-10-17 17:59:27.301 - [INFO] - [1:9360:4864] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. ClientRequest is NOT null
2023-10-17 17:59:27.302 - [INFO] - [1:9360:4864] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. ClientId=1fec8e78-bce4-4aaf-ab1b-5451cc387264
2023-10-17 17:59:27.302 - [INFO] - [1:9360:4864] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. WebTokenRequest.propertiesSize=5
2023-10-17 17:59:27.303 - [INFO] - [1:9360:4864] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. WebTokenRequest.Properties[WorkplaceId] not set
```

Inside SE:

```
2023-10-17 17:58:04.225 - [INFO] - [1:9328:12260] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. IWebProviderTokenRequest
2023-10-17 17:58:04.226 - [INFO] - [1:9328:12260] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. ClientRequest is NOT null
2023-10-17 17:58:04.226 - [INFO] - [1:9328:12260] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. ClientId=1fec8e78-bce4-4aaf-ab1b-5451cc387264
2023-10-17 17:58:04.226 - [INFO] - [1:9328:12260] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. WebTokenRequest.propertiesSize=6
2023-10-17 17:58:04.226 - [INFO] - [1:9328:12260] - [microsoft.aad.brokerplugin.exe] - [COM] - ==== Call AADBrokerMonitor_CoUnmarshalInterface_Hook. WebTokenRequest.Properties[WorkplaceId] is {cba72e52-183e-4641-b542-58f22102d145}
```

I had an issue about signin using AAD Broker using `dev@dlp.os33dev.com` (an error about I am not authorized to login as dev, only wcaloni.dlp) and Georgy Malyshev helped me by disabling the feature DLP_PROXY_PORTAL_AUTH_ENABLED that authenticate each request using proxy server; when trying to login as dev the web proxy swap the header to login as wcaloni.dlp (the user logged inside SE). This is just FYI in case I need to reconfigure my user.

Anyway, I put a log about unmarshaling WebTokenRequestResult, but unfortunately this interface is not used in this place by AAD Broker. Perhaps it is another object/interface or another point (a CreateInstance or other). Investigating further I found in the RoGetActivationFactory logs what must be the more promissing class [WebAccountManager], including the methods `AddWebAccount*`.

```
RoGetActivationFactory classId=Windows.Security.Authentication.Web.Provider.WebAccountManager; iid=00000035-0000-0000-c000-000000000046
```

[WebAccountManager]: https://learn.microsoft.com/en-us/uwp/api/windows.security.authentication.web.provider.webaccountmanager?view=winrt-22621

TL;DR Added fixed GUID in WorkplaceId property to WebTokenRequest to identify AAD Broker threads activated from inside SE. Investigated what will be the class/interface to be manipulated to add postfix "_se" to WebAccounts added from AAD Broker; found the most promising will be WebAccountManager (because of their `AddWebAccount*` methods).


= Installing proxy hook to WebAccountManager and changing user id (some issues to solve yet)
:date: 2023-10-18
:tags: tag_venn tag_reversing

I implemented proxies for every interface implemented by WebAccountManager. However, when testing I realized AAD Broker acquires IWebAccountMapManagerStatics (responsible for saving the account per app) using `combase!IUnknown_QueryInterface_Proxy` after querying for IUnknown inside some other WebAccountManager (IWebAccountManagerStatics).

```
bm workplacehook64!RoGetActivationFactory_Hook
bm workplacehook64!IWebAccount*

0:048> bp combase!IUnknown_QueryInterface_Proxy "dx -r1 ((WorkplaceHook64!_GUID *)@rdx)"
breakpoint 0 redefined
0:048> g
((WorkplaceHook64!_GUID *)@rdx)                 : 0x68243f8d8 : {E8FA446F-3A1B-48A4-8E90-1E59CA6F54DB} [Type: _GUID *]
    [<Raw View>]     [Type: _GUID]
combase!IUnknown_QueryInterface_Proxy:
00007ffd`0c027120 488b4910        mov     rcx,qword ptr [rcx+10h] ds:000001c6`ab131318=000001c6ab131180

reg query HKEY_CLASSES_ROOT\Interface\{E8FA446F-3A1B-48A4-8E90-1E59CA6F54DB}

HKEY_CLASSES_ROOT\Interface\{E8FA446F-3A1B-48A4-8E90-1E59CA6F54DB}
    (Default)    REG_SZ    __x_Windows_CSecurity_CAuthentication_CWeb_CProvider_CIWebAccountMapManagerStatics
```

So I implemented a wrapper to IUnknown (I know there is a simpler solution in the source base, but I couldn't realize fast enough).

With that it was possible to hook the method `IWebAccountMapManagerStatics::AddWebAccountWithScopeAndMapAsync`:

```
WorkplaceHook64!IWebAccountMapManagerStaticsProxy::AddWebAccountWithScopeAndMapAsync+0x25:
00007ffc`c9a35c65 488b442470      mov     rax,qword ptr [rsp+70h] ss:0000008a`5f63f5a0=0000027a7afaebe0
0:051> dv
               This = 0x0000027a`7afaebe0
       webAccountId = 0x00000282`7f2ff150 "bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w"
 webAccountUserName = 0x0000027a`7ad47160 "dev@dlp.os33dev.com"
              props = 0x0000027a`7aff9530
              scope = WebAccountScope_PerApplication (0n1)
perUserWebAccountId = 0x00000282`7e544600 "u:7095b98f-3307-49eb-a001-8e3d4e4fd403.60bc6957-78ac-4ce4-922c-538277aaecc4"
          asyncInfo = 0x0000008a`5f63f5e8
                 hr = 0x6c400340
```

I changed the method `IWebAccountMapManagerStatics::AddWebAccountWithScopeAndMapAsync` to add the posfix `_se` to WebAccountId and UserName (testing both). However, after that modification I observed Teams is not finishing the signin process successfully, restarting into the login Window. Even if I just call the original method. Still figuring out why.

Besides, Oleh sent me its branch and it seems we are working in the same task (modify or monitor WebAccountManager interfaces), but I was following the WinRt protection way and Oleh was following the COMProxy. It would be good to decide to using only one and merge the spikes.

TL;DR Implemented proxy to all WebAccountManager interfaces, adapted to IUnknown to get `IWebAccountManagerStatics` but found issues about finishing signin in Teams. Read Oleh's branch that uses COMProxy instead of WinRT protection (as I), but it seems we are working into the same task. Need to merge work or align tasks to avoid duplicate effort.


= Integrating filtering + context branches
:date: 2023-10-19
:tags: tag_venn tag_reversing

The Oleh's solution to hook WebAccountManager worked until the `IWebAccountMapManagerStatics::AddWebAccountWithScopeAndMapAsync` call (starting Teams normally), so I merged both branches to mine and added the WebAccountId or UserName change implementation inside it.

```
HRESULT STDMETHODCALLTYPE WebAccountManager::AddWebAccountWithScopeAndMapAsync(
    HSTRING webAccountId,
    HSTRING webAccountUserName,
    __FIMapView_2_HSTRING_HSTRING* props,
    ABI::Windows::Security::Authentication::Web::Provider::WebAccountScope scope,
    HSTRING perUserWebAccountId,
    __FIAsyncOperation_1_Windows__CSecurity__CCredentials__CWebAccount** asyncInfo)
{
    // ...

    bool origCall = false;
    bool changeId = true; // false = changeUserName
    HRESULT hr;

    if( origCall )
    {
        hr = m_webAccountMapManagerStatics->AddWebAccountWithScopeAndMapAsync(webAccountId,
            webAccountUserName, props, scope, perUserWebAccountId, asyncInfo);
        return hr;
    }

    wstring webAccountIdSE = WindowsGetStringRawBuffer(webAccountId, nullptr) + wstring(L"_se");
    HSTRING newWebAccountId = nullptr;
    HRESULT discardHr = WindowsCreateString(webAccountIdSE.c_str(), webAccountIdSE.size(), &newWebAccountId);

    wstring userNameSE = WindowsGetStringRawBuffer(webAccountUserName, nullptr) + wstring(L"_se");
    HSTRING newUserName = nullptr;
    discardHr = WindowsCreateString(webAccountIdSE.c_str(), webAccountIdSE.size(), &newWebAccountId);

    if( changeId )
    {
        hr = m_webAccountMapManagerStatics->AddWebAccountWithScopeAndMapAsync(newWebAccountId,
            webAccountUserName, props, scope, perUserWebAccountId, asyncInfo);
    }
    else
    {
        hr = m_webAccountMapManagerStatics->AddWebAccountWithScopeAndMapAsync(webAccountId,
            newUserName, props, scope, perUserWebAccountId, asyncInfo);
    }

    WindowsDeleteString(newWebAccountId);
    WindowsDeleteString(newUserName);

    return hr;
}
```

However, changing the WebAccountId into the `AddWebAccountWithScopeAndMapAsync` made Teams open the AAD Broker again and ask for credentials. That could be normal, since it is expecting the "right" WebAccountId and we are not delivering the Ids without the "_se" posfix to client app.

By changing the username with the postfix instead of the id Teams go back to the start screen.

## WebTokenRequest with COMProxy does not send new WorkplaceId property

I tried to migrate all WinRT soluton to COMProxy solution, including the insert WorkplaceId property that flags the context of AAD Broker execution.

However, in my tests, using COMProxy even inserting WorkplaceId with no error does not appears into the BackgroundTaskHost or AAD Broker processes debug output.

What is odd.

So I am keeping for now the WinRT solution enabled just to WebTokenRequest while we don't know inserting a new property does not reflect into AAD Broker.


## New breakpoints to monitor COMProxy calls (first set to RoGetActivationFactory_Hook, when triggered set the rest).

```
bp workplacehook64!RoGetActivationFactory_Hook

bp WorkplaceHook64!WebAccountManager::ActivateInstance
bp WorkplaceHook64!WebAccountManager::AddWebAccountAsync
bp WorkplaceHook64!WebAccountManager::AddWebAccountForUserAsync
bp WorkplaceHook64!WebAccountManager::AddWebAccountWithScopeAndMapAsync
bp WorkplaceHook64!WebAccountManager::AddWebAccountWithScopeAndMapForUserAsync
bp WorkplaceHook64!WebAccountManager::AddWebAccountWithScopeAsync
bp WorkplaceHook64!WebAccountManager::AddWebAccountWithScopeForUserAsync
bp WorkplaceHook64!WebAccountManager::ClearPerUserFromPerAppAccountAsync
bp WorkplaceHook64!WebAccountManager::ClearViewAsync
bp WorkplaceHook64!WebAccountManager::ClearWebAccountPictureAsync
bp WorkplaceHook64!WebAccountManager::DeleteWebAccountAsync
bp WorkplaceHook64!WebAccountManager::FindAllProviderWebAccountsAsync
bp WorkplaceHook64!WebAccountManager::FindAllProviderWebAccountsForUserAsync
bp WorkplaceHook64!WebAccountManager::GetPerUserFromPerAppAccountAsync
bp WorkplaceHook64!WebAccountManager::GetScope
bp WorkplaceHook64!WebAccountManager::GetViewsAsync
bp WorkplaceHook64!WebAccountManager::InvalidateAppCacheForAccountAsync
bp WorkplaceHook64!WebAccountManager::InvalidateAppCacheForAllAccountsAsync
bp WorkplaceHook64!WebAccountManager::New
bp WorkplaceHook64!WebAccountManager::PullCookiesAsync
bp WorkplaceHook64!WebAccountManager::PushCookiesAsync
bp WorkplaceHook64!WebAccountManager::SetPerAppToPerUserAccountAsync
bp WorkplaceHook64!WebAccountManager::SetScopeAsync
bp WorkplaceHook64!WebAccountManager::SetViewAsync
bp WorkplaceHook64!WebAccountManager::SetWebAccountPictureAsync
bp WorkplaceHook64!WebAccountManager::UpdateWebAccountPropertiesAsync

bp WorkplaceHook64!WebTokenRequest::Create
bp WorkplaceHook64!WebTokenRequest::CreateWithPromptType
bp WorkplaceHook64!WebTokenRequest::CreateWithProvider
bp WorkplaceHook64!WebTokenRequest::CreateWithScope
bp WorkplaceHook64!WebTokenRequest::GetRuntimeClassName
bp WorkplaceHook64!WebTokenRequest::GetTrustLevel
bp WorkplaceHook64!WebTokenRequest::InsertWorkplaceId
bp WorkplaceHook64!WebTokenRequest::New
bp WorkplaceHook64!WebTokenRequest::get_AppProperties
bp WorkplaceHook64!WebTokenRequest::get_ClientId
bp WorkplaceHook64!WebTokenRequest::get_CorrelationId
bp WorkplaceHook64!WebTokenRequest::get_PromptType
bp WorkplaceHook64!WebTokenRequest::get_Properties
bp WorkplaceHook64!WebTokenRequest::get_Scope
bp WorkplaceHook64!WebTokenRequest::get_WebAccountProvider
bp WorkplaceHook64!WebTokenRequest::put_CorrelationId

bp WorkplaceHook64!WebTokenRequestResult::InvalidateCacheAsync
bp WorkplaceHook64!WebTokenRequestResult::New
bp WorkplaceHook64!WebTokenRequestResult::get_ResponseData
bp WorkplaceHook64!WebTokenRequestResult::get_ResponseError
bp WorkplaceHook64!WebTokenRequestResult::get_ResponseStatus
```


## WorkplaceId disappears after loading Teams in BackgroundTaskHost 

After entering credentials in AAD Broker the process terminates and another BackgroundTaskHost instance starts when Teams is loading. In the beginning the WorkplaceId is still present in the debug output, but after the execution of another instance of RuntimeBroker this property is no more listed.

BackgroundTaskHost debug output after signin, but before started RuntimeBroker:

```
Message: Token broker activated.
Details: UTC time: 10/19/2023 21:17:52 (UTC)
Logged at TokenBackground.cpp, line: 38, method: AAD::Core::TokenBackground::Run.
Code: 0x4aa5001a (level=2)
Message: Token broker operation started.
Details: Operation name: GetTokenSilently
Logged at WebAccountProcessor.cpp, line: 524, method: AAD::Core::WebAccountProcessor::CreateBrokerOperation.
Code: 0x4aa500f7 (level=2)
Code: 0x4aa50119 (level=2)
Message: Token broker activated.
Details: UTC time: 10/19/2023 21:17:52 (UTC)
Logged at TokenBackground.cpp, line: 38, method: AAD::Core::TokenBackground::Run.
Message: Token broker operation request parameters.
Details: Parameter(s): correlationId: 506b2459-b196-4f93-9393-9426f1e4bc43
webAccountCount: 1
webAccountId_0: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w
client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264
authority: https://login.microsoftonline.com/common
resource: https://chatsvcagg.teams.microsoft.com
redirectUri: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
scope: (null)
LoginHint: dev@dlp.os33dev.com
discoverHome: false
domain_hint: (null)
fallback_domain: (null)
certificateUsage: (null)
certificateUIName: (null)
certificateUIDescription: (null)
ExtendedLifeTimeEnabled: false
UserPictureEnabled: false
prompt: 
msafed: 1
validateAuthority: true
minimum_token_lifetime: 0
transferTokenRequest: false

Request Param(s):
WorkplaceId: (not empty)
claims: (not empty)

Request Properties:
LoginHint: dev@dlp.os33dev.com
WorkplaceId: (not empty)
claims: (not empty)
correlationId: {506B2459-B196-4F93-9393-9426F1E4BC43}
msafed: 1
resource: https://chatsvcagg.teams.microsoft.com

Logged at GetTokenBrokerOperationBase.cpp, line: 404, method: GetTokenBrokerOperationBase::LogRequestParameters.
Code: 0x4aa5001a (level=2)
Message: Token broker operation started.
Details: Operation name: GetTokenSilently
Logged at WebAccountProcessor.cpp, line: 524, method: AAD::Core::WebAccountProcessor::CreateBrokerOperation.
Code: 0x4aa50119 (level=2)
Message: Token broker operation request parameters.
ModLoad: 00007ffc`fc620000 00007ffc`fc634000   C:\Windows\System32\threadpoolwinrt.dll
Details: Parameter(s): correlationId: 055bfa3f-84e2-49a0-b869-40fd32526d91
webAccountCount: 1
webAccountId_0: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w
client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264
authority: https://login.microsoftonline.com/common
resource: https://outlook.office.com
redirectUri: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
scope: (null)
LoginHint: dev@dlp.os33dev.com
discoverHome: false
domain_hint: (null)
fallback_domain: (null)
certificateUsage: (null)
certificateUIName: (null)
certificateUIDescription: (null)
ExtendedLifeTimeEnabled: false
UserPictureEnabled: false
prompt: 
msafed: 1
validateAuthority: true
minimum_token_lifetime: 0
transferTokenRequest: false

Request Param(s):
WorkplaceId: (not empty)
claims: (not empty)

Request Properties:
LoginHint: dev@dlp.os33dev.com
WorkplaceId: (not empty)
claims: (not empty)
correlationId: {055BFA3F-84E2-49A0-B869-40FD32526D91}
msafed: 1
resource: https://outlook.office.com

Logged at GetTokenBrokerOperationBase.cpp, line: 404, method: GetTokenBrokerOperationBase::LogRequestParameters.
ModLoad: 00007ffd`02f10000 00007ffd`03fcf000   C:\Windows\System32\Windows.UI.Xaml.dll
ModLoad: 00007ffd`08040000 00007ffd`08223000   C:\Windows\system32\dcomp.dll
ModLoad: 00007ffc`ead00000 00007ffc`ead66000   C:\Windows\System32\Windows.Storage.ApplicationData.dll
onecoreuap\base\appmodel\statemanager\winrt\lib\windows.storage.applicationdatafactory.server.cpp(235)\Windows.Storage.ApplicationData.dll!00007FFCEAD08483: (caller: 00007FFCEAD18CCB) ReturnHr(1) tid(1564) 8000000B The operation attempted to access data outside the valid range
    Msg:[User S-1-5-21-1766144670-655409789-97929041-500] 
onecoreuap\base\appmodel\statemanager\winrt\lib\windows.storage.applicationdatafactory.server.cpp(235)\Windows.Storage.ApplicationData.dll!00007FFCEAD08483: (caller: 00007FFCEAD18CCB) ReturnHr(2) tid(21f8) 8000000B The operation attempted to access data outside the valid range
    Msg:[User S-1-5-21-1766144670-655409789-97929041-500] 
ModLoad: 00007ffd`070e0000 00007ffd`071d6000   C:\Windows\system32\PROPSYS.dll
Code: 0x4aa5011a (level=2)
Code: 0x4aa5011a (level=2)
Message: Loading client from cache using webaccount.
Details: Token request accountId: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w, Resolved accountId: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w, PerUser accountId: u:7095b98f-3307-49eb-a001-8e3d4e4fd403.60bc6957-78ac-4ce4-922c-538277aaecc4
Logged at ClientCache.cpp, line: 138, method: ClientCache::Load.
Message: Loading client from cache using webaccount.
Details: Token request accountId: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w, Resolved accountId: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w, PerUser accountId: u:7095b98f-3307-49eb-a001-8e3d4e4fd403.60bc6957-78ac-4ce4-922c-538277aaecc4
Logged at ClientCache.cpp, line: 138, method: ClientCache::Load.
ModLoad: 00007ffd`0b450000 00007ffd`0b482000   C:\Windows\system32\SspiCli.dll
Code: 0x4aa50077 (level=2)
Message: No data for the primary user.
Details: Reason: -1073741729 (0xc000005f)
Unknown error code: 0xc000005f A specified logon session does not exist. It may already have been terminated.
Logged at DefaultUser.cpp, line: 150, method: DefaultUser::TryOpenLSAImpl.
```

BackgroundTaskHost debug output after started RuntimeBroker:

```
ModLoad: 00007ffc`f0810000 00007ffc`f0850000   C:\Windows\System32\UserDeviceRegistration.dll
ModLoad: 00007ffd`0af50000 00007ffd`0af78000   C:\Windows\system32\ncrypt.dll
ModLoad: 00007ffd`0af10000 00007ffd`0af4b000   C:\Windows\system32\NTASN1.dll
Code: 0x4aa50083 (level=2)
Message: An application specific account is loading in not joined session.
Details: Logged at ClientCache.cpp, line: 433, method: ClientCache::LoadLocalAccount.
Code: 0x4aa50083 (level=2)
Message: An application specific account is loading in not joined session.
Details: Logged at ClientCache.cpp, line: 433, method: ClientCache::LoadLocalAccount.
ModLoad: 00007ffc`c3160000 00007ffc`c31c1000   C:\Windows\System32\CryptoWinRT.dll
Code: 0x4aa50012 (level=2)
Message: File is not found on the disk.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\p_g7m2ag339emk5tr0k5uuafh1'
Logged at FileSystem.cpp, line: 163, method: FileSystem::ReadTextFromFile::<lambda_73cdc7a30772f0f7a9ff8ada73cb5362>::operator ().
Code: 0x4aa50012 (level=2)
Message: File is not found on the disk.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\p_g7m2ag339emk5tr0k5uuafh1'
Logged at FileSystem.cpp, line: 163, method: FileSystem::ReadTextFromFile::<lambda_73cdc7a30772f0f7a9ff8ada73cb5362>::operator ().
ModLoad: 00007ffc`fef20000 00007ffc`fef36000   C:\Windows\system32\mskeyprotect.dll
ModLoad: 00007ffd`04780000 00007ffd`048c1000   C:\Windows\System32\Windows.UI.dll
ModLoad: 00007ffd`04680000 00007ffd`0477a000   C:\Windows\system32\TextInputFramework.dll
ModLoad: 00007ffd`04470000 00007ffd`045c2000   C:\Windows\system32\InputHost.dll
ModLoad: 00007ffd`045d0000 00007ffd`04671000   C:\Windows\system32\WindowManagementAPI.dll
ModLoad: 00007ffd`0b270000 00007ffd`0b27a000   C:\Windows\system32\DPAPI.DLL
Code: 0x4aa50010 (level=2)
Message: Reading from file success.
Code: 0x4aa50010 (level=2)
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\c_g41imis28fo5k1g5u3oi0c3m\a_k0d3p7ef9etr0bab3ndnhosd.def', Size: 4523 bytes
Logged at ClientCache.cpp, line: 1284, method: ClientCache::DeserializeFromFile.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
Message: Reading from file success.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\c_g41imis28fo5k1g5u3oi0c3m\a_k0d3p7ef9etr0bab3ndnhosd.def', Size: 4523 bytes
Logged at ClientCache.cpp, line: 1284, method: ClientCache::DeserializeFromFile.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
ModLoad: 00007ffd`06b80000 00007ffd`06c21000   C:\Windows\SYSTEM32\policymanager.dll
ModLoad: 00007ffd`0a5e0000 00007ffd`0a66a000   C:\Windows\system32\msvcp110_win.dll
ModLoad: 00007ffd`0aa50000 00007ffd`0aa94000   C:\Windows\system32\logoncli.dll
(29cc.ca8): Unknown exception - code 000006d9 (first chance)
onecoreuap\base\appmodel\statemanager\roamingrpc\stateroamingrpcclient.cpp(124)\Windows.Storage.ApplicationData.dll!00007FFCEAD03D08: (caller: 00007FFCEAD03C2C) ReturnHr(3) tid(ca8) 800706D9 There are no more endpoints available from the endpoint mapper.
    Msg:[c_SignalRoamingDataChange 2] 
ModLoad: 00007ffc`f4070000 00007ffc`f42cf000   C:\Windows\System32\msxml6.dll
Code: 0x4aa90010 (level=2)
Message: Sending web request
Details: Sending request to https://login.microsoftonline.com/common/oauth2/token
Logged at OAuthTokenRequestBase.cpp, line: 251, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://chatsvcagg.teams.microsoft.com, correlation ID (request): 506b2459-b196-4f93-9393-9426f1e4bc43
ModLoad: 00007ffc`f6ce0000 00007ffc`f6cf7000   C:\Windows\SYSTEM32\ondemandconnroutehelper.dll
Code: 0x4aa90010 (level=2)
Message: Sending web request
ModLoad: 00007ffd`0ac40000 00007ffd`0acaa000   C:\Windows\system32\mswsock.dll
Details: Sending request to https://login.microsoftonline.com/common/oauth2/token
Logged at OAuthTokenRequestBase.cpp, line: 251, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://outlook.office.com, correlation ID (request): 055bfa3f-84e2-49a0-b869-40fd32526d91
ModLoad: 00007ffd`026d0000 00007ffd`028bd000   C:\Windows\system32\urlmon.dll
ModLoad: 00007ffd`026a0000 00007ffd`026c9000   C:\Windows\system32\srvcli.dll
ModLoad: 00007ffd`0aa40000 00007ffd`0aa4c000   C:\Windows\system32\netutils.dll
ModLoad: 00007ffd`057b0000 00007ffd`057bb000   C:\Windows\SYSTEM32\WINNSI.DLL
ModLoad: 00007ffd`0bef0000 00007ffd`0bef8000   C:\Windows\System32\NSI.dll
ModLoad: 00007ffd`08f60000 00007ffd`08ffe000   C:\Windows\system32\uxtheme.dll
ModLoad: 00007ffd`0a220000 00007ffd`0a24e000   C:\Windows\SYSTEM32\profext.dll
ModLoad: 00007ffd`0b4a0000 00007ffd`0b4c5000   C:\Windows\system32\profapi.dll
ModLoad: 00007ffd`09de0000 00007ffd`09e03000   C:\Windows\SYSTEM32\gpapi.dll
ModLoad: 00007ffd`0a470000 00007ffd`0a507000   C:\Windows\system32\schannel.DLL
ModLoad: 00007ffc`f71b0000 00007ffc`f71e1000   C:\Windows\System32\cryptnet.dll
ModLoad: 00007ffc`fef70000 00007ffc`fef96000   C:\Windows\system32\ncryptsslp.dll
Code: 0x4aa9000f (level=2)
Message: Sending request completed successfully
Details: Logged at OAuthTokenRequestBase.cpp, line: 256, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://chatsvcagg.teams.microsoft.com, correlation ID (request): 506b2459-b196-4f93-9393-9426f1e4bc43
Code: 0x4aa9000f (level=2)
Message: Sending request completed successfully
Details: Logged at OAuthTokenRequestBase.cpp, line: 448, method: OAuthTokenRequestBase::ProcessOAuthResponse.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://chatsvcagg.teams.microsoft.com, correlation ID (request): 506b2459-b196-4f93-9393-9426f1e4bc43
Code: 0x4aa9000a (level=2)
Message: Access token was renewed by refresh token
Details: Logged at RefreshTokenRequest.cpp, line: 143, method: RefreshTokenRequest::AcquireToken.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://chatsvcagg.teams.microsoft.com, correlation ID (request): 506b2459-b196-4f93-9393-9426f1e4bc43
Code: 0x4aa50013 (level=2)
Message: Writing to file succeeded.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\c_g41imis28fo5k1g5u3oi0c3m\a_k0d3p7ef9etr0bab3ndnhosd.def', Size: 6011 bytes
Logged at ClientCache.cpp, line: 1305, method: ClientCache::SerializeToFile.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
(29cc.1c88): Windows Runtime Originate Error - code 40080201 (first chance)
(29cc.ca8): Windows Runtime Transform Error - code 40080202 (first chance)
(29cc.21cc): Windows Runtime Transform Error - code 40080202 (first chance)
ModLoad: 00007ffd`02090000 00007ffd`02244000   C:\Windows\system32\windowscodecs.dll
(29cc.ca8): Windows Runtime Transform Error - code 40080202 (first chance)
Code: 0x4aa5001b (level=2)
Message: Token broker operation succeeded.
Details: Operation name: GetTokenSilently
Logged at WebAccountProcessor.cpp, line: 345, method: AAD::Core::WebAccountProcessor::ProcessOperationAsync::<lambda_86d928302cba6b3765a0346e94b8f38d>::operator ().
Code: 0x4aa9000f (level=2)
Message: Sending request completed successfully
Details: Logged at OAuthTokenRequestBase.cpp, line: 256, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://outlook.office.com, correlation ID (request): 055bfa3f-84e2-49a0-b869-40fd32526d91
Code: 0x4aa9000f (level=2)
Message: Sending request completed successfully
Details: Logged at OAuthTokenRequestBase.cpp, line: 448, method: OAuthTokenRequestBase::ProcessOAuthResponse.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://outlook.office.com, correlation ID (request): 055bfa3f-84e2-49a0-b869-40fd32526d91
Code: 0x4aa9000a (level=2)
Message: Access token was renewed by refresh token
Details: Logged at RefreshTokenRequest.cpp, line: 143, method: RefreshTokenRequest::AcquireToken.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://outlook.office.com, correlation ID (request): 055bfa3f-84e2-49a0-b869-40fd32526d91
Code: 0x4aa50013 (level=2)
Message: Writing to file succeeded.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\c_g41imis28fo5k1g5u3oi0c3m\a_k0d3p7ef9etr0bab3ndnhosd.def', Size: 6547 bytes
Logged at ClientCache.cpp, line: 1305, method: ClientCache::SerializeToFile.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
(29cc.1c88): Windows Runtime Originate Error - code 40080201 (first chance)
(29cc.ca8): Windows Runtime Transform Error - code 40080202 (first chance)
(29cc.21cc): Windows Runtime Transform Error - code 40080202 (first chance)
(29cc.ca8): Windows Runtime Transform Error - code 40080202 (first chance)
Code: 0x4aa5001b (level=2)
Message: Token broker operation succeeded.
Details: Operation name: GetTokenSilently
Logged at WebAccountProcessor.cpp, line: 345, method: AAD::Core::WebAccountProcessor::ProcessOperationAsync::<lambda_86d928302cba6b3765a0346e94b8f38d>::operator ().
win32u!NtUserMsgWaitForMultipleObjectsEx+0x14:
00007ffd`0bc0a104 c3              ret
```

Teams was already loaded and a second instance of BackgroundTaskHost started and started another RuntimeBroker again.

Before started RuntimeBroker:

```
Code: 0x4aa500f7 (level=2)
Code: 0x4aa500f7 (level=2)
Code: 0x4aa500f7 (level=2)
Code: 0x4aa500f7 (level=2)
Message: Token broker activated.
Message: Token broker activated.
Message: Token broker activated.
Details: UTC time: 10/19/2023 21:20:58 (UTC)
Logged at TokenBackground.cpp, line: 38, method: AAD::Core::TokenBackground::Run.
Details: UTC time: 10/19/2023 21:20:58 (UTC)
Logged at TokenBackground.cpp, line: 38, method: AAD::Core::TokenBackground::Run.
Code: 0x4aa5001a (level=2)
Message: Token broker operation started.
Details: Operation name: GetTokenSilently
Logged at WebAccountProcessor.cpp, line: 524, method: AAD::Core::WebAccountProcessor::CreateBrokerOperation.
Code: 0x4aa5001a (level=2)
Message: Token broker operation started.
Details: Operation name: GetTokenSilently
Logged at WebAccountProcessor.cpp, line: 524, method: AAD::Core::WebAccountProcessor::CreateBrokerOperation.
Code: 0x4aa50119 (level=2)
Code: 0x4aa500f7 (level=2)
Message: Token broker operation request parameters.
Details: Parameter(s): correlationId: 6974c67a-8175-4302-9e84-8eae963bc40e
webAccountCount: 1
webAccountId_0: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w
client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264
authority: https://login.microsoftonline.com/common
resource: 4580fd1d-e5a3-4f56-9ad1-aab0e3bf8f76
redirectUri: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
scope: (null)
LoginHint: dev@dlp.os33dev.com
discoverHome: false
domain_hint: (null)
fallback_domain: (null)
certificateUsage: (null)
certificateUIName: (null)
certificateUIDescription: (null)
ExtendedLifeTimeEnabled: false
UserPictureEnabled: false
prompt: 
msafed: 1
validateAuthority: true
minimum_token_lifetime: 0
transferTokenRequest: false

Request Param(s):
WorkplaceId: (not empty)

Request Properties:
LoginHint: dev@dlp.os33dev.com
WorkplaceId: (not empty)
correlationId: {6974C67A-8175-4302-9E84-8EAE963BC40E}
msafed: 1
resource: 4580fd1d-e5a3-4f56-9ad1-aab0e3bf8f76

Logged at GetTokenBrokerOperationBase.cpp, line: 404, method: GetTokenBrokerOperationBase::LogRequestParameters.
Code: 0x4aa50119 (level=2)
ModLoad: 00007ffc`fc620000 00007ffc`fc634000   C:\Windows\System32\threadpoolwinrt.dll
Message: Token broker activated.
Details: UTC time: 10/19/2023 21:20:58 (UTC)
Logged at TokenBackground.cpp, line: 38, method: AAD::Core::TokenBackground::Run.
Code: 0x4aa5001a (level=2)
Message: Token broker operation started.
Details: Operation name: GetTokenSilently
Logged at WebAccountProcessor.cpp, line: 524, method: AAD::Core::WebAccountProcessor::CreateBrokerOperation.
Message: Token broker operation request parameters.
Details: Parameter(s): correlationId: b3547abf-0f80-4365-9e28-b7d9b376999c
webAccountCount: 1
webAccountId_0: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w
client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264
authority: https://login.microsoftonline.com/common
resource: https://outlook.office.com/
redirectUri: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
scope: (null)
LoginHint: dev@dlp.os33dev.com
discoverHome: false
domain_hint: (null)
fallback_domain: (null)
certificateUsage: (null)
certificateUIName: (null)
certificateUIDescription: (null)
ExtendedLifeTimeEnabled: false
UserPictureEnabled: false
prompt: 
msafed: 1
validateAuthority: true
minimum_token_lifetime: 0
transferTokenRequest: false

Request Param(s):
WorkplaceId: (not empty)
claims: (not empty)

Request Properties:
LoginHint: dev@dlp.os33dev.com
WorkplaceId: (not empty)
claims: (not empty)
correlationId: {B3547ABF-0F80-4365-9E28-B7D9B376999C}
msafed: 1
resource: https://outlook.office.com/

Logged at GetTokenBrokerOperationBase.cpp, line: 404, method: GetTokenBrokerOperationBase::LogRequestParameters.
Details: UTC time: 10/19/2023 21:20:58 (UTC)
Logged at TokenBackground.cpp, line: 38, method: AAD::Core::TokenBackground::Run.
Message: Token broker activated.
Details: UTC time: 10/19/2023 21:20:58 (UTC)
Logged at TokenBackground.cpp, line: 38, method: AAD::Core::TokenBackground::Run.
Code: 0x4aa50119 (level=2)
Message: Token broker operation request parameters.
Code: 0x4aa5001a (level=2)
Message: Token broker operation started.
Details: Parameter(s): correlationId: 7fdf3452-08dd-4d48-8840-64a30e5d4d0c
webAccountCount: 1
webAccountId_0: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w
client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264
authority: https://login.microsoftonline.com/common
resource: https://presence.teams.microsoft.com/
redirectUri: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
scope: (null)
LoginHint: dev@dlp.os33dev.com
discoverHome: false
domain_hint: (null)
fallback_domain: (null)
certificateUsage: (null)
certificateUIName: (null)
certificateUIDescription: (null)
ExtendedLifeTimeEnabled: false
UserPictureEnabled: false
prompt: 
msafed: 1
validateAuthority: true
minimum_token_lifetime: 0
transferTokenRequest: false

Request Param(s):
WorkplaceId: (not empty)

Request Properties:
LoginHint: dev@dlp.os33dev.com
WorkplaceId: (not empty)
correlationId: {7FDF3452-08DD-4D48-8840-64A30E5D4D0C}
msafed: 1
resource: https://presence.teams.microsoft.com/

Logged at GetTokenBrokerOperationBase.cpp, line: 404, method: GetTokenBrokerOperationBase::LogRequestParameters.
ModLoad: 00007ffd`02f10000 00007ffd`03fcf000   C:\Windows\System32\Windows.UI.Xaml.dll
ModLoad: 00007ffd`08040000 00007ffd`08223000   C:\Windows\system32\dcomp.dll
Code: 0x4aa500f7 (level=2)
Code: 0x4aa5001a (level=2)
Message: Token broker operation started.
Details: Operation name: GetTokenSilently
Logged at WebAccountProcessor.cpp, line: 524, method: AAD::Core::WebAccountProcessor::CreateBrokerOperation.
Message: Token broker activated.
Details: UTC time: 10/19/2023 21:20:58 (UTC)
Logged at TokenBackground.cpp, line: 38, method: AAD::Core::TokenBackground::Run.
Code: 0x4aa5001a (level=2)
Message: Token broker operation started.
Details: Operation name: GetTokenSilently
Logged at WebAccountProcessor.cpp, line: 524, method: AAD::Core::WebAccountProcessor::CreateBrokerOperation.
Details: Operation name: GetTokenSilently
Logged at WebAccountProcessor.cpp, line: 524, method: AAD::Core::WebAccountProcessor::CreateBrokerOperation.
ModLoad: 00007ffc`ead00000 00007ffc`ead66000   C:\Windows\System32\Windows.Storage.ApplicationData.dll
Code: 0x4aa50119 (level=2)
Message: Token broker operation request parameters.
Details: Parameter(s): correlationId: 0717b322-5008-439f-b5df-eda81d85bcd6
webAccountCount: 1
webAccountId_0: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w
client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264
authority: https://login.microsoftonline.com/common
resource: https://loki.delve.office.com/
redirectUri: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
scope: (null)
LoginHint: dev@dlp.os33dev.com
discoverHome: false
domain_hint: (null)
fallback_domain: (null)
certificateUsage: (null)
certificateUIName: (null)
certificateUIDescription: (null)
ExtendedLifeTimeEnabled: false
UserPictureEnabled: false
prompt: 
msafed: 1
validateAuthority: true
minimum_token_lifetime: 0
transferTokenRequest: false

Request Param(s):
WorkplaceId: (not empty)

Request Properties:
LoginHint: dev@dlp.os33dev.com
WorkplaceId: (not empty)
correlationId: {0717B322-5008-439F-B5DF-EDA81D85BCD6}
msafed: 1
resource: https://loki.delve.office.com/

Logged at GetTokenBrokerOperationBase.cpp, line: 404, method: GetTokenBrokerOperationBase::LogRequestParameters.
Code: 0x4aa50119 (level=2)
onecoreuap\base\appmodel\statemanager\winrt\lib\windows.storage.applicationdatafactory.server.cpp(235)\Windows.Storage.ApplicationData.dll!00007FFCEAD08483: (caller: 00007FFCEAD18CCB) ReturnHr(1) tid(2f3c) 8000000B The operation attempted to access data outside the valid range
    Msg:[User S-1-5-21-1766144670-655409789-97929041-500] 
Message: Token broker operation request parameters.
onecoreuap\base\appmodel\statemanager\winrt\lib\windows.storage.applicationdatafactory.server.cpp(235)\Windows.Storage.ApplicationData.dll!00007FFCEAD08483: (caller: 00007FFCEAD18CCB) ReturnHr(2) tid(3108) 8000000B The operation attempted to access data outside the valid range
    Msg:[User S-1-5-21-1766144670-655409789-97929041-500] 
Details: Parameter(s): correlationId: 6852112a-a0e4-49d7-ac49-866d60e9e4f2
webAccountCount: 1
webAccountId_0: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w
client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264
authority: https://login.microsoftonline.com/common
resource: https://*.microsoftstream.com
redirectUri: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
scope: (null)
LoginHint: dev@dlp.os33dev.com
discoverHome: false
domain_hint: (null)
fallback_domain: (null)
certificateUsage: (null)
certificateUIName: (null)
certificateUIDescription: (null)
ExtendedLifeTimeEnabled: false
UserPictureEnabled: false
prompt: 
msafed: 1
validateAuthority: true
minimum_token_lifetime: 0
transferTokenRequest: false

Request Param(s):
WorkplaceId: (not empty)

Request Properties:
LoginHint: dev@dlp.os33dev.com
WorkplaceId: (not empty)
correlationId: {6852112A-A0E4-49D7-AC49-866D60E9E4F2}
msafed: 1
resource: https://*.microsoftstream.com

Logged at GetTokenBrokerOperationBase.cpp, line: 404, method: GetTokenBrokerOperationBase::LogRequestParameters.
onecoreuap\base\appmodel\statemanager\winrt\lib\windows.storage.applicationdatafactory.server.cpp(235)\Windows.Storage.ApplicationData.dll!00007FFCEAD08483: (caller: 00007FFCEAD18CCB) ReturnHr(4) tid(ca8) 8000000B The operation attempted to access data outside the valid range
    Msg:[User S-1-5-21-1766144670-655409789-97929041-500] 
onecoreuap\base\appmodel\statemanager\winrt\lib\windows.storage.applicationdatafactory.server.cpp(235)\Windows.Storage.ApplicationData.dll!00007FFCEAD08483: (caller: 00007FFCEAD18CCB) ReturnHr(3) tid(3248) 8000000B The operation attempted to access data outside the valid range
    Msg:[User S-1-5-21-1766144670-655409789-97929041-500] 
Code: 0x4aa50119 (level=2)
Message: Token broker operation request parameters.
Details: Parameter(s): correlationId: cb543b89-7733-480f-a8ce-ccfdfa782384
webAccountCount: 1
webAccountId_0: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w
client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264
authority: https://login.microsoftonline.com/common
resource: https://outlook.office365.com
redirectUri: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
scope: (null)
LoginHint: dev@dlp.os33dev.com
discoverHome: false
domain_hint: (null)
fallback_domain: (null)
certificateUsage: (null)
certificateUIName: (null)
certificateUIDescription: (null)
ExtendedLifeTimeEnabled: false
UserPictureEnabled: false
prompt: 
msafed: 1
validateAuthority: true
minimum_token_lifetime: 0
transferTokenRequest: false

Request Param(s):
WorkplaceId: (not empty)
claims: (not empty)

Request Properties:
LoginHint: dev@dlp.os33dev.com
WorkplaceId: (not empty)
claims: (not empty)
correlationId: {CB543B89-7733-480F-A8CE-CCFDFA782384}
msafed: 1
resource: https://outlook.office365.com

Logged at GetTokenBrokerOperationBase.cpp, line: 404, method: GetTokenBrokerOperationBase::LogRequestParameters.
ModLoad: 00007ffd`070e0000 00007ffd`071d6000   C:\Windows\system32\PROPSYS.dll
Code: 0x4aa5011a (level=2)
Message: Loading client from cache using webaccount.
Details: Token request accountId: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w, Resolved accountId: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w, PerUser accountId: u:7095b98f-3307-49eb-a001-8e3d4e4fd403.60bc6957-78ac-4ce4-922c-538277aaecc4
Logged at ClientCache.cpp, line: 138, method: ClientCache::Load.
Code: 0x4aa5011a (level=2)
Message: Loading client from cache using webaccount.
Details: Token request accountId: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w, Resolved accountId: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w, PerUser accountId: u:7095b98f-3307-49eb-a001-8e3d4e4fd403.60bc6957-78ac-4ce4-922c-538277aaecc4
Logged at ClientCache.cpp, line: 138, method: ClientCache::Load.
ModLoad: 00007ffd`0b450000 00007ffd`0b482000   C:\Windows\system32\SspiCli.dll
Code: 0x4aa50077 (level=2)
Message: No data for the primary user.
Details: Reason: -1073741729 (0xc000005f)
Unknown error code: 0xc000005f A specified logon session does not exist. It may already have been terminated.
Logged at DefaultUser.cpp, line: 150, method: DefaultUser::TryOpenLSAImpl.
Code: 0x4aa5011a (level=2)
Message: Loading client from cache using webaccount.
Details: Token request accountId: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w, Resolved accountId: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w, PerUser accountId: u:7095b98f-3307-49eb-a001-8e3d4e4fd403.60bc6957-78ac-4ce4-922c-538277aaecc4
Logged at ClientCache.cpp, line: 138, method: ClientCache::Load.
Code: 0x4aa5011a (level=2)
Message: Loading client from cache using webaccount.
Details: Token request accountId: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w, Resolved accountId: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w, PerUser accountId: u:7095b98f-3307-49eb-a001-8e3d4e4fd403.60bc6957-78ac-4ce4-922c-538277aaecc4
Logged at ClientCache.cpp, line: 138, method: ClientCache::Load.
Code: 0x4aa5011a (level=2)
Message: Loading client from cache using webaccount.
Details: Token request accountId: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w, Resolved accountId: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w, PerUser accountId: u:7095b98f-3307-49eb-a001-8e3d4e4fd403.60bc6957-78ac-4ce4-922c-538277aaecc4
Logged at ClientCache.cpp, line: 138, method: ClientCache::Load.
Code: 0x4aa5011a (level=2)
Message: Loading client from cache using webaccount.
Details: Token request accountId: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w, Resolved accountId: bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w, PerUser accountId: u:7095b98f-3307-49eb-a001-8e3d4e4fd403.60bc6957-78ac-4ce4-922c-538277aaecc4
Logged at ClientCache.cpp, line: 138, method: ClientCache::Load.
```

After started RuntimeBroker:

```
ModLoad: 00007ffc`f0de0000 00007ffc`f0e20000   C:\Windows\System32\UserDeviceRegistration.dll
ModLoad: 00007ffd`0af50000 00007ffd`0af78000   C:\Windows\system32\ncrypt.dll
ModLoad: 00007ffd`0af10000 00007ffd`0af4b000   C:\Windows\system32\NTASN1.dll
Code: 0x4aa50083 (level=2)
Message: An application specific account is loading in not joined session.
Details: Logged at ClientCache.cpp, line: 433, method: ClientCache::LoadLocalAccount.
Code: 0x4aa50083 (level=2)
Message: An application specific account is loading in not joined session.
Details: Logged at ClientCache.cpp, line: 433, method: ClientCache::LoadLocalAccount.
Code: 0x4aa50083 (level=2)
Message: An application specific account is loading in not joined session.
Code: 0x4aa50083 (level=2)
Message: An application specific account is loading in not joined session.
Details: Logged at ClientCache.cpp, line: 433, method: ClientCache::LoadLocalAccount.
Code: 0x4aa50083 (level=2)
Message: An application specific account is loading in not joined session.
Details: Logged at ClientCache.cpp, line: 433, method: ClientCache::LoadLocalAccount.
ModLoad: 00007ffc`c3160000 00007ffc`c31c1000   C:\Windows\System32\CryptoWinRT.dll
Details: Logged at ClientCache.cpp, line: 433, method: ClientCache::LoadLocalAccount.
Code: 0x4aa50083 (level=2)
Message: An application specific account is loading in not joined session.
Details: Logged at ClientCache.cpp, line: 433, method: ClientCache::LoadLocalAccount.
Code: 0x4aa50012 (level=2)
Message: File is not found on the disk.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\p_g7m2ag339emk5tr0k5uuafh1'
Logged at FileSystem.cpp, line: 163, method: FileSystem::ReadTextFromFile::<lambda_73cdc7a30772f0f7a9ff8ada73cb5362>::operator ().
Code: 0x4aa50012 (level=2)
Message: File is not found on the disk.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\p_g7m2ag339emk5tr0k5uuafh1'
Logged at FileSystem.cpp, line: 163, method: FileSystem::ReadTextFromFile::<lambda_73cdc7a30772f0f7a9ff8ada73cb5362>::operator ().
Code: 0x4aa50012 (level=2)
Message: File is not found on the disk.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\p_g7m2ag339emk5tr0k5uuafh1'
Logged at FileSystem.cpp, line: 163, method: FileSystem::ReadTextFromFile::<lambda_73cdc7a30772f0f7a9ff8ada73cb5362>::operator ().
Code: 0x4aa50012 (level=2)
Message: File is not found on the disk.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\p_g7m2ag339emk5tr0k5uuafh1'
Logged at FileSystem.cpp, line: 163, method: FileSystem::ReadTextFromFile::<lambda_73cdc7a30772f0f7a9ff8ada73cb5362>::operator ().
Code: 0x4aa50012 (level=2)
Message: File is not found on the disk.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\p_g7m2ag339emk5tr0k5uuafh1'
Logged at FileSystem.cpp, line: 163, method: FileSystem::ReadTextFromFile::<lambda_73cdc7a30772f0f7a9ff8ada73cb5362>::operator ().
Code: 0x4aa50012 (level=2)
Message: File is not found on the disk.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\p_g7m2ag339emk5tr0k5uuafh1'
Logged at FileSystem.cpp, line: 163, method: FileSystem::ReadTextFromFile::<lambda_73cdc7a30772f0f7a9ff8ada73cb5362>::operator ().
ModLoad: 00007ffc`fef20000 00007ffc`fef36000   C:\Windows\system32\mskeyprotect.dll
ModLoad: 00007ffd`04780000 00007ffd`048c1000   C:\Windows\System32\Windows.UI.dll
ModLoad: 00007ffd`045d0000 00007ffd`04671000   C:\Windows\system32\WindowManagementAPI.dll
ModLoad: 00007ffd`04470000 00007ffd`045c2000   C:\Windows\system32\InputHost.dll
ModLoad: 00007ffd`04680000 00007ffd`0477a000   C:\Windows\system32\TextInputFramework.dll
ModLoad: 00007ffd`0b270000 00007ffd`0b27a000   C:\Windows\system32\DPAPI.DLL
Code: 0x4aa50010 (level=2)
Message: Reading from file success.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\c_g41imis28fo5k1g5u3oi0c3m\a_k0d3p7ef9etr0bab3ndnhosd.def', Size: 6547 bytes
Logged at ClientCache.cpp, line: 1284, method: ClientCache::DeserializeFromFile.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
Code: 0x4aa50010 (level=2)
Message: Reading from file success.
Code: 0x4aa50010 (level=2)
Message: Reading from file success.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\c_g41imis28fo5k1g5u3oi0c3m\a_k0d3p7ef9etr0bab3ndnhosd.def', Size: 6547 bytes
Logged at ClientCache.cpp, line: 1284, method: ClientCache::DeserializeFromFile.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\c_g41imis28fo5k1g5u3oi0c3m\a_k0d3p7ef9etr0bab3ndnhosd.def', Size: 6547 bytes
Logged at ClientCache.cpp, line: 1284, method: ClientCache::DeserializeFromFile.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
Code: 0x4aa50010 (level=2)
Message: Reading from file success.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\c_g41imis28fo5k1g5u3oi0c3m\a_k0d3p7ef9etr0bab3ndnhosd.def', Size: 6547 bytes
Logged at ClientCache.cpp, line: 1284, method: ClientCache::DeserializeFromFile.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
Code: 0x4aa50010 (level=2)
Message: Reading from file success.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\c_g41imis28fo5k1g5u3oi0c3m\a_k0d3p7ef9etr0bab3ndnhosd.def', Size: 6547 bytes
Logged at ClientCache.cpp, line: 1284, method: ClientCache::DeserializeFromFile.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
Code: 0x4aa50010 (level=2)
Message: Reading from file success.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\c_g41imis28fo5k1g5u3oi0c3m\a_k0d3p7ef9etr0bab3ndnhosd.def', Size: 6547 bytes
Logged at ClientCache.cpp, line: 1284, method: ClientCache::DeserializeFromFile.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
ModLoad: 00007ffd`06b80000 00007ffd`06c21000   C:\Windows\SYSTEM32\policymanager.dll
ModLoad: 00007ffd`0a5e0000 00007ffd`0a66a000   C:\Windows\system32\msvcp110_win.dll
(11b8.2f3c): Windows Runtime Originate Error - code 40080201 (first chance)
ModLoad: 00007ffd`0a220000 00007ffd`0a24e000   C:\Windows\SYSTEM32\profext.dll
ModLoad: 00007ffd`0b4a0000 00007ffd`0b4c5000   C:\Windows\system32\profapi.dll
(11b8.2f3c): C++ EH exception - code e06d7363 (first chance)
Code: 0x4aa50084 (level=2)
Message: Token binding failed due resource state.
Details: Logged at OAuthTokenRequestBase.cpp, line: 799, method: OAuthTokenRequestBase::QueryTokenBindingKeyId.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: 4580fd1d-e5a3-4f56-9ad1-aab0e3bf8f76, correlation ID (request): 6974c67a-8175-4302-9e84-8eae963bc40e
ModLoad: 00007ffd`0aa50000 00007ffd`0aa94000   C:\Windows\system32\logoncli.dll
(11b8.2f3c): Unknown exception - code 000006d9 (first chance)
onecoreuap\base\appmodel\statemanager\roamingrpc\stateroamingrpcclient.cpp(124)\Windows.Storage.ApplicationData.dll!00007FFCEAD03D08: (caller: 00007FFCEAD03C2C) ReturnHr(5) tid(2f3c) 800706D9 There are no more endpoints available from the endpoint mapper.
    Msg:[c_SignalRoamingDataChange 2] 
ModLoad: 00007ffc`f4070000 00007ffc`f42cf000   C:\Windows\System32\msxml6.dll
Code: 0x4aa90010 (level=2)
Message: Sending web request
Details: Sending request to https://login.microsoftonline.com/common/oauth2/token
Logged at OAuthTokenRequestBase.cpp, line: 251, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: 4580fd1d-e5a3-4f56-9ad1-aab0e3bf8f76, correlation ID (request): 6974c67a-8175-4302-9e84-8eae963bc40e
Code: 0x4aa90010 (level=2)
Message: Sending web request
Details: Sending request to https://login.microsoftonline.com/common/oauth2/token
Logged at OAuthTokenRequestBase.cpp, line: 251, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://loki.delve.office.com/, correlation ID (request): 0717b322-5008-439f-b5df-eda81d85bcd6
ModLoad: 00007ffc`f6ce0000 00007ffc`f6cf7000   C:\Windows\SYSTEM32\ondemandconnroutehelper.dll
Code: 0x4aa90010 (level=2)
Message: Sending web request
Details: Sending request to https://login.microsoftonline.com/common/oauth2/token
Logged at OAuthTokenRequestBase.cpp, line: 251, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://*.microsoftstream.com, correlation ID (request): 6852112a-a0e4-49d7-ac49-866d60e9e4f2
ModLoad: 00007ffd`026d0000 00007ffd`028bd000   C:\Windows\system32\urlmon.dll
ModLoad: 00007ffd`026a0000 00007ffd`026c9000   C:\Windows\system32\srvcli.dll
ModLoad: 00007ffd`0aa40000 00007ffd`0aa4c000   C:\Windows\system32\netutils.dll
ModLoad: 00007ffd`0ac40000 00007ffd`0acaa000   C:\Windows\system32\mswsock.dll
ModLoad: 00007ffd`08f60000 00007ffd`08ffe000   C:\Windows\system32\uxtheme.dll
ModLoad: 00007ffd`057b0000 00007ffd`057bb000   C:\Windows\SYSTEM32\WINNSI.DLL
ModLoad: 00007ffd`0bef0000 00007ffd`0bef8000   C:\Windows\System32\NSI.dll
Code: 0x4aa90010 (level=2)
Message: Sending web request
Details: Sending request to https://login.microsoftonline.com/common/oauth2/token
Logged at OAuthTokenRequestBase.cpp, line: 251, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://presence.teams.microsoft.com/, correlation ID (request): 7fdf3452-08dd-4d48-8840-64a30e5d4d0c
Code: 0x4aa90010 (level=2)
Message: Sending web request
Details: Sending request to https://login.microsoftonline.com/common/oauth2/token
Logged at OAuthTokenRequestBase.cpp, line: 251, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://outlook.office.com/, correlation ID (request): b3547abf-0f80-4365-9e28-b7d9b376999c
Code: 0x4aa90010 (level=2)
Message: Sending web request
Details: Sending request to https://login.microsoftonline.com/common/oauth2/token
Logged at OAuthTokenRequestBase.cpp, line: 251, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://outlook.office365.com, correlation ID (request): cb543b89-7733-480f-a8ce-ccfdfa782384
ModLoad: 00007ffd`09de0000 00007ffd`09e03000   C:\Windows\SYSTEM32\gpapi.dll
ModLoad: 00007ffd`0a470000 00007ffd`0a507000   C:\Windows\system32\schannel.DLL
ModLoad: 00007ffc`f71b0000 00007ffc`f71e1000   C:\Windows\System32\cryptnet.dll
ModLoad: 00007ffc`fef70000 00007ffc`fef96000   C:\Windows\system32\ncryptsslp.dll
Code: 0x4aa9000f (level=2)
Message: Sending request completed successfully
Details: Logged at OAuthTokenRequestBase.cpp, line: 256, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://outlook.office.com/, correlation ID (request): b3547abf-0f80-4365-9e28-b7d9b376999c
Code: 0x4aa9000f (level=2)
Message: Sending request completed successfully
Details: Logged at OAuthTokenRequestBase.cpp, line: 448, method: OAuthTokenRequestBase::ProcessOAuthResponse.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://outlook.office.com/, correlation ID (request): b3547abf-0f80-4365-9e28-b7d9b376999c
Code: 0x4aa9000a (level=2)
Message: Access token was renewed by refresh token
Details: Logged at RefreshTokenRequest.cpp, line: 143, method: RefreshTokenRequest::AcquireToken.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://outlook.office.com/, correlation ID (request): b3547abf-0f80-4365-9e28-b7d9b376999c
Code: 0x4aa9000f (level=2)
Message: Sending request completed successfully
Details: Logged at OAuthTokenRequestBase.cpp, line: 256, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://loki.delve.office.com/, correlation ID (request): 0717b322-5008-439f-b5df-eda81d85bcd6
Code: 0x4aa9000f (level=2)
Message: Sending request completed successfully
Details: Logged at OAuthTokenRequestBase.cpp, line: 256, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://*.microsoftstream.com, correlation ID (request): 6852112a-a0e4-49d7-ac49-866d60e9e4f2
Code: 0x4aa9000f (level=2)
Code: 0x4aa9000f (level=2)
Message: Sending request completed successfully
Code: 0x4aa9000f (level=2)
Message: Sending request completed successfully
Details: Logged at OAuthTokenRequestBase.cpp, line: 256, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://presence.teams.microsoft.com/, correlation ID (request): 7fdf3452-08dd-4d48-8840-64a30e5d4d0c
Message: Sending request completed successfully
Details: Logged at OAuthTokenRequestBase.cpp, line: 448, method: OAuthTokenRequestBase::ProcessOAuthResponse.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://loki.delve.office.com/, correlation ID (request): 0717b322-5008-439f-b5df-eda81d85bcd6
Code: 0x4aa9000a (level=2)
Message: Access token was renewed by refresh token
Details: Logged at RefreshTokenRequest.cpp, line: 143, method: RefreshTokenRequest::AcquireToken.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://loki.delve.office.com/, correlation ID (request): 0717b322-5008-439f-b5df-eda81d85bcd6
Details: Logged at OAuthTokenRequestBase.cpp, line: 256, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: 4580fd1d-e5a3-4f56-9ad1-aab0e3bf8f76, correlation ID (request): 6974c67a-8175-4302-9e84-8eae963bc40e
Code: 0x4aa9000f (level=2)
Code: 0x4aa9000f (level=2)
Message: Sending request completed successfully
Details: Logged at OAuthTokenRequestBase.cpp, line: 256, method: OAuthTokenRequestBase::SendRequest.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://outlook.office365.com, correlation ID (request): cb543b89-7733-480f-a8ce-ccfdfa782384
Message: Sending request completed successfully
Details: Logged at OAuthTokenRequestBase.cpp, line: 448, method: OAuthTokenRequestBase::ProcessOAuthResponse.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://*.microsoftstream.com, correlation ID (request): 6852112a-a0e4-49d7-ac49-866d60e9e4f2
Code: 0x4aa9000a (level=2)
Message: Access token was renewed by refresh token
Details: Logged at RefreshTokenRequest.cpp, line: 143, method: RefreshTokenRequest::AcquireToken.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://*.microsoftstream.com, correlation ID (request): 6852112a-a0e4-49d7-ac49-866d60e9e4f2
Code: 0x4aa9000f (level=2)
Message: Sending request completed successfully
Details: Logged at OAuthTokenRequestBase.cpp, line: 448, method: OAuthTokenRequestBase::ProcessOAuthResponse.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: 4580fd1d-e5a3-4f56-9ad1-aab0e3bf8f76, correlation ID (request): 6974c67a-8175-4302-9e84-8eae963bc40e
Code: 0x4aa9000a (level=2)
Message: Access token was renewed by refresh token
Details: Logged at RefreshTokenRequest.cpp, line: 143, method: RefreshTokenRequest::AcquireToken.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: 4580fd1d-e5a3-4f56-9ad1-aab0e3bf8f76, correlation ID (request): 6974c67a-8175-4302-9e84-8eae963bc40e
Code: 0x4aa9000f (level=2)
Message: Sending request completed successfully
Details: Logged at OAuthTokenRequestBase.cpp, line: 448, method: OAuthTokenRequestBase::ProcessOAuthResponse.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://outlook.office365.com, correlation ID (request): cb543b89-7733-480f-a8ce-ccfdfa782384
Code: 0x4aa9000a (level=2)
Message: Access token was renewed by refresh token
Details: Logged at RefreshTokenRequest.cpp, line: 143, method: RefreshTokenRequest::AcquireToken.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://outlook.office365.com, correlation ID (request): cb543b89-7733-480f-a8ce-ccfdfa782384
Code: 0x4aa50013 (level=2)
Message: Writing to file succeeded.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\c_g41imis28fo5k1g5u3oi0c3m\a_k0d3p7ef9etr0bab3ndnhosd.def', Size: 8207 bytes
Logged at ClientCache.cpp, line: 1305, method: ClientCache::SerializeToFile.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
Code: 0x4aa9000f (level=2)
Message: Sending request completed successfully
Details: Logged at OAuthTokenRequestBase.cpp, line: 448, method: OAuthTokenRequestBase::ProcessOAuthResponse.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://presence.teams.microsoft.com/, correlation ID (request): 7fdf3452-08dd-4d48-8840-64a30e5d4d0c
Code: 0x4aa9000a (level=2)
Message: Access token was renewed by refresh token
Details: Logged at RefreshTokenRequest.cpp, line: 143, method: RefreshTokenRequest::AcquireToken.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264, resource: https://presence.teams.microsoft.com/, correlation ID (request): 7fdf3452-08dd-4d48-8840-64a30e5d4d0c
Code: 0x4aa50013 (level=2)
Message: Writing to file succeeded.
(11b8.2650): Windows Runtime Originate Error - code 40080201 (first chance)
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\c_g41imis28fo5k1g5u3oi0c3m\a_k0d3p7ef9etr0bab3ndnhosd.def', Size: 8747 bytes
Logged at ClientCache.cpp, line: 1305, method: ClientCache::SerializeToFile.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
Code: 0x4aa50013 (level=2)
Message: Writing to file succeeded.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\c_g41imis28fo5k1g5u3oi0c3m\a_k0d3p7ef9etr0bab3ndnhosd.def', Size: 7555 bytes
Logged at ClientCache.cpp, line: 1305, method: ClientCache::SerializeToFile.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
Code: 0x4aa50013 (level=2)
Message: Writing to file succeeded.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\c_g41imis28fo5k1g5u3oi0c3m\a_k0d3p7ef9etr0bab3ndnhosd.def', Size: 7351 bytes
Logged at ClientCache.cpp, line: 1305, method: ClientCache::SerializeToFile.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
(11b8.10bc): Windows Runtime Originate Error - code 40080201 (first chance)
(11b8.236c): Windows Runtime Originate Error - code 40080201 (first chance)
Code: 0x4aa50013 (level=2)
Message: Writing to file succeeded.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\c_g41imis28fo5k1g5u3oi0c3m\a_k0d3p7ef9etr0bab3ndnhosd.def', Size: 7467 bytes
Logged at ClientCache.cpp, line: 1305, method: ClientCache::SerializeToFile.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
Code: 0x4aa50013 (level=2)
Message: Writing to file succeeded.
Details: File name: 'C:\Users\Administrator\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy\LocalState\u_gt7bkh1gug7p1bipv9mk3ocg\c_g41imis28fo5k1g5u3oi0c3m\a_k0d3p7ef9etr0bab3ndnhosd.def', Size: 7567 bytes
Logged at ClientCache.cpp, line: 1305, method: ClientCache::SerializeToFile.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
(11b8.10bc): Windows Runtime Originate Error - code 40080201 (first chance)
(11b8.10bc): Windows Runtime Originate Error - code 40080201 (first chance)
(11b8.2cf0): Windows Runtime Originate Error - code 40080201 (first chance)
(11b8.3248): Windows Runtime Transform Error - code 40080202 (first chance)
(11b8.2460): Windows Runtime Transform Error - code 40080202 (first chance)
(11b8.2f3c): Windows Runtime Transform Error - code 40080202 (first chance)
(11b8.2014): Windows Runtime Transform Error - code 40080202 (first chance)
(11b8.ca8): Windows Runtime Transform Error - code 40080202 (first chance)
(11b8.1050): Windows Runtime Transform Error - code 40080202 (first chance)
(11b8.108c): Windows Runtime Transform Error - code 40080202 (first chance)
ModLoad: 00007ffd`02090000 00007ffd`02244000   C:\Windows\system32\windowscodecs.dll
(11b8.b64): Windows Runtime Transform Error - code 40080202 (first chance)
(11b8.172c): Windows Runtime Transform Error - code 40080202 (first chance)
(11b8.c44): Windows Runtime Transform Error - code 40080202 (first chance)
(11b8.136c): Windows Runtime Transform Error - code 40080202 (first chance)
(11b8.1320): Windows Runtime Transform Error - code 40080202 (first chance)
(11b8.3248): Windows Runtime Transform Error - code 40080202 (first chance)
Code: 0x4aa5001b (level=2)
Message: Token broker operation succeeded.
Details: Operation name: GetTokenSilently
Logged at WebAccountProcessor.cpp, line: 345, method: AAD::Core::WebAccountProcessor::ProcessOperationAsync::<lambda_86d928302cba6b3765a0346e94b8f38d>::operator ().
(11b8.2460): Windows Runtime Transform Error - code 40080202 (first chance)
Code: 0x4aa5001b (level=2)
Message: Token broker operation succeeded.
Details: Operation name: GetTokenSilently
Logged at WebAccountProcessor.cpp, line: 345, method: AAD::Core::WebAccountProcessor::ProcessOperationAsync::<lambda_86d928302cba6b3765a0346e94b8f38d>::operator ().
(11b8.2014): Windows Runtime Transform Error - code 40080202 (first chance)
Code: 0x4aa5001b (level=2)
Message: Token broker operation succeeded.
Details: Operation name: GetTokenSilently
Logged at WebAccountProcessor.cpp, line: 345, method: AAD::Core::WebAccountProcessor::ProcessOperationAsync::<lambda_86d928302cba6b3765a0346e94b8f38d>::operator ().
(11b8.ca8): Windows Runtime Transform Error - code 40080202 (first chance)
Code: 0x4aa5001b (level=2)
Message: Token broker operation succeeded.
Details: Operation name: GetTokenSilently
Logged at WebAccountProcessor.cpp, line: 345, method: AAD::Core::WebAccountProcessor::ProcessOperationAsync::<lambda_86d928302cba6b3765a0346e94b8f38d>::operator ().
(11b8.2f3c): Windows Runtime Transform Error - code 40080202 (first chance)
Code: 0x4aa5001b (level=2)
Message: Token broker operation succeeded.
Details: Operation name: GetTokenSilently
Logged at WebAccountProcessor.cpp, line: 345, method: AAD::Core::WebAccountProcessor::ProcessOperationAsync::<lambda_86d928302cba6b3765a0346e94b8f38d>::operator ().
(11b8.1050): Windows Runtime Transform Error - code 40080202 (first chance)
Code: 0x4aa5001b (level=2)
Message: Token broker operation succeeded.
Details: Operation name: GetTokenSilently
Logged at WebAccountProcessor.cpp, line: 345, method: AAD::Core::WebAccountProcessor::ProcessOperationAsync::<lambda_86d928302cba6b3765a0346e94b8f38d>::operator ().
win32u!NtUserMsgWaitForMultipleObjectsEx+0x14:
00007ffd`0bc0a104 c3              ret
```

However, those WorkplaceId occurrences is because Teams is already running inside SE. A second instance of Teams outside SE show that WorkplaceId is not persisted, but just passed thru WebTokenRequest field.

Teams outside SE before starting RuntimeBroker. Notice there is no WorkplaceId property listed.

```
Code: 0x4aa500f7 (level=2)
Message: Token broker activated.
Details: UTC time: 10/19/2023 21:25:58 (UTC)
Logged at TokenBackground.cpp, line: 38, method: AAD::Core::TokenBackground::Run.
Code: 0x4aa5001a (level=2)
Message: Token broker operation started.
Details: Operation name: GetTokenSilently
Logged at WebAccountProcessor.cpp, line: 524, method: AAD::Core::WebAccountProcessor::CreateBrokerOperation.
Code: 0x4aa50119 (level=2)
Message: Token broker operation request parameters.
Details: Parameter(s): correlationId: 3e60229d-bfcf-45b6-af00-af5cf840f81f
webAccountCount: 0
client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264
authority: https://login.microsoftonline.com/common
resource: https://api.spaces.skype.com
redirectUri: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
scope: (null)
LoginHint: (null)
discoverHome: false
domain_hint: (null)
fallback_domain: (null)
certificateUsage: (null)
certificateUIName: (null)
certificateUIDescription: (null)
ExtendedLifeTimeEnabled: false
UserPictureEnabled: false
prompt: 
msafed: 1
validateAuthority: true
minimum_token_lifetime: 0
transferTokenRequest: false

Request Param(s):
claims: (not empty)

Request Properties:
claims: (not empty)
correlationId: {3E60229D-BFCF-45B6-AF00-AF5CF840F81F}
msafed: 1
resource: https://api.spaces.skype.com

Logged at GetTokenBrokerOperationBase.cpp, line: 404, method: GetTokenBrokerOperationBase::LogRequestParameters.
ModLoad: 00007ffc`fc620000 00007ffc`fc634000   C:\Windows\System32\threadpoolwinrt.dll
ModLoad: 00007ffd`02f10000 00007ffd`03fcf000   C:\Windows\System32\Windows.UI.Xaml.dll
ModLoad: 00007ffd`08950000 00007ffd`08a42000   C:\Windows\system32\CoreMessaging.dll
ModLoad: 00007ffd`08040000 00007ffd`08223000   C:\Windows\system32\dcomp.dll
ModLoad: 00007ffd`04a10000 00007ffd`04a6b000   C:\Windows\system32\Bcp47Langs.dll
ModLoad: 00007ffd`0dac0000 00007ffd`0db2b000   C:\Windows\System32\WS2_32.dll
ModLoad: 00007ffc`ead00000 00007ffc`ead66000   C:\Windows\System32\Windows.Storage.ApplicationData.dll
onecoreuap\base\appmodel\statemanager\winrt\lib\windows.storage.applicationdatafactory.server.cpp(235)\Windows.Storage.ApplicationData.dll!00007FFCEAD08483: (caller: 00007FFCEAD18CCB) ReturnHr(1) tid(201c) 8000000B The operation attempted to access data outside the valid range
    Msg:[User S-1-5-21-1766144670-655409789-97929041-500] 
ModLoad: 00007ffd`09630000 00007ffd`09dc3000   C:\Windows\system32\windows.storage.dll
ModLoad: 00007ffd`0aee0000 00007ffd`0af0e000   C:\Windows\system32\Wldp.dll
ModLoad: 00007ffd`070e0000 00007ffd`071d6000   C:\Windows\system32\PROPSYS.dll
ModLoad: 00007ffd`0c9a0000 00007ffd`0c9f5000   C:\Windows\System32\shlwapi.dll
Code: 0x4aa5011a (level=2)
Message: Loading client from cache using webaccount.
Details: Token request accountId: (null), Resolved accountId: (null), PerUser accountId: (null)
Logged at ClientCache.cpp, line: 138, method: ClientCache::Load.
ModLoad: 00007ffd`0b450000 00007ffd`0b482000   C:\Windows\system32\SspiCli.dll
Code: 0x4aa50077 (level=2)
Message: No data for the primary user.
Details: Reason: -1073741729 (0xc000005f)
Unknown error code: 0xc000005f A specified logon session does not exist. It may already have been terminated.
Logged at DefaultUser.cpp, line: 150, method: DefaultUser::TryOpenLSAImpl.
```

After RuntimeBroker started:

```
ModLoad: 00007ffc`f61c0000 00007ffc`f6200000   C:\Windows\System32\UserDeviceRegistration.dll
ModLoad: 00007ffd`0baa0000 00007ffd`0bbfe000   C:\Windows\System32\CRYPT32.dll
ModLoad: 00007ffd`0af50000 00007ffd`0af78000   C:\Windows\system32\ncrypt.dll
ModLoad: 00007ffd`0af10000 00007ffd`0af4b000   C:\Windows\system32\NTASN1.dll
Code: 0x4aa50082 (level=2)
Message: The local default user is loading.
Details: Logged at ClientCache.cpp, line: 428, method: ClientCache::LoadLocalAccount.
Code: 0x4aa50016 (level=2)
Message: A new client created for the default local user.
Details: Logged at ClientCache.cpp, line: 1150, method: ClientCache::CreateNewClient.

Request: authority: https://login.microsoftonline.com/common, client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264, redirect URI: ms-appx-web://Microsoft.AAD.BrokerPlugin/1fec8e78-bce4-4aaf-ab1b-5451cc387264
ModLoad: 00007ffc`c3160000 00007ffc`c31c1000   C:\Windows\System32\CryptoWinRT.dll
ModLoad: 00007ffd`06b80000 00007ffd`06c21000   C:\Windows\SYSTEM32\policymanager.dll
ModLoad: 00007ffd`0a5e0000 00007ffd`0a66a000   C:\Windows\system32\msvcp110_win.dll
Code: 0x4aa1003c (level=3)
Message: Verbose level message.
Details: DetermineRecoveryNeeded: isCDJ: false; isWPJ: false; Local SSO accounts: 0; isDesktopSKU: true; ErrorCode: 0xCAA10001 (unknown); IsPrimaryUser: false
Logged at AccountRecovery.cpp, line: 110, method: AccountRecovery::DetermineRecoveryNeeded.
ModLoad: 00007ffc`fa440000 00007ffc`fa4bf000   C:\Windows\System32\OneCoreCommonProxyStub.dll
(1b98.12fc): Windows Runtime Transform Error - code 40080202 (first chance)
ModLoad: 00007ffd`08f60000 00007ffd`08ffe000   C:\Windows\system32\uxtheme.dll
(1b98.247c): Windows Runtime Transform Error - code 40080202 (first chance)
ModLoad: 00007ffd`02090000 00007ffd`02244000   C:\Windows\system32\windowscodecs.dll
(1b98.12fc): Windows Runtime Transform Error - code 40080202 (first chance)
Code: 0xcaa10001 (level=2)
Message: Need user interaction to continue.
Details: Operation name: GetTokenSilently, Error: -895418367 (0xcaa10001), Description: Need user interaction to continue.
Logged at WebAccountProcessor.cpp, line: 376, method: AAD::Core::WebAccountProcessor::ProcessOperationAsync::<lambda_86d928302cba6b3765a0346e94b8f38d>::operator ().
ntdll!NtAlpcSendWaitReceivePort+0x14:
00007ffd`0df2e184 c3              ret
```

Second instance of BackgroundTaskHost. No instance of RuntimeBroker was started for this one:

```
Code: 0x4aa500f7 (level=2)
Message: Token broker activated.
Details: UTC time: 10/19/2023 21:27:45 (UTC)
Logged at TokenBackground.cpp, line: 38, method: AAD::Core::TokenBackground::Run.
Code: 0x4aa5001a (level=2)
Message: Token broker operation started.
Details: Operation name: EnumerateAccounts
Logged at WebAccountProcessor.cpp, line: 491, method: AAD::Core::WebAccountProcessor::CreateBrokerOperation.
ModLoad: 00007ffc`fc620000 00007ffc`fc634000   C:\Windows\System32\threadpoolwinrt.dll
ModLoad: 00007ffd`02f10000 00007ffd`03fcf000   C:\Windows\System32\Windows.UI.Xaml.dll
ModLoad: 00007ffd`04a10000 00007ffd`04a6b000   C:\Windows\system32\Bcp47Langs.dll
ModLoad: 00007ffd`08950000 00007ffd`08a42000   C:\Windows\system32\CoreMessaging.dll
ModLoad: 00007ffd`08040000 00007ffd`08223000   C:\Windows\system32\dcomp.dll
ModLoad: 00007ffd`0dac0000 00007ffd`0db2b000   C:\Windows\System32\WS2_32.dll
ModLoad: 00007ffc`ead00000 00007ffc`ead66000   C:\Windows\System32\Windows.Storage.ApplicationData.dll
onecoreuap\base\appmodel\statemanager\winrt\lib\windows.storage.applicationdatafactory.server.cpp(235)\Windows.Storage.ApplicationData.dll!00007FFCEAD08483: (caller: 00007FFCEAD18CCB) ReturnHr(1) tid(1ed4) 8000000B The operation attempted to access data outside the valid range
    Msg:[User S-1-5-21-1766144670-655409789-97929041-500] 
ModLoad: 00007ffd`09630000 00007ffd`09dc3000   C:\Windows\system32\windows.storage.dll
ModLoad: 00007ffd`0aee0000 00007ffd`0af0e000   C:\Windows\system32\Wldp.dll
ModLoad: 00007ffd`070e0000 00007ffd`071d6000   C:\Windows\system32\PROPSYS.dll
ModLoad: 00007ffd`0c9a0000 00007ffd`0c9f5000   C:\Windows\System32\shlwapi.dll
ModLoad: 00007ffc`fa440000 00007ffc`fa4bf000   C:\Windows\System32\OneCoreCommonProxyStub.dll
ModLoad: 00007ffd`068a0000 00007ffd`068b6000   C:\Windows\SYSTEM32\usermgrcli.dll
ModLoad: 00007ffd`0baa0000 00007ffd`0bbfe000   C:\Windows\System32\CRYPT32.dll
ModLoad: 00007ffc`f3f60000 00007ffc`f4023000   C:\Windows\System32\Windows.Web.dll
Code: 0x4aa500f5 (level=2)
Message: Returning enumerated accounts.
Details: Logged at EnumerateAccountsBrokerOperation.cpp, line: 74, method: EnumerateAccountsBrokerOperation::ExecuteImpl::<lambda_93c605f65d6e6ebfe2ff8aa7d485a465>::operator ().
(2d9c.1ed4): Windows Runtime Transform Error - code 40080202 (first chance)
ModLoad: 00007ffd`08f60000 00007ffd`08ffe000   C:\Windows\system32\uxtheme.dll
(2d9c.d48): Windows Runtime Transform Error - code 40080202 (first chance)
ModLoad: 00007ffd`02090000 00007ffd`02244000   C:\Windows\system32\windowscodecs.dll
(2d9c.1ed4): Windows Runtime Transform Error - code 40080202 (first chance)
Code: 0x4aa5001b (level=2)
Message: Token broker operation succeeded.
Details: Operation name: EnumerateAccounts
Logged at WebAccountProcessor.cpp, line: 345, method: AAD::Core::WebAccountProcessor::ProcessOperationAsync::<lambda_86d928302cba6b3765a0346e94b8f38d>::operator ().
ntdll!NtAlpcSendWaitReceivePort+0x14:
00007ffd`0df2e184 c3              ret
```

Startup window from Teams running outside SE, but already signin made inside SE:

img/welcome_msteams_outside_se_after_signin_inside_se.png

TL;DR Integrated filtering + context branches. Still using WinRT for WebTokenRequest insert property WorkplaceId because the COM Proxy solution was not arriving at AAD Broker (dunno why). Analyzed the logs from BackgroundTaskHost after signin. WorkplaceId is still present in BackgroundTaskHost even after AAD Broker finished, but should be new inserts from Teams running inside SE. Trying to insert WorkplaceId inside WebAccount to see if it is persisted in cache, so we can know which one was recorded inside SE.


= Trying to discovery more about setting and getting properties persisted from a WebAccount.
:date: 2023-10-20
:tags: tag_venn tag_reversing

Merged with ROADMAP-69311 (the IAsyncOperations part) and investigated which methods are called post signin from Microsoft Teams. Identify that the same instance of BackgroundTaskHost is used to get token for [two different clients]:

 - Windows Spotlight (1b3c667f-cde3-4090-b60b-3d2abd0117f0)
 - Microsoft Teams (1fec8e78-bce4-4aaf-ab1b-5451cc387264)

The first, Spotlight, does not returns data for primary user, which makes sense, since this was a test where I choose to record credentials only for the app being used.

The second, Teams, returned the WebAccountId already recorded during the signin process.

Bellow some spotlights (pun unintended) from the debugger output. Notice WorkplaceId is available probably (not checked) because Teams was running inside SE and this property is always put into a WebTokenRequest being created using WinRT hook.

```
Details: Operation name: GetTokenSilently
client: 1b3c667f-cde3-4090-b60b-3d2abd0117f0
Message: Loading client from cache using webaccount.
Details: Token request accountId: (null), Resolved accountId: (null), PerUser accountId: (null)
Message: No data for the primary user.
...
Details: Operation name: GetTokenSilently
client: 1fec8e78-bce4-4aaf-ab1b-5451cc387264
...
Request Properties:
LoginHint: dev@dlp.os33dev.com
WorkplaceId: (not empty)
claims: (not empty)
correlationId: {E9B6647A-C8B3-4E3D-9069-33DC4CCB39F6}
msafed: 1
resource: https://outlook.office.com
```

Put all breakpoints available from our recent hooks and the relevant function called was `WebAuthenticationCoreManager.FindAccountAsync`, that [only receives the WebAccountId as a string]. It was called three times.

[two different clients]: https://learn.microsoft.com/en-us/troubleshoot/azure/active-directory/verify-first-party-apps-sign-in
[only receives the WebAccountId as a string]: https://learn.microsoft.com/en-us/uwp/api/windows.security.authentication.web.core.webauthenticationcoremanager.findaccountasync?view=winrt-22621#windows-security-authentication-web-core-webauthenticationcoremanager-findaccountasync(windows-security-credentials-webaccountprovider-system-string)

TL;DR Tried to discovery more about setting and getting properties persisted from a WebAccount. Found the method `WebAuthenticationCoreManager.FindAccountAsync`, but it only receives the WebAccountId as a string.


## Trying to persist WorkplaceId (inside SE flag) in our storage

Since we know how to pass the inside SE flag (WorkplaceId implementation) I started to working in a way to persist this into our storage and then to relate to WebAccountId or another account identifier.

My first try was to create a simple INI inside the Workplace Virtual Drive with the relation between WebAccountId and WorkplaceId, but the WebAccounts property in WebProviderTokenRequest comes empty in the UnmarshalInterface event.

So I changed the WebAccountId key for CorrelationId. Based on [the documentation], "a unique identifier used for tracking authentication-related requests", so if we keep this is as the temporary holder for our WorkplaceId, in the moment of adding a new account we can relate to the same CorrelationId from the current request.

However, since we are not enabling FileRedirector protection into AAD Broker I made a local test, writing into a Temp folder.

```
wstring appRepo = L"C:\\Temp\\WorkplaceIds.ini"; // or
// wstring appRepo = L"C:\ProgramData\Microsoft\Windows\AppRepository\Packages\Microsoft.AAD."
//   L"BrokerPlugin_1000.19041."
//   "3570.0_neutral_neutral_cw5n1h2txyewy";

WritePrivateProfileString(L"WorkplaceIdByCorrelationId",
    correlationIdValueS.c_str(),
    workplaceIdValueS.c_str(),
    appRepo.c_str());
```

But for some reason the system keeps returning error 2 to WritePrivateProfileStringW:

```
bp KERNEL32!WritePrivateProfileStringW
g

Breakpoint 2 hit
KERNEL32!WritePrivateProfileStringW:
00007ffe`40167e00 4c8bdc          mov     r11,rsp
0:020> gu
WorkplaceHook64!AADBrokerMonitor_CoUnmarshalInterface_Hook+0x9a9:
00007ffe`009bd7f9 488d8c2428030000 lea     rcx,[rsp+328h]
0:020> r
rax=0000000000000000 rbx=0000003d3d9fe380 rcx=ead9298f08270000
...
WorkplaceHook64!AADBrokerMonitor_CoUnmarshalInterface_Hook+0x9a9:
00007ffe`009bd7f9 488d8c2428030000 lea     rcx,[rsp+328h]
0:020> !gle
LastErrorValue: (Win32) 0x2 (2) - The system cannot find the file specified.
LastStatusValue: (NTSTATUS) 0xc0000034 - Object Name not found.
```

I started another try by loading the app hive to write, located in "C:\ProgramData\Microsoft\Windows\AppRepository\Packages\Microsoft.AAD.BrokerPlugin_1000.19041.3570.0_neutral_neutral_cw5n1h2txyewy\ActivationStore.dat", but accordingly with documentation of RegLoadAppKey, there is a flag option REG_PROCESS_APPKEY; if the app uses that option "the hive cannot be loaded again while it is loaded by the caller. This prevents access to this registry hive by another caller.". So I not even tried.

I ran out of ideas for now. It should be better to start with the release solution, perhaps communicating with the Workplace thru IPC and saving to some Workplace storage. I searched in the base code and Confluence but with no success finding a sample yet.

TL;DR Trying to persist WorkplaceId (inside SE flag) in our storage to avoid modifying WebAccount original info. Tried simple tests in injected AAD Broker to write an INI file and to load the app hive, but both didn't work yet. Perhaps it would be better to start with the release solution, communicating with the Workplace thru IPC and saving to some Workplace storage. I searched in code/docs but found no sample yet of how to persist something from hook DLL to virtual drive.


= Register WebAccount id and find all web accounts in Container (WIP)
:date: 2023-10-25
:tags: tag_venn tag_reversing

Made the request/response part for new Ipc methods and inserted into the unmarshal process in AAD Broker. Now for the next part need to change the Id type from AadWebAccount from Guid to string (a WebAccount id example is "bSnuZWC1LkEXxo0XPiYv2yo7ZgzbySy0DvlmP79qC-w") and change from in the Container from current memory list to write to registry with id as a value (to be unique) and the data as the inside or outside SE flag (WorkplaceId or empty?).


= Keep a map of WebAccounts indexed by... correlation id?
:date: 2023-10-26
:tags: tag_venn tag_reversing

It seems that this information is available during the whole signin process. At least in the first one. Since AAD Broker is only started to make a login and we pass the WorkplaceId into WebTokenRequest that is unmarshaled the only other info at this moment is the ids of the process, since there is no login yet.

But there is no correlation id in the properties from WebAccountManager::AddWebAccountWithScopeAndMapAsync.

Also we can't use LoginHint because that could change during the login.


= Still find a index to map WebAccounts in CoUnMarshalInterface hook
:date: 2023-11-04
:tags: tag_venn tag_reversing

Still trying to find a index to map WebAccounts in CoUnMarshalInterface hook. My next test would be to use TLS or something but need to know if unmarshal from WebTokenRequest and AAD window are in the same thread. However, I am getting some issues to run lastest version (compilation broken around AadWebAccountService, AadWebAccountInfo not available). Bellow the state of branches/commits:

### master (5d5a6f1c9)

Connecting and starting demo normally.

```
Verbose: Gateway connectivity status: Connected
Verbose: Gateway connectivity data: OS33.Workplace.InternetConnectivityMonitoring.Common.Data.ConnectivityInfo
Verbose: Start signature calculation
Verbose: Finish signature calculation
OnConfirmContainerSession invoked for session 04551e74-2502-4244-8b84-613e2c04a848. Antivirus thumbprints 7D827CF26BD7A3AFA75051801568E35191389BF5
Info: Confirmed container session. Virtual drive mount point = V:\, WorkplaceDriveMountPoint = V:\Workplace Drive
Info: Workplace Container Manager is ready with session id 04551e74-2502-4244-8b84-613e2c04a848
Info: Leaving critical section after start
Info: Updating drive settings. Status: Mounting, MountPoint: X:, UncPath: \Device\HarddiskVolume3\ProgramData\Workplace\FakeDrive, DriveFolderIconPath: C:\Temp\Demo\Demo.exe, DriveNetworkLocationIconPath: C:\Temp\Demo\Demo.exe
Verbose: Start signature calculation
Verbose: Finish signature calculation
Verbose: IpcClientLogger. SendRequest. Endpoint: Workplaceupdate-drive-settings. Request started: 2023-10-24 22:01:02.200. Elapsed time: 00:00:00.0904609
Initialize Applications
Info: Updating drive settings. Status: Mounted, MountPoint: X:, UncPath: \Device\HarddiskVolume3\ProgramData\Workplace\FakeDrive, DriveFolderIconPath: C:\Temp\Demo\Demo.exe, DriveNetworkLocationIconPath: C:\Temp\Demo\Demo.exe
Info: Initializing applications
Verbose: Start signature calculation
Verbose: Finish signature calculation
Verbose: Start signature calculation
Verbose: Finish signature calculation
Verbose: IpcClientLogger. SendRequest. Endpoint: Workplaceupdate-drive-settings. Request started: 2023-10-24 22:01:02.934. Elapsed time: 00:00:00.1357517
Verbose: IpcClientLogger. SendRequest. Endpoint: Workplaceinitialize-applications. Request started: 2023-10-24 22:01:02.974. Elapsed time: 00:00:00.2079283
Not initialized application ids
Received command from commandline:
Enter application path or 'exit' to break:
```

### ROADMAP-69325-spike-detect-aad-broker-activated-inside-se (ee0838868)

This is after merging with last commit from Chermyanin about webaccount service. The symptom is the same from before merge: eternal connected message (without start demo). Missing the "Confirmed container session" message, perhaps. There is a timeout from both after a while:

```
Verbose: Gateway connectivity data: OS33.Workplace.InternetConnectivityMonitoring.Common.Data.ConnectivityInfo
Warning: System.TimeoutException: Workplace container session has not been confirmed within given period
   at Workplace.Container.Api.Common.Utilities.ConditionAwaiter.<Wait>d__0.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
```

### c6a251ac7 (my last commit before vacation)

Eternal connected message (without start demo). Missing the "Confirmed container session" message, perhaps.

```
Verbose: Gateway connectivity status: Connected
Verbose: Gateway connectivity data: OS33.Workplace.InternetConnectivityMonitoring.Common.Data.ConnectivityInfo
Verbose: Start signature calculation
Verbose: Finish signature calculation
Verbose: Gateway connectivity status: Connected
Verbose: Gateway connectivity data: OS33.Workplace.InternetConnectivityMonitoring.Common.Data.ConnectivityInfo
Verbose: Start signature calculation
Verbose: Finish signature calculation
Verbose: Gateway connectivity status: Connected
Verbose: Gateway connectivity data: OS33.Workplace.InternetConnectivityMonitoring.Common.Data.ConnectivityInfo
Verbose: Start signature calculation
Verbose: Finish signature calculation
Verbose: Gateway connectivity status: Connected
Verbose: Gateway connectivity data: OS33.Workplace.InternetConnectivityMonitoring.Common.Data.ConnectivityInfo
```

### ROADMAP-69311-e-spike-option-a-hook-into-aad-broker-and-filter-accounts (89df0cd34)

Teams eternal loading accounts. But this is a test branch yet about filtering accounts, so makes sense.

img/teams_eternal_loading_accounts.png

Tried merge with this branch and master with no better results. With master there is broken part around AadWebAccountService (AadWebAccountInfo not available).


= Teams working again and reinstalling WinRt WebTokenRequest hook (temporary)
:date: 2023-11-06
:tags: tag_venn tag_reversing

After the branch from ROADMAP-69311 was merged to this I recompiled and Teams is working again. However, as pointed out in previous comments, the COM proxy hook for some reason does not change WebTokenRequest properties to insert SE mark. I put back the WinRT solution again just for test and for comparison. The new IsSERequest function returns true when WinRT inserts the hook for WebTokenRequest.

## Sidetracked: installing Workplace into new computer

Trying to setup a new computer with Workplace. After stuck for a while in the "installing Citrix" task and a few reboots I got a situation where the PCG does not connect. Looking into the logs I got a "Workplace Container has been terminated during waiting for session confirmation" and looking into the container the error "WmiObjectInvokeException: WMI call failed with code 2150694913. The volume is fully decrypted and cannot be locked.".

What is the procedure to use more than one computer or setup a new one? (btw the old one is working and logged, but I tested the new one disconnected too).

I believed the error was because I was using the same account in two different computers, but as Andrey Bisikalo pointed out, there is another error before hooks logs (always look for Trace logs when container session does not start yet).


= Scanning AAD unmarshal after signin
:date: 2023-11-08
:tags: tag_venn tag_reversing

Got the listing for AAD Broker direct CoUnMarshalInterface calls in three phases: 1) since beginning of our hook, 2) after typed password and enter, 3) after press some button in the stay signin window.

Besides some key classes already seen in previous analysis now a unmarshal called my attention: the `IVector<Windows::Security::Authentication::Web::Provider::WebProviderTokenResponse>`. So I hooked this IID.

However, the vector is empty during unmarshal; it must be filled afterwards.

```
HRESULT STDAPICALLTYPE AADBrokerMonitor_CoUnmarshalInterface_Hook(IStream *pStream, REFIID riid, LPVOID FAR *ppv)
{
    StreamObserver streamObs(pStream);
    HRESULT hr = g_aadBrokerMonitor_CoUnmarshalInterface(&streamObs, riid, ppv);
    if( SUCCEEDED(hr) && streamObs._iid != GUID_NULL )
    {
      //... <- to list interfaces put breakpoint here
      // bp WorkplaceHook64!AADBrokerMonitor_CoUnmarshalInterface_Hook+curr_offset "?? streamObs._iid ; g"

      winrt::com_ptr<winrt::Windows::Foundation::Collections::IVector<
          winrt::Windows::Security::Authentication::Web::Provider::WebProviderTokenResponse>>
          vectorWebProviderTokenResponse(*ppv, winrt::take_ownership_from_abi);
      unsigned int size = 0;
      hr = vectorWebProviderTokenResponse->get_Size(&size);
```

```
Since beginning
0f4accb1-d8f9-4011-ba37-2557925a78cf
1d5bc3a2-a3ff-4517-bb16-25bf18ef7378
1e18778b-8805-454b-9f11-468d2af1095a
2166ee67-71df-4476-8394-0ced2ed05274
29a3ab33-0fd7-44f5-9bff-c0b6c081fbfb
2e5500b6-66ad-467f-abb5-022a64283d88
2f13c006-a03a-5f69-b090-75a43e33423e
6040ec14-6557-41f9-a3f7-b1cab7b42120
60db2fa8-b705-4fde-a7d6-ebbb1891d39e
6d5d2426-10b1-419a-a44e-f9c5161574e6
6dc8c1be-86e5-4eef-8335-72cab53f06c8
79b9d5f2-879e-4b89-b798-79e47598030c
83140d1c-7e82-4cfb-96e4-f997cede7e10
905a0fe0-bc53-11df-8c49-001e4fc686da
9767060c-9476-42e2-8f7b-2f10fd13765c
a3104ea9-a816-4fdc-860c-75408a04b686
af86e2e0-b12d-4c6a-9c5a-d7aa65101e90
b2b6814f-02c2-5b0c-9e14-159eb77f4462
b32c133c-e4dd-43a0-b85c-b0e5717683c5
ca4d975c-d4d6-43f0-97c0-0833c6391c24
cd292360-2763-4085-8a9f-74b224a29175
cf651713-cd08-4fd8-b697-a281b6544e2e
d98fd14a-522a-4d59-b875-811e83919a9e
f84b2c99-2f3d-5877-bf78-4f40f6bd25c0
fefdc269-a317-4e33-9f50-c285c9c29725

Typing password and OK interfaces (after)
1d5bc3a2-a3ff-4517-bb16-25bf18ef7378
29a3ab33-0fd7-44f5-9bff-c0b6c081fbfb
2f13c006-a03a-5f69-b090-75a43e33423e
a3104ea9-a816-4fdc-860c-75408a04b686
af86e2e0-b12d-4c6a-9c5a-d7aa65101e90
b2b6814f-02c2-5b0c-9e14-159eb77f4462
f84b2c99-2f3d-5877-bf78-4f40f6bd25c0

Stay signin window unmarshaled interfaces (after)
1d5bc3a2-a3ff-4517-bb16-25bf18ef7378
29a3ab33-0fd7-44f5-9bff-c0b6c081fbfb
4e7ad5cf-390f-5ecd-b714-3c654b84cbba - IVector<Windows::Security::Authentication::Web::Provider::WebProviderTokenResponse>
63a0a1e5-f8fe-4ba6-8508-caef1277dd35
9d4966fa-dbd1-4799-a07f-6a5e1991bda4
a3104ea9-a816-4fdc-860c-75408a04b686
af86e2e0-b12d-4c6a-9c5a-d7aa65101e90
b2b6814f-02c2-5b0c-9e14-159eb77f4462
f84b2c99-2f3d-5877-bf78-4f40f6bd25c0
```

= Receiving help from Anton Kukoba
:date: 2023-11-09
:tags: tag_venn tag_reversing

Today Anton Kukoba sent me DM to help me about what I was doing. I gave the briefing about the mark SE idea and he told me about discovering some settings from TokenBroker. I gave him the stack trace from the key moments in AAD Broker signin and started again to investigate the storage how was found previously.

Gathering more information about the stacks in the key moments of account registration:

Stacks the moment the request is being unmarshaled the first time: stack_unmarshal_request.txt
Stacks the moment user typed password and the window stay signed in is shown: stack_stay_signed_in.txt
Stacks the moment account is being registed by WebAccountManager: stack_after_signin.txt

Those are the folder with some info about the AAD Broker and TokenBroker detected by procmon:

 - C:\ProgramData\Microsoft\Windows\AppRepository\Packages
 - C:\Users\User\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_hash\AC\TokenBroker\Accounts
 - C:\Users\User\AppData\Local\Microsoft\TokenBroker\Cache

There are two registry hives, each one in the first two folders (or in some subfolder in them), and for the AppData there it was even some info with account in the name. But removing those values (by loading, writing, unloading and writing the file back) does not make different in Teams loading in an already signed in account. And in the AppRepository resides more settings from AAD Broker itself.

From the last folder, TokenBroker Cache, there are json with the TokenResponse info. If deleted, when starting Teams again it regenerates. And regenerates. And again. And again. It is not a token update, but at the beginning, in the same minute, it generates 6 files with the semelhant content, encoded in UTF-16:

```
{
  "TBDataStoreObject": {
    "Header": {
      "ObjectType": "TokenResponse",
      "SchemaVersionMajor": 2,
      "SchemaVersionMinor": 1
    },
    "ObjectData": {
      "SystemDefinedProperties": {
        "RequestIndex": {
          "Type": "InlineBytes",
          "IsProtected": false,
          "Value": "p+Yk06gABYRnNQc1o8m032UC/Xk="
        },
        "Expiration": {
          "Type": "InlineBytes",
          "IsProtected": false,
          "Value": "gCmpgUET2gE="
        },
        "Status": {
          "Type": "InlineBytes",
          "IsProtected": false,
          "Value": "AAAAAA=="
        },
        "ResponseBytes": {
          "Type": "InlineBytes",
          "IsProtected": true,
          "Value": "AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAMhL+0+uRMky7scIUexMmcwAAAAACAAAAAAAQZgAAAAEAACAAAABGRKSkKHyPzSL/3C1DzYxJ60LKIbbByEdSffIX9P3DJwAAAAAOgAAAAAIAACAAAAAHG4bTib7MIUyYMphkshJ04ycrOcc6cH15ygUHpu5+8qAAAAA4z/VKhwA26K7H9L0uPlRYa2R/iWEGc/FhsAZehVw3GDuJNS+XZbqgsXD4072WxrxVDuuPsX/aaxsu7m3QgSm4D4OunsF7LFxr9QM42NhFs8gfZqV+7dgsbpI5feON3Dco9XahSB2jXeOgiT88udTHLxnV76bJt7GkULNeFnwkbhFA6EQbAf1RB0+zzQlUIjxPkkUp8bshzLYiEetXhNSFQAAAAHvJYyJyI17mMZwoiBCNomhW55fjuXZPZvuYHLmQbFQRsuDNMYmcUSJpaS9BEfLvxq5NSn3AeXP00lhanf+2C04="
        },
        "ProviderPfn": {
          "Type": "InlineString",
          "IsProtected": false,
          "Value": "Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy"
        }
      },
      "ProviderDefinedProperties": [],
      "PerApplicationProperties": {}
    }
  }
}
```

Looking to procmon stack the moment Teams write the new cache the object being received is a `WebTokenRequestResult`.

```
10 KernelBase.dll WriteFile
11 Windows::Internal::Security::Authentication::TokenBroker::StoredObjectInfo::WriteNBytesToFile
12 Windows::Internal::Security::Authentication::TokenBroker::StoredObjectInfo::WriteBytes
13 WriteTokenCacheEntry
14 SetCachedTokenResponses
15 Windows::Internal::Security::Authentication::TokenBroker::AddWebTokenResponsesToCache
16 Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::WriteTokenResponseCache
17 Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::DoWork
18 <lambda_b4251670e5671f0606e8a09c349557a5>::operator()<Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult> >
19 Windows::Internal::COperationLambdaVar<1,<lambda_b4251670e5671f0606e8a09c349557a5>,Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult> >::Run
20 Windows::Internal::AsyncOperation<Windows::Foundation::IAsyncOperation<Windows::Security::Authentication::Web::Core::WebTokenRequestResult *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Security::Authentication::Web::Core::WebTokenRequestResult *>,Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult>,Windows::Internal::ComTaskPoolHandler,Windows::Internal::INilDelegate,Microsoft::WRL::
21 SHCore.dll WorkThreadManager::CThread::RunCurrentTaskUnderLock
```

Debugging AAD Broker reveals Teams write the first file into TokenBroker cache even before BackgroundTaskHost started, so it independs from it to get token saved somewhere.

Teams write the first file with the same name and the content is very close to identical. Some parts of two base64 like entries are slightly different, what means it is not encrypted. Could it be just binary data.

img/winmerge_tokenbroker_cache_first_entry.png
2b49d43a9aa4f459172c6a85660fecd7b2dc2f54-orig.tbres
2b49d43a9aa4f459172c6a85660fecd7b2dc2f54.tbres

Perhaps the answer of where is the original storage could be from discovering who sent the `WebTokenRequestResult` object to Teams. Since the cache writing is made in a worker thread it needs to be investigated to other threads. The unmarshal hook could give us an answer.


= Observing behavior when Teams populate TokenBroker cache
:date: 2023-11-10
:tags: tag_venn tag_reversing

Deleting the entire folder C:\Users\Administrator\AppData\Local\Packages\AAD_version, C:\Users\Administrator\AppData\Local\Microsoft\TokenBroker\Cache file and restart the computer, Teams started logged in normally. However, after some time, Teams ask to enter some email/password again (via AAD). What is odd is that you can close this window and Teams remains logged in.

Analysing the WriteFile's to cache folder the first one has a different stack than the other. Also, the other are made by subprocesses from Teams, including Edge.

### Stack for first file write to cache

```
0	FLTMGR.SYS	FltpPerformPreCallbacksWorker + 0x36c
1	FLTMGR.SYS	FltpPassThroughInternal + 0xca
2	FLTMGR.SYS	FltpPassThrough + 0x541
3	FLTMGR.SYS	FltpDispatch + 0x8b
4	ntoskrnl.exe	IofCallDriver + 0x55
5	ntoskrnl.exe	IopSynchronousServiceTail + 0x34c
6	ntoskrnl.exe	IopWriteFile + 0x23d
7	ntoskrnl.exe	NtWriteFile + 0x996	
8	ntoskrnl.exe	KiSystemServiceCopyEnd + 0x25	
9	ntdll.dll	NtWriteFile + 0x14	
10	KernelBase.dll	WriteFile + 0x76	
11	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::Security::Authentication::TokenBroker::StoredObjectInfo::WriteNBytesToFile + 0xd1	
12	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::Security::Authentication::TokenBroker::StoredObjectInfo::WriteBytes + 0x148	
13	Windows.Security.Authentication.Web.Core.dll	WriteTokenCacheEntry + 0xcb	
14	Windows.Security.Authentication.Web.Core.dll	SetCachedTokenResponses + 0x573	
15	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::Security::Authentication::TokenBroker::AddWebTokenResponsesToCache + 0x37c	
16	Windows.Security.Authentication.Web.Core.dll	Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::WriteTokenResponseCache + 0x1d6f1	
17	Windows.Security.Authentication.Web.Core.dll	Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::DoWork + 0x42e	
18	Windows.Security.Authentication.Web.Core.dll	<lambda_b4251670e5671f0606e8a09c349557a5>::operator()<Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult> > + 0x7f	
19	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::COperationLambdaVar<1,<lambda_b4251670e5671f0606e8a09c349557a5>,Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult> >::Run + 0x19	
20	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::AsyncOperation<Windows::Foundation::IAsyncOperation<Windows::Security::Authentication::Web::Core::WebTokenRequestResult *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Security::Authentication::Web::Core::WebTokenRequestResult *>,Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult>,Windows::Internal::ComTaskPoolHandler,Windows::Internal::INilDelegate,Microsoft::WRL:: + 0x7a	
21	SHCore.dll	WorkThreadManager::CThread::RunCurrentTaskUnderLock + 0x62	
22	SHCore.dll	WorkThreadManager::CThread::ThreadProc + 0xf5	
23	SHCore.dll	WorkThreadManager::CThread::s_ExecuteThreadProc + 0x18	
24	SHCore.dll	<lambda_9844335fc14345151eefcc3593dd6895>::<lambda_invoker_cdecl> + 0x11	
25	kernel32.dll	BaseThreadInitThunk + 0x14	
26	ntdll.dll	RtlUserThreadStart + 0x21	
```

### Stack for subsequent file writes to cache

```
0	FLTMGR.SYS	FltpPerformPreCallbacksWorker + 0x36c	
1	FLTMGR.SYS	FltpPassThroughInternal + 0xca	
2	FLTMGR.SYS	FltpPassThrough + 0x541	
3	FLTMGR.SYS	FltpDispatch + 0x8b	
4	ntoskrnl.exe	IofCallDriver + 0x55	
5	ntoskrnl.exe	IopSynchronousServiceTail + 0x34c	
6	ntoskrnl.exe	IopWriteFile + 0x23d	
7	ntoskrnl.exe	NtWriteFile + 0x996	
8	ntoskrnl.exe	KiSystemServiceCopyEnd + 0x25	
9	ntdll.dll	NtWriteFile + 0x14	
10	KernelBase.dll	WriteFile + 0x76	
11	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::Security::Authentication::TokenBroker::StoredObjectInfo::WriteNBytesToFile + 0xd1	
12	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::Security::Authentication::TokenBroker::StoredObjectInfo::WriteBytes + 0x148	
13	Windows.Security.Authentication.Web.Core.dll	WriteTokenCacheEntry + 0xcb	
14	Windows.Security.Authentication.Web.Core.dll	SetCachedTokenResponses + 0x573	
15	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::Security::Authentication::TokenBroker::AddWebTokenResponsesToCache + 0x37c	
16	Windows.Security.Authentication.Web.Core.dll	Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::WriteTokenResponseCache + 0x1d6f1	
17	Windows.Security.Authentication.Web.Core.dll	Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::DoWork + 0x42e	
18	Windows.Security.Authentication.Web.Core.dll	<lambda_b4251670e5671f0606e8a09c349557a5>::operator()<Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult> > + 0x7f	
19	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::COperationLambdaVar<1,<lambda_b4251670e5671f0606e8a09c349557a5>,Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult> >::Run + 0x19	
20	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::AsyncOperation<Windows::Foundation::IAsyncOperation<Windows::Security::Authentication::Web::Core::WebTokenRequestResult *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Security::Authentication::Web::Core::WebTokenRequestResult *>,Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult>,Windows::Internal::ComTaskPoolHandler,Windows::Internal::INilDelegate,Microsoft::WRL:: + 0x7a	
21	SHCore.dll	SHTaskPoolQueueTask + 0x1f3	
22	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::AsyncOperation<Windows::Foundation::IAsyncOperation<Windows::Security::Authentication::Web::Core::WebTokenRequestResult *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Security::Authentication::Web::Core::WebTokenRequestResult *>,Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IWebTokenRequestResult>,Windows::Internal::ComTaskPoolHandler,Windows::Internal::INilDelegate,Microsoft::WRL:: + 0x86	
23	Windows.Security.Authentication.Web.Core.dll	Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Security::Authentication::Web::Core::WebTokenRequestResult *>,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncOptions<-1,0,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >::Start + 0x7e	
24	Windows.Security.Authentication.Web.Core.dll	Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::GetTokenSilentlyAsync + 0x807	
25	Windows.Security.Authentication.Web.Core.dll	Windows::Security::Authentication::Web::Core::CCoreFindAllAccountsOperation::DoWork + 0x2a7	
26	Windows.Security.Authentication.Web.Core.dll	<lambda_0fd7753657fb698eab3c8bdbf3bc08b4>::operator()<Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IFindAllAccountsResult> > + 0x7f	
27	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::COperationLambdaVar<1,<lambda_0fd7753657fb698eab3c8bdbf3bc08b4>,Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IFindAllAccountsResult> >::Run + 0x19	
28	Windows.Security.Authentication.Web.Core.dll	Windows::Internal::AsyncOperation<Windows::Foundation::IAsyncOperation<Windows::Security::Authentication::Web::Core::FindAllAccountsResult *>,Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Security::Authentication::Web::Core::FindAllAccountsResult *>,Windows::Internal::CMarshaledInterfaceResult<Windows::Security::Authentication::Web::Core::IFindAllAccountsResult>,Windows::Internal::ComTaskPoolHandler,Windows::Internal::INilDelegate,Microsoft::WRL:: + 0x7a	
29	SHCore.dll	WorkThreadManager::CThread::RunCurrentTaskUnderLock + 0x62	
30	SHCore.dll	WorkThreadManager::CThread::ThreadProc + 0xf5	
31	SHCore.dll	WorkThreadManager::CThread::s_ExecuteThreadProc + 0x18	
32	SHCore.dll	<lambda_9844335fc14345151eefcc3593dd6895>::<lambda_invoker_cdecl> + 0x11	
33	kernel32.dll	BaseThreadInitThunk + 0x14	
34	ntdll.dll	RtlUserThreadStart + 0x21	
```

Debugging the first write I could follow some key methods in CWebTokenRequestResultOperation, responsible for make this write somewhere.

```
c:\Tools\DbgTools\windbg.exe C:\Users\Administrator\AppData\Local\Microsoft\Teams\current\Teams.exe
sxe ld:Windows.Security.Authentication.Web.Core.dll
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::ApplyConnectedAccountLogic
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::DoWork
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::InitializeOperationData
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryExtension
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryCache
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::CWebTokenRequestResultOperation
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::ApplyAccountSwitchStatus
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::WriteTokenResponseCache
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::UpdateRequestWithAccountControlWebAccount
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::ValidateProviderAndAccountsMatch
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::RecordResultAndCallerIdentity
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TrySilent
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::TryUi
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::LaunchComponentUI
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::OnCancel
bp Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::InitializeTokenBrokerInternal
```

Stack:

```
# Child-SP          RetAddr               Call Site
00 000000ae`291fc238 00007ffb`076f2e52     Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebTokenRequestResultOperation::CWebTokenRequestResultOperation
01 000000ae`291fc240 00007ffb`087da342     Windows_Security_Authentication_Web_Core!Windows::Security::Authentication::Web::Core::CWebAuthenticationCoreManager::GetTokenSilentlyAsync+0x1d2
02 000000ae`291fc5e0 00007ffb`087d7375     wam+0xa342
03 000000ae`291fc610 00007ffb`087dcdde     wam+0x7375
04 000000ae`291fc8b0 00007ffb`087dc1d8     wam+0xcdde
05 000000ae`291fc970 00007ff6`d5b1340e     wam+0xc1d8
06 000000ae`291fc9b0 00007ff6`d651e62e     electron!napi_is_detached_arraybuffer+0x21e
07 000000ae`291fca40 00007ff6`57ecca3c     electron!v8::EmbedderStateScope::~EmbedderStateScope+0x1975e
```

Some interfaces used in method `DoWork`:

```
3b043d7e-726f-41e2-8933-f968f503b854 IID___x_Windows_CInternal_CSecurity_CCredentials_CIWebAccountProviderSystemInformation	
c997b7de-ff59-4392-bcde-50ea5ffc1e1c IID___x_Windows_CInternal_CSecurity_CCredentials_CIWebAccountProviderUserContext
68c6a1b9-de39-42c3-8d28-bf40a5126541 IID_ICallingProcessInfo
0450ce77-af0d-40ac-93fd-1e5d48c89419 <unknown>
```

At first I found that the StateRepository ("Windows.Internal.StateRepository.Package") could be the responsible for record the settings, because its string is used, but Windows Internals clarify this component as the maintainer of UWP apps settings, not specific to users.

Following the methods from CWebTokenRequestResultOperation this is the order for the first write to cache:

```
CWebTokenRequestResultOperation::CWebTokenRequestResultOperation:
CWebTokenRequestResultOperation::InitializeOperationData:
CWebTokenRequestResultOperation::DoWork:
CWebTokenRequestResultOperation::UpdateRequestWithAccountControlWebAccount:
CWebTokenRequestResultOperation::ApplyConnectedAccountLogic:
CWebTokenRequestResultOperation::TryExtension:
CWebTokenRequestResultOperation::ValidateProviderAndAccountsMatch:
CWebTokenRequestResultOperation::TryCache:
CWebTokenRequestResultOperation::TryExtension:
CWebTokenRequestResultOperation::TrySilent:
CWebTokenRequestResultOperation::InitializeTokenBrokerInternal:
CWebTokenRequestResultOperation::TryUi:
CWebTokenRequestResultOperation::ApplyAccountSwitchStatus:
CWebTokenRequestResultOperation::WriteTokenResponseCache:
writes json into TokenBroker cache
CWebTokenRequestResultOperation::RecordResultAndCallerIdentity:
```


= Cache files data analysis and TokenBroker communication
:date: 2023-11-13
:tags: tag_venn tag_reversing

Analysing a few days after in a signed in environment (Teams) now every time I open Teams it exibits the login window with the DLP authentication page. If I close the window Teams exits with the same error as in the first signin. Nevertheless, it generates a single file into TokenBroker cache. Sounds like it is in the signed in state for DLP user, but token expired.

```
{
   "TBDataStoreObject":{
      "Header":{
         "ObjectType":"TokenResponse",
         "SchemaVersionMajor":2,
         "SchemaVersionMinor":1
      },
      "ObjectData":{
         "SystemDefinedProperties":{
            "RequestIndex":{
               "Type":"InlineBytes",
               "IsProtected":false,
               "Value":"K0nUOpqk9FkXLGqFZg/s17LcL1Q="
            },
            "Expiration":{
               "Type":"InlineBytes",
               "IsProtected":false,
               "Value":"vTmzDUMW2gE="
            },
            "Status":{
               "Type":"InlineBytes",
               "IsProtected":false,
               "Value":"AwAAAA=="
            },
            "ResponseBytes":{
               "Type":"InlineBytes",
               "IsProtected":true,
               "Value":"AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAMhL+0+uRMky7scIUexMmcwAAAAACAAAAAAAQZgAAAAEAACAAAACKd75AwwG0PKpV/u5YiUW7T5ki9c6t8056xDK3tIimGgAAAAAOgAAAAAIAACAAAAC7rqVvjWsHwtQ0oD94oAyZXFBKk6UzGLDp5ttmkMUXn1ABAACpg1SDnx5YDvck3mYcRDgwPw7+A9gZ67zIiMzAd5CcXgWgi5qFVMANxhMFikS9AHuyQmRqu1x+4vETJYADbyK/S/SdeGasw2+Bd8O40bjpjwMs3KJhirP603ekJGlL8DYdNZHXDne4gUKcNbH1vdOGY/LG7M8WK5akLdJ5PpFPaSUsuzAt3gJmXEBRoF3+QKPDnPy4OL3stQCvqyya4RarB0s28KiownqE8WKdR5BDvnMHu1jq1OZzoYRNdWv86d0GFBcdO875xRRN1eZQkA5xToFYuZWWNIbi/64PD3orStO2gy323D1C15KvyU422YeRrRw8MGpKD2gNw3KYEX/2WppB5FWqu/b053dREm/YfL4NmKgb/PIVv7SY82+NBxPRhQkpnXzr3T3Otrd2m2/q1+5HYkmfGuq0ETYTGRp1yTiKetaHkVttJYAsvbhGiA5AAAAA1mlXDFHC6bxr0gtRHhZLY6trML/FjoUrKcTcD/VM+CVeqCR4aK96kPtcoZFT7NrrQIVXsoRQz99R7Nfvg78Eaw=="
            },
            "ProviderPfn":{
               "Type":"InlineString",
               "IsProtected":false,
               "Value":"Microsoft.AAD.BrokerPlugin_cw5n1h2txyewy"
            }
         },
         "ProviderDefinedProperties":[
            
         ],
         "PerApplicationProperties":{
            
         }
      }
   }
}
```

Going to login again to go back to previous state, but going to save this state to analyze when a token could be possible be expired and where this info comes from.

Observed the major version for the object AppAccountInformation changed from 2 to 3 between logins, so the cause of asking for a new login could be version update?

Anyway, debugging the TryCache method traces to `Windows::Internal::Security::Authentication::TokenBroker::CheckCacheForWebTokenResponses` and related marshal calls probably to some object in TokenBroker service (`svchost -TokenBroker`).

Starting to debug TokenBroker to find how the cache is acquired. Because Teams is responsible to write the `TokenBroker/Cache` files I put breakpoints in serialize methods and got triggered.

```
0:008> bp tokenbroker!Windows::Internal::Security::Authentication::TokenBroker::SerializeWebTokenResponsesWithStatus
0:008> bp tokenbroker!Windows::Internal::Security::Authentication::TokenBroker::DeSerializeWebTokenResponsesWithStatus

 # Child-SP          RetAddr               Call Site
00 00000002`d67fdae8 00007ffb`1002a1f6     tokenbroker!Windows::Internal::Security::Authentication::TokenBroker::DeSerializeWebTokenResponsesWithStatus
01 00000002`d67fdaf0 00007ffb`10032a8c     tokenbroker!GetTokenSilentlyHelper+0x56a
02 00000002`d67fdea0 00007ffb`23c1b4b3     tokenbroker!Windows::Internal::Security::Authentication::Web::CTokenBrokerInternalFactory::GetTokenSilentlyAndPrimeSSOWithBgInfo+0x6c
03 00000002`d67fdf10 00007ffb`23c7e77b     RPCRT4!Invoke+0x73
```

However, there are too much subcalls to analyze yet. Seems as if the cache is in memory. Need further analysis.


= Fix creation of WebAccounts into registry for "HKLM".
:date: 2023-11-14
:tags: tag_venn

After the standup meeting today my next task was to fix the situation where the web accounts can't be recorded into HKLM registry key. Analysing the issue into the Api I realized by the name of subkeys involved inside a container session that the webaccounts for a specific session should reside into the KKEY_USERS hive and inside where should be a per user (and per session) subkey, with the User suffix. Each user (and session) must keep a record of which webaccounts were registered inside Workplace.

img/webaccounts_registered_by_container.png


= Removed unused code and treat Sonar warnings
:date: 2023-11-15
:tags: tag_venn

Fixed the [PR from ROADMAP-69311] about the AadBrokerMonitor class and some minor as log level and sonar warnings. Merged directly to the PR branch.

[PR from ROADMAP-69311]: https://tfs.os33.net/DefaultCollection/Portal/_git/Workplace.Container.Windows/pullrequest/29424


# How to debug Microsoft.AAD.BrokerPlugin.exe
:date: 2023-11-16
:tags: tag_venn

Copy the Debugging Tools folder where is windbg.exe located.

Use PLMDebug in the same Debugging Tools folder to [configure debugging] AAD Broker plugin app using WinDbg. In order to do that you need to get the package full name for AAD Broker plugin.

```
# open powershell prompt
Get-AppxPackage *AAD*
# copy PackageFullName value
# enable debug
<DebuggingToolsPath>\plmdebug /enableDebug Microsoft.AAD.BrokerPlugin_<PackageFullName> <DebuggingToolsPath>\windbg.exe
# disable debug
<DebuggingToolsPath>\plmdebug /disableDebug Microsoft.AAD.BrokerPlugin_<PackageFullName> <DebuggingToolsPath>\windbg.exe
```

Prepare to debug all processes in this same package: BackgroundTaskHost.exe, Microsoft.AAD.BrokerPlugin.exe and RuntimeBroker.exe.

[configure debugging]: https://learn.microsoft.com/en-us/windows-hardware/drivers/debugger/debugging-a-uwp-app-using-windbg


= Documenting AAD internals
:date: 2023-11-17
:tags: tag_venn

In order to give some structure to the tons of comments in this issue and to enable parallel efforts without rework we need to document and specify some required fields in this long process discovery, such as:

 - if relevant environment (OS version + configs);
 - statement or speculation (what was concluded);
 - evidence (what was observed);
 - if statement steps to reproduce (anyone following should be able to see the same evidence).

I am starting to describe some and together with what we have in Confluence start to open in details covered into the comments bellow. WIP.

Statement: AAD authentication functions are using REST APIs with OAuth access tokens.
Evidence: AAD-Internals project is implemented based on this premisse.
Reproduce: Use AAD-Internals function Get-AccessToken.

Speculation: TokenBroker service (`svchost.exe -TokenBroker`) redirects authentication to REST APIs and keep available to system services using notification API and TokenBroker interface.
Evidence #1: Deleting all cache files kept by client app in TokenBroker cache files and restarting the computer does not avoid the client app to start with credentials previously entered.
Evidence #2: WAM service adds a new entry to the account signed in only from client app.
Evidence #3: TokenBroker has some part in code calling notification API (snippet needed).
Reproduce: Signin for first time using some office client app. After that delete files from the path `C:\Users\<user>\AppData\Local\Packages\Microsoft.AAD.BrokerPlugin_<hash>\AC\TokenBroker\Accounts` and `C:\Users\<user>\AppData\Local\Microsoft\TokenBroker\Cache`. Restart the computer. Load the same client app without entering the credentials again.

Statement: AAD Broker process handle multiple login windows at same time.
Evidence: It is possible to open two different office apps (inside or outside SE) and the same AAD Broker plugin process will keep two window threads with two signin windows showing.
Reproduce: Follow the evidence operation until the second app login, keeping the first one waiting for credentials.

Statement: Dsregcmd differentiates among identities "AzureAd" and "MicrosoftAccount" by the client id.
Evidence: If disassembled in dsreg.dll used in dsregcmd.exe (code line needed).
Reproduce: Disassembly the same code using some tool.

Statement: Applications keep track of your identify.
Evidence: Office uses `HKCU\Microsoft\Office\...\Common\Identity\Identities` to record details such as email address, name, profile.
Reproduce: Signin to Office and look to this registry key.

Speculation: WAMBroker's AADPlugin caches token among multiple targets.
Evidence #1: In [MSAL TokenCache code] there are multiple caches being used.
Evidence #2: Deleting all registry values for office apps identities does nothing, they still persist in Word, and then get recreated.
Reproduce: Need to map dotnet code to system execution.

Speculation: WAMBroker's AADPlugin should use UWP AAD BrokerPlugin at some point to acquire new tokens and interactive use.
Evidence: All office apps relies on AADBrokerPlugin to first authenticate throught TokenBroker service. Shouldn't WAM service do the same?
Reproduce: Add new account in Settings and observe instance of AAD BrokerPlugin being created.

Speculation: Credential Manager ("web accounts") works by using `<wincred.h>` enumerate API (CredEnumerateW).
Evidence: Needed.

Speculation: TokenBroker is a service that relies on UserManager: It provides info on users, implements WAM cache, etc.
Evidence: Needed.

Speculation: AAD BrokerPlugin identifies work/school/organization accounts with the help of WAM.
Evidence: Needed.

Speculation: All the network request to Azure AD and UI for login in with accounts lives inside the AAD.BrokerPlugin app.
Evidence: Needed.

Speculation: Teams logging in does not work if the service named Windows Live ID (wlidsvc) is turned off.
Evidence: Teams hangs in some screen (need detail).
Reproduce: Stop the service mentioned, start Teams and try to login in.

Speculation: Teams depends on WWAHost when you select what kind of account you want to register (aadauthhelper.dll is involved).
Evidence: If we stop the networking thread in WWAHost Teams hangs in "loading teams" splashscreen.
Reproduce: Debug WWAHost process and put bps in WS2_32!send and WS2_32!recv and see what happens when registering a new account in Teams.

Speculation: In some component, when executing `TokenProviderExecutor::GetWebAccountForIdAsync` the new account is added to Settings.
Evidence: Debugging the code step by step after the wait returns the account is added.
Reproduce: Need component to debug and steps (adding new account in Settings?).

Speculation: The adding of accounts happens in WWAHost.exe function AddWebAccountForUserAsync inside MicrosoftAccount.TokenProvider.Core.dll.
Evidence: NOP-ing this function prevents the accounts from being added to settings.
Reproduce: Follow evidence instructions.

Speculation: When login in using client app and AAD Broker Plugin, the AADBroker use notification system to trigger WWAHost, that adds the new account to Settings. This could explain why both are related and nonrelated at the same time during this investigation.
Evidence: None.
Reproduce: Avoid AAD Broker to trigger whatever it is triggering when after login in in the window to use credentials system wide choose yes.

Statement: Teams uses Windows.Security.Authentication.Web.Core.dll!*FindAllAccountsWithClientIdAsync to show accounts to potentially pick from, while SystemSettings.exe uses UserDataAccountApis.dll!*UserDataAccountStoreImpl::FindAccountsAsync. Must be a common ground they share.
Evidence: Debugging session with WinDbg that triggers these bps.
Reproduce: Debugging session.

Statement: MicrosoftAccount.TokenProvider.Core.dll uses WebAccountManager::AddWebAccountWithScopeAndMapForUserAsync, the same function we hook now to implement accounts filtering. This is very familiar with SystemSettings logic. They must share this logic.
Evidence: Debugging session with bps into this vtable.
Reproduce: Debugging session.

Statement: Not all components use Windows.Security.Authentication.Web.Core.dll. SystemSettings doesn't. Instead, it uses UserDataAccountApis.dll!UserDataAccountStoreImpl. There is a method add_StoreChanged that registers an event handler on adding accounts.
Evidence: Debugging SystemSettings or static analysis? Need to fill method used.
Reproduce: Lack discovery method.

Statement: Whenever an account is registered outside SystemSettings Windows.Security.Web.Authentication.Web.Core.dll is loaded, but not before.
Evidence: Monitoring DLL load and listing accounts in SystemSettings does not show this DLL loading, but when registering in some Office app or Teams does it.
Reproduce: Register a new account external to SystemSettings monitoring DLL loading.

Speculation: The account list is maintained in SettingsHandlers_UserAccount.dll!SystemSettings::UserAccount::WebAccountList. It has functions such as OnAccountAdded, AddAcount, etc.
Evidence: Static disassembly? Need to detail.
Reproduce: Detail steps to construct and trigger this list.

Statement: Windows.Security.Web.Authentication.Web.Core.dll is not responsible in SystemSettings to load the WebAccountList.
Evidence: This DLL is never loaded before an external source registers a new account.
Reproduce: Follow the registration new account steps monitoring DLL loading in SystemSettings.exe.

Statement: Word, unlike Teams, does not offer to pick existing account; you need to explicitly sign in.
Evidence: Open Word without registered account does not provides account list to pick.
Reproduce: Trivial.

Statement: It is possible to be logged in to Office apps and Teams without a PRT. Only joined devices to organization gain a PRT.
Evidence: Teams signed in without a PRT shown in `dsregcmd /status` command.
Reproduce: Register an account throught Office or Teams, but do not opt in to stay signed in for all apps window. Use evidence command.

Statement: [PRT are stored in LSASS]. There is an [attack to get it], BTW.
Evidence: Need to fill test.
Reproduce: Need to fill.

Env: Windows 10 22H2.
Statement: WWAHost is not always started when registering a new account via AAD Broker.
Evidence: Registered new account using Teams and WWAHost process was not started.
Reproduce: Follow the evidence.

Statement: WWAHost is a host for UWP apps that don't produce executable files.
Evidence: Accordingly to Windows Internals, "UWP apps can produce normal executables, just like desktop apps. Wwahost.exe (%SystemRoot%\ System32\wwahost.exe) is used to host HTML/JavaScript-based UWP apps, as those produce a DLL, not an executable.".
Reproduce: Must run some UWP app that does not contain an EXE file.

Statement: Microsoft.AAD.BrokerPlugin.exe does maintain an ALPC to LSASS during activation.
Evidence: Kernel debugger output of `!alpc /lpp <EPROCESS_address>` shows one port created with name "lsasspirpc" to process "lsass.exe".
Reproduce: Start Windows on kernel debugger, register new account. When on signin window started by AAD BrokerPlugin use commands `!process 0 0 Microsoft.AAD.BrokerPlugin.exe` to get EPROCESS address and then the above command to list alpc ports.

Statement: Three processes are responsible for the AAD BrokerPlugin package: BackgroundTaskHost.exe, RuntimeBroker.exe and Microsoft.AAD.BrokerPlugin.exe. They will be started when the app is being activated in different phases.
Evidence: List processes in task manager during use some app that needs a WebAccount or is registering a new one.
Reproduce: Follow the evidence.

Statement: AAD BrokerPlugin keeps a trace in Event Viewer.
Evidence: Open Event Viewer and browse to Applications and Services, Microsoft, Windows, AAD.
Reproduce: Register a new account and look into evidence to observe new entries.

Statement: AAD BrokerPlugin outputs events in debugger output.
Evidence: Debug AAD BrokerPlugin and look into output debugger when registering a new account.
Reproduce: Follow the evidence.

Statement: SystemSettings.exe uses Windows.Internal.Management.dll or MicrosoftAccountTokenProvider.dll to add new registered accounts.
Evidence: Process Monitor showing the load of those DLLs just around the account list being updated.
Reproduce: Register new account with Process Monitor looking into DLL loading to this process.

Statement: AAD saves PRT into a cache inside the AAD Broker registry hive.
Evidence: Process Monitor showing this write with the symbol AAD.Core.dll!ClientCache::SavePRT in the stack.
Reproduce: Register new account with Process Monitor looking to registry writes.

Statement: AAD BrokerPlugin uses DmEnrollmentSvc (Device Management Enrollment Service) only when the policy BlockAADWorkplaceJoin is not set. This is a start/stop service. However, when used the SystemSettings communicates with it by its proxy Windows.Internal.Management.dll to update its accounts list.
Evidence #1: When registering an account AAD BrokerPlugin starts and after signin the service DmEnrollmentSvc starts and stops. If disabled the signin process hangs for at least more than 10 min.
Evidence #2: After register a new account without BlockAADWorkplaceJoin policy set and monitoring DLL load for SystemSettings, it loads the proxy for DmEnrollmentSvc service.
Reproduce: Registering a new account and following the evidence.

Statement: AAD BrokerPlugin calls LSASS by SspiCli!LsaLookupAuthenticationPackage. This logic is inside AAD.Core.dll. The package being called is "CloudAP".
Evidence: Debug session on registering user showed AAD.Core calling LsaCallAuthenticationPackage.
Reproduce: Register new account and follow the evidence.

Statement: Teams writes a file called "storage.json". Inside we can get the web account id, among UI settings.
Evidence: The file itself after monitoring its creation.
Reproduce: Need to fill the steps.

Statement: Teams writes web account id in registry also.
Evidence: The subkey for Teams inside SOFTWARE.
Reproduce: Just register a new account and look into.

End of July investigation.

[MSAL TokenCache code]: https://github.com/AzureAD/microsoft-authentication-library-for-dotnet/blob/1402da991af9cca2670c87c6de7179efc6ea6f27/src/client/Microsoft.Identity.Client/TokenCache.ITokenCacheInternal.cs#L215 
[PRT are stored in LSASS]: https://github.com/gentilkiwi/mimikatz/blob/master/mimikatz/modules/dpapi/packages/kuhl_m_dpapi_cloudap.c
[attack to get it]: https://blog.netwrix.com/2023/05/13/pass-the-prt-overview/


= Documenting AAD internals - Part 2
:date: 2023-11-19
:tags: tag_venn

Statement: Excel and Work relie on registry keys to keep cache from accounts in several subkeys in HKCU and in file system in AppData (all listed on comments in the spike issue). If we delete those entries the account list changes, but eventually the cache is reconstructed somehow.
Evidence: Delete some account from aforementioned subkeys and observe the accounts lists in Excel and Word.
Reproduce: Follow evicence.

Statement: UserDeviceRegistration.dll is loaded by AAD BrokerPlugin during device join. Relevant methods called are SaveDeviceTokenProperties and SaveWorkplaceTokenProperties. However, as the docs said, PRT is only available to devices already joined to AAD.
Evidence: Debugging session with bps.
Reproduce: Choose option stay signed in to other apps and debug this part.

Statement: OfficeC2RClient is responsible for recreating registry cache for Office applications.
Evidence: Need to fill.
Reproduce: Need to fill.

Speculation: Account leaking back and forth is all based on BlockAADWorkplaceJoin policy.
Evidence: Need to prove first.
Reproduce: Need to prove first.

Statement: BlockAADWorkplaceJoin policy can be writen in registry just after AAD Broker plugin process started and it will be applied.
Evidence: Set the registry on load of WorkplaceHook and the stay signed in on all apps window didn't show.
Reproduce: Need to stop execution of AAD Broker plugin after started, set the policy and continue execution. After login in with credentials the signed in window will not show.

Statement: AAD Broker plugin process is activated as the result of client app instanciating an object WebTokenRequestResultOperation and calling its method TryUi. This is a remote call. It first uses WAM (TokenBroker) service and then the AAD Broker is activated.
Evidence: During debug session this call starts the process.
Reproduce: Debug client app and put bp in method mentioned.

Statement: When starting Teams make use of tokenbroker.dll functions Web::GetWebAccountProviderAndGuidFromLSA, GetDefaultSignInAccount, GetAllProviderAccountsFromDataStore, StoredObjectInfoWithCache::ReadAllObjectIdsForTypeFromCache, CWamObjectStore::GetEntry.
Evidence: Debugging session with bps.
Reproduce: Start Teams in debug session with bp into these functions.

Statement: Before any user input there is an IPC communication with LSASS looking for account info (not the Windows logged in user).
Evidence: By starting some client component I guess (need to fill) Procmon shows lsass.exe opening subkeys related to the account being signed in at HKLM\SAM\SAM\DOMAINS subkeys Builtin and Account.
Reproduce: Need to fill.

Statement: Returning error on activation of WamProviderRegistration we avoid System.Settings, despite this being an undocumented behavior. Important: The same does not occur to Word or Excel.
Evidence: When using Teams manipulate inside SE the return for RoGetActivationFactory for this class must avoid System.Settings.
Reproduce: Start Teams and return error in RoGetActivationFactory for WamProviderRegistration.

Statement: A WebTokenRequest with in its WebTokenRequestPromptType equals ForceAuthentication can force the user to always enter the password regardless it is already signed in.
Evidence: MS documentation about [WebTokenRequestPromptType].
Reproduce: Assuming it is true. Can be used just in case we need to forget the cache for some reason.

Statement: AAD Broker makes the authoization_code request and receives an access_token as response from login.microsoftonline.com.
Evidence: String observation in debug session.
Reproduce: Put a bp in TokenBroker::SerializeWebTokenResponsesWithStatus; the same string received as response will be copied.

End of September 22 investigation.


[WebTokenRequestPromptType]: https://learn.microsoft.com/en-us/uwp/api/windows.security.authentication.web.core.webtokenrequestprompttype?view=winrt-22621


= Documenting AAD internals - Part 3
:date: 2023-11-20
:tags: tag_venn

Statement: WamProviderRegistration is activated by WAM (TokenBroker svc).
Evidence: TokenBroker is started again when activating this class.
Reproduce: Stop WAM service. Open a client app to sign in. Debug until the activation of this class.

Statement: AAD Broker Plugin already started by TryUi only shows its window on WebTokenRequestResult activation and methods.
Evidence: Debug session until a call to IAsyncOperationCompletedHandler to WebTokenRequestResult.
Reproduce: Follow this debug session, but then notice as the next instruction, CoWaitForMultipleHandles, only returns when the signin is complete or the AAD Broker window is closed.

Statement: It is possible to change the properties from WebTokenRequest to signalize the client app is running inside SE. In AAD Broker the new inserted property (by example) can be read.
Evidence: Version already released to dev. Feature flag WAMFilterEnabled.
Reproduc: Use client app inside SE will produce a WebTokenRequest with a property markSE in AAD Broker.

Statement: WebTokenRequest with COMProxy can't be send with field properties changed.
Evidence: The COMProxy hook, different from WinRT, change properties fields successfully, but the object that arrives in AAD Broker has properties unchanged.
Reproduce: Instead of using WinRT hook use COMProxy and look into debugger output for AAD Broker when printing properties; differently from WinRT hook, markSE will not show.

Statement: Delete the cache in folders User\AppData\Local\Packages and Local\Microsoft\TokenBroker\Cache and restart the computer does not avoid the login without entering credentials again.
Evidence: Following the statement it is possible to open the client app and signin without entering credentials again.
Reproduce: Use any client app, login in with password, delete cache files, restart computer. The client app used can be logged again without typing user and password again.

Statement: A couple of days after deleted the cache in Packages and TokenBroker\Cache Teams exibits the login window to enter password, but closing it does not avoid Teams be signed in.
Evidence: Test in VM deleting cache and letting the weekend time pass.
Reproduce: Login in for the first time in Teams, delete all cache folders, restart the computer and let 2 days pass. When opening Teams again a login window will show, but closing it keeps the app logged in.

End of November 15 comments.


= Organizing discoveries in multiformat content
:date: 2023-11-21
:tags: tag_venn

After listed all discoveries based on all comments in this issue I started to group related topics, where I ended with some main sections: AAD.BrokerPlugin, Cache, Discoveries (the WIP part), APIs and internal code, WWAHost and TokenBroker.

The discoveries were moving thought what were taking the textual form, but for some parts I found more useful to transform in small diagrams, such as components communication and sequence diagrams. In other parts I found more insightful to just show the window I am talking about. In other some snippet of debugging sessions could be more practical to continue analysis.

This is still a WIP since we don't know yet much about Credential Manager and a more stable way to deal with a containered AAD auth, but I believe it has now some ground work to follow.


= AVAST antivirus restricting MS license activation inside Secure Enclave
:date: 2023-11-22
:tags: tag_venn

## Trying to reproduce (and failing)

Tested in Windows 10 and Windows 11 (both Pro and 64) with Demo and with lastest version (Workplace for Windows: 4.0.8726.28660. Container: 1.0.8726.33542) with dlp user without success. Office license is OK and Outlook profile is created from zero with no issues inside SE. I got the feature flags from the attached logs and let the existing ones equal, disabled the rest (the new ones). I am using lastest Avast version with default installation. Maybe it is a version difference and the bug is still there.


= Add to account-id storage OneAuth files from redirected AppData
:date: 2023-11-23
:tags: tag_venn

Using `\AppData\Local\Microsoft\OneAuth\accounts` to populate WebAccounts before starting Container. Into the json there is a field "additional_properties" that contains two fields with the WebAccountId: "sub" and "wam_account_ids" where we can get the WebAccountId used to filter accounts.

When signed in outside SE and signin again inside SE the `WebAccountManager::AddWebAccountWithScopeAndMapAsync` is not invoked, so we never get the change to register the WebAccount.


= SE Outlook crash
:date: 2023-11-24
:tags: tag_venn

Read some logs; found outlook using IWamProviderRegistrationInformation (not that is relevant). This was among messages from failed to send or process badge messages. This error message appeared from several processes (outlook.exe, chrome.exe, slack.exe, msedgewebview2.exe, zoom.exe).

Trying to reproduce crash on Outlook after unlock machine by installing and running all apps quoted in Slack original thread. Nothing happened feijoada (Brazilian meme). Let the machine some more minutes resting and nothing.

VM suspended; VM resume and bang: Word is restarting (but still inside SE). Captured crash dump together with several from "Workplace Starter.exe" and Teams.exe (probably the new one, sounds like some issues with new Teams).

Analyzing the dump does not seem related to this issue, but it is easly reproducible by waiting to VM to suspend and resume. After that Word shows "Word automatically saved changes bla bla bla do you want to load it?" and when choosing Yes the next message is "Sorry, something went wrong and Word was unstable to start. (41)".


= Fixing issues in my PR (storage-id and OneAuth)
:date: 2023-11-24
:tags: tag_venn

Fixed/improved some points in code commented by Oleh, Chermyanin and Sonar. The code passed, but now I am going to make some tests about state of storage-id versus OneAuth.

To test the case to be solve by this fix login into an account inside SE with WAMFilterEnabled OFF, turn the WAMFilterEnabled ON and login into the same account. Before the fix the account is not logged in anymore. With the fix the account is logged in.


= Finished the PR for OneAuth files
:date: 2023-11-27
:tags: tag_venn

I was unable to reproduce the failure about lost signed in account inside SE. Odd. However, since the PR was approved I am merging it anyway.

= SE ~~Outlook~~ Word crash
:date: 2023-11-27
:tags: tag_venn

This is reproducible in Demo now. Just need to lock session and wait for some minutes. I suspected that the Sleep/Resume is the key, so it is not the same as the OP. Going to debug Word.

Debugged Word, thought at principle being the HookAntiScreenEnabled feature flags because it was generating lots of debugger output message like this:

```
clientcore\windows\dwm\dwmapi\attribute.cpp(157)\dwmapi.dll!00007FFD0E2A37A1: (caller: 00007FFCC201229A) LogHr(12733) tid(3094) 80070006 The handle is invalid.
```

However, disabling this feature had no effect (except no more handle is invalid output messages).

After a test enabling again nothing occured. So I realized no document was opened. So I opened in another test and the crash occurred.

Another observation from the state is that Word is with autosave option enabled.

So the steps to reproduce the error are:

 - start Demo;
 - run Word and open a document; autosave is ON;
 - lock the computer;
 - wait to the computer to sleep (put 2 mins);
 - let it sleeping for some minutes (let circa 2 mins);
 - resume the computer;
 - scataplum: Word crashes and restarts;
 - the same does not happen using Word outside SE.

The call stack:

```
 # Call Site
00 Rtc!Concurrency::details::_ExceptionHolder::~_ExceptionHolder
01 Rtc!Concurrency::details::_Task_impl_base::~_Task_impl_base
02 Rtc!Concurrency::details::_Task_impl<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::`vector deleting destructor'
03 Rtc!Concurrency::details::_PPLTaskHandle<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,Concurrency::task<unsigned __int64>::_ContinuationTaskHandle<unsigned __int64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::function<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > __cdecl(unsigned __int64)>,std::integral_constant<bool,0>,Concurrency::details::_TypeSelectorNoAsync>,Concurrency::details::_ContinuationTaskHandleBase>::~_PPLTaskHandle<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,Concurrency::task<unsigned __int64>::_ContinuationTaskHandle<unsigned __int64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::function<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > __cdecl(unsigned __int64)>,std::integral_constant<bool,0>,Concurrency::details::_TypeSelectorNoAsync>,Concurrency::details::_ContinuationTaskHandleBase>
04 Rtc!Concurrency::task<unsigned __int64>::_ContinuationTaskHandle<unsigned __int64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::function<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > __cdecl(unsigned __int64)>,std::integral_constant<bool,0>,Concurrency::details::_TypeSelectorNoAsync>::`vector deleting destructor'
05 Rtc!Concurrency::details::_TaskProcHandle::_RunChoreBridge
06 Rtc!Concurrency::details::_DefaultPPLTaskScheduler::_PPLTaskChore::_Callback
07 MSVCP140!Concurrency::details::`anonymous namespace'::_Task_scheduler_callback
08 ntdll!TppWorkpExecuteCallback
09 ntdll!TppWorkerThread
0a KERNEL32!BaseThreadInitThunk
0b ntdll!RtlUserThreadStart
```

Since it is easy to reproduce I am toggling the feature flags to see if it is a specific one. From the one shot tests I am sure I could avoid the crash with a specific set of flags.

And I saw, but need to reproduce again, winword.exe being started inside SE and after tried to reproduce crash it did not crashed, but the hook injected and the blue border was gone. This seems odd enought to give it a try, and could mean a behavior similar to Outlook in this issue (except that there was no crash).

Besides this comment there are some steps to follow here:

 - get the feature flags from the log and try it (besides other symptoms);
 - find the right set of feature flags (or the feature flag) by divide & conquer;
 - try to reproduce the odd behavior of winword getting out of hook.


= Feature Flags
:date: 2023-12-21
:link: https://www.os33dev.com/Home/System/ConfigForm.aspx?_id=4817965d-3624-46b8-b90e-c0f04a664469&_c=1&_i=0&_flock=False
:link: https://os33corp.atlassian.net/wiki/spaces/DTDLP/pages/2355134798/WORKPLACE+CONTAINER+CONFIG
:tags: tag_venn

Feature flags is still a subject to study. There are separations between driver feature flags and container feature flags, status of each flag (testing, released). Not all feature flags seen in Demo output or into the config in DLP are present.

For start, binding info in `Workplace.Container.Windows\Workplace.Container\Workplace.Container\Data\FeatureFlags.cs`.

And here is a clean sorted settings to replace in DLP environment (it is being updated in the Confluence link above).

```
{
  "activity":
  {
    "serviceHosts": ["https://www.os33dev.com", "https://www2.os33dev.net"]
  },
  "containerServiceStartRetryTimeout": 3,
  "containerServiceStartThroughServiceManagerEnabled": true,
  "containerSetupRetryTimeout": 15,
  "crashDumpType": 1,
  "gateway":
  {
    "dnsPort": 53,
    "dnsPortWindows": 8853,
    "keepAliveTimeout": 600,
    "serviceHosts": ["https://www.os33dev.com", "https://www2.os33dev.net"]
  },
  "gatewayManager":
  {
    "bfdTimeout": 5,
    "pingTimeout": 5
  },
  "featureFlags":
  {
    "AADBrokerPluginNetworkRedirectionEnabled": true,
    "AadWebProxyEnabled": true,
    "AadWorkaroundEnabled": true,
    "ApplicationAutoLaunchEnabled": true,
    "ApplicationInsightsLoggerEnabled": true,
    "ApplicationInsightsPerformanceCollectorEnabled": true,
    "BadgeTopmostEnabled": true,
    "BorderTransparencyDetectionEnabled": true,
    "BoxDriveEnabled": true,
    "BypassNetworksFromPolicyEnabled": true,
    "CompactVhdxEnabled": true,
    "ConcurrentInvertedProtocolEnabled": true,
    "ContainerProtectionEnabled": true,
    "CopyingTeamsPackagesEnabled": true,
    "CrashOnWrongRegistryOperation": true,
    "DebugModeEnabled": true,
    "DigitalSignatureValidationVersion": 2,
    "DisableAADWAM": true,
    "DisableIpV6": true,
    "DisableProtectedViewEnabled": true,
    "DrivePathProtectionEnabled": true,
    "DynamicDataExchangeHook": true,
    "ExternalVpnEnabled": true,
    "FakePrinterEnabled": true,
    "FixFirewallBugWithDeviceReattachment": true,
    "ForceInstallWorkplaceBrowserExtension": true,
    "GPOSupportEnabled": true,
    "GatewayDnsEnabled": true,
    "GlobalProtectWorkaroundEnabled": true,
    "HealthCheckDisabled": false,
    "HealthCheckDisabled_Default": false,
    "HealthCheckDisabled_Description": "disable HealthCheck feature. ! Do not use. For debug purposes only !",
    "HealthCheckDisabled_Status": "For Debug Only",
    "HideBitlockerManagementEnabled": true,
    "HideExplorerStartup": true,
    "HookAntiScreenEnabled": true,
    "HookAppStartAfterRebootAllowed": true,
    "HookClipboardEnabled": false,
    "HookClipboardEnabled_Default": false,
    "HookClipboardEnabled_Description": "Old logic for clipboard data protection in Local Zone.",
    "HookClipboardEnabled_Status": "Deprecated",
    "HookDisablePrintersEnabled": false,
    "HookDisablePrintersEnabled_Default": false,
    "HookDisablePrintersEnabled_Description": "disable using printing in Local Zone. Development of this functionality was pause in August, 2021 because caused some stability issues.",
    "HookDisablePrintersEnabled_Status": "On Hold",
    "HookDragAndDropEnabled": false,
    "HookDragAndDropEnabled_Help": "enable ",
    "HookHidePrintDialogEnabled": false,
    "HookHidePrintDialogEnabled_Default": false,
    "HookHidePrintDialogEnabled_Help": "hide standard print dialog in Local Zone. Development of this functionality was pause in August, 2021 because cause some stability issues.",
    "HookHidePrintDialogEnabled_Status": "On Hold",
    "HookPrinterListFilterEnabled": true,
    "HookSystemDragAndDropAllowed": true,
    "HookUpdateVolumeStatusEnabled": true,
    "HookWinRtEnabled": true,
    "InstallAod": true,
    "InstallContainerComponentIntoCurrent": true,
    "InstallSpd": true,
    "IpcBinarySerializationEnabled": true,
    "KeyLoggerEnabled": true,
    "LZOneDriveEnabled": true,
    "LocalRoutesEnabled": true,
    "LocalZoneProfileVhdxEnabled": true,
    "LockContainerSessionEnabled": true,
    "MacAllowWorkplaceDriveInContainerOnly": true,
    "MacBFDLogicEnabled" : true,
    "MacBadgeStartOnCreateContainerSession": true,
    "MacClipboardManagerEnabled": true,
    "MacConfirmSessionOnlyWhenClipboardManagerIsRunning": true,
    "MacConnectivityStatusEnabled": true,
    "MacEnforceLinksToLZ" : true,
    "MacEnforceLinksToLZv2" : true,
    "MacGatewayDnsEnabled" : true,
    "MacIsolationEnabled": true,
    "MacOfflineModeEnabled": true,
    "MacOpenDefaultBrowserInContainerEnabled": true,
    "MacPreciseBorderForOverlappedPopups" : true,
    "MacReadOnlyFileSystemEnabled": true,
    "MacSetDownloadsFolderUsingSettings": true,
    "MacStreamAppHotfixWithDoubleVPNTunnelRestart": true,
    "MacUseRefactoredBadgeInfrastructure" : true,
    "NetworkAccessPolicyEnabled": true,
    "NetworkRedirectionEnabled": true,
    "OpenFilesFromWorkplaceDriveInContainer": false,
    "OpenFilesFromWorkplaceDriveInContainer_Default": false,
    "OpenFilesFromWorkplaceDriveInContainer_Description": "we used this flag before ExplorerLaunchEnabled.",
    "OpenFilesFromWorkplaceDriveInContainer_Status": "Deprecated",
    "PrintingActivityEnabled": true,
    "ProtectWindowHooksEnabled": true,
    "RegistryForceAccessCheckEnabled": true,
    "RegistryProtectionEnabled": true,
    "RememberDeletedRegistryKeys": true,
    "SecurityAttributesWorkaroundEnabled": true,
    "ShellChangeNotifyHook": true,
    "SingleInstanceEnabled": true,
    "StartSpooler": true,
    "SystemTrayIconBorderEnabled": true,
    "ThirdPartyFileSystemsEnabled": true,
    "ToastNotificationEnabled": true,  
    "ToastNotificationRepointEnabled": true,
    "UpdateAltitudeOnTheFly": true,
    "UwpFullTrustProcessSupportEnabled": true,
    "UwpFulltrustWorkaroundEnabled": true,
    "VennDiskEnabled": true,
    "VennLocalMachineHiveCleanupEnabled": true,
    "VennLocalMachineHiveCleanupEnabled": true,
    "VhdxEncryptionFlags": "None",
    "WAMFilterEnabled": true,
    "WebCacheEnabled": true,
    "WebProxyEnabled": true,
    "WindowHookProtection": true,
    "WmiMethodsFilterEnabled": true,
    "WorkplaceDriveOnVennDiskEnabled": true
  },
  "links": {
    change_config: "https://www.os33dev.com/Home/System/ConfigForm.aspx?_id=4817965d-3624-46b8-b90e-c0f04a664469&_c=1&_i=0&_flock=False",
    confluence: "https://os33corp.atlassian.net/wiki/spaces/DTDLP/pages/2355134798/WORKPLACE+CONTAINER+CONFIG"
  },
  "policy":
  {
    "policyRefreshTimeout": 3600,
    "serviceHosts": ["https://www.os33dev.com", "https://www2.os33dev.net"]
  },
  "rules": {
    "file": [ ]
  },
  "virtualDisk":
  {
    "serviceHosts": ["https://www.os33dev.com", "https://www2.os33dev.net"]
  }
}
```


= Getting the right feature flags set from the log
:date: 2023-11-28
:tags: tag_venn

Today I made some research to find every feature flag shown into the original log to match them completely. Got stuck in some part where it is needed to have `VennDiskEnabled: true` but didn't know that (otherwise Office can't communicate). Anyway, I could accomplish this target.

And I discovered that with the exact flags `winword.exe` stopped crashing.

Well, it was not the exact flags, since the original version there was more flags and the LOCAL_ZONE_PROFILE_VHDX_ENABLED was removed. Bellow are the additional flags:

 - KEYLOGGER_ENABLED=0
 - IPC_BINARY_SERIALIZATION_ENABLED=0
 - DYNAMIC_DATA_EXCHANGE_HOOK=0
 - START_SPOOLER=0
 - CHROME_WORKAROUND_ENABLED=0
 - MICROSOFT_WEB_CAM_HOOK=0
 - HIDE_EXPLORER_STARTUP=1
 - WINDOW_MESSAGE_HOOK=0
 - WEB_PROXY_ENABLED=1
 - WMI_METHODS_FILTER_ENABLED=0
 - BITS_ENABLED=0
 - UWP_FULL_TRUST_PROCESS_SUPPORT_ENABLED=0
 - UWP_FULL_TRUST_WORKAROUND_ENABLED=0
 - POSTFIX_CREDENTIAL_TARGET_NAME=0
 - AAD_WEB_PROXY_ENABLED=1
 - PROTECTION_LOADLIBRARY=0
 - TOAST_NOTIFICATION_REPOINT_ENABLED=0
 - UPDATE_VOLUME_STATUS_HOOK=0
 - WIN11_EXPLORER_TABS_ENABLED=0
 - BATCH_HOOKS_INSTALLATION=0
 - WAM_FILTER_ENABLED=1
 - WORKPLACE_DRIVE_ON_VENN_DISK_ENABLED=0

Now I have some steps to follow:

 - Find the feature flags(s) that caused winword crashed (not the Outlook issue, though);
 - Reproduce the odd behavior of winword getting out of hook (for that we can get some log from driver about hook injection, as observed from Chermyanin);
 - Reproduce original Outlook crash based on the exact version from the issue;
 - More log analysis to find something odd in the original case.


= Getting Workplace version from the issue
:date: 2023-11-29
:tags: tag_venn

Got back to `nightly-1.0.8469.21791`, the closest I believe is the version from the issue. However, Container can't run because the dlp policy update is failing. Perhaps some change in json objects.

```
Warning: Workplace.Container.Api.Common.Exceptions.WorkplaceContainerServiceException: Workplace Container has been terminated during waiting for session confirmation
   at Workplace.Container.Api.WorkplaceContainerManager.VerifySessionConfirmed()
```

Container.Trace:

```
2023-11-29 15:02:59.373 - [INFO] - [0:10996:16] - Token expiration date: 11/29/2023 3:17:37 PM. Current time: 11/29/2023 3:02:37 PM. RefreshTime: 00:13:59.7498230
2023-11-29 15:03:00.422 - [ERRO] - [0:10996:14] - Failed to refresh dlp policy
	Exception: HTTP Response: 

OS33.Api.DlpPolicy.Data.DlpPolicyClientException: Could not deserialize the response body stream as OS33.Api.DlpPolicy.Data.ContainerPolicy.

Status: 200
Response: 
 ---> Newtonsoft.Json.JsonSerializationException: Error converting value "Triofox" to type 'OS33.Api.DlpPolicy.Data.FileSystemType'. Path 'filesAndData.defaultDownloadsLocation', line 1, position 3712. ---> System.ArgumentException: Requested value 'Triofox' was not found.
```

Indeed [this Triofox change] is from October.

[this Triofox change]: https://tfs.os33.net/DefaultCollection/Portal/_git/OS33.Api.DlpPolicy/commit/3f8b390918dab20059888b400d96d1710307e0ca?refName=refs%2Fheads%2Fmaster&_a=compare&path=%2FOS33.Api.DlpPolicy%2Fdlp-policy.swagger.json


= Outlook crash log analysis
:date: 2023-11-29
:tags: tag_venn

From SleepStudy we can assume the screen was off at 10:16:17 for 02:40 and then at 10:18:57 the session was active for 05:23 until the report generation.

Inside the Container the first Outlook was launched at 08:40:08 (PID 20456) together with Slack, Chrome, Zoom. A second Outlook was only launched again at 10:20:35 (PID 48384) after the user unlock the session.

During the report a second instance of Outlook was running (PID 46108) and it was started outside SE. Using the driver log we know this outside instance was started at 14:19:14, just after the computer became active again.

That only corroborates with the op, lacking more info about 1) the Outlook that crashed and 2) this instance started outside SE without user intervention.


= Finding the Word crash feature flag
:date: 2023-11-30
:tags: tag_venn

The OP (Alex Pinsker) updated me that he is no longer using PC for some months now, so I believe this is the end of the road to reproduce this Outlook issue for now.

However, I will try to reproduce the Word issue, specially the perhaps running outside SE situation:

> Find the feature flags(s) that caused winword crashed (not the Outlook issue, though);

After refinement I could reproduce Winword crash using `LocalRoutesEnabled=true` feature flag and could not reproduce using `LocalRoutesEnabled=false`. There are other minor flags I need to let `true` to Office apps work, such as the AAD related.

### Steps to reproduce

 - Configure Sleep time to 2 minutes.
 - Set the user with settings above.
 - Start Demo.
 - Run Word, Outlook, Excel.
 - Open a document in Word. I believe AutoSave must be turned on.
 - Lock the session.
 - Wait to VM to sleep.
 - Wait one more minute sleeping.
 - Wake the VM.
 - Select Word window.

Expected Result: SE Word should not crash on resume VM.
Actual Result: SE Word crashes and restartes; a dump file is available in `Workplace/Container` logs folder.

### Details

The crash occurs always in `RTC.dll` executing a async task. This module is the Microsoft Realtime Collaboration. Here is the stack:

```
RTC.DLL!Concurrency::details::_ExceptionHolder::~_ExceptionHolder(void)
RTC.DLL!Concurrency::details::_Task_impl_base::~_Task_impl_base(void)
RTC.DLL!Concurrency::details::_Task_impl<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > >::`vector deleting destructor'(unsigned int)
RTC.DLL!Concurrency::details::_PPLTaskHandle<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,struct Concurrency::task<unsigned __int64>::_ContinuationTaskHandle<unsigned __int64,class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,class std::function<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > (unsigned __int64)>,struct std::integral_constant<bool,0>,struct Concurrency::details::_TypeSelectorNoAsync>,struct Concurrency::details::_ContinuationTaskHandleBase>::~_PPLTaskHandle<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,struct Concurrency::task<unsigned __int64>::_ContinuationTaskHandle<unsigned __int64,class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,class std::function<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > (unsigne
RTC.DLL!Concurrency::task<unsigned __int64>::_ContinuationTaskHandle<unsigned __int64,class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >,class std::function<class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > (unsigned __int64)>,struct std::integral_constant<bool,0>,struct Concurrency::details::_TypeSelectorNoAsync>::`vector deleting destructor'(unsigned int)
RTC.DLL!Concurrency::details::_TaskProcHandle::_RunChoreBridge(void *)
RTC.DLL!Concurrency::details::_DefaultPPLTaskScheduler::_PPLTaskChore::_Callback(void *)
msvcp140.dll!Concurrency::details::`anonymous namespace'::_Task_scheduler_callback(_TP_CALLBACK_INSTANCE * _Pci, void * _Args, _TP_WORK * __formal) Line 132
	at D:\a\_work\1\s\src\vctools\crt\github\stl\src\taskscheduler.cpp(132)
ntdll.dll!TppWorkpExecuteCallback()
```

### Another observations

From time to time VMWare disconnects from internet. Has to reboot VM to go back again (could be unrelated, but only occurred when crash occurred).

When opening several Office apps at once the signin window shows again, as if the account was not logged in yet. Reopening the app resolves.


= Faulty network, Word crashing
:date: 2023-12-01
:tags: tag_venn

Simplified the steps to reproduce the crash (just run Word with a document and AutoSave) and locate the place in code where the crash is involved. If we just let the driver to redirect local network Word does not crash. The crash occurs if some connections are redirected by being local (which explains the LocalRoutesEnabled flag).

If the driver does not return from the function `NetworkFilter2::onConnectRedirect` analyzing the feature flag Word does not crash.

```
if (protectedProcesses->localRoutesEnabled(static_cast<ULONG>(data.metaValues->processId)))
{
  if (data.fixedValues->layerId == FWPS_LAYER_ALE_CONNECT_REDIRECT_V4)
  {
    const auto remoteAddress = data.fixedValues->incomingValue[FWPS_FIELD_ALE_CONNECT_REDIRECT_V4_IP_REMOTE_ADDRESS].value.uint32;
    if(protectedProcesses->isAllowedNetwork(static_cast<ULONG>(data.metaValues->processId), remoteAddress))
    {
        // do not redirect Allowed Network
        return;
    }

    const auto remotePort = data.fixedValues->incomingValue[FWPS_FIELD_ALE_CONNECT_REDIRECT_V4_IP_REMOTE_PORT].value.uint16;
    if (protectedProcesses->isProxyAddressAndPort(remoteAddress, remotePort))
    {
        // do not redirect when accessing our proxy
        // verification of access rights to the proxy occurs at the connection level
        return;
    }
  }
}
```

Tried to kernel debug, but the crash does not occur when rebooting in debug mode (even without WinDbg attached). It seems to be a race condition situation.


= Who calls the OpenWith?
:date: 2023-12-04
:tags: tag_venn

Analyzing why only MS Access try to open the outside SE to open an inside SE document. Must have relation with hook when explorer double click a file. Could reproduce the bug in Win11.


= MS Paint does not run inside SE; or does it?
:date: 2023-12-04
:tags: tag_venn

Tried to reproduce in Demo and Workplace (learned to add a new app, just put "Paint" and it appeared; odd) without success. Alex Osipov attached diag files and starting to analyze the dumps.

The exception thrown by mspaint dumps is of the kind with error code 0xC000027B, a [Stowed Exception]. It occurs when:

> A Stowed Exception is raised when an asynchronous operation fails. When the exception is reported from the worker thread via a RoOriginateException or RoOriginateLanguageException call, a Stack Backtrace (array of Instruction Pointers) is collected of the current thread via a CaptureStackBackTrace function call. The Stack Backtrace and HRESULT of the exception is wrapped in an IRestrictedErrorInfo object and routed through the language projection layers of WinRT to the caller.
> 
> If the exception is not handled by the caller, the stowed exception is thrown fatally. Because the throwing is deferred, the current context of the associated dump has little value. The thread of the original issue regularly no longer exists, and if it does, has concluded the operation (meaning the thread's stack memory has been overwritten). This means that function parameters and local variables are not available.

In other words, the addresses inside the exception parameters are invalid memory:

```
exception info
```

The first results in web search reveals a [known error] to launch a UWP app when default registry or file permissions are modified, which could be a clue.

Worth notice: My Win11 was some builds before the user so I updated it. After reboot the look and feel of mspaint changed drastically, like the toolbar and the location of components. It was an app before and it is now, but there was some changes lately.

[Stowed Exception]: https://learn.microsoft.com/en-us/shows/inside/c000027b
[known error]: https://learn.microsoft.com/en-us/troubleshoot/windows-client/shell-experience/microsoft-store-apps-fail-to-start


= Relation between power mode and word crash
:date: 2023-12-05
:tags: tag_venn

Analyzing the logs when the crash happen is possible to know the following flow of events:

 - Word is launched;
 - Power mode goes to Suspend;
 - Gateway Manager stops;
 - Connection is interrupted;
 - Suspend power mode is processed;
 - Power mode change to ResumeAutomatic;
 - WerFault service (`svchost.exe -k WerSvcGroup`) tries to start and fails;
 - User session is unlocked;
 - WerFault start to capture Word process;
 - Power mode changed to ResumeSuspend;
 - Gateway keeps logging Get Service Token exception (is not connected yet);
 - The same exception is logged when processing ResumeSuspend power mode;
 - Gateway enters simple offline mode and wait for 5000 seconds before next service restart;
 - Original Word process exits;
 - New Word instance starts.

```
5:40:31.6678463 PM	WINWORD.EXE	13052	Process Start		SUCCESS	Parent PID: 10396, Command line: "C:\Program Files\Microsoft Office\root\Office16\WINWORD.EXE"  , Current directory: C:\Program Files\Microsoft Office\root\Office16\, Environment: 
2023-12-05 20:49:44.716 - [TRAC] - [0:8800:25] - GatewayConnectivityStatus has been sent. Status: Connected, latency: 169, packet loss: 0
2023-12-05 20:49:53.944 - [TRAC] - [0:8800:3] - Power mode changed to: Suspend
2023-12-05 20:49:53.944 - [INFO] - [0:8800:3] - Processing power status Suspend...
2023-12-05 20:49:53.944 - [INFO] - [0:8800:3] - Unsubscribe from error notification
2023-12-05 20:49:53.944 - [INFO] - [0:8800:3] - Stop refresh service tokens for session id [0f584f16-bc3e-44f3-9051-88bc429e8c7d] by scope [dlp-policy-service, dlp-gateway-service, dlp-activity-service, dlp-virtual-disk-service]
...
2023-12-05 20:49:53.954 - [INFO] - [0:8800:3] - Stopping Gateway Manager for session [0f584f16-bc3e-44f3-9051-88bc429e8c7d]
2023-12-05 20:49:53.954 - [TRAC] - [0:8800:3] - SendRequestAsync to session [0f584f16-bc3e-44f3-9051-88bc429e8c7d], pid 7728, endpoint stop-gateway-manager, sender WorkplaceContainer. Request: stop-gateway-manager (67f4329f-d275-41bb-bfbb-9ddb50530a25)
= 

2023-12-05 20:49:54.027 - [INFO] - [0:8800:9] - Connection with Gateway Manager has been interrupted
2023-12-05 20:49:54.032 - [INFO] - [0:8800:9] - Disconnecting IPC client for session [0f584f16-bc3e-44f3-9051-88bc429e8c7d], pid 7728
2023-12-05 20:49:54.032 - [INFO] - [0:8800:9] - Closing network adapter for session 0f584f16-bc3e-44f3-9051-88bc429e8c7d
2023-12-05 20:49:54.643 - [TRAC] - [0:8800:9] - SendRequestAsync to session [0f584f16-bc3e-44f3-9051-88bc429e8c7d], pid 10584, endpoint gateway-connectivity-status, sender WorkplaceContainer. Request: gateway-connectivity-status (dc964cf3-92f1-4ea6-ac25-2af3a56235ff)
2023-12-05 20:49:54.807 - [TRAC] - [0:8800:24] - GatewayConnectivityStatus has been sent. Status: Disconnected, latency: , packet loss: 
2023-12-05 20:49:54.807 - [INFO] - [0:8800:24] - Sent disconnected status to Workplace
2023-12-05 20:49:54.822 - [INFO] - [0:8800:3] - Processing power status Suspend - completed.
...
2023-12-05 20:57:01.779 - [TRAC] - [0:8800:25] - Power mode changed to: ResumeAutomatic
5:57:06.8504642 PM	svchost.exe	13400	Process Start		SUCCESS	Parent PID: 752, Command line: C:\Windows\System32\svchost.exe -k WerSvcGroup, Current directory: C:\Windows\system32\, Environment: 
5:57:08.5043636 PM	WerFault.exe	8676	Process Start		SUCCESS	Parent PID: 13400, Command line: C:\Windows\system32\WerFault.exe -pss -s 424 -p 13052 -ip 13052, Current directory: C:\Windows\system32\, Environment: 
2023-12-05 20:57:08.610 - [INFO] - [0:8800:3] - Windows session 1 changed: SessionUnlock
2023-12-05 20:57:14.845 - [TRAC] - [0:8800:17] - Registering process: pid = 13016, parent pid = 13052, process name = \Device\HarddiskVolume3\Windows\System32\WerFault.exe
5:57:14.8669951 PM	WerFault.exe	13016	Process Start		SUCCESS	Parent PID: 13052, Command line: C:\Windows\system32\WerFault.exe -u -p 13052 -s 8796, Current directory: C:\Windows\system32\, Environment: 
...
2023-12-05 20:57:16.439 - [TRAC] - [0:8800:22] - Power mode changed to: ResumeSuspend
2023-12-05 20:57:16.439 - [INFO] - [0:8800:22] - Processing power status ResumeSuspend...
2023-12-05 20:57:16.439 - [INFO] - [0:8800:22] - Generating gateway keys
2023-12-05 20:57:16.439 - [INFO] - [0:8800:22] - Checking gateway connection
2023-12-05 20:57:16.439 - [WARN] - [0:8800:22] - The token should update via Memory Cache. SessionId: 0f584f16-bc3e-44f3-9051-88bc429e8c7d
...
2023-12-05 20:57:20.939 - [ERRO] - [0:8800:24] - Exception received when Get Service Token for session [0f584f16-bc3e-44f3-9051-88bc429e8c7d] by scope [dlp-gateway-service]
	Exception: System.NullReferenceException: Object reference not set to an instance of an object.
   at Workplace.Container.WorkplaceClient.<GetServiceTokenAsync>d__8.MoveNext() in F:\repos\Workplace.Container.Windows\Workplace.Container\Workplace.Container\WorkplaceClient.cs:line 162
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at Workplace.Container.OAuthToken.TokenManager.<AddOrUpdateTokenAsync>d__14.MoveNext() in F:\repos\Workplace.Container.Windows\Workplace.Container\Workplace.Container\OAuthToken\TokenManager.cs:line 75
...
2023-12-05 20:57:34.876 - [INFO] - [0:8800:14] - Waiting for gateway to connect...
2023-12-05 20:57:37.627 - [INFO] - [0:8800:31] - Register GatewayManager, session [0f584f16-bc3e-44f3-9051-88bc429e8c7d]
5:57:40.9120884 PM	WINWORD.EXE	13052	Process Exit		SUCCESS	Exit Status: 0, User Time: 104.0781250 seconds, Kernel Time: 24.6875000 seconds, Private Bytes: 168,112,128, Peak Private Bytes: 202,567,680, Working Set: 327,237,632, Peak Working Set: 371,859,456
...
2023-12-05 20:57:42.251 - [WARN] - [0:8800:24] - Error when processing ResumeSuspend power mode. Reason: Workplace.Container.Exceptions.GetServiceTokenException: Get Service Token Exception. ---> System.NullReferenceException: Object reference not set to an instance of an object.
   at Workplace.Container.WorkplaceClient.<GetServiceTokenAsync>d__8.MoveNext() in F:\repos\Workplace.Container.Windows\Workplace.Container\Workplace.Container\WorkplaceClient.cs:line 162
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at Workplace.Container.OAuthToken.TokenManager.<AddOrUpdateTokenAsync>d__14.MoveNext() in F:\repos\Workplace.Container.Windows\Workplace.Container\Workplace.Container\OAuthToken\TokenManager.cs:line 75
...
2023-12-05 20:57:42.251 - [INFO] - [0:8800:24] - Entering simple offline mode...
2023-12-05 20:57:42.251 - [INFO] - [0:8800:24] - Waiting 5000 seconds before trying to restart the gateway service
2023-12-05 20:57:42.954 - [TRAC] - [0:8800:9] - ScreenSharingActivityLogger.OnProcessCreated: Process with pid 13052 did not have custom policy
2023-12-05 20:57:44.470 - [TRAC] - [0:8800:17] - [Start watch] DriverMessageHandler - OnRegisterProcess
2023-12-05 20:57:44.470 - [TRAC] - [0:8800:17] - Registering process: pid = 13556, parent pid = 13016, process name = \Device\HarddiskVolume3\Program Files\Microsoft Office\root\Office16\WINWORD.EXE
5:57:44.5251050 PM	WINWORD.EXE	13556	Process Start		SUCCESS	Parent PID: 13016, Command line: "C:\Program Files\Microsoft Office\root\Office16\WINWORD.EXE" /restore, Current directory: C:\Program Files\Microsoft Office\root\Office16\, Environment: 
```

There is this loop where Word gets the same "The thread id is not found" error for TryDispatchInThread from ComQueryInterfaceInverted. Don't know if related, just came into attention.

```
2023-12-05 20:57:04.700 - [TRAC] - [1:13052:12964] - [winword.exe] - [IPC] - NamedObjectProtection. Function: NtCreateFile. Name: \??\C:\Windows\system32\netprofm.dll, new name: , result: 0x0.
2023-12-05 20:57:04.700 - [TRAC] - [1:13052:12964] - [winword.exe] - [COM] - Com::ComCallbackStorage::Add [1255748512-62548-18853--1924148904]
2023-12-05 20:57:04.700 - [TRAC] - [1:13052:12964] - [winword.exe] - [COM] - ComProxyIpcClient. [IPCInvertedServer] Response handled: . Channel name: 21c7dbfb-8f46-4f89-a5d9-875a2cf8ca8e
2023-12-05 20:57:04.701 - [TRAC] - [1:13052:12964] - [winword.exe] - [COM] - ComProxyIpcClient. [IpcConcurrentInvertedServer] Request handled. Response data: î3EúÎÛA¦ßqÍ[ŠÕ÷_
2023-12-05 20:57:04.702 - [TRAC] - [1:13052:12964] - [winword.exe] - [COM] - ComProxyIpcClient. [IpcConcurrentInvertedServer] OnRequest with data: î3EúÎÛA¦ßqÍ[ŠÕ÷i
2023-12-05 20:57:04.702 - [TRAC] - [1:13052:12964] - [winword.exe] - [COM] - ComProxyIpcClient. [IPCInvertedServer] Got request: com-query-interface-inverted. Channel name: 21c7dbfb-8f46-4f89-a5d9-875a2cf8ca8e
2023-12-05 20:57:04.703 - [TRAC] - [1:13052:12964] - [winword.exe] - [COM] - ComProxyIpcClient::ComQueryInterfaceInverted
2023-12-05 20:57:04.703 - [TRAC] - [1:13052:12964] - [winword.exe] - [COM] - Com::ComCallbackStorage::TryGet
2023-12-05 20:57:04.703 - [TRAC] - [1:13052:12964] - [winword.exe] - [COM] - ComProxyIpcClient::TryDispatchInThread
2023-12-05 20:57:04.703 - [TRAC] - [1:13052:12964] - [winword.exe] - [COM] - ComProxyIpcClient::TryDispatchInThread. The thread id is not found. 9912
```

Still don't know what can be done as a test to fix this issue.

For roadmap70910 Chermyanin told about more investigation around UWP partial solution implemented (could be this).

For roadmap70802 Chermyanin said that in some rare cases (Chrome) the title of the window is used to select which app will open a resource (link/document), and analyzing windows messages exchanged could be useful.


= Disable ComProxy Word stops crashing
:date: 2023-12-06
:tags: tag_venn

Despite the following log pattern exists when Word crashes:

 - Processing power status ResumeSuspend
 - Exception received when Get Service Token
 - Waiting for gateway to connect
 - Waiting 5000 seconds before trying to restart the gateway service
 - Absence of "Processing power status ResumeSuspend - completed"

It was observed that not always this happens. Consider another log observed when Word crashes:

 - Processing power status ResumeSuspend
 - Absense of "Exception received when Get Service Token"
 - Waiting for gateway to connect
 - Absence of "Waiting 5000 seconds..."
 - Processing power status ResumeSuspend - completed

Word crashed in both cases, what means there is no relation between some exception when Container Manager is trying to reconnect with PCG including into power state processing and Word crash.

On the other hand, the TryDispatchInThread really seems to be related. By setting `ComProxyEnabled=false`, even with `LocalRoutesEnabled=true` the crash stopped.

Tried to set `ComProxyEnabled=true` (explicit) and now even logging "The thread id is not found" Word is not crashing anymore.

I have no clue why `ComProxyEnabled=false` does not crash, `ComProxyEnabled=true` does not crash and the absent of `LocalRoutesEnabled=true` crashes, since true is the default for this feature flag. Could be a coincidence.

I attached WinDbg to Word inside SE and it revealed a possible stack overrun situation.

img/security_check_failure_or_stack_buffer_overrun.png


= Systemic crash
:date: 2023-12-08
:tags: tag_venn

After one of the crashes Word refused to start. WinDbg attached to it either showed the window. Looking for log errors just WebProxy logs referenced winword such as:

```
---------- WEBPROXY_2023-12-07.LOG
2023-12-07 17:16:07.225 - [ERRO] - [1:10156:4] - [Workplace.Proxy.Fiddler.FiddlerProxyImplementation] - => Session #204[ Host: pus5-collabhubrtc.officeapps.live.com Process: winword:10616 Method: GET Url: pus5-collabhubrtc.officeapps.live.com/rtc2/signalr/signalr/reconnect?transport=***&clientProtocol=***&connectionToken=***&connectionData=***&messageId=***&qs=***&ClientId=***&usid=***&WacUserType=***&mid=***&ts=***&eTag=***&waccluster=***&rr=***&environment=***&UserApp=***&UserType=***&UserVersion=***&verifySessionExists=*** Flags [ IsHTTPS, ClientPipeReused, ResponseGeneratedByFiddler ] State: Aborted] The internal error is occurred during request.
...
2023-12-07 18:39:10.687 - [ERRO] - [1:10156:3] - [Workplace.Proxy.Fiddler.FiddlerSessionManager] - => Session #208[ Host: dlpos33devsb-my.sharepoint.com Process: winword:10616 Method: POST Url: dlpos33devsb-my.sharepoint.com/personal/dev_dlp_os33dev_com/_vti_bin/sharedaccess.asmx Flags [ IsHTTPS, ClientPipeReused, ResponseGeneratedByFiddler ] State: Aborted] The response is generated by fiddler: Fiddler - DNS Lookup Failed [Fiddler] DNS Lookup for "dlpos33devsb-my.sharepoint.com" failed. System.Net.Sockets.SocketException No such host is known
2023-12-07 18:39:11.390 - [ERRO] - [1:10156:14] - [Workplace.Proxy.Fiddler.FiddlerProxyImplementation] - => Session #213[ Host: ecs.office.com Process: winword:10616 Method: GET Url: ecs.office.com/config/v2/Office/word/16.0.17029.20068/Production/CC?&EcsCanary=***&Clientid=***&Application=***&Platform=***&Version=***&MsoVersion=***&SDX=***&SDXfa000000069=***&SDX=***&SDXfa000000070=***&SDX=***&SDXfa000000124=***&SDX=***&SDXfa000000125=***&SDX=***&SDXfa000000128=***&SDX=***&SDXfa000000129=***&OfficeFirstRunSDXVersion=***&ProcessName=***&Audience=***&Build=***&Architecture=***&Language=***&SubscriptionLicense=***&PerpetualLicense=***&LicenseCategory=***&LicenseSKU=***&OsVersion=***&OsBuild=***&Channel=***&InstallType=***&ProviderId=***&SessionId=***&LabMachine=*** Flags [ IsHTTPS, ClientPipeReused, ResponseGeneratedByFiddler ] State: Aborted] The internal error is occurred during request.
...
```

Note the log above about eror accessing collabhubrtc.officeapps.live.com, dlpos33devsb-my.sharepoint.com ecs.office.com; collabhubrtc can relate to rtc (Realtime Collaboration module) crashes.

Inside this same Demo instance I tried to run another process such as Notepad and the same behavior occurred (no window). In trace logs there are some references to "Can't get ProcessPowerThrottling information for process" but this is somewhat common (werfault.exe, by example, gives the same error).

Looking to procexp several Workplace Container Helper instances hanging and an explorer instance. I couln't save this session, nothing was launching anymore. Restarting Demo worked.

However, after more tests I could generate a heap corruption message from VC runtime into the explorer instance after starting Demo session:

img/explorer_heap_corruption.png

I could collect the dump, but the process was hanging so it was not possible to debug the assert. Looking into the dump we can see some threads calling new or delete and stuck because the heap lock caused by this message.

I let the system untouched for sometime and the entire Windows became unresponsible. Even the login window was unavailable. So I had to force restart the VM.

```
...

   1  Id: 934.2108 Suspend: 0 Teb: 00000000`006de000 Unfrozen
 # Call Site
00 ntdll!NtWaitForAlertByThreadId
01 ntdll!RtlAcquireSRWLockExclusive
02 uxtheme!CThemeWnd::_SetThemeWndProp
03 uxtheme!CThemeWnd::Detach
04 uxtheme!ThemePreWndProc
05 user32!UserCallWinProcCheckWow
06 user32!DispatchClientMessage
07 user32!_fnINOUTLPSIZE
08 ntdll!KiUserCallbackDispatcherContinue
09 win32u!NtUserSetWindowLong
0a WorkplaceHook64!Hook_NtUserSetWindowLong
0b user32!_SetWindowLong
0c WorkplaceHook64!Hook_SetWindowLongW
0d comctl32!AlterWindowStyle
0e comctl32!Button_WndProc
0f user32!UserCallWinProcCheckWow
10 user32!SendMessageWorker
11 user32!SendMessageW
12 user32!xxxRemoveDefaultButton
13 user32!xxxSaveDlgFocus
14 user32!DefDlgProcWorker
15 user32!DefDlgProcW
16 user32!UserCallWinProcCheckWow
17 user32!CallWindowProcW
18 WorkplaceHook64!WindowMessageHookImpl::CallOriginalWindowProc
19 WorkplaceHook64!WindowHookManager::WindowProcHandler
1a WorkplaceHook64!WindowHookManager::HookWindowProc
1b user32!UserCallWinProcCheckWow
1c user32!DispatchClientMessage
1d user32!_fnDWORD
1e ntdll!KiUserCallbackDispatcherContinue
1f win32u!NtUserPeekMessage
20 WorkplaceHook64!Hook_NtUserPeekMessage
21 user32!_PeekMessage
22 user32!DialogBox2
23 user32!InternalDialogBox
24 user32!SoftModalMessageBox
25 user32!MessageBoxWorker
26 user32!MessageBoxTimeoutW
27 user32!MessageBoxW
28 WorkplaceHook64!__acrt_MessageBoxW
29 WorkplaceHook64!__crt_char_traits<wchar_t>::message_box<HWND__ *,wchar_t const * const &,wchar_t const * const &,unsigned int const &>
2a WorkplaceHook64!common_show_message_box<wchar_t>
2b WorkplaceHook64!__acrt_show_wide_message_box
2c WorkplaceHook64!common_message_window<char>
2d WorkplaceHook64!__acrt_MessageWindowA
2e WorkplaceHook64!_VCrtDbgReportA
2f WorkplaceHook64!_CrtDbgReport
30 WorkplaceHook64!free_dbg_nolock
31 WorkplaceHook64!_free_dbg
32 WorkplaceHook64!operator delete
33 WorkplaceHook64!operator delete
34 WorkplaceHook64!std::_Deallocate<16,0>
35 WorkplaceHook64!std::allocator<char>::deallocate
36 WorkplaceHook64!std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
37 WorkplaceHook64!std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
38 WorkplaceHook64!std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
39 WorkplaceHook64!std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
3a WorkplaceHook64!std::_Default_allocator_traits<std::allocator<std::function<void __cdecl(std::shared_ptr<Workplace::Ipc::IpcRequest>)> > >::max_size
3b WorkplaceHook64!nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char,std::allocator<unsigned char> > >::~basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char,std::allocator<unsigned char> > >
3c WorkplaceHook64!std::_Default_allocator_traits<std::allocator<Workplace::Ipc::NamedObjectInfo> >::max_size
3d WorkplaceHook64!nlohmann::basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char,std::allocator<unsigned char> > >::~basic_json<std::map,std::vector,std::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char,std::allocator<unsigned char> > >
3e WorkplaceHook64!Workplace::Ipc::IpcRequestWithParameters::~IpcRequestWithParameters
3f WorkplaceHook64!Workplace::Ipc::IpcRequestWithParameters::`scalar deleting destructor'
40 WorkplaceHook64!std::_Destroy_in_place<Workplace::Ipc::IpcRequestWithParameters>
41 WorkplaceHook64!std::_Ref_count_obj2<Workplace::Ipc::IpcRequestWithParameters>::_Destroy
42 WorkplaceHook64!std::_Ref_count_base::_Decref
43 WorkplaceHook64!std::_Ptr_base<Workplace::Ipc::IpcRequest>::_Decref
44 WorkplaceHook64!std::shared_ptr<Workplace::Ipc::IpcRequest>::~shared_ptr<Workplace::Ipc::IpcRequest>
45 WorkplaceHook64!Workplace::Ipc::IpcJsonSerializer::SerializeMessageRequest
46 WorkplaceHook64!Workplace::Ipc::IpcSerializer::SerializeMessageRequest
47 WorkplaceHook64!<lambda_7c5e8e85caa5cad63e0c5e569c53778b>::operator()
48 WorkplaceHook64!std::invoke<<lambda_7c5e8e85caa5cad63e0c5e569c53778b> &>
49 WorkplaceHook64!std::_Invoker_ret<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0>::_Call<<lambda_7c5e8e85caa5cad63e0c5e569c53778b> &>
4a WorkplaceHook64!std::_Func_impl_no_alloc<<lambda_7c5e8e85caa5cad63e0c5e569c53778b>,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::_Do_call
4b WorkplaceHook64!std::_Func_class<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()
4c WorkplaceHook64!Workplace::Ipc::IpcClient::SendRequestBase
4d WorkplaceHook64!Workplace::Ipc::IpcClient::SendRequest
4e WorkplaceHook64!LoggerNamedPipe::SendAllLogs
4f WorkplaceHook64!<lambda_b52e8eb17a5e148364c7ce7d33167297>::operator()
50 WorkplaceHook64!std::invoke<<lambda_b52e8eb17a5e148364c7ce7d33167297> >
51 WorkplaceHook64!std::thread::_Invoke<std::tuple<<lambda_b52e8eb17a5e148364c7ce7d33167297> >,0>
52 WorkplaceHook64!thread_start<unsigned int (__cdecl*)(void *),1>

...

   8  Id: 934.20f4 Suspend: 0 Teb: 00000000`006f0000 Unfrozen
 # Call Site
00 ntdll!NtWaitForAlertByThreadId
01 ntdll!RtlpWaitOnAddressWithTimeout
02 ntdll!RtlpWaitOnAddress
03 ntdll!RtlpWaitOnCriticalSection
04 ntdll!RtlpEnterCriticalSectionContended
05 ntdll!RtlEnterCriticalSection
06 WorkplaceHook64!__acrt_lock
07 WorkplaceHook64!heap_alloc_dbg_internal
08 WorkplaceHook64!heap_alloc_dbg
09 WorkplaceHook64!_malloc_dbg
0a WorkplaceHook64!malloc
0b WorkplaceHook64!operator new
0c WorkplaceHook64!std::_Default_allocate_traits::_Allocate
0d WorkplaceHook64!std::_Allocate<16,std::_Default_allocate_traits,0>
0e WorkplaceHook64!std::allocator<std::_Container_proxy>::allocate
0f WorkplaceHook64!std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
10 WorkplaceHook64!std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
11 WorkplaceHook64!Hook_NtAlpcSendWaitReceivePort
12 rpcrt4!LRPC_BASE_CCALL::SendReceive
13 rpcrt4!NdrpSendReceive
14 rpcrt4!NdrpClientCall2
15 rpcrt4!NdrClientCall2
16 combase!BulkUpdateOIDs
17 combase!CRpcResolver::BulkUpdateOIDs
18 combase!CROIDTable::ClientBulkUpdateOIDWithPingServer
19 combase!CROIDTable::WorkerThreadLoop
1a combase!CRpcThread::WorkerLoop
1b combase!CRpcThreadCache::RpcWorkerThreadEntry
1c kernel32!BaseThreadInitThunk
1d ntdll!RtlUserThreadStart

...

  12  Id: 934.1a08 Suspend: 0 Teb: 00000000`006f8000 Unfrozen
 # Call Site
00 ntdll!NtWaitForAlertByThreadId
01 ntdll!RtlpWaitOnAddressWithTimeout
02 ntdll!RtlpWaitOnAddress
03 ntdll!RtlpWaitOnCriticalSection
04 ntdll!RtlpEnterCriticalSectionContended
05 ntdll!RtlEnterCriticalSection
06 WorkplaceHook64!__acrt_lock
07 WorkplaceHook64!heap_alloc_dbg_internal
08 WorkplaceHook64!heap_alloc_dbg
09 WorkplaceHook64!_malloc_dbg
0a WorkplaceHook64!malloc
0b WorkplaceHook64!operator new
0c WorkplaceHook64!std::_Default_allocate_traits::_Allocate
0d WorkplaceHook64!std::_Allocate<16,std::_Default_allocate_traits,0>
0e WorkplaceHook64!std::allocator<std::_Container_proxy>::allocate
0f WorkplaceHook64!std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
10 WorkplaceHook64!std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
11 WorkplaceHook64!WindowHookManager::WindowProcHandler
12 WorkplaceHook64!WindowHookManager::HookWindowProc
13 user32!UserCallWinProcCheckWow
14 user32!DispatchMessageWorker
15 windows_storage!CShellTaskScheduler::_TT_MsgWaitForMultipleObjects
16 windows_storage!CShellTaskScheduler::TT_TransitionThreadToRunningOrTerminating
17 windows_storage!CShellTaskThread::ThreadProc
18 windows_storage!CShellTaskThread::s_ThreadProc
19 SHCore!_WrapperThreadProc
1a kernel32!BaseThreadInitThunk
1b ntdll!RtlUserThreadStart

...

  13  Id: 934.950 Suspend: 0 Teb: 00000000`006fa000 Unfrozen
 # Call Site
00 ntdll!NtWaitForAlertByThreadId
01 ntdll!RtlpWaitOnAddressWithTimeout
02 ntdll!RtlpWaitOnAddress
03 ntdll!RtlpWaitOnCriticalSection
04 ntdll!RtlpEnterCriticalSectionContended
05 ntdll!RtlEnterCriticalSection
06 WorkplaceHook64!__acrt_lock
07 WorkplaceHook64!heap_alloc_dbg_internal
08 WorkplaceHook64!heap_alloc_dbg
09 WorkplaceHook64!_malloc_dbg
0a WorkplaceHook64!malloc
0b WorkplaceHook64!operator new
0c WorkplaceHook64!std::_Default_allocate_traits::_Allocate
0d WorkplaceHook64!std::_Allocate<16,std::_Default_allocate_traits,0>
0e WorkplaceHook64!std::allocator<std::_Container_proxy>::allocate
0f WorkplaceHook64!std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
10 WorkplaceHook64!std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
11 WorkplaceHook64!WindowHookManager::WindowProcHandler
12 WorkplaceHook64!WindowHookManager::HookWindowProc
13 user32!UserCallWinProcCheckWow
14 user32!DispatchMessageWorker
15 shell32!CChangeNotify::_MessagePump
16 shell32!CChangeNotify::s_ThreadProc
17 SHCore!_WrapperThreadProc
18 kernel32!BaseThreadInitThunk
19 ntdll!RtlUserThreadStart

...
```

This heap corruption does not seem related to the Word crash, but both are memory corruption based.


= RPC_E_SERVER_DIED
:date: 2023-12-11
:tags: tag_venn

There are some observations about when some processes stopped logging or when some specific error occurred (all listed bellow). However, what called my attention more was the error RPC_E_SERVER_DIED during COM activation and IpcInvertedServer failed to connect to pipe server (Word). Going to investigate this further.

### Excel

 - There's a conflict of priorities for the hook of CredRenameW for priority 0.
 - Possible slowliness (not always) when unmarshaling dcb00003-570f-4a9b-8d69-199fdba5723b - IEnumNetworks.
 - Excel last log line when unmarshal 63a0a1e5-f8fe-4ba6-8508-caef1277dd35 - Windows::Internal::Security::Authentication::Web::IWamProviderRegistrationInformation and NtAlpcImpersonateClientOfPort.
 - DetourDetach failed. Invalid access to memory location. (Virus?)

### Word

 - **RoGetActivationFactory WamProviderRegistration failed with 0x80010007 RPC_E_SERVER_DIED.**
 - CoCreateInstanceEx failed with 0x80010007 between winword instances.
 - **IpcInvertedServer connect failed connect pipe by timed out.**

### Explorer

 - There's a conflict of priorities for the hook of CredRenameW for priority 0.
 - RoGetActivationFactory StateRepository.ApplicationExtension failed SERVICE_DOES_NOT_EXIST.
 - CoCreateInstanceEx failed 0x80070424. (Service does not exist)
 - DetourDetach failed. Invalid access to memory location. (Virus?)
 - Driverlog failed to get file name information CloseFilePath=\Device\Mup has been deprecated and replaced with BlockNetworkFiles.


= Asked for more Excel logs
:date: 2023-12-12
:tags: tag_venn

Getting unspecified error trying to extract procmon file for Excel:

img/extract_procmon_file_unespecified_error.png

Asked for more logs.


= WmiApSrv behavior
:date: 2023-12-12
:tags: tag_venn

Procmon for explorer shows start/stop for WmiApSrv.exe. Don't know if it is relevant:

img/start_stop_wmiapsrv.png


= ComProxy and WinRT issue?
:date: 2023-12-12
:tags: tag_venn

The ComProxyInvertedClient has some points returning RPC_E_SERVER_DIED error. This error is returned by ComProxyInvertedClient and ComProxyInvertedBinaryClient requests methods.

RoGetActivationFactory fails only for WamProviderRegistration and observed only in logs for outlook.exe and winword.exe.

Excel unmarshal 63a0a1e5-f8fe-4ba6-8508-caef1277dd35 - Windows::Internal::Security::Authentication::Web::IWamProviderRegistrationInformation with success, despite being the last line for some instances.

Also Excel Possible slowliness (not always) when unmarshaling dcb00003-570f-4a9b-8d69-199fdba5723b - IEnumNetworks. Is it possible this interface be related to our proxied CLSID_NetworkListManager?


= Detail about the heap corruption
:date: 2023-12-13
:tags: tag_venn

Analyzing the faulty stack again. The destructor of IpcRequest is responsible for the corruption from the call `LoggerNamedPipe::SendAllLogs`.

...
44 WorkplaceHook64!std::shared_ptr<Workplace::Ipc::IpcRequest>::~shared_ptr<Workplace::Ipc::IpcRequest>+0x20
45 WorkplaceHook64!Workplace::Ipc::IpcJsonSerializer::SerializeMessageRequest+0x355
46 WorkplaceHook64!Workplace::Ipc::IpcSerializer::SerializeMessageRequest+0xe4
47 WorkplaceHook64!<lambda_7c5e8e85caa5cad63e0c5e569c53778b>::operator()+0xb4
48 WorkplaceHook64!std::invoke<<lambda_7c5e8e85caa5cad63e0c5e569c53778b> &>+0x41
49 WorkplaceHook64!std::_Invoker_ret<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,0>::_Call<<lambda_7c5e8e85caa5cad63e0c5e569c53778b> &>+0x41
4a WorkplaceHook64!std::_Func_impl_no_alloc<<lambda_7c5e8e85caa5cad63e0c5e569c53778b>,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::_Do_call+0x48
4b WorkplaceHook64!std::_Func_class<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::operator()+0x79
4c WorkplaceHook64!Workplace::Ipc::IpcClient::SendRequestBase+0x1b2
4d WorkplaceHook64!Workplace::Ipc::IpcClient::SendRequest+0xbb
4e WorkplaceHook64!LoggerNamedPipe::SendAllLogs+0x392
...


= ComProxy not started during some applications COM operations
:date: 2023-12-13
:tags: tag_venn

The failed calls to RoGetActivationFactory in Outlook and Word were the moments when there was no ComProxy running. These are situations in log where there is not stopping message from ComProxy and applications Outlook and Word try to connect and make requests.

2023-11-28
05:43:28 ComProxy starts
05:43:53 Outlook starts calling COM functions
05:48:30 ComProxy stops (or crashes, there was no stop message)
05:53:28 Outlook starts getting error calling RoGetActivationFactory
06:02:52 Outlook stops getting error calling RoGetActivationFactory
06:05:08 ComProxy starts
06:30:40 ComProxy stops (or crashes, there was no stop message)
06:37:56 Word starts getting error calling COM functions
06:39:13 Word stops getting error calling COM functions
06:39:18 Word starts getting error calling COM functions
06:39:36 Word stops getting error calling COM functions

Excel receives errors from QueryInterface/CoCreateInstance, but that's normal depending on the interface, so the slowness from it is not justified.

2023-11-28
11:24:05 ComProxy starts
11:25:02 Excel starts calling COM functions
12:07:01 Excel stops calling COM functions
12:07:03 Excel DetourDetach failed
12:08:09 ComProxy stops (or crashes, there was no stop message)
12:24:18 ComProxy starts
12:34:42 ComProxy stops with closing message

Also there were some services not found in DcomLaunch it is worth mention: WSearch, lfsvc, CscService and StateRepository. Those cause the SERVICE_DOES_NOT_EXIST (0x80070424) errors. Maybe the absense of one of these services cause the slowness (going to test).


= SERVICE_DOES_NOT_EXIST list is the same to a working machine
:date: 2023-12-14
:tags: tag_venn

Getting error 0x80070424 (SERVICE_DOES_NOT_EXIST) for CreateInstance functions for processes msedge, explorer, excel, winword, outlook, chrome:

```
CLSIDs
08d9dfdf-c6f7-404a-a20f-66eec0a609cd - lfsvc
1fcbe96c-1697-43af-9140-2897c7c69767 - no name
48c6be7c-3871-43cc-b46f-1449a1bb2ff3 - Offline Files Cache Control
69486dd6-c19f-42e8-b508-a53f9f8e67b8 - Offline Files Service Control
708860e0-f641-4611-8895-7d867dd3675b - no name
7d096c5f-ac08-4f1f-beb7-5c22c517ce39 - Windows Search Manager
e225e692-4b47-4777-9bed-4fd7fe257f0e - not found

RIIDs
3d0423b1-bbd4-4c4a-8f20-da15228e0f3d - ILocationManager
463abecf-410d-407f-8af5-0df35a005cc8 - Interface {463ABECF-410D-407F-8AF5-0DF35A005CC8}
855d6203-7914-48b9-8d40-4c56f5acffc5 - IOfflineFilesCache
909489c2-85a6-4322-aa56-d25278649d67 - IGoogleUpdateCore
ab310581-ac80-11d1-8df3-00c04fb6ef69 - ISearchManager
b94b62a2-4012-4b7e-a395-f21cc665fd12 - Windows::Internal::StateRepository::IApplicationExtensionStatics
c9c2b807-7731-4f34-81b7-44ff7779522b - Interface {C9C2B807-7731-4F34-81B7-44FF7779522B}
```

Notice that the majority of these classes and functions belongs to the services accused as nonexistent in DComLaunch logs. These services are unavailable in DcomLaunch [as expected].

However, this is the same for the current version running on my personal computer, so I am considered this not to be the difference to the user environment.

[as expected]: https://tfs.os33.net/DefaultCollection/Portal/_git/Workplace.Container.Windows?path=/Workplace.Container/Workplace.Container.Helper/HookProviders/ServiceControlManagerHookProvider.cs&version=GBROADMAP-69325-spike-isolate-background-host&line=247&lineEnd=248&lineStartColumn=1&lineEndColumn=1&lineStyle=plain&_a=contents


= HP ProtectTools Security Manager
:date: 2023-12-15
:tags: tag_venn

Found an issue about this software in procmon logs trying to continuously load the DLL DpoFeedb.dll. This DLL should be located in `C:\Program Files\Microsoft Office\root\vfs\ProgramFilesX64\HP\HP ProtectTools Security Manager\Bin\DpoFeedb.dll` in x64 and the procmon log keeps returning PATH NOT FOUND. This keeps repeating for several seconds in Excel start.

```
11:26:06.2966865 AM	EXCEL.EXE	25268	CreateFile	C:\Program Files\Microsoft Office\root\vfs\ProgramFilesX64\HP\HP ProtectTools Security Manager\Bin\DpoFeedb.dll	PATH NOT FOUND	Desired Access: Read Attributes, Disposition: Open, Options: Open Reparse Point, Attributes: n/a, ShareMode: Read, Write, Delete, AllocationSize: n/a
```

An [issue in HP page] related to start VirtualBox on Windows 10 is similar to Excel start.

> For example, I'm trying to run VirtualBox on Windows 10 with the standard suggested suite of HP protection products enabled.  When I'm starting up a VM for the first time, which should build the environment, it is failing and this is the only "error" in the log, which repeats about a dozen times though out.
> 
> 4894.bd0: supR3HardenedScreenImage/LdrLoadDll: cache hit (Unknown Status -23021 (0xffffa613)) on \Device\HarddiskVolume3\Program Files\HP\HP ProtectTools Security Manager\Bin\DpOFeedb.dll [lacks WinVerifyTrust]
> 4894.bd0: Error (rc=0):

Researching on the web about this software it it not compatible to Windows 10. This [page from HP itself] recommends to uninstall it and to use HP Client Security Manager instead.

> The HP ProtectTools Security manager software is not compatible with W10.
> 
> You need to install the newer HP Client Security Manager software which you can find on your notebook's support page...

However, since procmon accuses this path as nonexistent and the list of installed programs in diagnostics does not list it I believe that should remain some plugin trying to do this operation.

As next step to fix client environment I recommend do some scan about HP Protect Tool files and remove them. In the processes list there are some running from `c:\Program Files\HP\HP ProtectTools Security Manager`. There must be an uninstaller there.

I tried to install this software in my VM, but for some reason (not HP machine or the Win10 prevention) it does not continue.

img/hp_protect_tool_not_supported_this_system.png

[issue in HP page]: https://h30434.www3.hp.com/t5/Notebook-Software-and-How-To-Questions/HP-ProtectTools-Security-Manager-How-to-properly-use-when-it/td-p/7589916
[page from HP itself]: https://h30434.www3.hp.com/t5/Notebook-Operating-System-and-Recovery/HP-ProtectTools-Security-Manager-and-Windows-10/td-p/7375441


= One-to-one call
:date: 2023-12-20
:tags: tag_venn

> Talk about your vision (or ideas, or feeling) on your, team's and company's work and performance.
> 
> Please prepare answers for following questions:

## Where you need to improve?

I spent a lot of time this year in AAD research and I don't think the result delivered was satisfying. I need to improve planning about how to approach spikes.

> We are not that late; there are features that are going to take months or even years to release.

I still don't understand the sofware and newest Windows architecture details (UWP, ALPC) enough to solve bugs in a timely manner. I need to sharpen my skills on Workplace (perhaps by stopping more time to read existing code).

Six months working in Venn I am still nourishing Imposter Syndrome because I am not delivering issues. I need to consider people above me are aware of my performance and would feedback me if there are any issues about it.

> I am going to talk to Chermyanin about this because he knows better.

I am to assume everything is right and they let me know if there are any improvements to make.

## Where team needs to improve?

In what sense are we a team besides being a group of devs participating in some standups? Maybe we need to rethink what is to be part of a team in Venn in order to think how to improve it after.

> Engineering is an individual task normally.

## Where company needs to improve?

I had a hard time thinking about this one, because to me this is the best place to work, and I was already working in a great place before.

But I would love to meet at least some of you guys, at least once a year or so. Remote working is great and all, but socializing with team and company members is a challenge.

(This subject did not pop out.)

## What can be changed?

Since we do not have sprints and its rituals what about some sporadic technical brainstorms? Engage the team to discuss something about some product issues and help everyone to understand what are the key challenges involved.

> Maybe some knowledge sharing could happen to bring team together also, but this takes time.


= Workplace starter crashing at beginning
:date: 2023-12-18
:tags: tag_venn

All the crash dumps collected in diag (14) are instances of NotifyUserDefaultFoldersChanged and rpcss.

This dispatch APC callback address is pointing at `0x00000209 9fc44ed0`; `Workplace_Container_Helper` is loaded in `00000209 9fb20000 00000209 9fb56000` and there is a virtual memory block allocated to this place:

```
!vadump
BaseAddress: 000002099fc445c0
RegionSize:  0000000000007f90
```

But since these are minidumps there are no information about protection level and state (if deallocated already, by example).

Is it possible to configure to generate a bigger dump?


= Trying to force heap corruption
:date: 2023-12-18
:tags: tag_venn

Analyzed the stack from SendAllLogs and since the basic_string destructor from a basic_json object inside the IPC request was the last track of heap health I was assuming the problem could be related with the number of records to send. So I forced to generate 10k lines of log for a COM operation and increase the interval from the SendAllLogs thread to 30 seconds. The result was a call with more than one million records.

The app did not crashed with heap corruption. It just ran very slowly.

Now all my ideas to come with some bug fix in this issue are gone. Putting in wait.


= DDE orchestrates MSAccess instances
:date: 2023-12-19
:tags: tag_venn

In the last standup about this issue Chermyanin said that in some rare cases (Chrome) the title of the window is used to select which app will open a resource (link/document), and analyzing windows messages exchanged could be useful. Indeed, using Spy++ is possible to see `WM_DDE_*` messages flowing around Explorer and MSAccess instances. The exact meaning of each message is still to be discovered. But I analyzed the behavior behind this to understand the bug.

When a user double clicks a MSAccess file inside any Explorer process a new MSAccess process is started and the file is opened.

Then, if the user double clicks another MSAccess file the first MSAccess process starts a second process to open this file.

This continue for each new file double clicked, independently if Explorer or Access are inside or outside SE.

If the first MSAccess process exits the second instance is responsible to start new instances and so on.

Important to note here that if the user double clicks an already opened file nothing is done, just the windows is put in focus.

Now to the bug behavior. If the user closes a file in some MSAccess process or starts another process without specifying a file (inside or outside SE) this instance is used to open a new file double clicked by the user, independently if the instance is running inside or outside SE.

This generates different issues depending on what process is being used to open a double clicked file:

 - If a new process started by an inside SE app (Explorer or MSAccess) is opening a file from outside Venn Disk.
 - If a new process started by an ouside SE MSAccess (outside Explorer can't start an inside MSAccess) is opening a file from inside Venn Disk. This is similar to original issue.
 - If a existing process inside SE is requested to open a file outside Venn Disk.
 - If a existing process outside SE (**the original issue**) is requested to open a file inside Venn Disk.

https://support.os33.link/v/MegRp3


= Fixed the original bug 
:date: 2023-12-21
:tags: tag_venn

I intercepted `WM_DDE_*` messages being sent by Explorer in `PostMessageW` when there is already a MsAccess instance running. When this message is droped no file is opened.

When Explorer needs to start the process there is no message in `Send/Post`.

The handle used in `PostMessageW` is always changing when opening the same file in the same MsAccess.

The handle to the client window posting the message is also always changing.

Both window handles are invalid if searched in Spypp.

The handle to the client window posting the message if from a worker window from Explorer.

The handle to the client window posting the message is also a worker window, but from MsAccess.

This window is created by [DDEML].

USER32!DdeCreateStringHandleW:
00007fff`3972abb0 418bc0          mov     eax,r8d
0:000> du rdx
00007ff6`e25926b0  "Microsoft Access"

USER32!DdeCreateStringHandleW:
00007fff`3972abb0 418bc0          mov     eax,r8d
0:000> du rdx
00007ff6`e2579ee0  "MSAccess"

USER32!DdeCreateStringHandleW:
00007fff`3972abb0 418bc0          mov     eax,r8d
0:000> du rdx
00007ff6`e2579ef8  "Msaccess.exe"

USER32!DdeCreateStringHandleW:
00007fff`3972abb0 418bc0          mov     eax,r8d
0:000> du rdx
00000048`e3d8f7d0  "MSAccess4812"

Before the `PostMessageW` from Explorer MsAccess receives something from DDEML and calls the function `DdeQueryStringW`. The content: "ShellSystem".

USER32!DdeQueryStringW:
00007fff`3976cc80 8b442428        mov     eax,dword ptr [rsp+28h] ss:00000048`e3d8f1b0=000004b0
0:000> du r8
0000022f`48cda7c0  ""
0:000> gu
msaccess!FDeliverDb+0x7c6a:
00007ff6`e1e4952a 85c0            test    eax,eax
0:000> du r8
0:000> du 0000022f`48cda7c0
0000022f`48cda7c0  "ShellSystem"

Then after that MsAccess call `DdeAccessData` with the DDE command in the data:

USER32!DdeAccessData:
00007fff`3976be20 48895c2408      mov     qword ptr [rsp+8],rbx ss:00000048`e3d8f440=0000000003000b00
0:000> gu
msaccess!FDeliverDb+0x17fe:
00007ff6`e1e430be 4885c0          test    rax,rax
0:000> r
rax=0000022f4f619710 rbx=0000022f4de92680 rcx=00000000ffffffff
rdx=00007fff3ad92bf8 rsi=0000000000000000 rdi=0000000000000001
rip=00007ff6e1e430be rsp=00000048e3d8f440 rbp=0000000000000000
 r8=00000000000000ff  r9=0000022f4f121ac0 r10=00000000ffffffff
r11=0000000000000006 r12=000000000000c11f r13=0000000000000000
r14=0000000000000000 r15=0000000002000500
iopl=0         nv up ei pl nz na po nc
cs=0033  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000206
msaccess!FDeliverDb+0x17fe:
00007ff6`e1e430be 4885c0          test    rax,rax
0:000> du rax
0000022f`4f619710  "[SetForeground][ShellOpenDatabas"
0000022f`4f619750  "e "X:\Wanderley Caloni\New Micro"
0000022f`4f619790  "soft Access Database.accdb"]"

Note that this occurs **before** inside SE Explorer posts DDE execute.

ShellPositionerManager:PriorityList

Looking for GlobalAddAtom there was no call in Explorer inside SE (despite a lot in the outside SE). Could be hook interference?

Answer: I have no idea why, but it is working now.

Fix when user double click Explorer inside SE and MsAccess outside SE tries to open the file. Now Workplace has its own DDE server name for MsAccess: https://support.os33.link/v/aTmuWg

It does so by adding a hook to `GlobalAddAtomW` (and `A`) because Explorer uses it to execute the DDE server. Adding "MSAccess" and "MSACCESS" strings to DdeRedirect check because Explorer uses UPPERCASE and MsAccess uses CamelCase; this is to maintain the sensitive case to Adobe solution.

[DDEML]: https://learn.microsoft.com/en-us/windows/win32/dataxchg/dynamic-data-exchange-management-library


= Fixed MsAccess PR with different feature flags now
:date: 2023-12-26
:tags: tag_venn

Fixed PR when user double click Explorer inside SE and MsAccess outside SE tries to open the file and PR description. It does so by adding a similar hook from DdeCreateStringHandle to GlobalAddAtom because Explorer uses it to execute the DDE server. DdeProtection has now two separated feature flags into the same hook: DynamicDataExchangeHook and DdeMsAccessRedirectHook. There are separated lists to redirect DDE server name creation.


= SE File Manager do not update folder when downloading file
:date: 2023-12-26
:tags: tag_venn

Reproduced the bug in Workplace and Demo. In Demo started to get error downloading images (dunno why). Analyzing ShellChangeNotifyHook implementation to see what could be, but no conclusion yet. Still going to make some tests.


= Checklist
:date: 2023-12-27
:tags: tag_venn
:link: https://os33corp.atlassian.net/wiki/spaces/DTDLP/pages/2675474891/CheckList+-+TEMPLATE
:link: https://tfs.os33.net/DefaultCollection/Portal/_build?definitionId=830
:link: https://downloads.os33dev.net/wcaloni/clients/windows/WorkplaceInstaller.exe
:link: https://downloads.os33dev.net/wcaloni/clients/windows/component/stable/WorkplaceContainerComponent.zip

There is a checklist to run every time an issue is finished. Just copy the template to a new post linked to the issue, generate a new personal version (instructions in the checklist) and test it. It could be useful also to test new features or analyze bugs. Here comes some useful links:

 - Chrome should be logged-in to www.os33dev.com
 - Check IP adddress using http://ipinfo.io
 - Download file from https://downloads.os33dev.net/asedunov/dlp.docx
 - Type https://us02web.zoom.us and Ctrl+Click the link

## Script to check uninstall

```
dir /b "%ProgramFiles(x86)%\Workplace"
dir /b "%ProgramData%\Workplace"
dir /b "%UserProfile%\AppData\Local\Workplace"
dir /b "%UserProfile%\AppData\Roaming\Workplace"

reg query HKLM\SYSTEM\CurrentControlSet\Services\WorkplaceContainerAOD
reg query HKLM\SYSTEM\CurrentControlSet\Services\WorkplaceContainerDriver
reg query HKLM\SYSTEM\CurrentControlSet\Services | find "Workplace"

reg query "HKLM\SOFTWARE\OS33 Inc"
reg query "HKLM\SOFTWARE\WOW6432Node\OS33 Inc"
reg query "HKCU\SOFTWARE\OS33 Inc"

pause
```


= Setting to receive all notifications
:date: 2023-12-27
:tags: tag_venn

Studied the mechanism behind shell notifications and made some tests. The first one was to duplicate all calls to SHChangeNotifyRegister. Even then there was no sign of being notified when command prompt is copying a file.

Except when running another piece of the shell. If started another instance of explorer and show same folder, when the second explorer modifies the contents the first one updates correctly (two different explorer.exe processes). Operations inside the Save As window such as copy and remove when downloading some file in chrome also update the folder (not the download, but some operation on existing files inside the folder).

Curious observe that changes in the side of a text file do not update neither; there are some limitations we put ourselves when filtering when to duplicate the SHChangeNotifyRegister function).

## Not downloading files anymore

Something funny started to happens suddenly since yesterday: I cannot download new files from chrome and edge inside SE to any folder (or drive root) inside SE (the exception is saving a page as html single). The error message from chrome is "Download error" or "Transference error" (is in Portuguese). In Workplace is working fine.

img/chrome_download_failed_demo.png

img/chrome_download_failed_demo_detail.png

The issue occurs only inside V: and X: (dlp) drives and subfolders, not outside SE folders being shown inside SE.


= Last test from checklist
:date: 2023-12-28
:tags: tag_venn

Compared my test user (wcaloni.dlp) with checklist.dlp and there were some differences (first is mine):

> AADBrokerPluginNetworkRedirectionEnabled = True
> AadWebProxyEnabled = False
> AadWorkaroundEnabled = True
> BITSEnabled = False
> BadgeTopmostWindowsIntersectionsCheckEnabled = False
> ChromeWorkaroundEnabled = False
> ContainerProtectionEnabled = True
> CopyingTeamsPackagesEnabled = True
> CredentialStorageEnabled = False
> DigitalSignatureValidationVersion = 2
> DisableAADWAM = False
> DisableIpV6 = True
> EncompassEnabled = True
> FQDNExclusionsEnabled = False
> KeyLoggerEnabled = True
> PostfixCredentialTargetName = False
> PrintingActivityEnabled = True
> ProtectWindowHooksEnabled = True
> RememberDeletedRegistryKeys = False
> UpdateAltitudeOnTheFly = True
> UwpFulltrustWorkaroundEnabled = False
> Win11ExplorerTabsEnabled = False
> WmiMethodsFilterEnabled = True

Tested running Demo with that, but got KeyExchange exception (dunno why). Aleksey Koslov gave me the hint about to start with the checklist to deploy my own version, what could help me to accomplish both issues.


= Trying to install personal version (Build Workplace)
:date: 2024-01-02
:tags: tag_venn

To compare Demo with Workplace behavior about the download issue mentioned before I started to follow the "How to deploy Workplace for Windows environment" that says to start a pipeline build from my branch. However, I have not noticed that the first step is to build the OS33.Workplace.Windows repo, not the Container one. Aleksey Koslov gave me the tips:

 - Build Workplace for Windows (OS33.Workplace.Windows I believe) from master to have the installer created; this is Workplace.Windows.Release pipeline;
 - Build Workplace Container from your branch with your config;
 - Should have hooks built to a package from your branch;
 - Have hook package updated in the solution on your branch to create exactly what you want to test.

I starting to follow these steps, but stopping a little to understand the build flow to see if I am doing right.

## Build Workplace for Windows

The BuildConfigs is in s3 (`BuildConfigs/Windows/dev.json`). I have a `wcaloni.json` that I believe Koslov created for me ("you don't have your config uploaded. I will upload one to the storage").

Artifacts:

 - WizProjects: OS33.Windows.Msi, OS33.Windows.Setup
 - WorkplaceComponent: EXEs, DLLs, drivers, Container.Api

I am not sure if the content of the BuildConfig json makes some difference. The artifacts keep published in the pipeline.

Script to calculate today and other versions:

```
from datetime import date, datetime, timedelta

d0 = date(2000, 1, 1)
td = date.today()

days = (td - d0).days
print("version today is", days)

while 1:
  print("type version")
  version = input()
  d1 = d0 + timedelta(days=int(version))
  print(d1)
```

## Build Workplace Container

That was OK before and it is okay now, but the thing is: the WorkplaceInstaller.exe generated from Workplace for Windows pipeline is not installing my version.

## Hooks in a package in my branch

Doubt in that part.


= Still trying to install personal version (Build Workplace)
:date: 2024-01-03
:tags: tag_venn

Built a local WorkplaceInstaller.exe (I know, I shouldn't do that, is just discovery) and was able to install it to know where the Workplace Component files comes from. From the logs a zip file WorkplaceContainerComponent.zip is downloaded from https://downloads.os33portal.net/clients/windows/component/stable/WorkplaceContainerComponent.zip. Don't know how to change this URI to a personal version that would be https://downloads.os33dev.net/wcaloni/clients/windows/component/stable/WorkplaceContainerComponent.zip, but I am not sure about this because the version in hook DLL details, by example, is from two months before.

Also not sure if this version is kept the same (without updates).


= Trying to link personal version to my WorkplaceHook
:date: 2024-01-04
:tags: tag_venn

Now I understood what was going on with the versions. Pipeline build indeed include the build artifacts into s3. Pointed that out into the Confluence doc ("How to deploy personal version").

However, the `WorkplaceHook[32|64].dll` files used to the package come from nuget linked version. Now I am trying to understand how to change that. To generate another version in the Workplace.Container.Hook.Release is not working (kept hanging for 4 hours and I don't think is the right way).


= Troubleshooting Workplace
:date: 2024-01-05
:tags: tag_venn
:link: https://os33corp.atlassian.net/wiki/spaces/DTDLP/pages/3461939219/Troubleshooting+Workplace+Secure+Enclave+Windows

Alex Osipov created this page in Confluence with the main actions to solve a Workplace environment that is not working. Could be useful in the future.


= Some update from my current tasks (around checklist and pipelines)
:date: 2024-01-05
:tags: tag_venn

Downloading issues from browser in Demo vs Workplace. Since I have to run the checklist template for the issue after changing the PR to make it more flexible to add more DDE servers I was involved the last days into generating my personal version for Workplace so I could debug it. I am following the checklist template link about "How to deploy personal version of Container for Windows".

MS Access DDE server. Since I have to run the [checklist template] for the issue after changing the PR to make it more flexible to add more DDE servers I was involved the last days into generating my personal version for Workplace so I could debug it. I am following the checklist template link about "How to deploy personal version of Container for Windows".

The post says to start a pipeline build from my branch but after some issues about more than one pipeline TL;DR I am stuck in how to link a `WorkplaceHook64.dll` (among other files) to a zip package that will be downloaded once I run my personal Workplace installer. I found [a pipeline to build it] but it took more then 4 hours to run and stopped. Looking to the build history it seems this pipeline has some issues to build, taking around 1h to build the native components, hanging into the driver certification.

[a pipeline to build it]: https://tfs.os33.net/DefaultCollection/Portal/_build?definitionId=870
[checklist template]: https://os33corp.atlassian.net/wiki/spaces/DTDLP/pages/2675474891/CheckList+-+TEMPLATE


= Finishing DynamicDataExchangeRedirection feature
:date: 2024-01-06
:tags: tag_venn

After successfully generate new Workplace.Hook nuget package I could generate a new WorkplaceComponents.zip package downloaded by my personal installer. This way I renamed the MsAccess feature flag to be generic enough to add new DDE servers in the future and made some tests:

https://support.os33.link/v/A9oiEs


= Running antiscreen-capture POC
:date: 2024-01-08
:tags: tag_venn

Since I am unable to login with checklist user today I am focusing in compiling and running Zhenhua Yang POC where in a duplicated desktop apps with "_se" suffix in the process image name are not shown. The solution is based on some hooks with hardcoded offsets for specific versions for Win10 and Win11 (both x64) and involve a driver to capture the windup process info and manipulate what is called `HasProtectedContent` and it is located inside `Dwmcore.dll`.

After start the driver and inject the DLL to `dwm.exe` process using Process Hacker I started the windup application and it duplicates (duh) the desktop inside its window. Running `hello8.exe` test it exibits its window as supposed to, but running a renamed image to `hello8_se.exe` it does not, only a black window shows, with the client area protected.

antiscreen_poc_working.png


= Issue resolution order
:date: 2024-01-09
:tags: tag_venn

Asked Aleksey Kozlov about the the order for complete an issue:

 - Fix/change the code (test locally);
 - Submit a pull request and wait for approval;
 - Generate personal version and run checklist;
 - Merge branch to master;
 - Change issue status Ready for testing.

Obs: If changes applied to hooks/drivers first build the package and update reference in your branch.


= File explorer update issues
:date: 2024-01-09
:tags: tag_venn

## Possible related issues (need to check)

Following are the lastest occurrences that could be related to the refresh issue (linked to my issue).

Dark theme in Windows 11 appeared light in toolbar in explorer inside SE. If switching from light to dark while the window is opened the toolbar turns to black normally.

Threads in Slack (linked in issue).


= Windows 11 New Folder operation does not refresh even doing it in the same window.
:date: 2024-01-09
:tags: tag_venn

Pointed ou by Aleksey Kozlov, the [PR 25480] from ROADMAP-67750 fixed messages exchange between outside and inside SE processes that needed to communicate `SHChangeNotifyRegister` events using global memory from outside SE process. This PR starts to select some privileged processes, starting with explorer.exe. Currently [there are other processes in this list].

It was observed by Oleh Yatskiv in the comments that the error occurs because of access to shared memory passed using SHChangeNotifyRegister function.

> (copied from issue)

To see if this bug got back I made two tests based on if the process generating a file system event is a privileged one or not. To do that I opened Windows Explorer windows from inside and outside SE, but I also opened explorer windows managed by the shell but opened into another process. To do that I select the option "Save page as..." from edge.exe, inside and outside SE.

The first test, related to the original fix, was to create and delete a folder with all those four windows opened in the Pictures folder and see which one update its content. The operations was made outside SE folder. The one that did not was the explorer window opened inside SE from edge.exe.

https://support.os33.link/v/T4wrDS

A second test was made with an inside SE folder as focus in two explorer.exe instances and a shell window in edge. Since only inside SE processes can view this folder I don't think this is the same case from the shared memory issue. Besides, the process that created/deleted a folder itself did not refresh. In some cases other process is updated but not the event generator. And no event was updated in the edge.exe window.

https://support.os33.link/v/ZGQWg0

The easiest one to debug seems to be where edge.exe (or another app potentially) or explorer.exe make the operation itself and do not update.

[PR 25480]: https://tfs.os33.net/DefaultCollection/Portal/_git/Workplace.Container.Windows/pullrequest/25480?_a=files
[there are other processes in this list]: https://tfs.os33.net/DefaultCollection/Portal/_git/Workplace.Container.Windows?path=/Workplace.Container.Driver/WorkplaceContainerDriver/ProcessesManager.cpp&version=GBmaster&line=426&lineEnd=427&lineStartColumn=1&lineEndColumn=1&lineStyle=plain&_a=contents


= Downloading versions from several channels
:date: 2024-01-11
:link: https://downloads.os33portal.net/clients/versions.html
:link: https://downloads.os33portal.net/clients/windows/WorkplaceInstaller.exe
:tags: tag_venn

We have this page where you can see which version is deployed to some channel. On this page you can download WorkplaceComponent.zip (by click a small button near version number).

 1. Uninstall old version from computer
 2. Restart your computer
 3. Manually create folder c:\ProgramData\Workplace\
 4. Put downloaded from needed channel WorkplaceComponent.zip (don't change the name of archive)
 5. Launch installer (you can download it by link)
 Result: Workplace will be installed from this zip archive


= Trying to test Workplace rollback and compare versions
:date: 2024-01-11
:tags: tag_venn

Steps to install Workplace from stable channel:

[Downloading versions from several channels]

Following the steps to install Workplace from stable channel the bug did not occur. However, my prod user is with `ContainerProtectionEnabled = False` and in my tests this disable does not generate the error.

Tried to install dev and nonsigned versions, but as expected it keeps updating with the lastest version from some channel and to change WorkplaceHook64.dll in the middle is not enough because there are driver changes as well. Besides, the first explorer.exe to be started is with the updated DLL from channel.

So I got back to the download issue in browser and started to rollback Demo version until this issue does not exists anymore. I started with the original issue 8747, same error, and got back to 8725, the stable version (using tag dev-1.0.8725.2108), but I couldn't verify the outcome yet because the sessions kept giving the error "WorkplaceContainerServiceException: Workplace Container has been terminated during waiting for session confirmation" for about one hour (this happens sometimes).


= Zing!
:date: 2024-01-11
:tags: tag_self

Assim como a autora de "Salt, Fat, Acid and Heat" fala sobre colocar sal até sentir o "Zing!", quando a comida fica no seu estado ótimo, entrar no flow também envolve começar a fazer o que se deve fazer até ouvir um "Zing!" no seu cérebro, te avisando que isso é o que você deveria estar fazendo acima de tudo. Isto é o que dá sentido à vida. Nada mais importa. Isto é o [The ONE thing] do momento. Tudo fora do que se está fazendo atrapalha e deve ser removido.


= Old Demo
:date: 2024-01-15
:tags: tag_venn

Trying to test a very older version from Demo (Jan 12 2023, tag dev-1.0.8413.2122) and got some errors related to demo and container connection. Compiled and debugged the common API until I stopped into an error starting Workplace Container when trying to connect to gateway service:

```
2024-01-13 16:21:08.093 - [INFO] - [0:5684:15] - Creating gateway connection
2024-01-13 16:21:08.203 - [TRAC] - [0:5684:15] - [Start watch]  - EstablishGatewayServerConnection

2024-01-13 16:31:28.268 - [ERRO] - [0:8932:14] - Configure container session error by [ec4c1b8d-5be3-4331-bf01-c905614d3b98]
  Exception: System.InvalidOperationException: An invalid request URI was provided. The request URI must either be an absolute URI or BaseAddress must be set.
```

Aleksey said maybe one year is older than necessary. Keep it to six months.


= My explorer outside SE can see now drive v
:date: 2024-01-15
:tags: tag_venn

I asked for help and it seems that there is a policy for all users that do that (Do not allow data to be saved or moved out of Venn).

when_explorer_outside_se_can_see_drive_v.png


= Reproduced the bug... but only in Win11
:date: 2024-01-15
:tags: tag_venn

Tested with new installation and seems OK. However, I tested in a previous version and I saw the bug reproduced. So I make all feature flags equal to last diags log, but at the time I could run a new test the version was already updated to container 1.0.8780.31061.

Win10 x64
Workplace for Windows: 4.0.8767.29998
Container: 1.0.8780.31061

https://support.os33.link/v/BwF2Ax

workplace-diagnostics-4.0.8767.29998-20240115-220714.zip

## PS

Tested on Win11 also and... here is the bug again: https://support.os33.link/v/H30B8O (identical feature flags).

Workplace for Windows: 4.0.8781.217
Container: 1.0.8781.2128

workplace-diagnostics-4.0.8781.217-20240115-223900.zip


= Older than fix WorkplaceHook64
:date: 2024-01-16
:tags: tag_venn

After replacing only `WorkplaceHook64.dll` from dev installer for the local debugging I realized that the release version is older than the fix (from day 8749). That is why it is not working and why during some tests it is working.

workplace_version_vs_hook_version.png

Looking to the master history I saw that the hook package was updated by mistake by Egor Yuzik. Reverting this change to fix the issue in the next version.


= Script to mark all comments are resolved in PR
:date: 2024-01-17
:tags: tag_venn

This is wrong, but currently there are a lot of comments from Sonar nonrelated to the code itself. It is related to deleted files. Something is broken.

Gabriel-Marian Cristei wrote this script to mark all comments are resolved:

```
var buttons = document.getElementsByClassName('bolt-button');
for (var entry of buttons) {
  if (entry.innerText == 'Resolve') {
    entry.click();
  }
}
```


= Trying to investigate update explorer from scratch
:date: 2024-01-18
:tags: tag_venn

I am taking two steps back and try again to reproduce the exact issue about downloading files in Workplace. Below are videos testing the config with exact feature flags from original issue, including ContainerProtectionEnabled = False. Spoiler: the explorer updates after the download.

https://support.os33.link/v/wv3P2d

https://support.os33.link/v/gBLTkl

Now the same tests except that the config was changed now to ContainerProtectionEnabled = True. Spoiler: the explorer updates after the download.

https://support.os33.link/v/QIamHn

https://support.os33.link/v/BRScQi


= Collected four minidumps from BSOD when exiting Valorant
:date: 2024-01-20
:tags: tag_debugging

Hi. Collected four minidumps from BSOD your driver caused to the same computer when exiting Valorant.

The driver from Thu Nov 10 17:23:40 2022 (636D5DCC) caused BSOD twice: Jan 17 2023 and Feb 24 2023. The cause: freeing memory in the wrong IRQL. Here is one stack:

nt!ExFreeHeapPool+0x124
nt!ExFreePool+0x9
vgk+0x177785

You updated this driver with a Nov 27 22:21:25 2023 (65654095) version that caused BSOD also twice: Dec 28 2023 and Jan 19 2024. Cause: freeing memory in the wrong IRQL:

nt!KiPageFault+0x463
nt!ExFreeHeapPool+0x124
nt!ExFreePool+0x9
vgk+0x1ff303

I noticed the cause for the four BSODs are the same, but the location in the code is different, what gives me a clue that perhaps you guys don't know how to free memory in a call originated in the userland. The IRQL the drivers was when trying to free the memory was DISPATCH_LEVEL, but perhaps the memory is paged (or worst, invalid).

If the case if paged memory the solution is simple: schedule an APC to free this memory. If the memory is invalid the solution is even simpler: take a look in what memory is being freed when Valorant or other games are exiting.


= Found different bug
:date: 2024-01-20
:tags: tag_venn

## Original bug (downloading file) NOT reproducible

Since the bug is not reproducible I tested with working versions from some days ago (Jan 11) and it is not reproducible either. What I found it was related to the original bug it seems to be another bug, related to explorer update, but not related to downloading files from browser. It turned out the original bug was never reproduced in my environment.

### Another bug (creating/deleting file/folder) reproducible

When ContainerProtectionEnabled = True and creating a new folder in the Save As dialog from Edge the folder is created but is not shown in the same dialog, despite being shown in the SE File Manager window. Only after refresh the Save As window the folder is shown normally. The same occurs deleting files and folders. But notice that this temporary file created by the browser is shown in the SE File Manager before saving the image, but it remains after. Only after a refresh it is not shown anymore.

https://support.os33.link/v/WX4gve

When ContainerProtectionEnabled = False and creating a new folder in the Save As dialog from Edge the folder is updated both in the same dialog and in SE File Manager. Also the temporary file created by the browser when downloading a file is still occurring, but always in the Workplace Drive (folder Secure Downloads).

https://support.os33.link/v/RpabYG

The conclusion is that the lack of update when creating/deleting a new folder/file only occurs when ContainerProtectionEnabled = True and only in the shell window from another process (in this case Edge). The temporary file issue occurs always, independently from this feature flag.

#### Observation about downloading error in Demo

Testing with newest version I could reproduce the download error that was happening only in Demo. To do that I first made a image download from SE Edge inside V:\Downloads. After that I tried to download another image but inside Workplace Drive, Secure Downloads. Worth noticing that before doing that I cleaned up this folder and it had a folder, a temporary file used by browsers (the one with a hash in it) and a download.jpg file, the exact name of the file I was trying to download. That was the one that give me downloading error.

I tried another download after that in the same folder and it succeeded, with the same name (different image).

downloading_error_inside_workplace.png

workplace-diagnostics-4.0.8783.36860-20240119-140941.zip
